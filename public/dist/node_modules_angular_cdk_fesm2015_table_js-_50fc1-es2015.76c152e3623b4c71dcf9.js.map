{"version":3,"file":"node_modules_angular_cdk_fesm2015_table_js-_50fc1-es2015.76c152e3623b4c71dcf9.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/table.js"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/bidi';\r\nimport * as ɵngcc2 from '@angular/cdk/platform';\r\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\r\n\r\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\r\nconst _c1 = [\"caption\", \"colgroup, col\"];\r\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\r\n} }\r\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const data_r2 = ctx.$implicit;\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\r\n} }\r\nexport { DataSource } from '@angular/cdk/collections';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\r\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\r\nimport { takeUntil, take } from 'rxjs/operators';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Mixin to provide a directive with a function that checks if the sticky input has been\r\n * changed since the last time the function was called. Essentially adds a dirty-check to the\r\n * sticky value.\r\n * @docs-private\r\n */\r\nfunction mixinHasStickyInput(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._sticky = false;\r\n            /** Whether the sticky input has changed since it was last checked. */\r\n            this._hasStickyChanged = false;\r\n        }\r\n        /** Whether sticky positioning should be applied. */\r\n        get sticky() { return this._sticky; }\r\n        set sticky(v) {\r\n            const prevValue = this._sticky;\r\n            this._sticky = coerceBooleanProperty(v);\r\n            this._hasStickyChanged = prevValue !== this._sticky;\r\n        }\r\n        /** Whether the sticky value has changed since this was last called. */\r\n        hasStickyChanged() {\r\n            const hasStickyChanged = this._hasStickyChanged;\r\n            this._hasStickyChanged = false;\r\n            return hasStickyChanged;\r\n        }\r\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\r\n        resetStickyChanged() {\r\n            this._hasStickyChanged = false;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Used to provide a table to some of the sub-components without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\r\n/** Injection token that can be used to specify the text column options. */\r\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Cell definition for a CDK table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\nclass CdkCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\r\nCdkCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Header cell definition for a CDK table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\nclass CdkHeaderCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\r\nCdkHeaderCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkHeaderCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Footer cell definition for a CDK table.\r\n * Captures the template of a column's footer cell and as well as cell-specific properties.\r\n */\r\nclass CdkFooterCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\r\nCdkFooterCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkFooterCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkColumnDef.\r\n/** @docs-private */\r\nclass CdkColumnDefBase {\r\n}\r\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\r\n/**\r\n * Column definition for the CDK table.\r\n * Defines a set of cells available for a table column.\r\n */\r\nclass CdkColumnDef extends _CdkColumnDefBase {\r\n    constructor(_table) {\r\n        super();\r\n        this._table = _table;\r\n        this._stickyEnd = false;\r\n    }\r\n    /** Unique name for this column. */\r\n    get name() { return this._name; }\r\n    set name(name) { this._setNameInput(name); }\r\n    /**\r\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\r\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\r\n     * has been changed.\r\n     */\r\n    get stickyEnd() {\r\n        return this._stickyEnd;\r\n    }\r\n    set stickyEnd(v) {\r\n        const prevValue = this._stickyEnd;\r\n        this._stickyEnd = coerceBooleanProperty(v);\r\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\r\n    }\r\n    /**\r\n     * Overridable method that sets the css classes that will be added to every cell in this\r\n     * column.\r\n     * In the future, columnCssClassName will change from type string[] to string and this\r\n     * will set a single string value.\r\n     * @docs-private\r\n     */\r\n    _updateColumnCssClassName() {\r\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\r\n    }\r\n    /**\r\n     * This has been extracted to a util because of TS 4 and VE.\r\n     * View Engine doesn't support property rename inheritance.\r\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\r\n     * @docs-private\r\n     */\r\n    _setNameInput(value) {\r\n        // If the directive is set without a name (updated programmatically), then this setter will\r\n        // trigger with an empty string and should not overwrite the programmatically set value.\r\n        if (value) {\r\n            this._name = value;\r\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\r\n            this._updateColumnCssClassName();\r\n        }\r\n    }\r\n}\r\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\r\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkColumnDef.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\nCdkColumnDef.propDecorators = {\r\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\r\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\r\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\r\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\r\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkColumnDef]',\r\n                inputs: ['sticky'],\r\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, { name: [{\r\n            type: Input,\r\n            args: ['cdkColumnDef']\r\n        }], stickyEnd: [{\r\n            type: Input,\r\n            args: ['stickyEnd']\r\n        }], cell: [{\r\n            type: ContentChild,\r\n            args: [CdkCellDef]\r\n        }], headerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkHeaderCellDef]\r\n        }], footerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkFooterCellDef]\r\n        }] }); })();\r\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\r\nclass BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\r\n        // with destructuring.\r\n        const classList = elementRef.nativeElement.classList;\r\n        for (const className of columnDef._columnCssClassName) {\r\n            classList.add(className);\r\n        }\r\n    }\r\n}\r\n/** Header cell template container that adds the right classes and role. */\r\nclass CdkHeaderCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkHeaderCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\r\n                host: {\r\n                    'class': 'cdk-header-cell',\r\n                    'role': 'columnheader'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Footer cell template container that adds the right classes and role. */\r\nclass CdkFooterCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkFooterCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\r\n                host: {\r\n                    'class': 'cdk-footer-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Cell template container that adds the right classes and role. */\r\nclass CdkCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-cell, td[cdk-cell]',\r\n                host: {\r\n                    'class': 'cdk-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @docs-private\r\n */\r\nclass _Schedule {\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.endTasks = [];\r\n    }\r\n}\r\n/** Injection token used to provide a coalesced style scheduler. */\r\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\r\n/**\r\n * Allows grouping up CSSDom mutations after the current execution context.\r\n * This can significantly improve performance when separate consecutive functions are\r\n * reading from the CSSDom and then mutating it.\r\n *\r\n * @docs-private\r\n */\r\nclass _CoalescedStyleScheduler {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        this._currentSchedule = null;\r\n        this._destroyed = new Subject();\r\n    }\r\n    /**\r\n     * Schedules the specified task to run at the end of the current VM turn.\r\n     */\r\n    schedule(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.tasks.push(task);\r\n    }\r\n    /**\r\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\r\n     * VM turn.\r\n     */\r\n    scheduleEnd(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.endTasks.push(task);\r\n    }\r\n    /** Prevent any further tasks from running. */\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    _createScheduleIfNeeded() {\r\n        if (this._currentSchedule) {\r\n            return;\r\n        }\r\n        this._currentSchedule = new _Schedule();\r\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\r\n                const schedule = this._currentSchedule;\r\n                // Capture new tasks scheduled by the current set of tasks.\r\n                this._currentSchedule = new _Schedule();\r\n                for (const task of schedule.tasks) {\r\n                    task();\r\n                }\r\n                for (const task of schedule.endTasks) {\r\n                    task();\r\n                }\r\n            }\r\n            this._currentSchedule = null;\r\n        });\r\n    }\r\n    _getScheduleObservable() {\r\n        // Use onStable when in the context of an ongoing change detection cycle so that we\r\n        // do not accidentally trigger additional cycles.\r\n        return this._ngZone.isStable ?\r\n            from(Promise.resolve(undefined)) :\r\n            this._ngZone.onStable.pipe(take(1));\r\n    }\r\n}\r\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\r\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\r\n_CoalescedStyleScheduler.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The row template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n */\r\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\r\n/**\r\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\r\n * for changes and notifying the table.\r\n */\r\nclass BaseRowDef {\r\n    constructor(\r\n    /** @docs-private */ template, _differs) {\r\n        this.template = template;\r\n        this._differs = _differs;\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\r\n        // of the columns property or an empty array if none is provided.\r\n        if (!this._columnsDiffer) {\r\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\r\n            this._columnsDiffer = this._differs.find(columns).create();\r\n            this._columnsDiffer.diff(columns);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the difference between the current columns and the columns from the last diff, or null\r\n     * if there is no difference.\r\n     */\r\n    getColumnsDiff() {\r\n        return this._columnsDiffer.diff(this.columns);\r\n    }\r\n    /** Gets this row def's relevant cell template from the provided column def. */\r\n    extractCellTemplate(column) {\r\n        if (this instanceof CdkHeaderRowDef) {\r\n            return column.headerCell.template;\r\n        }\r\n        if (this instanceof CdkFooterRowDef) {\r\n            return column.footerCell.template;\r\n        }\r\n        else {\r\n            return column.cell.template;\r\n        }\r\n    }\r\n}\r\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\r\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nBaseRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkHeaderRowDef.\r\n/** @docs-private */\r\nclass CdkHeaderRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\r\n/**\r\n * Header row definition for the CDK table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkHeaderRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkHeaderRowDef]',\r\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkFooterRowDef.\r\n/** @docs-private */\r\nclass CdkFooterRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\r\n/**\r\n * Footer row definition for the CDK table.\r\n * Captures the footer row's template and other footer properties such as the columns to display.\r\n */\r\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFooterRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkFooterRowDef]',\r\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Data row definition for the CDK table.\r\n * Captures the header row's template and other row properties such as the columns to display and\r\n * a when predicate that describes when this row should be used.\r\n */\r\nclass CdkRowDef extends BaseRowDef {\r\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\r\n    //   if this template should be used.\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n}\r\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkRowDef]',\r\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Outlet for rendering cells inside of a row or header row.\r\n * @docs-private\r\n */\r\nclass CdkCellOutlet {\r\n    constructor(_viewContainer) {\r\n        this._viewContainer = _viewContainer;\r\n        CdkCellOutlet.mostRecentCellOutlet = this;\r\n    }\r\n    ngOnDestroy() {\r\n        // If this was the last outlet being rendered in the view, remove the reference\r\n        // from the static property after it has been destroyed to avoid leaking memory.\r\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\r\n            CdkCellOutlet.mostRecentCellOutlet = null;\r\n        }\r\n    }\r\n}\r\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\r\n/**\r\n * Static property containing the latest constructed instance of this class.\r\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\r\n * createEmbeddedView. After one of these components are created, this property will provide\r\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\r\n * construct the cells with the provided context.\r\n */\r\nCdkCellOutlet.mostRecentCellOutlet = null;\r\nCdkCellOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkHeaderRow {\r\n}\r\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\r\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-header-row, tr[cdk-header-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-header-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkFooterRow {\r\n}\r\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\r\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-footer-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkRow {\r\n}\r\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\r\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-row, tr[cdk-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Row that can be used to display a message when no data is shown in the table. */\r\nclass CdkNoDataRow {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n}\r\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\r\nCdkNoDataRow.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkNoDataRow]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * List of all possible directions that can be used for sticky positioning.\r\n * @docs-private\r\n */\r\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\r\n/**\r\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\r\n * @docs-private\r\n */\r\nclass StickyStyler {\r\n    /**\r\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\r\n     *     that uses the native `<table>` element.\r\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\r\n     *     sticky positioning applied.\r\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\r\n     *     by reversing left/right positions.\r\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\r\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\r\n     *     using inline styles. If false, it is assumed that position: sticky is included in\r\n     *     the component stylesheet for _stickCellCss.\r\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\r\n     *     and their dimensions.\r\n     */\r\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\r\n        this._isNativeHtmlTable = _isNativeHtmlTable;\r\n        this._stickCellCss = _stickCellCss;\r\n        this.direction = direction;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._isBrowser = _isBrowser;\r\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\r\n        this._positionListener = _positionListener;\r\n        this._cachedCellWidths = [];\r\n        this._borderCellCss = {\r\n            'top': `${_stickCellCss}-border-elem-top`,\r\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\r\n            'left': `${_stickCellCss}-border-elem-left`,\r\n            'right': `${_stickCellCss}-border-elem-right`,\r\n        };\r\n    }\r\n    /**\r\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\r\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\r\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\r\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\r\n     */\r\n    clearStickyPositioning(rows, stickyDirections) {\r\n        const elementsToClear = [];\r\n        for (const row of rows) {\r\n            // If the row isn't an element (e.g. if it's an `ng-container`),\r\n            // it won't have inline styles or `children` so we skip it.\r\n            if (row.nodeType !== row.ELEMENT_NODE) {\r\n                continue;\r\n            }\r\n            elementsToClear.push(row);\r\n            for (let i = 0; i < row.children.length; i++) {\r\n                elementsToClear.push(row.children[i]);\r\n            }\r\n        }\r\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            for (const element of elementsToClear) {\r\n                this._removeStickyStyle(element, stickyDirections);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky left and right positions to the cells of each row according to the sticky\r\n     * states of the rendered column definitions.\r\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\r\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the start of the row.\r\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the end of the row.\r\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\r\n     *     column cell. If `false` cached widths will be used instead.\r\n     */\r\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\r\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\r\n            stickyEndStates.some(state => state))) {\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\r\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\r\n            }\r\n            return;\r\n        }\r\n        const firstRow = rows[0];\r\n        const numCells = firstRow.children.length;\r\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\r\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\r\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\r\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\r\n        const firstStickyEnd = stickyEndStates.indexOf(true);\r\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            const isRtl = this.direction === 'rtl';\r\n            const start = isRtl ? 'right' : 'left';\r\n            const end = isRtl ? 'left' : 'right';\r\n            for (const row of rows) {\r\n                for (let i = 0; i < numCells; i++) {\r\n                    const cell = row.children[i];\r\n                    if (stickyStartStates[i]) {\r\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\r\n                    }\r\n                    if (stickyEndStates[i]) {\r\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\r\n                    }\r\n                }\r\n            }\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({\r\n                    sizes: lastStickyStart === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(0, lastStickyStart + 1)\r\n                            .map((width, index) => stickyStartStates[index] ? width : null)\r\n                });\r\n                this._positionListener.stickyEndColumnsUpdated({\r\n                    sizes: firstStickyEnd === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(firstStickyEnd)\r\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\r\n                            .reverse()\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\r\n     * row itself otherwise.\r\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\r\n     *     sticky state and to the provided top or bottom position.\r\n     * @param stickyStates A list of boolean states where each state represents whether the row\r\n     *     should be stuck in the particular top or bottom position.\r\n     * @param position The position direction in which the row should be stuck if that row should be\r\n     *     sticky.\r\n     *\r\n     */\r\n    stickRows(rowsToStick, stickyStates, position) {\r\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\r\n        if (!this._isBrowser) {\r\n            return;\r\n        }\r\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\r\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\r\n        // sticky states need to be reversed as well.\r\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\r\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\r\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\r\n        const stickyOffsets = [];\r\n        const stickyCellHeights = [];\r\n        const elementsToStick = [];\r\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\r\n            stickyOffsets[rowIndex] = stickyOffset;\r\n            if (!states[rowIndex]) {\r\n                continue;\r\n            }\r\n            const row = rows[rowIndex];\r\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\r\n                Array.from(row.children) : [row];\r\n            const height = row.getBoundingClientRect().height;\r\n            stickyOffset += height;\r\n            stickyCellHeights[rowIndex] = height;\r\n        }\r\n        const borderedRowIndex = states.lastIndexOf(true);\r\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\r\n        // (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            var _a, _b;\r\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n                if (!states[rowIndex]) {\r\n                    continue;\r\n                }\r\n                const offset = stickyOffsets[rowIndex];\r\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\r\n                for (const element of elementsToStick[rowIndex]) {\r\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\r\n                }\r\n            }\r\n            if (position === 'top') {\r\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n            else {\r\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\r\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\r\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\r\n     * the tfoot element.\r\n     */\r\n    updateStickyFooterContainer(tableElement, stickyStates) {\r\n        if (!this._isNativeHtmlTable) {\r\n            return;\r\n        }\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            if (stickyStates.some(state => !state)) {\r\n                this._removeStickyStyle(tfoot, ['bottom']);\r\n            }\r\n            else {\r\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\r\n     * the zIndex, removing each of the provided sticky directions, and removing the\r\n     * sticky position if there are no more directions.\r\n     */\r\n    _removeStickyStyle(element, stickyDirections) {\r\n        for (const dir of stickyDirections) {\r\n            element.style[dir] = '';\r\n            element.classList.remove(this._borderCellCss[dir]);\r\n        }\r\n        // If the element no longer has any more sticky directions, remove sticky positioning and\r\n        // the sticky CSS class.\r\n        // Short-circuit checking element.style[dir] for stickyDirections as they\r\n        // were already removed above.\r\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\r\n        if (hasDirection) {\r\n            element.style.zIndex = this._getCalculatedZIndex(element);\r\n        }\r\n        else {\r\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\r\n            element.style.zIndex = '';\r\n            if (this._needsPositionStickyOnElement) {\r\n                element.style.position = '';\r\n            }\r\n            element.classList.remove(this._stickCellCss);\r\n        }\r\n    }\r\n    /**\r\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\r\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\r\n     * direction and value.\r\n     */\r\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\r\n        element.classList.add(this._stickCellCss);\r\n        if (isBorderElement) {\r\n            element.classList.add(this._borderCellCss[dir]);\r\n        }\r\n        element.style[dir] = `${dirValue}px`;\r\n        element.style.zIndex = this._getCalculatedZIndex(element);\r\n        if (this._needsPositionStickyOnElement) {\r\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\r\n        }\r\n    }\r\n    /**\r\n     * Calculate what the z-index should be for the element, depending on what directions (top,\r\n     * bottom, left, right) have been set. It should be true that elements with a top direction\r\n     * should have the highest index since these are elements like a table header. If any of those\r\n     * elements are also sticky in another direction, then they should appear above other elements\r\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\r\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\r\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\r\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\r\n     * elements.\r\n     */\r\n    _getCalculatedZIndex(element) {\r\n        const zIndexIncrements = {\r\n            top: 100,\r\n            bottom: 10,\r\n            left: 1,\r\n            right: 1,\r\n        };\r\n        let zIndex = 0;\r\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\r\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\r\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\r\n        for (const dir of STICKY_DIRECTIONS) {\r\n            if (element.style[dir]) {\r\n                zIndex += zIndexIncrements[dir];\r\n            }\r\n        }\r\n        return zIndex ? `${zIndex}` : '';\r\n    }\r\n    /** Gets the widths for each cell in the provided row. */\r\n    _getCellWidths(row, recalculateCellWidths = true) {\r\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\r\n            return this._cachedCellWidths;\r\n        }\r\n        const cellWidths = [];\r\n        const firstRowCells = row.children;\r\n        for (let i = 0; i < firstRowCells.length; i++) {\r\n            let cell = firstRowCells[i];\r\n            cellWidths.push(cell.getBoundingClientRect().width);\r\n        }\r\n        this._cachedCellWidths = cellWidths;\r\n        return cellWidths;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyStartColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = 0; i < widths.length; i++) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyEndColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = widths.length; i > 0; i--) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Schedules styles to be applied when the style scheduler deems appropriate.\r\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\r\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\r\n     */\r\n    _scheduleStyleChanges(changes) {\r\n        if (this._coalescedStyleScheduler) {\r\n            this._coalescedStyleScheduler.schedule(changes);\r\n        }\r\n        else {\r\n            changes();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Returns an error to be thrown when attempting to find an unexisting column.\r\n * @param id Id whose lookup failed.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownColumnError(id) {\r\n    return Error(`Could not find column with id \"${id}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when two column definitions have the same name.\r\n * @docs-private\r\n */\r\nfunction getTableDuplicateColumnNameError(name) {\r\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\r\n * @docs-private\r\n */\r\nfunction getTableMultipleDefaultRowDefsError() {\r\n    return Error(`There can only be one default row without a when predicate function.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\r\n * @docs-private\r\n */\r\nfunction getTableMissingMatchingRowDefError(data) {\r\n    return Error(`Could not find a matching row definition for the` +\r\n        `provided row data: ${JSON.stringify(data)}`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there is no row definitions present in the content.\r\n * @docs-private\r\n */\r\nfunction getTableMissingRowDefsError() {\r\n    return Error('Missing definitions for header, footer, and row; ' +\r\n        'cannot determine which columns should be rendered.');\r\n}\r\n/**\r\n * Returns an error to be thrown when the data source does not match the compatible types.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownDataSourceError() {\r\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\r\n}\r\n/**\r\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingParentTableError() {\r\n    return Error(`Text column could not find a parent table for registration.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when a table text column doesn't have a name.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingNameError() {\r\n    return Error(`Table text column must have a name.`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the StickyPositioningListener. */\r\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\r\n * @docs-private\r\n */\r\nclass DataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\r\nDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[rowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\r\n * @docs-private\r\n */\r\nclass HeaderRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\r\nHeaderRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[headerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\r\n * @docs-private\r\n */\r\nclass FooterRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\r\nFooterRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[footerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view\r\n * container's ng-container to insert the no data row.\r\n * @docs-private\r\n */\r\nclass NoDataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\r\nNoDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[noDataRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * The table template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE_TEMPLATE = \r\n// Note that according to MDN, the `caption` element has to be projected as the **first**\r\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\r\n`\r\n  <ng-content select=\"caption\"></ng-content>\r\n  <ng-content select=\"colgroup, col\"></ng-content>\r\n  <ng-container headerRowOutlet></ng-container>\r\n  <ng-container rowOutlet></ng-container>\r\n  <ng-container noDataRowOutlet></ng-container>\r\n  <ng-container footerRowOutlet></ng-container>\r\n`;\r\n/**\r\n * Class used to conveniently type the embedded view ref for rows with a context.\r\n * @docs-private\r\n */\r\nclass RowViewRef extends EmbeddedViewRef {\r\n}\r\n/**\r\n * A data table that can render a header row, data rows, and a footer row.\r\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\r\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\r\n * connect function that will return an Observable stream that emits the data array to render.\r\n */\r\nclass CdkTable {\r\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\r\n     *    parameters to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \r\n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\r\n    // this property will never be null.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _viewportRuler) {\r\n        this._differs = _differs;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._elementRef = _elementRef;\r\n        this._dir = _dir;\r\n        this._platform = _platform;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._stickyPositioningListener = _stickyPositioningListener;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._onDestroy = new Subject();\r\n        /**\r\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\r\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\r\n         * any custom column definitions added to `_customColumnDefs`.\r\n         */\r\n        this._columnDefsByName = new Map();\r\n        /**\r\n         * Column definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * column definitions as *its* content child.\r\n         */\r\n        this._customColumnDefs = new Set();\r\n        /**\r\n         * Data row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in data rows as *its* content child.\r\n         */\r\n        this._customRowDefs = new Set();\r\n        /**\r\n         * Header row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in header rows as *its* content child.\r\n         */\r\n        this._customHeaderRowDefs = new Set();\r\n        /**\r\n         * Footer row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\r\n         * built-in footer row as *its* content child.\r\n         */\r\n        this._customFooterRowDefs = new Set();\r\n        /**\r\n         * Whether the header row definition has been changed. Triggers an update to the header row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._headerRowDefChanged = true;\r\n        /**\r\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._footerRowDefChanged = true;\r\n        /**\r\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\r\n         * change.\r\n         */\r\n        this._stickyColumnStylesNeedReset = true;\r\n        /**\r\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\r\n         * `false`, cached values will be used instead. This is only applicable to tables with\r\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\r\n         */\r\n        this._forceRecalculateCellWidths = true;\r\n        /**\r\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\r\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\r\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\r\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\r\n         * and understand which rows are added/moved/removed.\r\n         *\r\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\r\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\r\n         * contains an array of created pairs. The array is necessary to handle cases where the data\r\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\r\n         * stored.\r\n         */\r\n        this._cachedRenderRowsMap = new Map();\r\n        /**\r\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\r\n         * table subclasses.\r\n         */\r\n        this.stickyCssClass = 'cdk-table-sticky';\r\n        /**\r\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\r\n         * the position is set in a selector associated with the value of stickyCssClass. May be\r\n         * overridden by table subclasses\r\n         */\r\n        this.needsPositionStickyOnElement = true;\r\n        /** Whether the no data row is currently showing anything. */\r\n        this._isShowingNoDataRow = false;\r\n        this._multiTemplateDataRows = false;\r\n        this._fixedLayout = false;\r\n        // TODO(andrewseguin): Remove max value as the end index\r\n        //   and instead calculate the view on init and scroll.\r\n        /**\r\n         * Stream containing the latest information on what rows are being displayed on screen.\r\n         * Can be used by the data source to as a heuristic of what data should be provided.\r\n         *\r\n         * @docs-private\r\n         */\r\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\r\n        if (!role) {\r\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\r\n        }\r\n        this._document = _document;\r\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\r\n    }\r\n    /**\r\n     * Tracking function that will be used to check the differences in data changes. Used similarly\r\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\r\n     * relative to the function to know if a row should be added/removed/moved.\r\n     * Accepts a function that takes two parameters, `index` and `item`.\r\n     */\r\n    get trackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    set trackBy(fn) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\r\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    /**\r\n     * The table's source of data, which can be provided in three ways (in order of complexity):\r\n     *   - Simple data array (each object represents one table row)\r\n     *   - Stream that emits a data array each time the array changes\r\n     *   - `DataSource` object that implements the connect/disconnect interface.\r\n     *\r\n     * If a data array is provided, the table must be notified when the array's objects are\r\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\r\n     * render the diff since the last table render. If the data array reference is changed, the table\r\n     * will automatically trigger an update to the rows.\r\n     *\r\n     * When providing an Observable stream, the table will trigger an update automatically when the\r\n     * stream emits a new array of data.\r\n     *\r\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\r\n     * provided by the connect function and trigger updates when that stream emits new data array\r\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\r\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\r\n     * subscriptions registered during the connect process).\r\n     */\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(dataSource) {\r\n        if (this._dataSource !== dataSource) {\r\n            this._switchDataSource(dataSource);\r\n        }\r\n    }\r\n    /**\r\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\r\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\r\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\r\n     * defined in the table, or otherwise the default row which does not have a when predicate.\r\n     */\r\n    get multiTemplateDataRows() {\r\n        return this._multiTemplateDataRows;\r\n    }\r\n    set multiTemplateDataRows(v) {\r\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\r\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\r\n        // this setter will be invoked before the row outlet has been defined hence the null check.\r\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\r\n            this._forceRenderDataRows();\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\r\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\r\n     */\r\n    get fixedLayout() {\r\n        return this._fixedLayout;\r\n    }\r\n    set fixedLayout(v) {\r\n        this._fixedLayout = coerceBooleanProperty(v);\r\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\r\n        this._forceRecalculateCellWidths = true;\r\n        this._stickyColumnStylesNeedReset = true;\r\n    }\r\n    ngOnInit() {\r\n        this._setupStickyStyler();\r\n        if (this._isNativeHtmlTable) {\r\n            this._applyNativeTableSections();\r\n        }\r\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\r\n        // the user has provided a custom trackBy, return the result of that function as evaluated\r\n        // with the values of the `RenderRow`'s data and index.\r\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\r\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\r\n        });\r\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\r\n        // refresh its cache of cell widths the next time sticky styles are updated.\r\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\r\n        if (this._viewportRuler) {\r\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n                this._forceRecalculateCellWidths = true;\r\n            });\r\n        }\r\n    }\r\n    ngAfterContentChecked() {\r\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\r\n        this._cacheRowDefs();\r\n        this._cacheColumnDefs();\r\n        // Make sure that the user has at least added header, footer, or data row def.\r\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingRowDefsError();\r\n        }\r\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\r\n        const columnsChanged = this._renderUpdatedColumns();\r\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\r\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\r\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\r\n        this._forceRecalculateCellWidths = rowDefsChanged;\r\n        // If the header row definition has been changed, trigger a render to the header row.\r\n        if (this._headerRowDefChanged) {\r\n            this._forceRenderHeaderRows();\r\n            this._headerRowDefChanged = false;\r\n        }\r\n        // If the footer row definition has been changed, trigger a render to the footer row.\r\n        if (this._footerRowDefChanged) {\r\n            this._forceRenderFooterRows();\r\n            this._footerRowDefChanged = false;\r\n        }\r\n        // If there is a data source and row definitions, connect to the data source unless a\r\n        // connection has already been made.\r\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\r\n            this._observeRenderChanges();\r\n        }\r\n        else if (this._stickyColumnStylesNeedReset) {\r\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\r\n            // called when it row data arrives. Otherwise, we need to call it proactively.\r\n            this.updateStickyColumnStyles();\r\n        }\r\n        this._checkStickyStates();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rowOutlet.viewContainer.clear();\r\n        this._noDataRowOutlet.viewContainer.clear();\r\n        this._headerRowOutlet.viewContainer.clear();\r\n        this._footerRowOutlet.viewContainer.clear();\r\n        this._cachedRenderRowsMap.clear();\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n    }\r\n    /**\r\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\r\n     * input or retrieved through an Observable stream (directly or from a DataSource).\r\n     * Checks for differences in the data since the last diff to perform only the necessary\r\n     * changes (add/remove/move rows).\r\n     *\r\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\r\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\r\n     * an array, this function will need to be called to render any changes.\r\n     */\r\n    renderRows() {\r\n        this._renderRows = this._getAllRenderRows();\r\n        const changes = this._dataDiffer.diff(this._renderRows);\r\n        if (!changes) {\r\n            this._updateNoDataRow();\r\n            return;\r\n        }\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\r\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\r\n        if (this._viewRepeater) {\r\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\r\n                if (change.operation === 1 /* INSERTED */ && change.context) {\r\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\r\n                if (record.previousIndex == null) {\r\n                    const renderRow = record.item;\r\n                    const rowDef = renderRow.rowDef;\r\n                    const context = { $implicit: renderRow.data };\r\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\r\n                }\r\n                else if (currentIndex == null) {\r\n                    viewContainer.remove(prevIndex);\r\n                }\r\n                else {\r\n                    const view = viewContainer.get(prevIndex);\r\n                    viewContainer.move(view, currentIndex);\r\n                }\r\n            });\r\n        }\r\n        // Update the meta context of a row's context data (index, count, first, last, ...)\r\n        this._updateRowIndexContext();\r\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\r\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\r\n        changes.forEachIdentityChange((record) => {\r\n            const rowView = viewContainer.get(record.currentIndex);\r\n            rowView.context.$implicit = record.item.data;\r\n        });\r\n        this._updateNoDataRow();\r\n        this.updateStickyColumnStyles();\r\n    }\r\n    /** Adds a column definition that was not included as part of the content children. */\r\n    addColumnDef(columnDef) {\r\n        this._customColumnDefs.add(columnDef);\r\n    }\r\n    /** Removes a column definition that was not included as part of the content children. */\r\n    removeColumnDef(columnDef) {\r\n        this._customColumnDefs.delete(columnDef);\r\n    }\r\n    /** Adds a row definition that was not included as part of the content children. */\r\n    addRowDef(rowDef) {\r\n        this._customRowDefs.add(rowDef);\r\n    }\r\n    /** Removes a row definition that was not included as part of the content children. */\r\n    removeRowDef(rowDef) {\r\n        this._customRowDefs.delete(rowDef);\r\n    }\r\n    /** Adds a header row definition that was not included as part of the content children. */\r\n    addHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.add(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Removes a header row definition that was not included as part of the content children. */\r\n    removeHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.delete(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Adds a footer row definition that was not included as part of the content children. */\r\n    addFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.add(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Removes a footer row definition that was not included as part of the content children. */\r\n    removeFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.delete(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Sets a no data row definition that was not included as a part of the content children. */\r\n    setNoDataRow(noDataRow) {\r\n        this._customNoDataRow = noDataRow;\r\n    }\r\n    /**\r\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\r\n     * automatically called when the header row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyHeaderRowStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const thead = tableElement.querySelector('thead');\r\n        if (thead) {\r\n            thead.style.display = headerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\r\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\r\n     * automatically called when the footer row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyFooterRowStyles() {\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        if (tfoot) {\r\n            tfoot.style.display = footerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\r\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\r\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the left and right. Then sticky styles are added for the left and right according\r\n     * to the column definitions for each cell in each row. This is automatically called when\r\n     * the data source provides a new set of data or when a column definition changes its sticky\r\n     * input. May be called manually for cases where the cell content changes outside of these events.\r\n     */\r\n    updateStickyColumnStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const dataRows = this._getRenderedRows(this._rowOutlet);\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\r\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\r\n        // don't need to be cleared unless either the sticky column config changes or one of the row\r\n        // defs change.\r\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\r\n            || this._stickyColumnStylesNeedReset) {\r\n            // Clear the left and right positioning from all columns in the table across all rows since\r\n            // sticky columns span across all table sections (header, data, footer)\r\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\r\n            this._stickyColumnStylesNeedReset = false;\r\n        }\r\n        // Update the sticky styles for each header row depending on the def's sticky state\r\n        headerRows.forEach((headerRow, i) => {\r\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\r\n        });\r\n        // Update the sticky styles for each data row depending on its def's sticky state\r\n        this._rowDefs.forEach(rowDef => {\r\n            // Collect all the rows rendered with this row definition.\r\n            const rows = [];\r\n            for (let i = 0; i < dataRows.length; i++) {\r\n                if (this._renderRows[i].rowDef === rowDef) {\r\n                    rows.push(dataRows[i]);\r\n                }\r\n            }\r\n            this._addStickyColumnStyles(rows, rowDef);\r\n        });\r\n        // Update the sticky styles for each footer row depending on the def's sticky state\r\n        footerRows.forEach((footerRow, i) => {\r\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\r\n        });\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Get the list of RenderRow objects to render according to the current list of data and defined\r\n     * row definitions. If the previous list already contained a particular pair, it should be reused\r\n     * so that the differ equates their references.\r\n     */\r\n    _getAllRenderRows() {\r\n        const renderRows = [];\r\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\r\n        // new cache while unused ones can be picked up by garbage collection.\r\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\r\n        this._cachedRenderRowsMap = new Map();\r\n        // For each data object, get the list of rows that should be rendered, represented by the\r\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            let data = this._data[i];\r\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\r\n            if (!this._cachedRenderRowsMap.has(data)) {\r\n                this._cachedRenderRowsMap.set(data, new WeakMap());\r\n            }\r\n            for (let j = 0; j < renderRowsForData.length; j++) {\r\n                let renderRow = renderRowsForData[j];\r\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\r\n                if (cache.has(renderRow.rowDef)) {\r\n                    cache.get(renderRow.rowDef).push(renderRow);\r\n                }\r\n                else {\r\n                    cache.set(renderRow.rowDef, [renderRow]);\r\n                }\r\n                renderRows.push(renderRow);\r\n            }\r\n        }\r\n        return renderRows;\r\n    }\r\n    /**\r\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\r\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\r\n     * `(T, CdkRowDef)` pair.\r\n     */\r\n    _getRenderRowsForData(data, dataIndex, cache) {\r\n        const rowDefs = this._getRowDefs(data, dataIndex);\r\n        return rowDefs.map(rowDef => {\r\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\r\n            if (cachedRenderRows.length) {\r\n                const dataRow = cachedRenderRows.shift();\r\n                dataRow.dataIndex = dataIndex;\r\n                return dataRow;\r\n            }\r\n            else {\r\n                return { data, rowDef, dataIndex };\r\n            }\r\n        });\r\n    }\r\n    /** Update the map containing the content's column definitions. */\r\n    _cacheColumnDefs() {\r\n        this._columnDefsByName.clear();\r\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\r\n        columnDefs.forEach(columnDef => {\r\n            if (this._columnDefsByName.has(columnDef.name) &&\r\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableDuplicateColumnNameError(columnDef.name);\r\n            }\r\n            this._columnDefsByName.set(columnDef.name, columnDef);\r\n        });\r\n    }\r\n    /** Update the list of all available row definitions that can be used. */\r\n    _cacheRowDefs() {\r\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\r\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\r\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\r\n        // After all row definitions are determined, find the row definition to be considered default.\r\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\r\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMultipleDefaultRowDefsError();\r\n        }\r\n        this._defaultRowDef = defaultRowDefs[0];\r\n    }\r\n    /**\r\n     * Check if the header, data, or footer rows have changed what columns they want to display or\r\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\r\n     * re-render that section.\r\n     */\r\n    _renderUpdatedColumns() {\r\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\r\n        // Force re-render data rows if the list of column definitions have changed.\r\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\r\n        if (dataColumnsChanged) {\r\n            this._forceRenderDataRows();\r\n        }\r\n        // Force re-render header/footer rows if the list of column definitions have changed.\r\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (headerColumnsChanged) {\r\n            this._forceRenderHeaderRows();\r\n        }\r\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (footerColumnsChanged) {\r\n            this._forceRenderFooterRows();\r\n        }\r\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\r\n    }\r\n    /**\r\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\r\n     * render change subscription if one exists. If the data source is null, interpret this by\r\n     * clearing the row outlet. Otherwise start listening for new data.\r\n     */\r\n    _switchDataSource(dataSource) {\r\n        this._data = [];\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n        // Stop listening for data from the previous data source.\r\n        if (this._renderChangeSubscription) {\r\n            this._renderChangeSubscription.unsubscribe();\r\n            this._renderChangeSubscription = null;\r\n        }\r\n        if (!dataSource) {\r\n            if (this._dataDiffer) {\r\n                this._dataDiffer.diff([]);\r\n            }\r\n            this._rowOutlet.viewContainer.clear();\r\n        }\r\n        this._dataSource = dataSource;\r\n    }\r\n    /** Set up a subscription for the data provided by the data source. */\r\n    _observeRenderChanges() {\r\n        // If no data source has been set, there is nothing to observe for changes.\r\n        if (!this.dataSource) {\r\n            return;\r\n        }\r\n        let dataStream;\r\n        if (isDataSource(this.dataSource)) {\r\n            dataStream = this.dataSource.connect(this);\r\n        }\r\n        else if (isObservable(this.dataSource)) {\r\n            dataStream = this.dataSource;\r\n        }\r\n        else if (Array.isArray(this.dataSource)) {\r\n            dataStream = of(this.dataSource);\r\n        }\r\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableUnknownDataSourceError();\r\n        }\r\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\r\n            .subscribe(data => {\r\n            this._data = data || [];\r\n            this.renderRows();\r\n        });\r\n    }\r\n    /**\r\n     * Clears any existing content in the header row outlet and creates a new embedded view\r\n     * in the outlet using the header row definition.\r\n     */\r\n    _forceRenderHeaderRows() {\r\n        // Clear the header row outlet if any content exists.\r\n        if (this._headerRowOutlet.viewContainer.length > 0) {\r\n            this._headerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\r\n        this.updateStickyHeaderRowStyles();\r\n    }\r\n    /**\r\n     * Clears any existing content in the footer row outlet and creates a new embedded view\r\n     * in the outlet using the footer row definition.\r\n     */\r\n    _forceRenderFooterRows() {\r\n        // Clear the footer row outlet if any content exists.\r\n        if (this._footerRowOutlet.viewContainer.length > 0) {\r\n            this._footerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\r\n        this.updateStickyFooterRowStyles();\r\n    }\r\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\r\n    _addStickyColumnStyles(rows, rowDef) {\r\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\r\n            const columnDef = this._columnDefsByName.get(columnName);\r\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnName);\r\n            }\r\n            return columnDef;\r\n        });\r\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\r\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\r\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\r\n    }\r\n    /** Gets the list of rows that have been rendered in the row outlet. */\r\n    _getRenderedRows(rowOutlet) {\r\n        const renderedRows = [];\r\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\r\n            const viewRef = rowOutlet.viewContainer.get(i);\r\n            renderedRows.push(viewRef.rootNodes[0]);\r\n        }\r\n        return renderedRows;\r\n    }\r\n    /**\r\n     * Get the matching row definitions that should be used for this row data. If there is only\r\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\r\n     * predicate that returns true with the data. If none return true, return the default row\r\n     * definition.\r\n     */\r\n    _getRowDefs(data, dataIndex) {\r\n        if (this._rowDefs.length == 1) {\r\n            return [this._rowDefs[0]];\r\n        }\r\n        let rowDefs = [];\r\n        if (this.multiTemplateDataRows) {\r\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\r\n        }\r\n        else {\r\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\r\n            if (rowDef) {\r\n                rowDefs.push(rowDef);\r\n            }\r\n        }\r\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingMatchingRowDefError(data);\r\n        }\r\n        return rowDefs;\r\n    }\r\n    _getEmbeddedViewArgs(renderRow, index) {\r\n        const rowDef = renderRow.rowDef;\r\n        const context = { $implicit: renderRow.data };\r\n        return {\r\n            templateRef: rowDef.template,\r\n            context,\r\n            index,\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\r\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\r\n     * of where to place the new row template in the outlet.\r\n     */\r\n    _renderRow(outlet, rowDef, index, context = {}) {\r\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\r\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\r\n        this._renderCellTemplateForItem(rowDef, context);\r\n        return view;\r\n    }\r\n    _renderCellTemplateForItem(rowDef, context) {\r\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\r\n            if (CdkCellOutlet.mostRecentCellOutlet) {\r\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\r\n            }\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\r\n     * e.g. first/last/even/odd.\r\n     */\r\n    _updateRowIndexContext() {\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            if (this.multiTemplateDataRows) {\r\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\r\n                context.renderIndex = renderIndex;\r\n            }\r\n            else {\r\n                context.index = this._renderRows[renderIndex].dataIndex;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the column definitions for the provided row def. */\r\n    _getCellTemplates(rowDef) {\r\n        if (!rowDef || !rowDef.columns) {\r\n            return [];\r\n        }\r\n        return Array.from(rowDef.columns, columnId => {\r\n            const column = this._columnDefsByName.get(columnId);\r\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnId);\r\n            }\r\n            return rowDef.extractCellTemplate(column);\r\n        });\r\n    }\r\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\r\n    _applyNativeTableSections() {\r\n        const documentFragment = this._document.createDocumentFragment();\r\n        const sections = [\r\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\r\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\r\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\r\n        ];\r\n        for (const section of sections) {\r\n            const element = this._document.createElement(section.tag);\r\n            element.setAttribute('role', 'rowgroup');\r\n            for (const outlet of section.outlets) {\r\n                element.appendChild(outlet.elementRef.nativeElement);\r\n            }\r\n            documentFragment.appendChild(element);\r\n        }\r\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\r\n        this._elementRef.nativeElement.appendChild(documentFragment);\r\n    }\r\n    /**\r\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\r\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\r\n     * `multiTemplateDataRows` or adding/removing row definitions.\r\n     */\r\n    _forceRenderDataRows() {\r\n        this._dataDiffer.diff([]);\r\n        this._rowOutlet.viewContainer.clear();\r\n        this.renderRows();\r\n    }\r\n    /**\r\n     * Checks if there has been a change in sticky states since last check and applies the correct\r\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\r\n     * during a change detection and after the inputs are settled (after content check).\r\n     */\r\n    _checkStickyStates() {\r\n        const stickyCheckReducer = (acc, d) => {\r\n            return acc || d.hasStickyChanged();\r\n        };\r\n        // Note that the check needs to occur for every definition since it notifies the definition\r\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\r\n        // remaining definitions and leave them in an unchecked state.\r\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyHeaderRowStyles();\r\n        }\r\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyFooterRowStyles();\r\n        }\r\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\r\n            this._stickyColumnStylesNeedReset = true;\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\r\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\r\n     * stickiness when directionality changes.\r\n     */\r\n    _setupStickyStyler() {\r\n        const direction = this._dir ? this._dir.value : 'ltr';\r\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\r\n        (this._dir ? this._dir.change : of())\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(value => {\r\n            this._stickyStyler.direction = value;\r\n            this.updateStickyColumnStyles();\r\n        });\r\n    }\r\n    /** Filters definitions that belong to this table from a QueryList. */\r\n    _getOwnDefs(items) {\r\n        return items.filter(item => !item._table || item._table === this);\r\n    }\r\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\r\n    _updateNoDataRow() {\r\n        const noDataRow = this._customNoDataRow || this._noDataRow;\r\n        if (noDataRow) {\r\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\r\n            if (shouldShow !== this._isShowingNoDataRow) {\r\n                const container = this._noDataRowOutlet.viewContainer;\r\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\r\n                this._isShowingNoDataRow = shouldShow;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\r\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\r\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\r\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: CDK_TABLE, useExisting: CdkTable },\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef(_c0);\r\n        ɵngcc0.ɵɵprojection(0);\r\n        ɵngcc0.ɵɵprojection(1, 1);\r\n        ɵngcc0.ɵɵelementContainer(2, 0);\r\n        ɵngcc0.ɵɵelementContainer(3, 1);\r\n        ɵngcc0.ɵɵelementContainer(4, 2);\r\n        ɵngcc0.ɵɵelementContainer(5, 3);\r\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\r\nCdkTable.ctorParameters = () => [\r\n    { type: IterableDiffers },\r\n    { type: ChangeDetectorRef },\r\n    { type: ElementRef },\r\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\r\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\r\n];\r\nCdkTable.propDecorators = {\r\n    trackBy: [{ type: Input }],\r\n    dataSource: [{ type: Input }],\r\n    multiTemplateDataRows: [{ type: Input }],\r\n    fixedLayout: [{ type: Input }],\r\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\r\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\r\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\r\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\r\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\r\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\r\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-table, table[cdk-table]',\r\n                exportAs: 'cdkTable',\r\n                template: CDK_TABLE_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-table',\r\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\r\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\r\n                // declared elsewhere, they are checked when their declaration points are checked.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                providers: [\r\n                    { provide: CDK_TABLE, useExisting: CdkTable },\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n                ],\r\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['role']\r\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_COALESCED_STYLE_SCHEDULER]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }, {\r\n                type: Inject,\r\n                args: [STICKY_POSITIONING_LISTENER]\r\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { trackBy: [{\r\n            type: Input\r\n        }], dataSource: [{\r\n            type: Input\r\n        }], multiTemplateDataRows: [{\r\n            type: Input\r\n        }], fixedLayout: [{\r\n            type: Input\r\n        }], _rowOutlet: [{\r\n            type: ViewChild,\r\n            args: [DataRowOutlet, { static: true }]\r\n        }], _headerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [HeaderRowOutlet, { static: true }]\r\n        }], _footerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [FooterRowOutlet, { static: true }]\r\n        }], _noDataRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [NoDataRowOutlet, { static: true }]\r\n        }], _contentColumnDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkColumnDef, { descendants: true }]\r\n        }], _contentRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkRowDef, { descendants: true }]\r\n        }], _contentHeaderRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _contentFooterRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _noDataRow: [{\r\n            type: ContentChild,\r\n            args: [CdkNoDataRow]\r\n        }] }); })();\r\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\r\nfunction mergeArrayAndSet(array, set) {\r\n    return array.concat(Array.from(set));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Column that simply shows text content for the header and row cells. Assumes that the table\r\n * is using the native table implementation (`<table>`).\r\n *\r\n * By default, the name of this column will be the header text and data property accessor.\r\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\r\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\r\n * input.\r\n */\r\nclass CdkTextColumn {\r\n    constructor(\r\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\r\n    // for better error reporting.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _table, _options) {\r\n        this._table = _table;\r\n        this._options = _options;\r\n        /** Alignment of the cell values. */\r\n        this.justify = 'start';\r\n        this._options = _options || {};\r\n    }\r\n    /** Column name that should be used to reference this column. */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        this._name = name;\r\n        // With Ivy, inputs can be initialized before static query results are\r\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\r\n        this._syncColumnDefName();\r\n    }\r\n    ngOnInit() {\r\n        this._syncColumnDefName();\r\n        if (this.headerText === undefined) {\r\n            this.headerText = this._createDefaultHeaderText();\r\n        }\r\n        if (!this.dataAccessor) {\r\n            this.dataAccessor =\r\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\r\n        }\r\n        if (this._table) {\r\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\r\n            // since the columnDef will not pick up its content by the time the table finishes checking\r\n            // its content and initializing the rows.\r\n            this.columnDef.cell = this.cell;\r\n            this.columnDef.headerCell = this.headerCell;\r\n            this._table.addColumnDef(this.columnDef);\r\n        }\r\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            throw getTableTextColumnMissingParentTableError();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._table) {\r\n            this._table.removeColumnDef(this.columnDef);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a default header text. Use the options' header text transformation function if one\r\n     * has been provided. Otherwise simply capitalize the column name.\r\n     */\r\n    _createDefaultHeaderText() {\r\n        const name = this.name;\r\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableTextColumnMissingNameError();\r\n        }\r\n        if (this._options && this._options.defaultHeaderTextTransform) {\r\n            return this._options.defaultHeaderTextTransform(name);\r\n        }\r\n        return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n    /** Synchronizes the column definition name with the text column name. */\r\n    _syncColumnDefName() {\r\n        if (this.columnDef) {\r\n            this.columnDef.name = this.name;\r\n        }\r\n    }\r\n}\r\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\r\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\r\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\r\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\r\n        ɵngcc0.ɵɵelementContainerEnd();\r\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\r\nCdkTextColumn.ctorParameters = () => [\r\n    { type: CdkTable, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\r\n];\r\nCdkTextColumn.propDecorators = {\r\n    name: [{ type: Input }],\r\n    headerText: [{ type: Input }],\r\n    dataAccessor: [{ type: Input }],\r\n    justify: [{ type: Input }],\r\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\r\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\r\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-text-column',\r\n                template: `\r\n    <ng-container cdkColumnDef>\r\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\r\n        {{headerText}}\r\n      </th>\r\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n      </td>\r\n    </ng-container>\r\n  `,\r\n                encapsulation: ViewEncapsulation.None,\r\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\r\n                // to the table to be inserted into its view. This is problematic when change detection runs since\r\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\r\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\r\n                // an ExpressionChangedAfterItHasBeenCheckedError).\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default\r\n            }]\r\n    }], function () { return [{ type: CdkTable, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [TEXT_COLUMN_OPTIONS]\r\n            }] }]; }, { justify: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], headerText: [{\r\n            type: Input\r\n        }], dataAccessor: [{\r\n            type: Input\r\n        }], columnDef: [{\r\n            type: ViewChild,\r\n            args: [CdkColumnDef, { static: true }]\r\n        }], cell: [{\r\n            type: ViewChild,\r\n            args: [CdkCellDef, { static: true }]\r\n        }], headerCell: [{\r\n            type: ViewChild,\r\n            args: [CdkHeaderCellDef, { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst EXPORTED_DECLARATIONS = [\r\n    CdkTable,\r\n    CdkRowDef,\r\n    CdkCellDef,\r\n    CdkCellOutlet,\r\n    CdkHeaderCellDef,\r\n    CdkFooterCellDef,\r\n    CdkColumnDef,\r\n    CdkCell,\r\n    CdkRow,\r\n    CdkHeaderCell,\r\n    CdkFooterCell,\r\n    CdkHeaderRow,\r\n    CdkHeaderRowDef,\r\n    CdkFooterRow,\r\n    CdkFooterRowDef,\r\n    DataRowOutlet,\r\n    HeaderRowOutlet,\r\n    FooterRowOutlet,\r\n    CdkTextColumn,\r\n    CdkNoDataRow,\r\n    NoDataRowOutlet,\r\n];\r\nclass CdkTableModule {\r\n}\r\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\r\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\r\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: EXPORTED_DECLARATIONS,\r\n                declarations: EXPORTED_DECLARATIONS,\r\n                imports: [ScrollingModule]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\r\n\r\n"],"names":["Directionality","coerceBooleanProperty","isDataSource","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","DataSource","Platform","ViewportRuler","ScrollingModule","DOCUMENT","InjectionToken","Directive","TemplateRef","Inject","Optional","Input","ContentChild","ElementRef","Injectable","NgZone","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","ChangeDetectorRef","Attribute","SkipSelf","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","undefined","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","directives","encapsulation","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","Number","MAX_VALUE","setAttribute","nodeName","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","exportAs","useClass","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"sourceRoot":"webpack:///"}