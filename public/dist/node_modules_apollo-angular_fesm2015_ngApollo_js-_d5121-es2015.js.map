{"version":3,"mappings":"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","names":["stringifyCanon","stringifyCache","ObjectCanon","this","known","canUseWeakSet","WeakSet","Set","pool","Trie","canUseWeakMap","passes","WeakMap","keysByJSON","Map","empty","admit","prototype","isKnown","value","isObjectOrArray","has","pass","copy","Array","isArray","slice","__assign","__proto__","Object","getPrototypeOf","set","_this","original","get","proto","array","map","node","lookupArray","add","__DEV__","freeze","proto_1","array_1","keys","sortedKeys","push","json","firstValueIndex_1","length","sorted","forEach","key","object","obj_1","create","i","obj","sort","JSON","stringify","canonicalStringify","assign","resetCanonicalStringify","canonical","reset","cacheSlot","Slot","cacheInfoMap","cache","info","vars","dep","getCacheInfo","rv","forgetCache","attachCache","caches","listeners","newValue","arguments","dirty","broadcast","oldListeners","from","clear","listener","getValue","attach","onNextChange","delete","broadcastWatches","op","forward","Observable","handler","ApolloLink","link","request","LinkError","_super","message","call","__extends","Error","links","toLink","reduce","x","y","concat","split","test","left","right","leftLink","rightLink","passthrough","isTerminating","operation","execute","starting","context","defineProperty","enumerable","next","transformedOperation","variables","extensions","operationName","query","getOperationName","undefined","OPERATION_FIELDS","_i","_a","indexOf","InvariantError","first","second","firstLink","invariant","nextLink","onError","error","observer","setOnError","fn","navigator","product","toString","cloneDeepHelper","val","seen","copy_1","child","copy_2","prefixCounts","prefix","count","Math","random","hasOwnProperty","sources","mergeDeepArray","target","merger","DeepMerger","merge","defaultReconciler","source","property","reconciler","isObject","isNonNullObject","pastCopies","sourceKey","targetValue","result","apply","__spreadArray","shallowCopyForMerge","genericMessage","setPrototypeOf","framesToPop","name","condition","verbosityLevels","verbosityLevel","method","console","log","thunk","debug","wrapConsoleMethod","warn","maybe","globalThis","window","self","global","Function","__","GLOBAL_KEY","join","W","Boolean","process","configurable","writable","_","safeGlobal","needToRemove","env","NODE_ENV","isType","DEV","directives","directive","directiveArguments","directiveName","ifArgument","ifValue","kind","every","evaledValue","names","root","visit","Directive","some","document","hasDirectives","fragmentName","actualFragmentName","fragments","definitions","definition","selectionSet","selections","symTable","fragment","selection","fragmentMap","doc","operations","filter","d","checkDocument","queryDef","getOperationDefinition","fragmentDef","queryDoc","fragmentDefinition","defaultValues","defs","variableDefinitions","def","defaultValue","valueToObjectRepresentation","variable","id","__ref","String","argObj","Number","nestedArgObj_1","fields","variableValue","values","listValue","nestedArgArrayObj","field","directivesObj","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","connection","filterKeys","filteredArgs_1","completeFieldName","stringifiedArgs","setStringify","s","previous","stringifyReplacer","_key","argObj_1","alias","__typename","isField","resultKeyNameFromField","typename","getTypenameFromResult","getFragmentFromSelection","elem","TYPENAME_FIELD","isEmpty","getFragmentDefinition","createFragmentMap","getFragmentDefinitions","dir","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","nullIfDocIsEmpty","Variable","enter","parent","Field","remove","getDirectiveMatcher","arg","getAllFragmentSpreadsFromSelectionSet","frag","FragmentSpread","filterInPlace","v","config","argMatcher","argument","aConfig","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","fs","FragmentDefinition","addTypenameToDocument","SelectionSet","lastIndexOf","added","connectionRemoveConfig","willRemove","removeDirectivesFromDocument","allFragments","isInlineFragment","getMainDefinition","currentContext","MISSING_VALUE","idCounter","globalKey","host","Date","now","hasValue","context_1","slots","withValue","callback","thisArg","bind","saved","noContext","fnToStr","previousComparisons","a","b","check","aTag","previouslyCompared","aKeys","definedKeys","bKeys","keyCount","k","size","aIterator","entries","isMap","done","aKey","aValue","Uint8Array","len","byteLength","aCode","full","suffix","fromIndex","nativeCodeSuffix","isDefinedKey","bSet","defaultMakeData","weakness","makeData","lookup","getChildTrie","data","weak","strong","objects","serializeFetchParameter","p","label","serialized","e","parseError","throwServerError","response","statusCode","status","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","options","normalized_1","toLowerCase","errorValue","backupFetch","fetch","HttpLink","linkOptions","uri","preferredFetch","useGETForQueries","_b","includeUnusedVariables","requestOptions","__rest","fetcher","linkConfig","fetchOptions","credentials","chosenURI","fallbackURI","getContext","clientAwarenessHeaders","clientAwareness","name_1","version","controller","contextHeaders","fallbackConfig","configs","headersToLowerCase","body","print","unusedNames_1","signal","_c","AbortController","_d","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","fromError","currentFetch","then","setContext","text","bodyText","parse","err","complete","catch","errors","abort","observable","mapFn","catchFn","activeCallbackCount","completed","promiseQueue","Promise","resolve","examiner","delegate","both","caught","makeCallback","sub","subscribe","unsubscribe","observers","observersWithMethod","obs","subclass","Symbol","species","Concast","addObserver","removeObserver","addCount","promise","reject","handlers","latest","iterateObserversSafely","setTimeout","shift","se","r","cancel","reason","iterable","start","deliverLastMessage","nextOrError","quietly","cleanup","called","once","fixObservableSubclass","ApolloError","graphQLErrors","clientErrors","networkError","errorMessage","extraInfo","isNonEmptyArray","replace","NetworkStatus","loading","setVariables","fetchMore","refetch","poll","ready","networkStatus","warnedAboutUpdateQuery","ObservableQuery","queryManager","queryInfo","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","last","reobserve","tearDownQuery","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","initialFetchPolicy","fetchPolicy","removeQuery","subscription","getCurrentResult","saveAsLastResult","lastResult","getLastResult","isNetworkRequestInFlight","transform","hasForcedResolvers","diff","getDiff","returnPartialData","equal","partial","partialRefetch","logMissingFieldErrors","missing","updateLastResult","isDifferentFromLastResult","newResult","getLast","variablesMustMatch","getLastError","resetLastResults","resetQueryStoreErrors","resetErrors","reobserveOptions","pollInterval","getQueryDefinition","resetLastWrite","fetchMoreOptions","combinedOptions","qid","notifyOnNetworkStatusChange","observe","fetchQuery","fetchMoreResult","updateQuery","writeQuery","finally","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","setOptions","newOptions","optimistic","broadcastQueries","startPolling","updatePolling","stopPolling","newNetworkStatus","setObservableQuery","fetchQueryObservable","ssrMode","pollingInfo","clearTimeout","timeout","interval","maybeFetch","assumeImmutableResults","cloneDeep","useDisposableConcast","oldVariables","compact","concast","reportResult","reportError","errorResult","hasObservers","stack","m","path","LocalState","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","mergeDeep","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","__awaiter","__generator","resolveDocument","localResult","getFragmentMatcher","clientQuery","serverQuery","removeClientSetsFromDocument","prepareContext","getCacheKey","identify","addExportedVariables","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","BREAK","buildQueryFromSelectionSet","rootValue","mainDefinition","definitionOperation","defaultOperationType","execContext","charAt","toUpperCase","resolveSelectionSet","resultsToMerge","all","shouldInclude","resolveField","fieldResult","typeCondition","fragmentResult","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","resolverMap","argumentsObjectFromField","resolveSubSelectedArray","item","destructiveMethodCounts","methodName","notifyTimeout","QueryInfo","lastRequestId","stopped","observableQuery","wrapDestructiveCacheMethod","init","lastDiff","cancelNotifyTimeout","getDiffOptions","updateWatch","oq","updateLastDiff","canonizeResults","setDiff","oldDiff","notify","oqListener","fromOptimisticTransaction","shouldNotify","stop","watchOptions","watcher","lastWatch","watch","lastWrite","shouldWrite","dmCount","markResult","cacheWriteBehavior","t","shouldWriteResult","errorPolicy","performTransaction","overwrite","diffOptions","markReady","markError","ignoreErrors","writeWithErrors","graphQLResultHasError","QueryManager","queryDeduplication","onBroadcast","localState","queries","fetchCancelFns","transformCache","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","mutationStore","_info","stopQueryNoBroadcast","cancelPendingFetches","mutate","mutation","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","update","onQueryUpdated","_e","keepRootFields","mutationId","mutationStoreValue","_f","generateMutationId","getVariables","hasClientExports","sent","markMutationOptimistic","asyncMap","getObservableFromLink","storeResult","markMutationResult","removeOptimistic","cacheWrites","skipCache","dataId","updateQueries_1","updater","currentQueryResult","nextQueryResult","mutationResult","queryVariables","results_1","updateCache","write","asQuery","modify","DELETE","include","recordOptimisticTransaction","getQueryStore","store","transformed","transformDocument","forLink","removeConnectionDirectiveFromDocument","transformForLink","cacheEntry_1","defaultVars","getDefaultValues","watchQuery","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","resetStore","reFetchObservableQueries","getObservableQueries","queryNamesAndDocs","legacyQueryOptions","desc","isDocumentNode","makeUniqueId","getQuery","included","nameOrDoc","includeStandby","observableQueryPromises","makeObservable","observablePromise_1","getLocalState","deduplication","inFlightLinkObservables_1","forceFetch","byVariables_1","varJson_1","getResultsFromLink","requestId","hasErrors","aqr","normalized","fromVariables","fetchQueryByPolicy","nextFetchPolicy","includedQueriesById","results","batch","onWatchUpdated","refetchWritePolicy","oldNetworkStatus","readCache","resultsFromCache","fromData","resolved","resultsFromLink","newContext","hasSuggestedDevtools","defaults","ApolloClient","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","__APOLLO_CLIENT__","typeDefs","clientAwarenessName","clientAwarenessVersion","disableNetworkFetches","top","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","nav","ua","userAgent","url","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","mergeOptions","readQuery","readFragment","writeFragment","__actionHookForDevTools","cb","__requestRaw","payload","onResetStore","c","onClearStore","obsQuery","restore","serializedState","setLocalStateFragmentMatcher","setLink","newLink","promiseFn","subscriber","closed","constructor","zone","schedule","work","delay","run","queueScheduler","ngZone","pipe","observeOn","ZoneScheduler","wrapped","wrapWithZone","fixObservable","valueChanges","useInitialLoading","startWith","stale","opts","APOLLO_FLAGS","InjectionToken","APOLLO_OPTIONS","APOLLO_NAMED_OPTIONS","flags","_client","flag","QueryRef","ensureClient","fromPromise","extra","useZone","getClient","setClient","checkInstance","Apollo","ApolloBase","_ngZone","apolloOptions","apolloNamedOptions","super","createDefault","createNamed","isDefault","default","use","removeClient","ɵfac","ɵngcc0","ɵprov","i0","factory","token","providedIn","Query","apollo","Mutation","Subscription","Cache","max","dispose","Infinity","defaultDispose","newest","oldest","getNode","older","newer","clean","parentEntrySlot","toArray","collection","entryOrDep","emptySetPool","optionalMessage","Entry","parents","childValues","dirtyChildren","recomputing","deps","peek","mightBeDirty","rememberParent","recompute","assert","entry","forgetChildren","recomputeNewValue","maybeUnsubscribe","setDirty","reportClean","valueGet","reportDirty","eachParent","forgetChild","forget","dependOn","pop","forgetDeps","reportDirtyChild","reportCleanChild","parentCount","parentWasClean","childValue","removeDirtyChild","dc","_value","EntryMethods","depsByKey","dep_1","depend","entryMethodName","m_1","keyTrie","makeDefaultMakeCacheKeyFunction","originalFunction","pow","keyArgs","makeCacheKey","dirtyKey","peekKey","forgetKey","getKey","arr","arr2","props","descriptor","Constructor","protoProps","staticProps","_defineProperties","hasSymbols","hasSymbol","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","TypeError","ctor","hostReportError","_cleanup","getMethod","_queue","_state","type","closeSubscription","cleanupSubscription","enqueue","queue","notifySubscription","subscriptionObserver","SubscriptionObserver","_proto","_createClass","_proto2","onNotify","_subscriber","_proto3","_this2","getSpecies","_this3","_this4","C","hasSeed","seed","acc","_this5","_len","index","startNext","flatMap","_this6","outer","inner","splice","completeIfDone","_step","_iterator","o","allowArrayLike","it","iterator","minLen","_arrayLikeToArray","n","of","_len2","items","_key2","symbol"],"sources":["webpack:///node_modules/@apollo/client/cache/inmemory/object-canon.js","webpack:///node_modules/@apollo/client/cache/inmemory/reactiveVars.js","webpack:///node_modules/@apollo/client/link/core/ApolloLink.js","webpack:///node_modules/@apollo/client/link/utils/createOperation.js","webpack:///node_modules/@apollo/client/link/utils/transformOperation.js","webpack:///node_modules/@apollo/client/link/utils/validateOperation.js","webpack:///node_modules/@apollo/client/utilities/common/canUse.js","webpack:///node_modules/@apollo/client/utilities/common/cloneDeep.js","webpack:///node_modules/@apollo/client/utilities/common/makeUniqueId.js","webpack:///node_modules/@apollo/client/utilities/common/mergeDeep.js","webpack:///node_modules/@apollo/client/utilities/common/objects.js","webpack:///node_modules/ts-invariant/lib/invariant.esm.js","webpack:///node_modules/@apollo/client/utilities/globals/maybe.js","webpack:///node_modules/@apollo/client/utilities/globals/global.js","webpack:///node_modules/@apollo/client/utilities/globals/DEV.js","webpack:///node_modules/ts-invariant/process/index.js","webpack:///node_modules/@apollo/client/utilities/globals/graphql.js","webpack:///node_modules/@apollo/client/utilities/globals/index.js","webpack:///node_modules/@apollo/client/utilities/graphql/directives.js","webpack:///node_modules/@apollo/client/utilities/graphql/fragments.js","webpack:///node_modules/@apollo/client/utilities/graphql/getFromAST.js","webpack:///node_modules/@apollo/client/utilities/graphql/storeUtils.js","webpack:///node_modules/@apollo/client/utilities/common/filterInPlace.js","webpack:///node_modules/@apollo/client/utilities/graphql/transform.js","webpack:///node_modules/@wry/context/lib/context.esm.js","webpack:///node_modules/@wry/equality/lib/equality.esm.js","webpack:///node_modules/@wry/trie/lib/trie.esm.js","webpack:///node_modules/@apollo/client/link/core/execute.js","webpack:///node_modules/@apollo/client/utilities/common/compact.js","webpack:///node_modules/@apollo/client/version.js","webpack:///node_modules/@apollo/client/link/http/serializeFetchParameter.js","webpack:///node_modules/@apollo/client/link/utils/throwServerError.js","webpack:///node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js","webpack:///node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js","webpack:///node_modules/@apollo/client/link/utils/fromError.js","webpack:///node_modules/@apollo/client/link/http/createHttpLink.js","webpack:///node_modules/@apollo/client/link/http/HttpLink.js","webpack:///node_modules/@apollo/client/link/http/checkFetcher.js","webpack:///node_modules/@apollo/client/link/http/selectURI.js","webpack:///node_modules/@apollo/client/link/http/createSignalIfSupported.js","webpack:///node_modules/@apollo/client/link/http/rewriteURIForGET.js","webpack:///node_modules/@apollo/client/utilities/observables/asyncMap.js","webpack:///node_modules/@apollo/client/utilities/common/errorHandling.js","webpack:///node_modules/@apollo/client/utilities/observables/iteration.js","webpack:///node_modules/@apollo/client/utilities/observables/subclassing.js","webpack:///node_modules/@apollo/client/utilities/observables/Concast.js","webpack:///node_modules/@apollo/client/utilities/common/arrays.js","webpack:///node_modules/@apollo/client/errors/index.js","webpack:///node_modules/@apollo/client/core/networkStatus.js","webpack:///node_modules/@apollo/client/core/ObservableQuery.js","webpack:///node_modules/@apollo/client/core/LocalState.js","webpack:///node_modules/@apollo/client/core/QueryInfo.js","webpack:///node_modules/@apollo/client/core/QueryManager.js","webpack:///node_modules/@apollo/client/core/ApolloClient.js","webpack:///node_modules/apollo-angular/fesm2015/ngApollo.js","webpack:///node_modules/optimism/lib/bundle.esm.js","webpack:///node_modules/zen-observable-ts/module.js"],"sourcesContent":["import { __assign } from \"tslib\";\r\nimport \"../../utilities/globals/index.js\";\r\nimport { Trie } from \"@wry/trie\";\r\nimport { canUseWeakMap, canUseWeakSet, isNonNullObject as isObjectOrArray, } from \"../../utilities/index.js\";\r\nfunction shallowCopy(value) {\r\n    if (isObjectOrArray(value)) {\r\n        return Array.isArray(value)\r\n            ? value.slice(0)\r\n            : __assign({ __proto__: Object.getPrototypeOf(value) }, value);\r\n    }\r\n    return value;\r\n}\r\nvar ObjectCanon = (function () {\r\n    function ObjectCanon() {\r\n        this.known = new (canUseWeakSet ? WeakSet : Set)();\r\n        this.pool = new Trie(canUseWeakMap);\r\n        this.passes = new WeakMap();\r\n        this.keysByJSON = new Map();\r\n        this.empty = this.admit({});\r\n    }\r\n    ObjectCanon.prototype.isKnown = function (value) {\r\n        return isObjectOrArray(value) && this.known.has(value);\r\n    };\r\n    ObjectCanon.prototype.pass = function (value) {\r\n        if (isObjectOrArray(value)) {\r\n            var copy = shallowCopy(value);\r\n            this.passes.set(copy, value);\r\n            return copy;\r\n        }\r\n        return value;\r\n    };\r\n    ObjectCanon.prototype.admit = function (value) {\r\n        var _this = this;\r\n        if (isObjectOrArray(value)) {\r\n            var original = this.passes.get(value);\r\n            if (original)\r\n                return original;\r\n            var proto = Object.getPrototypeOf(value);\r\n            switch (proto) {\r\n                case Array.prototype: {\r\n                    if (this.known.has(value))\r\n                        return value;\r\n                    var array = value.map(this.admit, this);\r\n                    var node = this.pool.lookupArray(array);\r\n                    if (!node.array) {\r\n                        this.known.add(node.array = array);\r\n                        if (__DEV__) {\r\n                            Object.freeze(array);\r\n                        }\r\n                    }\r\n                    return node.array;\r\n                }\r\n                case null:\r\n                case Object.prototype: {\r\n                    if (this.known.has(value))\r\n                        return value;\r\n                    var proto_1 = Object.getPrototypeOf(value);\r\n                    var array_1 = [proto_1];\r\n                    var keys = this.sortedKeys(value);\r\n                    array_1.push(keys.json);\r\n                    var firstValueIndex_1 = array_1.length;\r\n                    keys.sorted.forEach(function (key) {\r\n                        array_1.push(_this.admit(value[key]));\r\n                    });\r\n                    var node = this.pool.lookupArray(array_1);\r\n                    if (!node.object) {\r\n                        var obj_1 = node.object = Object.create(proto_1);\r\n                        this.known.add(obj_1);\r\n                        keys.sorted.forEach(function (key, i) {\r\n                            obj_1[key] = array_1[firstValueIndex_1 + i];\r\n                        });\r\n                        if (__DEV__) {\r\n                            Object.freeze(obj_1);\r\n                        }\r\n                    }\r\n                    return node.object;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    ObjectCanon.prototype.sortedKeys = function (obj) {\r\n        var keys = Object.keys(obj);\r\n        var node = this.pool.lookupArray(keys);\r\n        if (!node.keys) {\r\n            keys.sort();\r\n            var json = JSON.stringify(keys);\r\n            if (!(node.keys = this.keysByJSON.get(json))) {\r\n                this.keysByJSON.set(json, node.keys = { sorted: keys, json: json });\r\n            }\r\n        }\r\n        return node.keys;\r\n    };\r\n    return ObjectCanon;\r\n}());\r\nexport { ObjectCanon };\r\nexport var canonicalStringify = Object.assign(function (value) {\r\n    if (isObjectOrArray(value)) {\r\n        if (stringifyCanon === void 0) {\r\n            resetCanonicalStringify();\r\n        }\r\n        var canonical = stringifyCanon.admit(value);\r\n        var json = stringifyCache.get(canonical);\r\n        if (json === void 0) {\r\n            stringifyCache.set(canonical, json = JSON.stringify(canonical));\r\n        }\r\n        return json;\r\n    }\r\n    return JSON.stringify(value);\r\n}, {\r\n    reset: resetCanonicalStringify,\r\n});\r\nvar stringifyCanon;\r\nvar stringifyCache;\r\nfunction resetCanonicalStringify() {\r\n    stringifyCanon = new ObjectCanon;\r\n    stringifyCache = new (canUseWeakMap ? WeakMap : Map)();\r\n}\r\n","import { dep } from \"optimism\";\r\nimport { Slot } from \"@wry/context\";\r\nexport var cacheSlot = new Slot();\r\nvar cacheInfoMap = new WeakMap();\r\nfunction getCacheInfo(cache) {\r\n    var info = cacheInfoMap.get(cache);\r\n    if (!info) {\r\n        cacheInfoMap.set(cache, info = {\r\n            vars: new Set,\r\n            dep: dep(),\r\n        });\r\n    }\r\n    return info;\r\n}\r\nexport function forgetCache(cache) {\r\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.forgetCache(cache); });\r\n}\r\nexport function recallCache(cache) {\r\n    getCacheInfo(cache).vars.forEach(function (rv) { return rv.attachCache(cache); });\r\n}\r\nexport function makeVar(value) {\r\n    var caches = new Set();\r\n    var listeners = new Set();\r\n    var rv = function (newValue) {\r\n        if (arguments.length > 0) {\r\n            if (value !== newValue) {\r\n                value = newValue;\r\n                caches.forEach(function (cache) {\r\n                    getCacheInfo(cache).dep.dirty(rv);\r\n                    broadcast(cache);\r\n                });\r\n                var oldListeners = Array.from(listeners);\r\n                listeners.clear();\r\n                oldListeners.forEach(function (listener) { return listener(value); });\r\n            }\r\n        }\r\n        else {\r\n            var cache = cacheSlot.getValue();\r\n            if (cache) {\r\n                attach(cache);\r\n                getCacheInfo(cache).dep(rv);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    rv.onNextChange = function (listener) {\r\n        listeners.add(listener);\r\n        return function () {\r\n            listeners.delete(listener);\r\n        };\r\n    };\r\n    var attach = rv.attachCache = function (cache) {\r\n        caches.add(cache);\r\n        getCacheInfo(cache).vars.add(rv);\r\n        return rv;\r\n    };\r\n    rv.forgetCache = function (cache) { return caches.delete(cache); };\r\n    return rv;\r\n}\r\nfunction broadcast(cache) {\r\n    if (cache.broadcastWatches) {\r\n        cache.broadcastWatches();\r\n    }\r\n}\r\n","import { __extends } from \"tslib\";\r\nimport { InvariantError, invariant } from \"../../utilities/globals/index.js\";\r\nimport { Observable } from \"../../utilities/index.js\";\r\nimport { validateOperation, createOperation, transformOperation, } from \"../utils/index.js\";\r\nfunction passthrough(op, forward) {\r\n    return (forward ? forward(op) : Observable.of());\r\n}\r\nfunction toLink(handler) {\r\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\r\n}\r\nfunction isTerminating(link) {\r\n    return link.request.length <= 1;\r\n}\r\nvar LinkError = (function (_super) {\r\n    __extends(LinkError, _super);\r\n    function LinkError(message, link) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.link = link;\r\n        return _this;\r\n    }\r\n    return LinkError;\r\n}(Error));\r\nvar ApolloLink = (function () {\r\n    function ApolloLink(request) {\r\n        if (request)\r\n            this.request = request;\r\n    }\r\n    ApolloLink.empty = function () {\r\n        return new ApolloLink(function () { return Observable.of(); });\r\n    };\r\n    ApolloLink.from = function (links) {\r\n        if (links.length === 0)\r\n            return ApolloLink.empty();\r\n        return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\r\n    };\r\n    ApolloLink.split = function (test, left, right) {\r\n        var leftLink = toLink(left);\r\n        var rightLink = toLink(right || new ApolloLink(passthrough));\r\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\r\n            return new ApolloLink(function (operation) {\r\n                return test(operation)\r\n                    ? leftLink.request(operation) || Observable.of()\r\n                    : rightLink.request(operation) || Observable.of();\r\n            });\r\n        }\r\n        else {\r\n            return new ApolloLink(function (operation, forward) {\r\n                return test(operation)\r\n                    ? leftLink.request(operation, forward) || Observable.of()\r\n                    : rightLink.request(operation, forward) || Observable.of();\r\n            });\r\n        }\r\n    };\r\n    ApolloLink.execute = function (link, operation) {\r\n        return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\r\n    };\r\n    ApolloLink.concat = function (first, second) {\r\n        var firstLink = toLink(first);\r\n        if (isTerminating(firstLink)) {\r\n            __DEV__ && invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\r\n            return firstLink;\r\n        }\r\n        var nextLink = toLink(second);\r\n        if (isTerminating(nextLink)) {\r\n            return new ApolloLink(function (operation) {\r\n                return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\r\n            });\r\n        }\r\n        else {\r\n            return new ApolloLink(function (operation, forward) {\r\n                return (firstLink.request(operation, function (op) {\r\n                    return nextLink.request(op, forward) || Observable.of();\r\n                }) || Observable.of());\r\n            });\r\n        }\r\n    };\r\n    ApolloLink.prototype.split = function (test, left, right) {\r\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\r\n    };\r\n    ApolloLink.prototype.concat = function (next) {\r\n        return ApolloLink.concat(this, next);\r\n    };\r\n    ApolloLink.prototype.request = function (operation, forward) {\r\n        throw __DEV__ ? new InvariantError('request is not implemented') : new InvariantError(21);\r\n    };\r\n    ApolloLink.prototype.onError = function (error, observer) {\r\n        if (observer && observer.error) {\r\n            observer.error(error);\r\n            return false;\r\n        }\r\n        throw error;\r\n    };\r\n    ApolloLink.prototype.setOnError = function (fn) {\r\n        this.onError = fn;\r\n        return this;\r\n    };\r\n    return ApolloLink;\r\n}());\r\nexport { ApolloLink };\r\n","import { __assign } from \"tslib\";\r\nexport function createOperation(starting, operation) {\r\n    var context = __assign({}, starting);\r\n    var setContext = function (next) {\r\n        if (typeof next === 'function') {\r\n            context = __assign(__assign({}, context), next(context));\r\n        }\r\n        else {\r\n            context = __assign(__assign({}, context), next);\r\n        }\r\n    };\r\n    var getContext = function () { return (__assign({}, context)); };\r\n    Object.defineProperty(operation, 'setContext', {\r\n        enumerable: false,\r\n        value: setContext,\r\n    });\r\n    Object.defineProperty(operation, 'getContext', {\r\n        enumerable: false,\r\n        value: getContext,\r\n    });\r\n    return operation;\r\n}\r\n","import { getOperationName } from \"../../utilities/index.js\";\r\nexport function transformOperation(operation) {\r\n    var transformedOperation = {\r\n        variables: operation.variables || {},\r\n        extensions: operation.extensions || {},\r\n        operationName: operation.operationName,\r\n        query: operation.query,\r\n    };\r\n    if (!transformedOperation.operationName) {\r\n        transformedOperation.operationName =\r\n            typeof transformedOperation.query !== 'string'\r\n                ? getOperationName(transformedOperation.query) || undefined\r\n                : '';\r\n    }\r\n    return transformedOperation;\r\n}\r\n","import { InvariantError } from \"../../utilities/globals/index.js\";\r\nexport function validateOperation(operation) {\r\n    var OPERATION_FIELDS = [\r\n        'query',\r\n        'operationName',\r\n        'variables',\r\n        'extensions',\r\n        'context',\r\n    ];\r\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\r\n            throw __DEV__ ? new InvariantError(\"illegal argument: \" + key) : new InvariantError(26);\r\n        }\r\n    }\r\n    return operation;\r\n}\r\n","export var canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\r\n    navigator.product === 'ReactNative');\r\nexport var canUseWeakSet = typeof WeakSet === 'function';\r\n","var toString = Object.prototype.toString;\r\nexport function cloneDeep(value) {\r\n    return cloneDeepHelper(value);\r\n}\r\nfunction cloneDeepHelper(val, seen) {\r\n    switch (toString.call(val)) {\r\n        case \"[object Array]\": {\r\n            seen = seen || new Map;\r\n            if (seen.has(val))\r\n                return seen.get(val);\r\n            var copy_1 = val.slice(0);\r\n            seen.set(val, copy_1);\r\n            copy_1.forEach(function (child, i) {\r\n                copy_1[i] = cloneDeepHelper(child, seen);\r\n            });\r\n            return copy_1;\r\n        }\r\n        case \"[object Object]\": {\r\n            seen = seen || new Map;\r\n            if (seen.has(val))\r\n                return seen.get(val);\r\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\r\n            seen.set(val, copy_2);\r\n            Object.keys(val).forEach(function (key) {\r\n                copy_2[key] = cloneDeepHelper(val[key], seen);\r\n            });\r\n            return copy_2;\r\n        }\r\n        default:\r\n            return val;\r\n    }\r\n}\r\n","var prefixCounts = new Map();\r\nexport function makeUniqueId(prefix) {\r\n    var count = prefixCounts.get(prefix) || 1;\r\n    prefixCounts.set(prefix, count + 1);\r\n    return prefix + \":\" + count + \":\" + Math.random().toString(36).slice(2);\r\n}\r\n","import { __assign, __spreadArray } from \"tslib\";\r\nimport { isNonNullObject } from \"./objects.js\";\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function mergeDeep() {\r\n    var sources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        sources[_i] = arguments[_i];\r\n    }\r\n    return mergeDeepArray(sources);\r\n}\r\nexport function mergeDeepArray(sources) {\r\n    var target = sources[0] || {};\r\n    var count = sources.length;\r\n    if (count > 1) {\r\n        var merger = new DeepMerger();\r\n        for (var i = 1; i < count; ++i) {\r\n            target = merger.merge(target, sources[i]);\r\n        }\r\n    }\r\n    return target;\r\n}\r\nvar defaultReconciler = function (target, source, property) {\r\n    return this.merge(target[property], source[property]);\r\n};\r\nvar DeepMerger = (function () {\r\n    function DeepMerger(reconciler) {\r\n        if (reconciler === void 0) { reconciler = defaultReconciler; }\r\n        this.reconciler = reconciler;\r\n        this.isObject = isNonNullObject;\r\n        this.pastCopies = new Set();\r\n    }\r\n    DeepMerger.prototype.merge = function (target, source) {\r\n        var _this = this;\r\n        var context = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            context[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNonNullObject(source) && isNonNullObject(target)) {\r\n            Object.keys(source).forEach(function (sourceKey) {\r\n                if (hasOwnProperty.call(target, sourceKey)) {\r\n                    var targetValue = target[sourceKey];\r\n                    if (source[sourceKey] !== targetValue) {\r\n                        var result = _this.reconciler.apply(_this, __spreadArray([target, source, sourceKey], context, false));\r\n                        if (result !== targetValue) {\r\n                            target = _this.shallowCopyForMerge(target);\r\n                            target[sourceKey] = result;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    target = _this.shallowCopyForMerge(target);\r\n                    target[sourceKey] = source[sourceKey];\r\n                }\r\n            });\r\n            return target;\r\n        }\r\n        return source;\r\n    };\r\n    DeepMerger.prototype.shallowCopyForMerge = function (value) {\r\n        if (isNonNullObject(value) && !this.pastCopies.has(value)) {\r\n            if (Array.isArray(value)) {\r\n                value = value.slice(0);\r\n            }\r\n            else {\r\n                value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\r\n            }\r\n            this.pastCopies.add(value);\r\n        }\r\n        return value;\r\n    };\r\n    return DeepMerger;\r\n}());\r\nexport { DeepMerger };\r\n","export function isNonNullObject(obj) {\r\n    return obj !== null && typeof obj === 'object';\r\n}\r\n","import { __extends } from 'tslib';\r\n\r\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\nvar verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"];\r\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\r\nfunction wrapConsoleMethod(name) {\r\n    return function () {\r\n        if (verbosityLevels.indexOf(name) >= verbosityLevel) {\r\n            // Default to console.log if this host environment happens not to provide\r\n            // all the console.* methods we need.\r\n            var method = console[name] || console.log;\r\n            return method.apply(console, arguments);\r\n        }\r\n    };\r\n}\r\n(function (invariant) {\r\n    invariant.debug = wrapConsoleMethod(\"debug\");\r\n    invariant.log = wrapConsoleMethod(\"log\");\r\n    invariant.warn = wrapConsoleMethod(\"warn\");\r\n    invariant.error = wrapConsoleMethod(\"error\");\r\n})(invariant || (invariant = {}));\r\nfunction setVerbosity(level) {\r\n    var old = verbosityLevels[verbosityLevel];\r\n    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\r\n    return old;\r\n}\r\nvar invariant$1 = invariant;\r\n\r\nexport { InvariantError, invariant$1 as default, invariant, setVerbosity };\r\n\n","export function maybe(thunk) {\r\n    try {\r\n        return thunk();\r\n    }\r\n    catch (_a) { }\r\n}\r\n","import { maybe } from \"./maybe.js\";\r\nexport default (maybe(function () { return globalThis; }) ||\r\n    maybe(function () { return window; }) ||\r\n    maybe(function () { return self; }) ||\r\n    maybe(function () { return global; }) ||\r\n    maybe(function () { return Function(\"return this\")(); }));\r\n","import global from \"./global.js\";\r\nimport { maybe } from \"./maybe.js\";\r\nvar __ = \"__\";\r\nvar GLOBAL_KEY = [__, __].join(\"DEV\");\r\nfunction getDEV() {\r\n    try {\r\n        return Boolean(__DEV__);\r\n    }\r\n    catch (_a) {\r\n        Object.defineProperty(global, GLOBAL_KEY, {\r\n            value: maybe(function () { return process.env.NODE_ENV; }) !== \"production\",\r\n            enumerable: false,\r\n            configurable: true,\r\n            writable: true,\r\n        });\r\n        return global[GLOBAL_KEY];\r\n    }\r\n}\r\nexport default getDEV();\r\n","function maybe(thunk) {\r\n  try { return thunk() } catch (_) {}\r\n}\r\n\r\nvar safeGlobal = (\r\n  maybe(function() { return globalThis }) ||\r\n  maybe(function() { return window }) ||\r\n  maybe(function() { return self }) ||\r\n  maybe(function() { return global }) ||\r\n  maybe(function() { return Function(\"return this\")() })\r\n);\r\n\r\nvar needToRemove = false;\r\n\r\nexport function install() {\r\n  if (safeGlobal &&\r\n      !maybe(function() { return process.env.NODE_ENV }) &&\r\n      !maybe(function() { return process })) {\r\n    Object.defineProperty(safeGlobal, \"process\", {\r\n      value: {\r\n        env: {\r\n          // This default needs to be \"production\" instead of \"development\", to\r\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\r\n          // will eventually solve, once merged and released.\r\n          NODE_ENV: \"production\",\r\n        },\r\n      },\r\n      // Let anyone else change global.process as they see fit, but hide it from\r\n      // Object.keys(global) enumeration.\r\n      configurable: true,\r\n      enumerable: false,\r\n      writable: true,\r\n    });\r\n    needToRemove = true;\r\n  }\r\n}\r\n\r\n// Call install() at least once, when this module is imported.\r\ninstall();\r\n\r\nexport function remove() {\r\n  if (needToRemove) {\r\n    delete safeGlobal.process;\r\n    needToRemove = false;\r\n  }\r\n}\r\n","import { remove } from 'ts-invariant/process';\r\nimport { isType } from 'graphql';\r\nexport function removeTemporaryGlobals() {\r\n    isType(null);\r\n    return remove();\r\n}\r\n","import { invariant, InvariantError } from \"ts-invariant\";\r\nimport DEV from \"./DEV.js\";\r\nexport { DEV };\r\nexport function checkDEV() {\r\n    __DEV__ ? invariant(\"boolean\" === typeof DEV, DEV) : invariant(\"boolean\" === typeof DEV, 38);\r\n}\r\nimport { removeTemporaryGlobals } from \"./graphql.js\";\r\nremoveTemporaryGlobals();\r\nexport { maybe } from \"./maybe.js\";\r\nexport { default as global } from \"./global.js\";\r\nexport { invariant, InvariantError };\r\ncheckDEV();\r\n","import { invariant } from \"../globals/index.js\";\r\nimport { visit, } from 'graphql';\r\nexport function shouldInclude(_a, variables) {\r\n    var directives = _a.directives;\r\n    if (!directives || !directives.length) {\r\n        return true;\r\n    }\r\n    return getInclusionDirectives(directives).every(function (_a) {\r\n        var directive = _a.directive, ifArgument = _a.ifArgument;\r\n        var evaledValue = false;\r\n        if (ifArgument.value.kind === 'Variable') {\r\n            evaledValue = variables && variables[ifArgument.value.name.value];\r\n            __DEV__ ? invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\") : invariant(evaledValue !== void 0, 39);\r\n        }\r\n        else {\r\n            evaledValue = ifArgument.value.value;\r\n        }\r\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\r\n    });\r\n}\r\nexport function getDirectiveNames(root) {\r\n    var names = [];\r\n    visit(root, {\r\n        Directive: function (node) {\r\n            names.push(node.name.value);\r\n        },\r\n    });\r\n    return names;\r\n}\r\nexport function hasDirectives(names, root) {\r\n    return getDirectiveNames(root).some(function (name) { return names.indexOf(name) > -1; });\r\n}\r\nexport function hasClientExports(document) {\r\n    return (document &&\r\n        hasDirectives(['client'], document) &&\r\n        hasDirectives(['export'], document));\r\n}\r\nfunction isInclusionDirective(_a) {\r\n    var value = _a.name.value;\r\n    return value === 'skip' || value === 'include';\r\n}\r\nexport function getInclusionDirectives(directives) {\r\n    var result = [];\r\n    if (directives && directives.length) {\r\n        directives.forEach(function (directive) {\r\n            if (!isInclusionDirective(directive))\r\n                return;\r\n            var directiveArguments = directive.arguments;\r\n            var directiveName = directive.name.value;\r\n            __DEV__ ? invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\") : invariant(directiveArguments && directiveArguments.length === 1, 40);\r\n            var ifArgument = directiveArguments[0];\r\n            __DEV__ ? invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\") : invariant(ifArgument.name && ifArgument.name.value === 'if', 41);\r\n            var ifValue = ifArgument.value;\r\n            __DEV__ ? invariant(ifValue &&\r\n                (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\") : invariant(ifValue &&\r\n                (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 42);\r\n            result.push({ directive: directive, ifArgument: ifArgument });\r\n        });\r\n    }\r\n    return result;\r\n}\r\n","import { __assign, __spreadArray } from \"tslib\";\r\nimport { invariant, InvariantError } from \"../globals/index.js\";\r\nexport function getFragmentQueryDocument(document, fragmentName) {\r\n    var actualFragmentName = fragmentName;\r\n    var fragments = [];\r\n    document.definitions.forEach(function (definition) {\r\n        if (definition.kind === 'OperationDefinition') {\r\n            throw __DEV__ ? new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\r\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.') : new InvariantError(43);\r\n        }\r\n        if (definition.kind === 'FragmentDefinition') {\r\n            fragments.push(definition);\r\n        }\r\n    });\r\n    if (typeof actualFragmentName === 'undefined') {\r\n        __DEV__ ? invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\") : invariant(fragments.length === 1, 44);\r\n        actualFragmentName = fragments[0].name.value;\r\n    }\r\n    var query = __assign(__assign({}, document), { definitions: __spreadArray([\r\n            {\r\n                kind: 'OperationDefinition',\r\n                operation: 'query',\r\n                selectionSet: {\r\n                    kind: 'SelectionSet',\r\n                    selections: [\r\n                        {\r\n                            kind: 'FragmentSpread',\r\n                            name: {\r\n                                kind: 'Name',\r\n                                value: actualFragmentName,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            }\r\n        ], document.definitions, true) });\r\n    return query;\r\n}\r\nexport function createFragmentMap(fragments) {\r\n    if (fragments === void 0) { fragments = []; }\r\n    var symTable = {};\r\n    fragments.forEach(function (fragment) {\r\n        symTable[fragment.name.value] = fragment;\r\n    });\r\n    return symTable;\r\n}\r\nexport function getFragmentFromSelection(selection, fragmentMap) {\r\n    switch (selection.kind) {\r\n        case 'InlineFragment':\r\n            return selection;\r\n        case 'FragmentSpread': {\r\n            var fragment = fragmentMap && fragmentMap[selection.name.value];\r\n            __DEV__ ? invariant(fragment, \"No fragment named \" + selection.name.value + \".\") : invariant(fragment, 45);\r\n            return fragment;\r\n        }\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n","import { invariant, InvariantError } from \"../globals/index.js\";\r\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\r\nexport function checkDocument(doc) {\r\n    __DEV__ ? invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\") : invariant(doc && doc.kind === 'Document', 46);\r\n    var operations = doc.definitions\r\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\r\n        .map(function (definition) {\r\n        if (definition.kind !== 'OperationDefinition') {\r\n            throw __DEV__ ? new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\") : new InvariantError(47);\r\n        }\r\n        return definition;\r\n    });\r\n    __DEV__ ? invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\") : invariant(operations.length <= 1, 48);\r\n    return doc;\r\n}\r\nexport function getOperationDefinition(doc) {\r\n    checkDocument(doc);\r\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\r\n}\r\nexport function getOperationName(doc) {\r\n    return (doc.definitions\r\n        .filter(function (definition) {\r\n        return definition.kind === 'OperationDefinition' && definition.name;\r\n    })\r\n        .map(function (x) { return x.name.value; })[0] || null);\r\n}\r\nexport function getFragmentDefinitions(doc) {\r\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\r\n}\r\nexport function getQueryDefinition(doc) {\r\n    var queryDef = getOperationDefinition(doc);\r\n    __DEV__ ? invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.') : invariant(queryDef && queryDef.operation === 'query', 49);\r\n    return queryDef;\r\n}\r\nexport function getFragmentDefinition(doc) {\r\n    __DEV__ ? invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\") : invariant(doc.kind === 'Document', 50);\r\n    __DEV__ ? invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.') : invariant(doc.definitions.length <= 1, 51);\r\n    var fragmentDef = doc.definitions[0];\r\n    __DEV__ ? invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.') : invariant(fragmentDef.kind === 'FragmentDefinition', 52);\r\n    return fragmentDef;\r\n}\r\nexport function getMainDefinition(queryDoc) {\r\n    checkDocument(queryDoc);\r\n    var fragmentDefinition;\r\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\r\n        var definition = _a[_i];\r\n        if (definition.kind === 'OperationDefinition') {\r\n            var operation = definition.operation;\r\n            if (operation === 'query' ||\r\n                operation === 'mutation' ||\r\n                operation === 'subscription') {\r\n                return definition;\r\n            }\r\n        }\r\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\r\n            fragmentDefinition = definition;\r\n        }\r\n    }\r\n    if (fragmentDefinition) {\r\n        return fragmentDefinition;\r\n    }\r\n    throw __DEV__ ? new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.') : new InvariantError(53);\r\n}\r\nexport function getDefaultValues(definition) {\r\n    var defaultValues = Object.create(null);\r\n    var defs = definition && definition.variableDefinitions;\r\n    if (defs && defs.length) {\r\n        defs.forEach(function (def) {\r\n            if (def.defaultValue) {\r\n                valueToObjectRepresentation(defaultValues, def.variable.name, def.defaultValue);\r\n            }\r\n        });\r\n    }\r\n    return defaultValues;\r\n}\r\n","import { InvariantError } from \"../globals/index.js\";\r\nimport { isNonNullObject } from \"../common/objects.js\";\r\nimport { getFragmentFromSelection } from \"./fragments.js\";\r\nexport function makeReference(id) {\r\n    return { __ref: String(id) };\r\n}\r\nexport function isReference(obj) {\r\n    return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\r\n}\r\nexport function isDocumentNode(value) {\r\n    return (isNonNullObject(value) &&\r\n        value.kind === \"Document\" &&\r\n        Array.isArray(value.definitions));\r\n}\r\nfunction isStringValue(value) {\r\n    return value.kind === 'StringValue';\r\n}\r\nfunction isBooleanValue(value) {\r\n    return value.kind === 'BooleanValue';\r\n}\r\nfunction isIntValue(value) {\r\n    return value.kind === 'IntValue';\r\n}\r\nfunction isFloatValue(value) {\r\n    return value.kind === 'FloatValue';\r\n}\r\nfunction isVariable(value) {\r\n    return value.kind === 'Variable';\r\n}\r\nfunction isObjectValue(value) {\r\n    return value.kind === 'ObjectValue';\r\n}\r\nfunction isListValue(value) {\r\n    return value.kind === 'ListValue';\r\n}\r\nfunction isEnumValue(value) {\r\n    return value.kind === 'EnumValue';\r\n}\r\nfunction isNullValue(value) {\r\n    return value.kind === 'NullValue';\r\n}\r\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\r\n    if (isIntValue(value) || isFloatValue(value)) {\r\n        argObj[name.value] = Number(value.value);\r\n    }\r\n    else if (isBooleanValue(value) || isStringValue(value)) {\r\n        argObj[name.value] = value.value;\r\n    }\r\n    else if (isObjectValue(value)) {\r\n        var nestedArgObj_1 = {};\r\n        value.fields.map(function (obj) {\r\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\r\n        });\r\n        argObj[name.value] = nestedArgObj_1;\r\n    }\r\n    else if (isVariable(value)) {\r\n        var variableValue = (variables || {})[value.name.value];\r\n        argObj[name.value] = variableValue;\r\n    }\r\n    else if (isListValue(value)) {\r\n        argObj[name.value] = value.values.map(function (listValue) {\r\n            var nestedArgArrayObj = {};\r\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\r\n            return nestedArgArrayObj[name.value];\r\n        });\r\n    }\r\n    else if (isEnumValue(value)) {\r\n        argObj[name.value] = value.value;\r\n    }\r\n    else if (isNullValue(value)) {\r\n        argObj[name.value] = null;\r\n    }\r\n    else {\r\n        throw __DEV__ ? new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\r\n            'is not supported. Use variables instead of inline arguments to ' +\r\n            'overcome this limitation.') : new InvariantError(54);\r\n    }\r\n}\r\nexport function storeKeyNameFromField(field, variables) {\r\n    var directivesObj = null;\r\n    if (field.directives) {\r\n        directivesObj = {};\r\n        field.directives.forEach(function (directive) {\r\n            directivesObj[directive.name.value] = {};\r\n            if (directive.arguments) {\r\n                directive.arguments.forEach(function (_a) {\r\n                    var name = _a.name, value = _a.value;\r\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\r\n                });\r\n            }\r\n        });\r\n    }\r\n    var argObj = null;\r\n    if (field.arguments && field.arguments.length) {\r\n        argObj = {};\r\n        field.arguments.forEach(function (_a) {\r\n            var name = _a.name, value = _a.value;\r\n            return valueToObjectRepresentation(argObj, name, value, variables);\r\n        });\r\n    }\r\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\r\n}\r\nvar KNOWN_DIRECTIVES = [\r\n    'connection',\r\n    'include',\r\n    'skip',\r\n    'client',\r\n    'rest',\r\n    'export',\r\n];\r\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\r\n    if (args &&\r\n        directives &&\r\n        directives['connection'] &&\r\n        directives['connection']['key']) {\r\n        if (directives['connection']['filter'] &&\r\n            directives['connection']['filter'].length > 0) {\r\n            var filterKeys = directives['connection']['filter']\r\n                ? directives['connection']['filter']\r\n                : [];\r\n            filterKeys.sort();\r\n            var filteredArgs_1 = {};\r\n            filterKeys.forEach(function (key) {\r\n                filteredArgs_1[key] = args[key];\r\n            });\r\n            return directives['connection']['key'] + \"(\" + stringify(filteredArgs_1) + \")\";\r\n        }\r\n        else {\r\n            return directives['connection']['key'];\r\n        }\r\n    }\r\n    var completeFieldName = fieldName;\r\n    if (args) {\r\n        var stringifiedArgs = stringify(args);\r\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\r\n    }\r\n    if (directives) {\r\n        Object.keys(directives).forEach(function (key) {\r\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\r\n                return;\r\n            if (directives[key] && Object.keys(directives[key]).length) {\r\n                completeFieldName += \"@\" + key + \"(\" + stringify(directives[key]) + \")\";\r\n            }\r\n            else {\r\n                completeFieldName += \"@\" + key;\r\n            }\r\n        });\r\n    }\r\n    return completeFieldName;\r\n}, {\r\n    setStringify: function (s) {\r\n        var previous = stringify;\r\n        stringify = s;\r\n        return previous;\r\n    },\r\n});\r\nvar stringify = function defaultStringify(value) {\r\n    return JSON.stringify(value, stringifyReplacer);\r\n};\r\nfunction stringifyReplacer(_key, value) {\r\n    if (isNonNullObject(value) && !Array.isArray(value)) {\r\n        value = Object.keys(value).sort().reduce(function (copy, key) {\r\n            copy[key] = value[key];\r\n            return copy;\r\n        }, {});\r\n    }\r\n    return value;\r\n}\r\nexport function argumentsObjectFromField(field, variables) {\r\n    if (field.arguments && field.arguments.length) {\r\n        var argObj_1 = {};\r\n        field.arguments.forEach(function (_a) {\r\n            var name = _a.name, value = _a.value;\r\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\r\n        });\r\n        return argObj_1;\r\n    }\r\n    return null;\r\n}\r\nexport function resultKeyNameFromField(field) {\r\n    return field.alias ? field.alias.value : field.name.value;\r\n}\r\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\r\n    if (typeof result.__typename === 'string') {\r\n        return result.__typename;\r\n    }\r\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\r\n        var selection = _a[_i];\r\n        if (isField(selection)) {\r\n            if (selection.name.value === '__typename') {\r\n                return result[resultKeyNameFromField(selection)];\r\n            }\r\n        }\r\n        else {\r\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\r\n            if (typeof typename === 'string') {\r\n                return typename;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function isField(selection) {\r\n    return selection.kind === 'Field';\r\n}\r\nexport function isInlineFragment(selection) {\r\n    return selection.kind === 'InlineFragment';\r\n}\r\n","export function filterInPlace(array, test, context) {\r\n    var target = 0;\r\n    array.forEach(function (elem, i) {\r\n        if (test.call(this, elem, i, array)) {\r\n            array[target++] = elem;\r\n        }\r\n    }, context);\r\n    array.length = target;\r\n    return array;\r\n}\r\n","import { __assign, __spreadArray } from \"tslib\";\r\nimport { invariant } from \"../globals/index.js\";\r\nimport { visit, } from 'graphql';\r\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, } from \"./getFromAST.js\";\r\nimport { filterInPlace } from \"../common/filterInPlace.js\";\r\nimport { isField, isInlineFragment } from \"./storeUtils.js\";\r\nimport { createFragmentMap, } from \"./fragments.js\";\r\nvar TYPENAME_FIELD = {\r\n    kind: 'Field',\r\n    name: {\r\n        kind: 'Name',\r\n        value: '__typename',\r\n    },\r\n};\r\nfunction isEmpty(op, fragments) {\r\n    return op.selectionSet.selections.every(function (selection) {\r\n        return selection.kind === 'FragmentSpread' &&\r\n            isEmpty(fragments[selection.name.value], fragments);\r\n    });\r\n}\r\nfunction nullIfDocIsEmpty(doc) {\r\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\r\n        ? null\r\n        : doc;\r\n}\r\nfunction getDirectiveMatcher(directives) {\r\n    return function directiveMatcher(directive) {\r\n        return directives.some(function (dir) {\r\n            return (dir.name && dir.name === directive.name.value) ||\r\n                (dir.test && dir.test(directive));\r\n        });\r\n    };\r\n}\r\nexport function removeDirectivesFromDocument(directives, doc) {\r\n    var variablesInUse = Object.create(null);\r\n    var variablesToRemove = [];\r\n    var fragmentSpreadsInUse = Object.create(null);\r\n    var fragmentSpreadsToRemove = [];\r\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\r\n        Variable: {\r\n            enter: function (node, _key, parent) {\r\n                if (parent.kind !== 'VariableDefinition') {\r\n                    variablesInUse[node.name.value] = true;\r\n                }\r\n            },\r\n        },\r\n        Field: {\r\n            enter: function (node) {\r\n                if (directives && node.directives) {\r\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\r\n                    if (shouldRemoveField &&\r\n                        node.directives &&\r\n                        node.directives.some(getDirectiveMatcher(directives))) {\r\n                        if (node.arguments) {\r\n                            node.arguments.forEach(function (arg) {\r\n                                if (arg.value.kind === 'Variable') {\r\n                                    variablesToRemove.push({\r\n                                        name: arg.value.name.value,\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        if (node.selectionSet) {\r\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\r\n                                fragmentSpreadsToRemove.push({\r\n                                    name: frag.name.value,\r\n                                });\r\n                            });\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        FragmentSpread: {\r\n            enter: function (node) {\r\n                fragmentSpreadsInUse[node.name.value] = true;\r\n            },\r\n        },\r\n        Directive: {\r\n            enter: function (node) {\r\n                if (getDirectiveMatcher(directives)(node)) {\r\n                    return null;\r\n                }\r\n            },\r\n        },\r\n    }));\r\n    if (modifiedDoc &&\r\n        filterInPlace(variablesToRemove, function (v) { return !!v.name && !variablesInUse[v.name]; }).length) {\r\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\r\n    }\r\n    if (modifiedDoc &&\r\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !!fs.name && !fragmentSpreadsInUse[fs.name]; })\r\n            .length) {\r\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\r\n    }\r\n    return modifiedDoc;\r\n}\r\nexport var addTypenameToDocument = Object.assign(function (doc) {\r\n    return visit(checkDocument(doc), {\r\n        SelectionSet: {\r\n            enter: function (node, _key, parent) {\r\n                if (parent &&\r\n                    parent.kind === 'OperationDefinition') {\r\n                    return;\r\n                }\r\n                var selections = node.selections;\r\n                if (!selections) {\r\n                    return;\r\n                }\r\n                var skip = selections.some(function (selection) {\r\n                    return (isField(selection) &&\r\n                        (selection.name.value === '__typename' ||\r\n                            selection.name.value.lastIndexOf('__', 0) === 0));\r\n                });\r\n                if (skip) {\r\n                    return;\r\n                }\r\n                var field = parent;\r\n                if (isField(field) &&\r\n                    field.directives &&\r\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\r\n                    return;\r\n                }\r\n                return __assign(__assign({}, node), { selections: __spreadArray(__spreadArray([], selections, true), [TYPENAME_FIELD], false) });\r\n            },\r\n        },\r\n    });\r\n}, {\r\n    added: function (field) {\r\n        return field === TYPENAME_FIELD;\r\n    },\r\n});\r\nvar connectionRemoveConfig = {\r\n    test: function (directive) {\r\n        var willRemove = directive.name.value === 'connection';\r\n        if (willRemove) {\r\n            if (!directive.arguments ||\r\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\r\n                __DEV__ && invariant.warn('Removing an @connection directive even though it does not have a key. ' +\r\n                    'You may want to use the key parameter to specify a store key.');\r\n            }\r\n        }\r\n        return willRemove;\r\n    },\r\n};\r\nexport function removeConnectionDirectiveFromDocument(doc) {\r\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\r\n}\r\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\r\n    if (nestedCheck === void 0) { nestedCheck = true; }\r\n    return (!!selectionSet &&\r\n        selectionSet.selections &&\r\n        selectionSet.selections.some(function (selection) {\r\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\r\n        }));\r\n}\r\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\r\n    if (nestedCheck === void 0) { nestedCheck = true; }\r\n    if (!isField(selection)) {\r\n        return true;\r\n    }\r\n    if (!selection.directives) {\r\n        return false;\r\n    }\r\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\r\n        (nestedCheck &&\r\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\r\n}\r\nfunction getArgumentMatcher(config) {\r\n    return function argumentMatcher(argument) {\r\n        return config.some(function (aConfig) {\r\n            return argument.value &&\r\n                argument.value.kind === 'Variable' &&\r\n                argument.value.name &&\r\n                (aConfig.name === argument.value.name.value ||\r\n                    (aConfig.test && aConfig.test(argument)));\r\n        });\r\n    };\r\n}\r\nexport function removeArgumentsFromDocument(config, doc) {\r\n    var argMatcher = getArgumentMatcher(config);\r\n    return nullIfDocIsEmpty(visit(doc, {\r\n        OperationDefinition: {\r\n            enter: function (node) {\r\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(function (varDef) {\r\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\r\n                    }) : [] });\r\n            },\r\n        },\r\n        Field: {\r\n            enter: function (node) {\r\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\r\n                if (shouldRemoveField) {\r\n                    var argMatchCount_1 = 0;\r\n                    if (node.arguments) {\r\n                        node.arguments.forEach(function (arg) {\r\n                            if (argMatcher(arg)) {\r\n                                argMatchCount_1 += 1;\r\n                            }\r\n                        });\r\n                    }\r\n                    if (argMatchCount_1 === 1) {\r\n                        return null;\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        Argument: {\r\n            enter: function (node) {\r\n                if (argMatcher(node)) {\r\n                    return null;\r\n                }\r\n            },\r\n        },\r\n    }));\r\n}\r\nexport function removeFragmentSpreadFromDocument(config, doc) {\r\n    function enter(node) {\r\n        if (config.some(function (def) { return def.name === node.name.value; })) {\r\n            return null;\r\n        }\r\n    }\r\n    return nullIfDocIsEmpty(visit(doc, {\r\n        FragmentSpread: { enter: enter },\r\n        FragmentDefinition: { enter: enter },\r\n    }));\r\n}\r\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\r\n    var allFragments = [];\r\n    selectionSet.selections.forEach(function (selection) {\r\n        if ((isField(selection) || isInlineFragment(selection)) &&\r\n            selection.selectionSet) {\r\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\r\n        }\r\n        else if (selection.kind === 'FragmentSpread') {\r\n            allFragments.push(selection);\r\n        }\r\n    });\r\n    return allFragments;\r\n}\r\nexport function buildQueryFromSelectionSet(document) {\r\n    var definition = getMainDefinition(document);\r\n    var definitionOperation = definition.operation;\r\n    if (definitionOperation === 'query') {\r\n        return document;\r\n    }\r\n    var modifiedDoc = visit(document, {\r\n        OperationDefinition: {\r\n            enter: function (node) {\r\n                return __assign(__assign({}, node), { operation: 'query' });\r\n            },\r\n        },\r\n    });\r\n    return modifiedDoc;\r\n}\r\nexport function removeClientSetsFromDocument(document) {\r\n    checkDocument(document);\r\n    var modifiedDoc = removeDirectivesFromDocument([\r\n        {\r\n            test: function (directive) { return directive.name.value === 'client'; },\r\n            remove: true,\r\n        },\r\n    ], document);\r\n    if (modifiedDoc) {\r\n        modifiedDoc = visit(modifiedDoc, {\r\n            FragmentDefinition: {\r\n                enter: function (node) {\r\n                    if (node.selectionSet) {\r\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\r\n                            return isField(selection) && selection.name.value === '__typename';\r\n                        });\r\n                        if (isTypenameOnly) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        });\r\n    }\r\n    return modifiedDoc;\r\n}\r\n","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\r\n\r\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\r\n\r\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\r\n\n","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar fnToStr = Function.prototype.toString;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = definedKeys(a);\r\n            var bKeys = definedKeys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Uint16Array]':\r\n        case '[object Uint8Array]': // Buffer, in Node.js.\r\n        case '[object Uint32Array]':\r\n        case '[object Int32Array]':\r\n        case '[object Int8Array]':\r\n        case '[object Int16Array]':\r\n        case '[object ArrayBuffer]':\r\n            // DataView doesn't need these conversions, but the equality check is\r\n            // otherwise the same.\r\n            a = new Uint8Array(a);\r\n            b = new Uint8Array(b);\r\n        // Fall through...\r\n        case '[object DataView]': {\r\n            var len = a.byteLength;\r\n            if (len === b.byteLength) {\r\n                while (len-- && a[len] === b[len]) {\r\n                    // Keep looping as long as the bytes are equal.\r\n                }\r\n            }\r\n            return len === -1;\r\n        }\r\n        case '[object AsyncFunction]':\r\n        case '[object GeneratorFunction]':\r\n        case '[object AsyncGeneratorFunction]':\r\n        case '[object Function]': {\r\n            var aCode = fnToStr.call(a);\r\n            if (aCode !== fnToStr.call(b)) {\r\n                return false;\r\n            }\r\n            // We consider non-native functions equal if they have the same code\r\n            // (native functions require === because their code is censored).\r\n            // Note that this behavior is not entirely sound, since !== function\r\n            // objects with the same code can behave differently depending on\r\n            // their closure scope. However, any function can behave differently\r\n            // depending on the values of its input arguments (including this)\r\n            // and its calling context (including its closure scope), even\r\n            // though the function object is === to itself; and it is entirely\r\n            // possible for functions that are not === to behave exactly the\r\n            // same under all conceivable circumstances. Because none of these\r\n            // factors are statically decidable in JavaScript, JS function\r\n            // equality is not well-defined. This ambiguity allows us to\r\n            // consider the best possible heuristic among various imperfect\r\n            // options, and equating non-native functions that have the same\r\n            // code has enormous practical benefits, such as when comparing\r\n            // functions that are repeatedly passed as fresh function\r\n            // expressions within objects that are otherwise deeply equal. Since\r\n            // any function created from the same syntactic expression (in the\r\n            // same code location) will always stringify to the same code\r\n            // according to fnToStr.call, we can reasonably expect these\r\n            // repeatedly passed function expressions to have the same code, and\r\n            // thus behave \"the same\" (with all the caveats mentioned above),\r\n            // even though the runtime function objects are !== to one another.\r\n            return !endsWith(aCode, nativeCodeSuffix);\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction definedKeys(obj) {\r\n    // Remember that the second argument to Array.prototype.filter will be\r\n    // used as `this` within the callback function.\r\n    return Object.keys(obj).filter(isDefinedKey, obj);\r\n}\r\nfunction isDefinedKey(key) {\r\n    return this[key] !== void 0;\r\n}\r\nvar nativeCodeSuffix = \"{ [native code] }\";\r\nfunction endsWith(full, suffix) {\r\n    var fromIndex = full.length - suffix.length;\r\n    return fromIndex >= 0 &&\r\n        full.indexOf(suffix, fromIndex) === fromIndex;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\r\n\r\nexport { equal as default, equal };\r\n\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\r\n// object keys weakly, yet can also hold non-object keys, unlike the\r\n// native `WeakMap`.\r\n// If no makeData function is supplied, the looked-up data will be an empty,\r\n// null-prototype Object.\r\nvar defaultMakeData = function () { return Object.create(null); };\r\n// Useful for processing arguments objects as well as arrays.\r\nvar _a = Array.prototype, forEach = _a.forEach, slice = _a.slice;\r\nvar Trie = /** @class */ (function () {\r\n    function Trie(weakness, makeData) {\r\n        if (weakness === void 0) { weakness = true; }\r\n        if (makeData === void 0) { makeData = defaultMakeData; }\r\n        this.weakness = weakness;\r\n        this.makeData = makeData;\r\n    }\r\n    Trie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    Trie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        forEach.call(array, function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = this.makeData(slice.call(array)));\r\n    };\r\n    Trie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new Trie(this.weakness, this.makeData));\r\n        return child;\r\n    };\r\n    return Trie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { Trie };\r\n\n","import { ApolloLink } from \"./ApolloLink.js\";\r\nexport var execute = ApolloLink.execute;\r\n","export function compact() {\r\n    var objects = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        objects[_i] = arguments[_i];\r\n    }\r\n    var result = Object.create(null);\r\n    objects.forEach(function (obj) {\r\n        if (!obj)\r\n            return;\r\n        Object.keys(obj).forEach(function (key) {\r\n            var value = obj[key];\r\n            if (value !== void 0) {\r\n                result[key] = value;\r\n            }\r\n        });\r\n    });\r\n    return result;\r\n}\r\n","export var version = '3.4.11';\r\n","import { InvariantError } from \"../../utilities/globals/index.js\";\r\nexport var serializeFetchParameter = function (p, label) {\r\n    var serialized;\r\n    try {\r\n        serialized = JSON.stringify(p);\r\n    }\r\n    catch (e) {\r\n        var parseError = __DEV__ ? new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message) : new InvariantError(23);\r\n        parseError.parseError = e;\r\n        throw parseError;\r\n    }\r\n    return serialized;\r\n};\r\n","export var throwServerError = function (response, result, message) {\r\n    var error = new Error(message);\r\n    error.name = 'ServerError';\r\n    error.response = response;\r\n    error.statusCode = response.status;\r\n    error.result = result;\r\n    throw error;\r\n};\r\n","import { throwServerError } from \"../utils/index.js\";\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function parseAndCheckHttpResponse(operations) {\r\n    return function (response) { return response\r\n        .text()\r\n        .then(function (bodyText) {\r\n        try {\r\n            return JSON.parse(bodyText);\r\n        }\r\n        catch (err) {\r\n            var parseError = err;\r\n            parseError.name = 'ServerParseError';\r\n            parseError.response = response;\r\n            parseError.statusCode = response.status;\r\n            parseError.bodyText = bodyText;\r\n            throw parseError;\r\n        }\r\n    })\r\n        .then(function (result) {\r\n        if (response.status >= 300) {\r\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\r\n        }\r\n        if (!Array.isArray(result) &&\r\n            !hasOwnProperty.call(result, 'data') &&\r\n            !hasOwnProperty.call(result, 'errors')) {\r\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\r\n                ? operations.map(function (op) { return op.operationName; })\r\n                : operations.operationName) + \"'.\");\r\n        }\r\n        return result;\r\n    }); };\r\n}\r\n","import { __assign } from \"tslib\";\r\nimport { print } from 'graphql';\r\nvar defaultHttpOptions = {\r\n    includeQuery: true,\r\n    includeExtensions: false,\r\n};\r\nvar defaultHeaders = {\r\n    accept: '*/*',\r\n    'content-type': 'application/json',\r\n};\r\nvar defaultOptions = {\r\n    method: 'POST',\r\n};\r\nexport var fallbackHttpConfig = {\r\n    http: defaultHttpOptions,\r\n    headers: defaultHeaders,\r\n    options: defaultOptions,\r\n};\r\nexport var selectHttpOptionsAndBody = function (operation, fallbackConfig) {\r\n    var configs = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        configs[_i - 2] = arguments[_i];\r\n    }\r\n    var options = __assign(__assign({}, fallbackConfig.options), { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\r\n    var http = fallbackConfig.http || {};\r\n    configs.forEach(function (config) {\r\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), headersToLowerCase(config.headers)) });\r\n        if (config.credentials)\r\n            options.credentials = config.credentials;\r\n        http = __assign(__assign({}, http), config.http);\r\n    });\r\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\r\n    var body = { operationName: operationName, variables: variables };\r\n    if (http.includeExtensions)\r\n        body.extensions = extensions;\r\n    if (http.includeQuery)\r\n        body.query = print(query);\r\n    return {\r\n        options: options,\r\n        body: body,\r\n    };\r\n};\r\nfunction headersToLowerCase(headers) {\r\n    if (headers) {\r\n        var normalized_1 = Object.create(null);\r\n        Object.keys(Object(headers)).forEach(function (name) {\r\n            normalized_1[name.toLowerCase()] = headers[name];\r\n        });\r\n        return normalized_1;\r\n    }\r\n    return headers;\r\n}\r\n","import { Observable } from \"../../utilities/index.js\";\r\nexport function fromError(errorValue) {\r\n    return new Observable(function (observer) {\r\n        observer.error(errorValue);\r\n    });\r\n}\r\n","import { __assign, __rest } from \"tslib\";\r\nimport \"../../utilities/globals/index.js\";\r\nimport { visit } from 'graphql';\r\nimport { ApolloLink } from \"../core/index.js\";\r\nimport { Observable } from \"../../utilities/index.js\";\r\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\r\nimport { selectURI } from \"./selectURI.js\";\r\nimport { parseAndCheckHttpResponse } from \"./parseAndCheckHttpResponse.js\";\r\nimport { checkFetcher } from \"./checkFetcher.js\";\r\nimport { selectHttpOptionsAndBody, fallbackHttpConfig } from \"./selectHttpOptionsAndBody.js\";\r\nimport { createSignalIfSupported } from \"./createSignalIfSupported.js\";\r\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\r\nimport { fromError } from \"../utils/index.js\";\r\nimport { maybe } from \"../../utilities/index.js\";\r\nvar backupFetch = maybe(function () { return fetch; });\r\nexport var createHttpLink = function (linkOptions) {\r\n    if (linkOptions === void 0) { linkOptions = {}; }\r\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, preferredFetch = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, _b = linkOptions.includeUnusedVariables, includeUnusedVariables = _b === void 0 ? false : _b, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\", \"includeUnusedVariables\"]);\r\n    if (__DEV__) {\r\n        checkFetcher(preferredFetch || backupFetch);\r\n    }\r\n    var linkConfig = {\r\n        http: { includeExtensions: includeExtensions },\r\n        options: requestOptions.fetchOptions,\r\n        credentials: requestOptions.credentials,\r\n        headers: requestOptions.headers,\r\n    };\r\n    return new ApolloLink(function (operation) {\r\n        var chosenURI = selectURI(operation, uri);\r\n        var context = operation.getContext();\r\n        var clientAwarenessHeaders = {};\r\n        if (context.clientAwareness) {\r\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\r\n            if (name_1) {\r\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\r\n            }\r\n            if (version) {\r\n                clientAwarenessHeaders['apollographql-client-version'] = version;\r\n            }\r\n        }\r\n        var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\r\n        var contextConfig = {\r\n            http: context.http,\r\n            options: context.fetchOptions,\r\n            credentials: context.credentials,\r\n            headers: contextHeaders,\r\n        };\r\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\r\n        if (body.variables && !includeUnusedVariables) {\r\n            var unusedNames_1 = new Set(Object.keys(body.variables));\r\n            visit(operation.query, {\r\n                Variable: function (node, _key, parent) {\r\n                    if (parent && parent.kind !== 'VariableDefinition') {\r\n                        unusedNames_1.delete(node.name.value);\r\n                    }\r\n                },\r\n            });\r\n            if (unusedNames_1.size) {\r\n                body.variables = __assign({}, body.variables);\r\n                unusedNames_1.forEach(function (name) {\r\n                    delete body.variables[name];\r\n                });\r\n            }\r\n        }\r\n        var controller;\r\n        if (!options.signal) {\r\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\r\n            controller = _controller;\r\n            if (controller)\r\n                options.signal = signal;\r\n        }\r\n        var definitionIsMutation = function (d) {\r\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\r\n        };\r\n        if (useGETForQueries &&\r\n            !operation.query.definitions.some(definitionIsMutation)) {\r\n            options.method = 'GET';\r\n        }\r\n        if (options.method === 'GET') {\r\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\r\n            if (parseError) {\r\n                return fromError(parseError);\r\n            }\r\n            chosenURI = newURI;\r\n        }\r\n        else {\r\n            try {\r\n                options.body = serializeFetchParameter(body, 'Payload');\r\n            }\r\n            catch (parseError) {\r\n                return fromError(parseError);\r\n            }\r\n        }\r\n        return new Observable(function (observer) {\r\n            var currentFetch = preferredFetch || maybe(function () { return fetch; }) || backupFetch;\r\n            currentFetch(chosenURI, options)\r\n                .then(function (response) {\r\n                operation.setContext({ response: response });\r\n                return response;\r\n            })\r\n                .then(parseAndCheckHttpResponse(operation))\r\n                .then(function (result) {\r\n                observer.next(result);\r\n                observer.complete();\r\n                return result;\r\n            })\r\n                .catch(function (err) {\r\n                if (err.name === 'AbortError')\r\n                    return;\r\n                if (err.result && err.result.errors && err.result.data) {\r\n                    observer.next(err.result);\r\n                }\r\n                observer.error(err);\r\n            });\r\n            return function () {\r\n                if (controller)\r\n                    controller.abort();\r\n            };\r\n        });\r\n    });\r\n};\r\n","import { __extends } from \"tslib\";\r\nimport { ApolloLink } from \"../core/index.js\";\r\nimport { createHttpLink } from \"./createHttpLink.js\";\r\nvar HttpLink = (function (_super) {\r\n    __extends(HttpLink, _super);\r\n    function HttpLink(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, createHttpLink(options).request) || this;\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    return HttpLink;\r\n}(ApolloLink));\r\nexport { HttpLink };\r\n","import { InvariantError } from \"../../utilities/globals/index.js\";\r\nexport var checkFetcher = function (fetcher) {\r\n    if (!fetcher && typeof fetch === 'undefined') {\r\n        throw __DEV__ ? new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \") : new InvariantError(22);\r\n    }\r\n};\r\n","export var selectURI = function (operation, fallbackURI) {\r\n    var context = operation.getContext();\r\n    var contextURI = context.uri;\r\n    if (contextURI) {\r\n        return contextURI;\r\n    }\r\n    else if (typeof fallbackURI === 'function') {\r\n        return fallbackURI(operation);\r\n    }\r\n    else {\r\n        return fallbackURI || '/graphql';\r\n    }\r\n};\r\n","export var createSignalIfSupported = function () {\r\n    if (typeof AbortController === 'undefined')\r\n        return { controller: false, signal: false };\r\n    var controller = new AbortController();\r\n    var signal = controller.signal;\r\n    return { controller: controller, signal: signal };\r\n};\r\n","import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\r\nexport function rewriteURIForGET(chosenURI, body) {\r\n    var queryParams = [];\r\n    var addQueryParam = function (key, value) {\r\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\r\n    };\r\n    if ('query' in body) {\r\n        addQueryParam('query', body.query);\r\n    }\r\n    if (body.operationName) {\r\n        addQueryParam('operationName', body.operationName);\r\n    }\r\n    if (body.variables) {\r\n        var serializedVariables = void 0;\r\n        try {\r\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\r\n        }\r\n        catch (parseError) {\r\n            return { parseError: parseError };\r\n        }\r\n        addQueryParam('variables', serializedVariables);\r\n    }\r\n    if (body.extensions) {\r\n        var serializedExtensions = void 0;\r\n        try {\r\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\r\n        }\r\n        catch (parseError) {\r\n            return { parseError: parseError };\r\n        }\r\n        addQueryParam('extensions', serializedExtensions);\r\n    }\r\n    var fragment = '', preFragment = chosenURI;\r\n    var fragmentStart = chosenURI.indexOf('#');\r\n    if (fragmentStart !== -1) {\r\n        fragment = chosenURI.substr(fragmentStart);\r\n        preFragment = chosenURI.substr(0, fragmentStart);\r\n    }\r\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\r\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\r\n    return { newURI: newURI };\r\n}\r\n","import { Observable } from \"./Observable.js\";\r\nexport function asyncMap(observable, mapFn, catchFn) {\r\n    return new Observable(function (observer) {\r\n        var next = observer.next, error = observer.error, complete = observer.complete;\r\n        var activeCallbackCount = 0;\r\n        var completed = false;\r\n        var promiseQueue = {\r\n            then: function (callback) {\r\n                return new Promise(function (resolve) { return resolve(callback()); });\r\n            },\r\n        };\r\n        function makeCallback(examiner, delegate) {\r\n            if (examiner) {\r\n                return function (arg) {\r\n                    ++activeCallbackCount;\r\n                    var both = function () { return examiner(arg); };\r\n                    promiseQueue = promiseQueue.then(both, both).then(function (result) {\r\n                        --activeCallbackCount;\r\n                        next && next.call(observer, result);\r\n                        if (completed) {\r\n                            handler.complete();\r\n                        }\r\n                    }, function (error) {\r\n                        --activeCallbackCount;\r\n                        throw error;\r\n                    }).catch(function (caught) {\r\n                        error && error.call(observer, caught);\r\n                    });\r\n                };\r\n            }\r\n            else {\r\n                return function (arg) { return delegate && delegate.call(observer, arg); };\r\n            }\r\n        }\r\n        var handler = {\r\n            next: makeCallback(mapFn, next),\r\n            error: makeCallback(catchFn, error),\r\n            complete: function () {\r\n                completed = true;\r\n                if (!activeCallbackCount) {\r\n                    complete && complete.call(observer);\r\n                }\r\n            },\r\n        };\r\n        var sub = observable.subscribe(handler);\r\n        return function () { return sub.unsubscribe(); };\r\n    });\r\n}\r\n","export function graphQLResultHasError(result) {\r\n    return (result.errors && result.errors.length > 0) || false;\r\n}\r\n","export function iterateObserversSafely(observers, method, argument) {\r\n    var observersWithMethod = [];\r\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\r\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\r\n}\r\n","import { Observable } from \"./Observable.js\";\r\nexport function fixObservableSubclass(subclass) {\r\n    function set(key) {\r\n        Object.defineProperty(subclass, key, { value: Observable });\r\n    }\r\n    if (typeof Symbol === \"function\" && Symbol.species) {\r\n        set(Symbol.species);\r\n    }\r\n    set(\"@@species\");\r\n    return subclass;\r\n}\r\n","import { __extends } from \"tslib\";\r\nimport { Observable } from \"./Observable.js\";\r\nimport { iterateObserversSafely } from \"./iteration.js\";\r\nimport { fixObservableSubclass } from \"./subclassing.js\";\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\nvar Concast = (function (_super) {\r\n    __extends(Concast, _super);\r\n    function Concast(sources) {\r\n        var _this = _super.call(this, function (observer) {\r\n            _this.addObserver(observer);\r\n            return function () { return _this.removeObserver(observer); };\r\n        }) || this;\r\n        _this.observers = new Set();\r\n        _this.addCount = 0;\r\n        _this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n        _this.handlers = {\r\n            next: function (result) {\r\n                if (_this.sub !== null) {\r\n                    _this.latest = [\"next\", result];\r\n                    iterateObserversSafely(_this.observers, \"next\", result);\r\n                }\r\n            },\r\n            error: function (error) {\r\n                var sub = _this.sub;\r\n                if (sub !== null) {\r\n                    if (sub)\r\n                        setTimeout(function () { return sub.unsubscribe(); });\r\n                    _this.sub = null;\r\n                    _this.latest = [\"error\", error];\r\n                    _this.reject(error);\r\n                    iterateObserversSafely(_this.observers, \"error\", error);\r\n                }\r\n            },\r\n            complete: function () {\r\n                if (_this.sub !== null) {\r\n                    var value = _this.sources.shift();\r\n                    if (!value) {\r\n                        _this.sub = null;\r\n                        if (_this.latest &&\r\n                            _this.latest[0] === \"next\") {\r\n                            _this.resolve(_this.latest[1]);\r\n                        }\r\n                        else {\r\n                            _this.resolve();\r\n                        }\r\n                        iterateObserversSafely(_this.observers, \"complete\");\r\n                    }\r\n                    else if (isPromiseLike(value)) {\r\n                        value.then(function (obs) { return _this.sub = obs.subscribe(_this.handlers); });\r\n                    }\r\n                    else {\r\n                        _this.sub = value.subscribe(_this.handlers);\r\n                    }\r\n                }\r\n            },\r\n        };\r\n        _this.cancel = function (reason) {\r\n            _this.reject(reason);\r\n            _this.sources = [];\r\n            _this.handlers.complete();\r\n        };\r\n        _this.promise.catch(function (_) { });\r\n        if (typeof sources === \"function\") {\r\n            sources = [new Observable(sources)];\r\n        }\r\n        if (isPromiseLike(sources)) {\r\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\r\n        }\r\n        else {\r\n            _this.start(sources);\r\n        }\r\n        return _this;\r\n    }\r\n    Concast.prototype.start = function (sources) {\r\n        if (this.sub !== void 0)\r\n            return;\r\n        this.sources = Array.from(sources);\r\n        this.handlers.complete();\r\n    };\r\n    Concast.prototype.deliverLastMessage = function (observer) {\r\n        if (this.latest) {\r\n            var nextOrError = this.latest[0];\r\n            var method = observer[nextOrError];\r\n            if (method) {\r\n                method.call(observer, this.latest[1]);\r\n            }\r\n            if (this.sub === null &&\r\n                nextOrError === \"next\" &&\r\n                observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    };\r\n    Concast.prototype.addObserver = function (observer) {\r\n        if (!this.observers.has(observer)) {\r\n            this.deliverLastMessage(observer);\r\n            this.observers.add(observer);\r\n            ++this.addCount;\r\n        }\r\n    };\r\n    Concast.prototype.removeObserver = function (observer, quietly) {\r\n        if (this.observers.delete(observer) &&\r\n            --this.addCount < 1 &&\r\n            !quietly) {\r\n            this.handlers.error(new Error(\"Observable cancelled prematurely\"));\r\n        }\r\n    };\r\n    Concast.prototype.cleanup = function (callback) {\r\n        var _this = this;\r\n        var called = false;\r\n        var once = function () {\r\n            if (!called) {\r\n                called = true;\r\n                _this.observers.delete(observer);\r\n                callback();\r\n            }\r\n        };\r\n        var observer = {\r\n            next: once,\r\n            error: once,\r\n            complete: once,\r\n        };\r\n        var count = this.addCount;\r\n        this.addObserver(observer);\r\n        this.addCount = count;\r\n    };\r\n    return Concast;\r\n}(Observable));\r\nexport { Concast };\r\nfixObservableSubclass(Concast);\r\n","export function isNonEmptyArray(value) {\r\n    return Array.isArray(value) && value.length > 0;\r\n}\r\n","import { __extends } from \"tslib\";\r\nimport \"../utilities/globals/index.js\";\r\nimport { isNonEmptyArray } from \"../utilities/index.js\";\r\nexport function isApolloError(err) {\r\n    return err.hasOwnProperty('graphQLErrors');\r\n}\r\nvar generateErrorMessage = function (err) {\r\n    var message = '';\r\n    if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\r\n        var errors = (err.graphQLErrors || [])\r\n            .concat(err.clientErrors || []);\r\n        errors.forEach(function (error) {\r\n            var errorMessage = error\r\n                ? error.message\r\n                : 'Error message not found.';\r\n            message += errorMessage + \"\\n\";\r\n        });\r\n    }\r\n    if (err.networkError) {\r\n        message += err.networkError.message + \"\\n\";\r\n    }\r\n    message = message.replace(/\\n$/, '');\r\n    return message;\r\n};\r\nvar ApolloError = (function (_super) {\r\n    __extends(ApolloError, _super);\r\n    function ApolloError(_a) {\r\n        var graphQLErrors = _a.graphQLErrors, clientErrors = _a.clientErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        _this.graphQLErrors = graphQLErrors || [];\r\n        _this.clientErrors = clientErrors || [];\r\n        _this.networkError = networkError || null;\r\n        _this.message = errorMessage || generateErrorMessage(_this);\r\n        _this.extraInfo = extraInfo;\r\n        _this.__proto__ = ApolloError.prototype;\r\n        return _this;\r\n    }\r\n    return ApolloError;\r\n}(Error));\r\nexport { ApolloError };\r\n","export var NetworkStatus;\r\n(function (NetworkStatus) {\r\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\r\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\r\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\r\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\r\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\r\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\r\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\r\n})(NetworkStatus || (NetworkStatus = {}));\r\nexport function isNetworkRequestInFlight(networkStatus) {\r\n    return networkStatus ? networkStatus < 7 : false;\r\n}\r\n","import { __assign, __extends } from \"tslib\";\r\nimport { invariant } from \"../utilities/globals/index.js\";\r\nimport { equal } from '@wry/equality';\r\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\r\nimport { compact, cloneDeep, getOperationDefinition, Observable, iterateObserversSafely, isNonEmptyArray, fixObservableSubclass, getQueryDefinition, } from \"../utilities/index.js\";\r\nvar assign = Object.assign, hasOwnProperty = Object.hasOwnProperty;\r\nvar warnedAboutUpdateQuery = false;\r\nvar ObservableQuery = (function (_super) {\r\n    __extends(ObservableQuery, _super);\r\n    function ObservableQuery(_a) {\r\n        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;\r\n        var _this = _super.call(this, function (observer) {\r\n            try {\r\n                var subObserver = observer._subscription._observer;\r\n                if (subObserver && !subObserver.error) {\r\n                    subObserver.error = defaultSubscriptionObserverErrorCallback;\r\n                }\r\n            }\r\n            catch (_a) { }\r\n            var first = !_this.observers.size;\r\n            _this.observers.add(observer);\r\n            var last = _this.last;\r\n            if (last && last.error) {\r\n                observer.error && observer.error(last.error);\r\n            }\r\n            else if (last && last.result) {\r\n                observer.next && observer.next(last.result);\r\n            }\r\n            if (first) {\r\n                _this.reobserve().catch(function () { });\r\n            }\r\n            return function () {\r\n                if (_this.observers.delete(observer) && !_this.observers.size) {\r\n                    _this.tearDownQuery();\r\n                }\r\n            };\r\n        }) || this;\r\n        _this.observers = new Set();\r\n        _this.subscriptions = new Set();\r\n        _this.isTornDown = false;\r\n        _this.options = options;\r\n        _this.queryId = queryInfo.queryId || queryManager.generateQueryId();\r\n        var opDef = getOperationDefinition(options.query);\r\n        _this.queryName = opDef && opDef.name && opDef.name.value;\r\n        _this.initialFetchPolicy = options.fetchPolicy || \"cache-first\";\r\n        _this.queryManager = queryManager;\r\n        _this.queryInfo = queryInfo;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\r\n        get: function () {\r\n            return this.options.variables;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ObservableQuery.prototype.result = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var observer = {\r\n                next: function (result) {\r\n                    resolve(result);\r\n                    _this.observers.delete(observer);\r\n                    if (!_this.observers.size) {\r\n                        _this.queryManager.removeQuery(_this.queryId);\r\n                    }\r\n                    setTimeout(function () {\r\n                        subscription.unsubscribe();\r\n                    }, 0);\r\n                },\r\n                error: reject,\r\n            };\r\n            var subscription = _this.subscribe(observer);\r\n        });\r\n    };\r\n    ObservableQuery.prototype.getCurrentResult = function (saveAsLastResult) {\r\n        if (saveAsLastResult === void 0) { saveAsLastResult = true; }\r\n        var lastResult = this.getLastResult(true);\r\n        var networkStatus = this.queryInfo.networkStatus ||\r\n            (lastResult && lastResult.networkStatus) ||\r\n            NetworkStatus.ready;\r\n        var result = __assign(__assign({}, lastResult), { loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus });\r\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a;\r\n        var shouldReturnCachedData = lastResult || (fetchPolicy !== 'network-only' &&\r\n            fetchPolicy !== 'no-cache' &&\r\n            fetchPolicy !== 'standby');\r\n        if (shouldReturnCachedData &&\r\n            !this.queryManager.transform(this.options.query).hasForcedResolvers) {\r\n            var diff = this.queryInfo.getDiff();\r\n            if (diff.complete || this.options.returnPartialData) {\r\n                result.data = diff.result;\r\n            }\r\n            if (equal(result.data, {})) {\r\n                result.data = void 0;\r\n            }\r\n            if (diff.complete) {\r\n                if (result.networkStatus === NetworkStatus.loading &&\r\n                    (fetchPolicy === 'cache-first' ||\r\n                        fetchPolicy === 'cache-only')) {\r\n                    result.networkStatus = NetworkStatus.ready;\r\n                    result.loading = false;\r\n                }\r\n                delete result.partial;\r\n            }\r\n            else if (fetchPolicy !== \"no-cache\") {\r\n                result.partial = true;\r\n            }\r\n            if (__DEV__ &&\r\n                !diff.complete &&\r\n                !this.options.partialRefetch &&\r\n                !result.loading &&\r\n                !result.data &&\r\n                !result.error) {\r\n                logMissingFieldErrors(diff.missing);\r\n            }\r\n        }\r\n        if (saveAsLastResult) {\r\n            this.updateLastResult(result);\r\n        }\r\n        return result;\r\n    };\r\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\r\n        return !this.last || !equal(this.last.result, newResult);\r\n    };\r\n    ObservableQuery.prototype.getLast = function (key, variablesMustMatch) {\r\n        var last = this.last;\r\n        if (last &&\r\n            last[key] &&\r\n            (!variablesMustMatch || equal(last.variables, this.variables))) {\r\n            return last[key];\r\n        }\r\n    };\r\n    ObservableQuery.prototype.getLastResult = function (variablesMustMatch) {\r\n        return this.getLast(\"result\", variablesMustMatch);\r\n    };\r\n    ObservableQuery.prototype.getLastError = function (variablesMustMatch) {\r\n        return this.getLast(\"error\", variablesMustMatch);\r\n    };\r\n    ObservableQuery.prototype.resetLastResults = function () {\r\n        delete this.last;\r\n        this.isTornDown = false;\r\n    };\r\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\r\n        this.queryManager.resetErrors(this.queryId);\r\n    };\r\n    ObservableQuery.prototype.refetch = function (variables) {\r\n        var _a;\r\n        var reobserveOptions = {\r\n            pollInterval: 0,\r\n        };\r\n        var fetchPolicy = this.options.fetchPolicy;\r\n        if (fetchPolicy === 'no-cache') {\r\n            reobserveOptions.fetchPolicy = 'no-cache';\r\n        }\r\n        else if (fetchPolicy !== 'cache-and-network') {\r\n            reobserveOptions.fetchPolicy = 'network-only';\r\n        }\r\n        if (__DEV__ && variables && hasOwnProperty.call(variables, \"variables\")) {\r\n            var queryDef = getQueryDefinition(this.options.query);\r\n            var vars = queryDef.variableDefinitions;\r\n            if (!vars || !vars.some(function (v) { return v.variable.name.value === \"variables\"; })) {\r\n                __DEV__ && invariant.warn(\"Called refetch(\" + JSON.stringify(variables) + \") for query \" + (((_a = queryDef.name) === null || _a === void 0 ? void 0 : _a.value) || JSON.stringify(queryDef)) + \", which does not declare a $variables variable.\\nDid you mean to call refetch(variables) instead of refetch({ variables })?\");\r\n            }\r\n        }\r\n        if (variables && !equal(this.options.variables, variables)) {\r\n            reobserveOptions.variables = this.options.variables = __assign(__assign({}, this.options.variables), variables);\r\n        }\r\n        this.queryInfo.resetLastWrite();\r\n        return this.reobserve(reobserveOptions, NetworkStatus.refetch);\r\n    };\r\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\r\n        var _this = this;\r\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.options.variables), fetchMoreOptions.variables) }))), { fetchPolicy: \"no-cache\" });\r\n        var qid = this.queryManager.generateQueryId();\r\n        if (combinedOptions.notifyOnNetworkStatusChange) {\r\n            this.queryInfo.networkStatus = NetworkStatus.fetchMore;\r\n            this.observe();\r\n        }\r\n        return this.queryManager.fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore).then(function (fetchMoreResult) {\r\n            var data = fetchMoreResult.data;\r\n            var updateQuery = fetchMoreOptions.updateQuery;\r\n            if (updateQuery) {\r\n                if (__DEV__ &&\r\n                    !warnedAboutUpdateQuery) {\r\n                    __DEV__ && invariant.warn(\"The updateQuery callback for fetchMore is deprecated, and will be removed\\nin the next major version of Apollo Client.\\n\\nPlease convert updateQuery functions to field policies with appropriate\\nread and merge functions, or use/adapt a helper function (such as\\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\\n@apollo/client/utilities.\\n\\nThe field policy system handles pagination more effectively than a\\nhand-written updateQuery function, and you only need to define the policy\\nonce, rather than every time you call fetchMore.\");\r\n                    warnedAboutUpdateQuery = true;\r\n                }\r\n                _this.updateQuery(function (previous) { return updateQuery(previous, {\r\n                    fetchMoreResult: data,\r\n                    variables: combinedOptions.variables,\r\n                }); });\r\n            }\r\n            else {\r\n                _this.queryManager.cache.writeQuery({\r\n                    query: combinedOptions.query,\r\n                    variables: combinedOptions.variables,\r\n                    data: data,\r\n                });\r\n            }\r\n            return fetchMoreResult;\r\n        }).finally(function () {\r\n            _this.queryManager.stopQuery(qid);\r\n            _this.reobserve();\r\n        });\r\n    };\r\n    ObservableQuery.prototype.subscribeToMore = function (options) {\r\n        var _this = this;\r\n        var subscription = this.queryManager\r\n            .startGraphQLSubscription({\r\n            query: options.document,\r\n            variables: options.variables,\r\n            context: options.context,\r\n        })\r\n            .subscribe({\r\n            next: function (subscriptionData) {\r\n                var updateQuery = options.updateQuery;\r\n                if (updateQuery) {\r\n                    _this.updateQuery(function (previous, _a) {\r\n                        var variables = _a.variables;\r\n                        return updateQuery(previous, {\r\n                            subscriptionData: subscriptionData,\r\n                            variables: variables,\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n            error: function (err) {\r\n                if (options.onError) {\r\n                    options.onError(err);\r\n                    return;\r\n                }\r\n                __DEV__ && invariant.error('Unhandled GraphQL subscription error', err);\r\n            },\r\n        });\r\n        this.subscriptions.add(subscription);\r\n        return function () {\r\n            if (_this.subscriptions.delete(subscription)) {\r\n                subscription.unsubscribe();\r\n            }\r\n        };\r\n    };\r\n    ObservableQuery.prototype.setOptions = function (newOptions) {\r\n        return this.reobserve(newOptions);\r\n    };\r\n    ObservableQuery.prototype.setVariables = function (variables) {\r\n        if (equal(this.variables, variables)) {\r\n            return this.observers.size\r\n                ? this.result()\r\n                : Promise.resolve();\r\n        }\r\n        this.options.variables = variables;\r\n        if (!this.observers.size) {\r\n            return Promise.resolve();\r\n        }\r\n        return this.reobserve({\r\n            fetchPolicy: this.initialFetchPolicy,\r\n            variables: variables,\r\n        }, NetworkStatus.setVariables);\r\n    };\r\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\r\n        var queryManager = this.queryManager;\r\n        var result = queryManager.cache.diff({\r\n            query: this.options.query,\r\n            variables: this.variables,\r\n            returnPartialData: true,\r\n            optimistic: false,\r\n        }).result;\r\n        var newResult = mapFn(result, {\r\n            variables: this.variables,\r\n        });\r\n        if (newResult) {\r\n            queryManager.cache.writeQuery({\r\n                query: this.options.query,\r\n                data: newResult,\r\n                variables: this.variables,\r\n            });\r\n            queryManager.broadcastQueries();\r\n        }\r\n    };\r\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\r\n        this.options.pollInterval = pollInterval;\r\n        this.updatePolling();\r\n    };\r\n    ObservableQuery.prototype.stopPolling = function () {\r\n        this.options.pollInterval = 0;\r\n        this.updatePolling();\r\n    };\r\n    ObservableQuery.prototype.fetch = function (options, newNetworkStatus) {\r\n        this.queryManager.setObservableQuery(this);\r\n        return this.queryManager.fetchQueryObservable(this.queryId, options, newNetworkStatus);\r\n    };\r\n    ObservableQuery.prototype.updatePolling = function () {\r\n        var _this = this;\r\n        if (this.queryManager.ssrMode) {\r\n            return;\r\n        }\r\n        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;\r\n        if (!pollInterval) {\r\n            if (pollingInfo) {\r\n                clearTimeout(pollingInfo.timeout);\r\n                delete this.pollingInfo;\r\n            }\r\n            return;\r\n        }\r\n        if (pollingInfo &&\r\n            pollingInfo.interval === pollInterval) {\r\n            return;\r\n        }\r\n        __DEV__ ? invariant(pollInterval, 'Attempted to start a polling query without a polling interval.') : invariant(pollInterval, 12);\r\n        var info = pollingInfo || (this.pollingInfo = {});\r\n        info.interval = pollInterval;\r\n        var maybeFetch = function () {\r\n            if (_this.pollingInfo) {\r\n                if (!isNetworkRequestInFlight(_this.queryInfo.networkStatus)) {\r\n                    _this.reobserve({\r\n                        fetchPolicy: \"network-only\",\r\n                    }, NetworkStatus.poll).then(poll, poll);\r\n                }\r\n                else {\r\n                    poll();\r\n                }\r\n            }\r\n            ;\r\n        };\r\n        var poll = function () {\r\n            var info = _this.pollingInfo;\r\n            if (info) {\r\n                clearTimeout(info.timeout);\r\n                info.timeout = setTimeout(maybeFetch, info.interval);\r\n            }\r\n        };\r\n        poll();\r\n    };\r\n    ObservableQuery.prototype.updateLastResult = function (newResult, variables) {\r\n        if (variables === void 0) { variables = this.variables; }\r\n        this.last = __assign(__assign({}, this.last), { result: this.queryManager.assumeImmutableResults\r\n                ? newResult\r\n                : cloneDeep(newResult), variables: variables });\r\n        if (!isNonEmptyArray(newResult.errors)) {\r\n            delete this.last.error;\r\n        }\r\n        return this.last;\r\n    };\r\n    ObservableQuery.prototype.reobserve = function (newOptions, newNetworkStatus) {\r\n        var _this = this;\r\n        this.isTornDown = false;\r\n        var useDisposableConcast = newNetworkStatus === NetworkStatus.refetch ||\r\n            newNetworkStatus === NetworkStatus.fetchMore ||\r\n            newNetworkStatus === NetworkStatus.poll;\r\n        var oldVariables = this.options.variables;\r\n        var options = useDisposableConcast\r\n            ? compact(this.options, newOptions)\r\n            : assign(this.options, compact(newOptions));\r\n        if (!useDisposableConcast) {\r\n            this.updatePolling();\r\n            if (newOptions &&\r\n                newOptions.variables &&\r\n                !newOptions.fetchPolicy &&\r\n                !equal(newOptions.variables, oldVariables)) {\r\n                options.fetchPolicy = this.initialFetchPolicy;\r\n                if (newNetworkStatus === void 0) {\r\n                    newNetworkStatus = NetworkStatus.setVariables;\r\n                }\r\n            }\r\n        }\r\n        var variables = options.variables && __assign({}, options.variables);\r\n        var concast = this.fetch(options, newNetworkStatus);\r\n        var observer = {\r\n            next: function (result) {\r\n                _this.reportResult(result, variables);\r\n            },\r\n            error: function (error) {\r\n                _this.reportError(error, variables);\r\n            },\r\n        };\r\n        if (!useDisposableConcast) {\r\n            if (this.concast && this.observer) {\r\n                this.concast.removeObserver(this.observer, true);\r\n            }\r\n            this.concast = concast;\r\n            this.observer = observer;\r\n        }\r\n        concast.addObserver(observer);\r\n        return concast.promise;\r\n    };\r\n    ObservableQuery.prototype.observe = function () {\r\n        this.reportResult(this.getCurrentResult(false), this.variables);\r\n    };\r\n    ObservableQuery.prototype.reportResult = function (result, variables) {\r\n        if (this.getLastError() || this.isDifferentFromLastResult(result)) {\r\n            this.updateLastResult(result, variables);\r\n            iterateObserversSafely(this.observers, 'next', result);\r\n        }\r\n    };\r\n    ObservableQuery.prototype.reportError = function (error, variables) {\r\n        var errorResult = __assign(__assign({}, this.getLastResult()), { error: error, errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false });\r\n        this.updateLastResult(errorResult, variables);\r\n        iterateObserversSafely(this.observers, 'error', this.last.error = error);\r\n    };\r\n    ObservableQuery.prototype.hasObservers = function () {\r\n        return this.observers.size > 0;\r\n    };\r\n    ObservableQuery.prototype.tearDownQuery = function () {\r\n        if (this.isTornDown)\r\n            return;\r\n        if (this.concast && this.observer) {\r\n            this.concast.removeObserver(this.observer);\r\n            delete this.concast;\r\n            delete this.observer;\r\n        }\r\n        this.stopPolling();\r\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\r\n        this.subscriptions.clear();\r\n        this.queryManager.stopQuery(this.queryId);\r\n        this.observers.clear();\r\n        this.isTornDown = true;\r\n    };\r\n    return ObservableQuery;\r\n}(Observable));\r\nexport { ObservableQuery };\r\nfixObservableSubclass(ObservableQuery);\r\nfunction defaultSubscriptionObserverErrorCallback(error) {\r\n    __DEV__ && invariant.error('Unhandled error', error.message, error.stack);\r\n}\r\nexport function logMissingFieldErrors(missing) {\r\n    if (__DEV__ && isNonEmptyArray(missing)) {\r\n        __DEV__ && invariant.debug(\"Missing cache result fields: \" + missing.map(function (m) { return m.path.join('.'); }).join(', '), missing);\r\n    }\r\n}\r\nexport function applyNextFetchPolicy(options) {\r\n    var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, nextFetchPolicy = options.nextFetchPolicy;\r\n    if (nextFetchPolicy) {\r\n        options.fetchPolicy = typeof nextFetchPolicy === \"function\"\r\n            ? nextFetchPolicy.call(options, fetchPolicy)\r\n            : nextFetchPolicy;\r\n    }\r\n}\r\n","import { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { invariant } from \"../utilities/globals/index.js\";\r\nimport { visit, BREAK, } from 'graphql';\r\nimport { argumentsObjectFromField, buildQueryFromSelectionSet, createFragmentMap, getFragmentDefinitions, getMainDefinition, hasDirectives, isField, isInlineFragment, mergeDeep, mergeDeepArray, removeClientSetsFromDocument, resultKeyNameFromField, shouldInclude, } from \"../utilities/index.js\";\r\nimport { cacheSlot } from \"../cache/index.js\";\r\nvar LocalState = (function () {\r\n    function LocalState(_a) {\r\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\r\n        this.cache = cache;\r\n        if (client) {\r\n            this.client = client;\r\n        }\r\n        if (resolvers) {\r\n            this.addResolvers(resolvers);\r\n        }\r\n        if (fragmentMatcher) {\r\n            this.setFragmentMatcher(fragmentMatcher);\r\n        }\r\n    }\r\n    LocalState.prototype.addResolvers = function (resolvers) {\r\n        var _this = this;\r\n        this.resolvers = this.resolvers || {};\r\n        if (Array.isArray(resolvers)) {\r\n            resolvers.forEach(function (resolverGroup) {\r\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\r\n            });\r\n        }\r\n        else {\r\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\r\n        }\r\n    };\r\n    LocalState.prototype.setResolvers = function (resolvers) {\r\n        this.resolvers = {};\r\n        this.addResolvers(resolvers);\r\n    };\r\n    LocalState.prototype.getResolvers = function () {\r\n        return this.resolvers || {};\r\n    };\r\n    LocalState.prototype.runResolvers = function (_a) {\r\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_c) {\r\n                if (document) {\r\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\r\n                }\r\n                return [2, remoteResult];\r\n            });\r\n        });\r\n    };\r\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\r\n        this.fragmentMatcher = fragmentMatcher;\r\n    };\r\n    LocalState.prototype.getFragmentMatcher = function () {\r\n        return this.fragmentMatcher;\r\n    };\r\n    LocalState.prototype.clientQuery = function (document) {\r\n        if (hasDirectives(['client'], document)) {\r\n            if (this.resolvers) {\r\n                return document;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    LocalState.prototype.serverQuery = function (document) {\r\n        return removeClientSetsFromDocument(document);\r\n    };\r\n    LocalState.prototype.prepareContext = function (context) {\r\n        var cache = this.cache;\r\n        return __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\r\n                return cache.identify(obj);\r\n            } });\r\n    };\r\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\r\n        if (variables === void 0) { variables = {}; }\r\n        if (context === void 0) { context = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (document) {\r\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\r\n                }\r\n                return [2, __assign({}, variables)];\r\n            });\r\n        });\r\n    };\r\n    LocalState.prototype.shouldForceResolvers = function (document) {\r\n        var forceResolvers = false;\r\n        visit(document, {\r\n            Directive: {\r\n                enter: function (node) {\r\n                    if (node.name.value === 'client' && node.arguments) {\r\n                        forceResolvers = node.arguments.some(function (arg) {\r\n                            return arg.name.value === 'always' &&\r\n                                arg.value.kind === 'BooleanValue' &&\r\n                                arg.value.value === true;\r\n                        });\r\n                        if (forceResolvers) {\r\n                            return BREAK;\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        });\r\n        return forceResolvers;\r\n    };\r\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\r\n        return this.cache.diff({\r\n            query: buildQueryFromSelectionSet(document),\r\n            variables: variables,\r\n            returnPartialData: true,\r\n            optimistic: false,\r\n        }).result;\r\n    };\r\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\r\n        if (context === void 0) { context = {}; }\r\n        if (variables === void 0) { variables = {}; }\r\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\r\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\r\n            return __generator(this, function (_b) {\r\n                mainDefinition = getMainDefinition(document);\r\n                fragments = getFragmentDefinitions(document);\r\n                fragmentMap = createFragmentMap(fragments);\r\n                definitionOperation = mainDefinition\r\n                    .operation;\r\n                defaultOperationType = definitionOperation\r\n                    ? definitionOperation.charAt(0).toUpperCase() +\r\n                        definitionOperation.slice(1)\r\n                    : 'Query';\r\n                _a = this, cache = _a.cache, client = _a.client;\r\n                execContext = {\r\n                    fragmentMap: fragmentMap,\r\n                    context: __assign(__assign({}, context), { cache: cache, client: client }),\r\n                    variables: variables,\r\n                    fragmentMatcher: fragmentMatcher,\r\n                    defaultOperationType: defaultOperationType,\r\n                    exportedVariables: {},\r\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\r\n                };\r\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\r\n                        result: result,\r\n                        exportedVariables: execContext.exportedVariables,\r\n                    }); })];\r\n            });\r\n        });\r\n    };\r\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fragmentMap, context, variables, resultsToMerge, execute;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\r\n                resultsToMerge = [rootValue];\r\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var fragment, typeCondition;\r\n                    return __generator(this, function (_a) {\r\n                        if (!shouldInclude(selection, variables)) {\r\n                            return [2];\r\n                        }\r\n                        if (isField(selection)) {\r\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\r\n                                    var _a;\r\n                                    if (typeof fieldResult !== 'undefined') {\r\n                                        resultsToMerge.push((_a = {},\r\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\r\n                                            _a));\r\n                                    }\r\n                                })];\r\n                        }\r\n                        if (isInlineFragment(selection)) {\r\n                            fragment = selection;\r\n                        }\r\n                        else {\r\n                            fragment = fragmentMap[selection.name.value];\r\n                            __DEV__ ? invariant(fragment, \"No fragment named \" + selection.name.value) : invariant(fragment, 11);\r\n                        }\r\n                        if (fragment && fragment.typeCondition) {\r\n                            typeCondition = fragment.typeCondition.name.value;\r\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\r\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\r\n                                        resultsToMerge.push(fragmentResult);\r\n                                    })];\r\n                            }\r\n                        }\r\n                        return [2];\r\n                    });\r\n                }); };\r\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\r\n                        return mergeDeepArray(resultsToMerge);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                variables = execContext.variables;\r\n                fieldName = field.name.value;\r\n                aliasedFieldName = resultKeyNameFromField(field);\r\n                aliasUsed = fieldName !== aliasedFieldName;\r\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\r\n                resultPromise = Promise.resolve(defaultResult);\r\n                if (!execContext.onlyRunForcedResolvers ||\r\n                    this.shouldForceResolvers(field)) {\r\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\r\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\r\n                    if (resolverMap) {\r\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\r\n                        if (resolve) {\r\n                            resultPromise = Promise.resolve(cacheSlot.withValue(this.cache, resolve, [\r\n                                rootValue,\r\n                                argumentsObjectFromField(field, variables),\r\n                                execContext.context,\r\n                                { field: field, fragmentMap: execContext.fragmentMap },\r\n                            ]));\r\n                        }\r\n                    }\r\n                }\r\n                return [2, resultPromise.then(function (result) {\r\n                        if (result === void 0) { result = defaultResult; }\r\n                        if (field.directives) {\r\n                            field.directives.forEach(function (directive) {\r\n                                if (directive.name.value === 'export' && directive.arguments) {\r\n                                    directive.arguments.forEach(function (arg) {\r\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\r\n                                            execContext.exportedVariables[arg.value.value] = result;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!field.selectionSet) {\r\n                            return result;\r\n                        }\r\n                        if (result == null) {\r\n                            return result;\r\n                        }\r\n                        if (Array.isArray(result)) {\r\n                            return _this.resolveSubSelectedArray(field, result, execContext);\r\n                        }\r\n                        if (field.selectionSet) {\r\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\r\n                        }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\r\n        var _this = this;\r\n        return Promise.all(result.map(function (item) {\r\n            if (item === null) {\r\n                return null;\r\n            }\r\n            if (Array.isArray(item)) {\r\n                return _this.resolveSubSelectedArray(field, item, execContext);\r\n            }\r\n            if (field.selectionSet) {\r\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\r\n            }\r\n        }));\r\n    };\r\n    return LocalState;\r\n}());\r\nexport { LocalState };\r\n","import { __assign } from \"tslib\";\r\nimport { equal } from \"@wry/equality\";\r\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap, } from \"../utilities/index.js\";\r\nimport { NetworkStatus, isNetworkRequestInFlight, } from \"./networkStatus.js\";\r\n;\r\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\r\nfunction wrapDestructiveCacheMethod(cache, methodName) {\r\n    var original = cache[methodName];\r\n    if (typeof original === \"function\") {\r\n        cache[methodName] = function () {\r\n            destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\r\n            return original.apply(this, arguments);\r\n        };\r\n    }\r\n}\r\nfunction cancelNotifyTimeout(info) {\r\n    if (info[\"notifyTimeout\"]) {\r\n        clearTimeout(info[\"notifyTimeout\"]);\r\n        info[\"notifyTimeout\"] = void 0;\r\n    }\r\n}\r\nvar QueryInfo = (function () {\r\n    function QueryInfo(queryManager, queryId) {\r\n        if (queryId === void 0) { queryId = queryManager.generateQueryId(); }\r\n        this.queryId = queryId;\r\n        this.listeners = new Set();\r\n        this.document = null;\r\n        this.lastRequestId = 1;\r\n        this.subscriptions = new Set();\r\n        this.stopped = false;\r\n        this.dirty = false;\r\n        this.observableQuery = null;\r\n        var cache = this.cache = queryManager.cache;\r\n        if (!destructiveMethodCounts.has(cache)) {\r\n            destructiveMethodCounts.set(cache, 0);\r\n            wrapDestructiveCacheMethod(cache, \"evict\");\r\n            wrapDestructiveCacheMethod(cache, \"modify\");\r\n            wrapDestructiveCacheMethod(cache, \"reset\");\r\n        }\r\n    }\r\n    QueryInfo.prototype.init = function (query) {\r\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\r\n        if (this.variables &&\r\n            this.networkStatus !== NetworkStatus.loading &&\r\n            !equal(this.variables, query.variables)) {\r\n            networkStatus = NetworkStatus.setVariables;\r\n        }\r\n        if (!equal(query.variables, this.variables)) {\r\n            this.lastDiff = void 0;\r\n        }\r\n        Object.assign(this, {\r\n            document: query.document,\r\n            variables: query.variables,\r\n            networkError: null,\r\n            graphQLErrors: this.graphQLErrors || [],\r\n            networkStatus: networkStatus,\r\n        });\r\n        if (query.observableQuery) {\r\n            this.setObservableQuery(query.observableQuery);\r\n        }\r\n        if (query.lastRequestId) {\r\n            this.lastRequestId = query.lastRequestId;\r\n        }\r\n        return this;\r\n    };\r\n    QueryInfo.prototype.reset = function () {\r\n        cancelNotifyTimeout(this);\r\n        this.lastDiff = void 0;\r\n        this.dirty = false;\r\n    };\r\n    QueryInfo.prototype.getDiff = function (variables) {\r\n        if (variables === void 0) { variables = this.variables; }\r\n        var options = this.getDiffOptions(variables);\r\n        if (this.lastDiff && equal(options, this.lastDiff.options)) {\r\n            return this.lastDiff.diff;\r\n        }\r\n        this.updateWatch(this.variables = variables);\r\n        var oq = this.observableQuery;\r\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\r\n            return { complete: false };\r\n        }\r\n        var diff = this.cache.diff(options);\r\n        this.updateLastDiff(diff, options);\r\n        return diff;\r\n    };\r\n    QueryInfo.prototype.updateLastDiff = function (diff, options) {\r\n        this.lastDiff = diff ? {\r\n            diff: diff,\r\n            options: options || this.getDiffOptions(),\r\n        } : void 0;\r\n    };\r\n    QueryInfo.prototype.getDiffOptions = function (variables) {\r\n        if (variables === void 0) { variables = this.variables; }\r\n        var oq = this.observableQuery;\r\n        return {\r\n            query: this.document,\r\n            variables: variables,\r\n            returnPartialData: true,\r\n            optimistic: true,\r\n            canonizeResults: !oq || oq.options.canonizeResults !== false,\r\n        };\r\n    };\r\n    QueryInfo.prototype.setDiff = function (diff) {\r\n        var _this = this;\r\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\r\n        this.updateLastDiff(diff);\r\n        if (!this.dirty &&\r\n            !equal(oldDiff && oldDiff.result, diff && diff.result)) {\r\n            this.dirty = true;\r\n            if (!this.notifyTimeout) {\r\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\r\n            }\r\n        }\r\n    };\r\n    QueryInfo.prototype.setObservableQuery = function (oq) {\r\n        var _this = this;\r\n        if (oq === this.observableQuery)\r\n            return;\r\n        if (this.oqListener) {\r\n            this.listeners.delete(this.oqListener);\r\n        }\r\n        this.observableQuery = oq;\r\n        if (oq) {\r\n            oq[\"queryInfo\"] = this;\r\n            this.listeners.add(this.oqListener = function () {\r\n                if (_this.getDiff().fromOptimisticTransaction) {\r\n                    oq[\"observe\"]();\r\n                }\r\n                else {\r\n                    oq.reobserve();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            delete this.oqListener;\r\n        }\r\n    };\r\n    QueryInfo.prototype.notify = function () {\r\n        var _this = this;\r\n        cancelNotifyTimeout(this);\r\n        if (this.shouldNotify()) {\r\n            this.listeners.forEach(function (listener) { return listener(_this); });\r\n        }\r\n        this.dirty = false;\r\n    };\r\n    QueryInfo.prototype.shouldNotify = function () {\r\n        if (!this.dirty || !this.listeners.size) {\r\n            return false;\r\n        }\r\n        if (isNetworkRequestInFlight(this.networkStatus) &&\r\n            this.observableQuery) {\r\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\r\n            if (fetchPolicy !== \"cache-only\" &&\r\n                fetchPolicy !== \"cache-and-network\") {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    QueryInfo.prototype.stop = function () {\r\n        if (!this.stopped) {\r\n            this.stopped = true;\r\n            this.reset();\r\n            this.cancel();\r\n            this.cancel = QueryInfo.prototype.cancel;\r\n            this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\r\n            var oq = this.observableQuery;\r\n            if (oq)\r\n                oq.stopPolling();\r\n        }\r\n    };\r\n    QueryInfo.prototype.cancel = function () { };\r\n    QueryInfo.prototype.updateWatch = function (variables) {\r\n        var _this = this;\r\n        if (variables === void 0) { variables = this.variables; }\r\n        var oq = this.observableQuery;\r\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\r\n            return;\r\n        }\r\n        var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function (diff) { return _this.setDiff(diff); } });\r\n        if (!this.lastWatch ||\r\n            !equal(watchOptions, this.lastWatch)) {\r\n            this.cancel();\r\n            this.cancel = this.cache.watch(this.lastWatch = watchOptions);\r\n        }\r\n    };\r\n    QueryInfo.prototype.resetLastWrite = function () {\r\n        this.lastWrite = void 0;\r\n    };\r\n    QueryInfo.prototype.shouldWrite = function (result, variables) {\r\n        var lastWrite = this.lastWrite;\r\n        return !(lastWrite &&\r\n            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\r\n            equal(variables, lastWrite.variables) &&\r\n            equal(result.data, lastWrite.result.data));\r\n    };\r\n    QueryInfo.prototype.markResult = function (result, options, cacheWriteBehavior) {\r\n        var _this = this;\r\n        this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\r\n        this.reset();\r\n        if (options.fetchPolicy === 'no-cache') {\r\n            this.updateLastDiff({ result: result.data, complete: true }, this.getDiffOptions(options.variables));\r\n        }\r\n        else if (cacheWriteBehavior !== 0) {\r\n            if (shouldWriteResult(result, options.errorPolicy)) {\r\n                this.cache.performTransaction(function (cache) {\r\n                    if (_this.shouldWrite(result, options.variables)) {\r\n                        cache.writeQuery({\r\n                            query: _this.document,\r\n                            data: result.data,\r\n                            variables: options.variables,\r\n                            overwrite: cacheWriteBehavior === 1,\r\n                        });\r\n                        _this.lastWrite = {\r\n                            result: result,\r\n                            variables: options.variables,\r\n                            dmCount: destructiveMethodCounts.get(_this.cache),\r\n                        };\r\n                    }\r\n                    else {\r\n                        if (_this.lastDiff &&\r\n                            _this.lastDiff.diff.complete) {\r\n                            result.data = _this.lastDiff.diff.result;\r\n                            return;\r\n                        }\r\n                    }\r\n                    var diffOptions = _this.getDiffOptions(options.variables);\r\n                    var diff = cache.diff(diffOptions);\r\n                    if (!_this.stopped) {\r\n                        _this.updateWatch(options.variables);\r\n                    }\r\n                    _this.updateLastDiff(diff, diffOptions);\r\n                    if (diff.complete) {\r\n                        result.data = diff.result;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.lastWrite = void 0;\r\n            }\r\n        }\r\n    };\r\n    QueryInfo.prototype.markReady = function () {\r\n        this.networkError = null;\r\n        return this.networkStatus = NetworkStatus.ready;\r\n    };\r\n    QueryInfo.prototype.markError = function (error) {\r\n        this.networkStatus = NetworkStatus.error;\r\n        this.lastWrite = void 0;\r\n        this.reset();\r\n        if (error.graphQLErrors) {\r\n            this.graphQLErrors = error.graphQLErrors;\r\n        }\r\n        if (error.networkError) {\r\n            this.networkError = error.networkError;\r\n        }\r\n        return error;\r\n    };\r\n    return QueryInfo;\r\n}());\r\nexport { QueryInfo };\r\nexport function shouldWriteResult(result, errorPolicy) {\r\n    if (errorPolicy === void 0) { errorPolicy = \"none\"; }\r\n    var ignoreErrors = errorPolicy === \"ignore\" ||\r\n        errorPolicy === \"all\";\r\n    var writeWithErrors = !graphQLResultHasError(result);\r\n    if (!writeWithErrors && ignoreErrors && result.data) {\r\n        writeWithErrors = true;\r\n    }\r\n    return writeWithErrors;\r\n}\r\n","import { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { invariant, InvariantError } from \"../utilities/globals/index.js\";\r\nimport { equal } from '@wry/equality';\r\nimport { execute } from \"../link/core/index.js\";\r\nimport { canonicalStringify } from \"../cache/index.js\";\r\nimport { getDefaultValues, getOperationDefinition, getOperationName, hasClientExports, graphQLResultHasError, removeConnectionDirectiveFromDocument, canUseWeakMap, Observable, asyncMap, isNonEmptyArray, Concast, makeUniqueId, isDocumentNode, isNonNullObject, } from \"../utilities/index.js\";\r\nimport { ApolloError, isApolloError } from \"../errors/index.js\";\r\nimport { ObservableQuery, applyNextFetchPolicy, logMissingFieldErrors } from \"./ObservableQuery.js\";\r\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\r\nimport { LocalState } from \"./LocalState.js\";\r\nimport { QueryInfo, shouldWriteResult, } from \"./QueryInfo.js\";\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar QueryManager = (function () {\r\n    function QueryManager(_a) {\r\n        var cache = _a.cache, link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\r\n        this.clientAwareness = {};\r\n        this.queries = new Map();\r\n        this.fetchCancelFns = new Map();\r\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\r\n        this.queryIdCounter = 1;\r\n        this.requestIdCounter = 1;\r\n        this.mutationIdCounter = 1;\r\n        this.inFlightLinkObservables = new Map();\r\n        this.cache = cache;\r\n        this.link = link;\r\n        this.queryDeduplication = queryDeduplication;\r\n        this.clientAwareness = clientAwareness;\r\n        this.localState = localState || new LocalState({ cache: cache });\r\n        this.ssrMode = ssrMode;\r\n        this.assumeImmutableResults = !!assumeImmutableResults;\r\n        if ((this.onBroadcast = onBroadcast)) {\r\n            this.mutationStore = Object.create(null);\r\n        }\r\n    }\r\n    QueryManager.prototype.stop = function () {\r\n        var _this = this;\r\n        this.queries.forEach(function (_info, queryId) {\r\n            _this.stopQueryNoBroadcast(queryId);\r\n        });\r\n        this.cancelPendingFetches(__DEV__ ? new InvariantError('QueryManager stopped while query was in flight') : new InvariantError(13));\r\n    };\r\n    QueryManager.prototype.cancelPendingFetches = function (error) {\r\n        this.fetchCancelFns.forEach(function (cancel) { return cancel(error); });\r\n        this.fetchCancelFns.clear();\r\n    };\r\n    QueryManager.prototype.mutate = function (_a) {\r\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueries = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, onQueryUpdated = _a.onQueryUpdated, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, _e = _a.fetchPolicy, fetchPolicy = _e === void 0 ? 'network-only' : _e, keepRootFields = _a.keepRootFields, context = _a.context;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var mutationId, mutationStoreValue, self;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        __DEV__ ? invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.') : invariant(mutation, 14);\r\n                        __DEV__ ? invariant(fetchPolicy === 'network-only' ||\r\n                            fetchPolicy === 'no-cache', \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\") : invariant(fetchPolicy === 'network-only' ||\r\n                            fetchPolicy === 'no-cache', 15);\r\n                        mutationId = this.generateMutationId();\r\n                        mutation = this.transform(mutation).document;\r\n                        variables = this.getVariables(mutation, variables);\r\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\r\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\r\n                    case 1:\r\n                        variables = (_f.sent());\r\n                        _f.label = 2;\r\n                    case 2:\r\n                        mutationStoreValue = this.mutationStore &&\r\n                            (this.mutationStore[mutationId] = {\r\n                                mutation: mutation,\r\n                                variables: variables,\r\n                                loading: true,\r\n                                error: null,\r\n                            });\r\n                        if (optimisticResponse) {\r\n                            this.markMutationOptimistic(optimisticResponse, {\r\n                                mutationId: mutationId,\r\n                                document: mutation,\r\n                                variables: variables,\r\n                                fetchPolicy: fetchPolicy,\r\n                                errorPolicy: errorPolicy,\r\n                                context: context,\r\n                                updateQueries: updateQueries,\r\n                                update: updateWithProxyFn,\r\n                                keepRootFields: keepRootFields,\r\n                            });\r\n                        }\r\n                        this.broadcastQueries();\r\n                        self = this;\r\n                        return [2, new Promise(function (resolve, reject) {\r\n                                return asyncMap(self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false), function (result) {\r\n                                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\r\n                                        throw new ApolloError({\r\n                                            graphQLErrors: result.errors,\r\n                                        });\r\n                                    }\r\n                                    if (mutationStoreValue) {\r\n                                        mutationStoreValue.loading = false;\r\n                                        mutationStoreValue.error = null;\r\n                                    }\r\n                                    var storeResult = __assign({}, result);\r\n                                    if (typeof refetchQueries === \"function\") {\r\n                                        refetchQueries = refetchQueries(storeResult);\r\n                                    }\r\n                                    if (errorPolicy === 'ignore' &&\r\n                                        graphQLResultHasError(storeResult)) {\r\n                                        delete storeResult.errors;\r\n                                    }\r\n                                    return self.markMutationResult({\r\n                                        mutationId: mutationId,\r\n                                        result: storeResult,\r\n                                        document: mutation,\r\n                                        variables: variables,\r\n                                        fetchPolicy: fetchPolicy,\r\n                                        errorPolicy: errorPolicy,\r\n                                        context: context,\r\n                                        update: updateWithProxyFn,\r\n                                        updateQueries: updateQueries,\r\n                                        awaitRefetchQueries: awaitRefetchQueries,\r\n                                        refetchQueries: refetchQueries,\r\n                                        removeOptimistic: optimisticResponse ? mutationId : void 0,\r\n                                        onQueryUpdated: onQueryUpdated,\r\n                                        keepRootFields: keepRootFields,\r\n                                    });\r\n                                }).subscribe({\r\n                                    next: function (storeResult) {\r\n                                        self.broadcastQueries();\r\n                                        resolve(storeResult);\r\n                                    },\r\n                                    error: function (err) {\r\n                                        if (mutationStoreValue) {\r\n                                            mutationStoreValue.loading = false;\r\n                                            mutationStoreValue.error = err;\r\n                                        }\r\n                                        if (optimisticResponse) {\r\n                                            self.cache.removeOptimistic(mutationId);\r\n                                        }\r\n                                        self.broadcastQueries();\r\n                                        reject(err instanceof ApolloError ? err : new ApolloError({\r\n                                            networkError: err,\r\n                                        }));\r\n                                    },\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    QueryManager.prototype.markMutationResult = function (mutation, cache) {\r\n        var _this = this;\r\n        if (cache === void 0) { cache = this.cache; }\r\n        var result = mutation.result;\r\n        var cacheWrites = [];\r\n        var skipCache = mutation.fetchPolicy === \"no-cache\";\r\n        if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\r\n            cacheWrites.push({\r\n                result: result.data,\r\n                dataId: 'ROOT_MUTATION',\r\n                query: mutation.document,\r\n                variables: mutation.variables,\r\n            });\r\n            var updateQueries_1 = mutation.updateQueries;\r\n            if (updateQueries_1) {\r\n                this.queries.forEach(function (_a, queryId) {\r\n                    var observableQuery = _a.observableQuery;\r\n                    var queryName = observableQuery && observableQuery.queryName;\r\n                    if (!queryName || !hasOwnProperty.call(updateQueries_1, queryName)) {\r\n                        return;\r\n                    }\r\n                    var updater = updateQueries_1[queryName];\r\n                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;\r\n                    var _c = cache.diff({\r\n                        query: document,\r\n                        variables: variables,\r\n                        returnPartialData: true,\r\n                        optimistic: false,\r\n                    }), currentQueryResult = _c.result, complete = _c.complete;\r\n                    if (complete && currentQueryResult) {\r\n                        var nextQueryResult = updater(currentQueryResult, {\r\n                            mutationResult: result,\r\n                            queryName: document && getOperationName(document) || void 0,\r\n                            queryVariables: variables,\r\n                        });\r\n                        if (nextQueryResult) {\r\n                            cacheWrites.push({\r\n                                result: nextQueryResult,\r\n                                dataId: 'ROOT_QUERY',\r\n                                query: document,\r\n                                variables: variables,\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (cacheWrites.length > 0 ||\r\n            mutation.refetchQueries ||\r\n            mutation.update ||\r\n            mutation.onQueryUpdated ||\r\n            mutation.removeOptimistic) {\r\n            var results_1 = [];\r\n            this.refetchQueries({\r\n                updateCache: function (cache) {\r\n                    if (!skipCache) {\r\n                        cacheWrites.forEach(function (write) { return cache.write(write); });\r\n                    }\r\n                    var update = mutation.update;\r\n                    if (update) {\r\n                        if (!skipCache) {\r\n                            var diff = cache.diff({\r\n                                id: \"ROOT_MUTATION\",\r\n                                query: _this.transform(mutation.document).asQuery,\r\n                                variables: mutation.variables,\r\n                                optimistic: false,\r\n                                returnPartialData: true,\r\n                            });\r\n                            if (diff.complete) {\r\n                                result = __assign(__assign({}, result), { data: diff.result });\r\n                            }\r\n                        }\r\n                        update(cache, result, {\r\n                            context: mutation.context,\r\n                            variables: mutation.variables,\r\n                        });\r\n                    }\r\n                    if (!skipCache && !mutation.keepRootFields) {\r\n                        cache.modify({\r\n                            id: 'ROOT_MUTATION',\r\n                            fields: function (value, _a) {\r\n                                var fieldName = _a.fieldName, DELETE = _a.DELETE;\r\n                                return fieldName === \"__typename\" ? value : DELETE;\r\n                            },\r\n                        });\r\n                    }\r\n                },\r\n                include: mutation.refetchQueries,\r\n                optimistic: false,\r\n                removeOptimistic: mutation.removeOptimistic,\r\n                onQueryUpdated: mutation.onQueryUpdated || null,\r\n            }).forEach(function (result) { return results_1.push(result); });\r\n            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\r\n                return Promise.all(results_1).then(function () { return result; });\r\n            }\r\n        }\r\n        return Promise.resolve(result);\r\n    };\r\n    QueryManager.prototype.markMutationOptimistic = function (optimisticResponse, mutation) {\r\n        var _this = this;\r\n        var data = typeof optimisticResponse === \"function\"\r\n            ? optimisticResponse(mutation.variables)\r\n            : optimisticResponse;\r\n        return this.cache.recordOptimisticTransaction(function (cache) {\r\n            try {\r\n                _this.markMutationResult(__assign(__assign({}, mutation), { result: { data: data } }), cache);\r\n            }\r\n            catch (error) {\r\n                __DEV__ && invariant.error(error);\r\n            }\r\n        }, mutation.mutationId);\r\n    };\r\n    QueryManager.prototype.fetchQuery = function (queryId, options, networkStatus) {\r\n        return this.fetchQueryObservable(queryId, options, networkStatus).promise;\r\n    };\r\n    QueryManager.prototype.getQueryStore = function () {\r\n        var store = Object.create(null);\r\n        this.queries.forEach(function (info, queryId) {\r\n            store[queryId] = {\r\n                variables: info.variables,\r\n                networkStatus: info.networkStatus,\r\n                networkError: info.networkError,\r\n                graphQLErrors: info.graphQLErrors,\r\n            };\r\n        });\r\n        return store;\r\n    };\r\n    QueryManager.prototype.resetErrors = function (queryId) {\r\n        var queryInfo = this.queries.get(queryId);\r\n        if (queryInfo) {\r\n            queryInfo.networkError = undefined;\r\n            queryInfo.graphQLErrors = [];\r\n        }\r\n    };\r\n    QueryManager.prototype.transform = function (document) {\r\n        var transformCache = this.transformCache;\r\n        if (!transformCache.has(document)) {\r\n            var transformed = this.cache.transformDocument(document);\r\n            var forLink = removeConnectionDirectiveFromDocument(this.cache.transformForLink(transformed));\r\n            var clientQuery = this.localState.clientQuery(transformed);\r\n            var serverQuery = forLink && this.localState.serverQuery(forLink);\r\n            var cacheEntry_1 = {\r\n                document: transformed,\r\n                hasClientExports: hasClientExports(transformed),\r\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\r\n                clientQuery: clientQuery,\r\n                serverQuery: serverQuery,\r\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\r\n                asQuery: __assign(__assign({}, transformed), { definitions: transformed.definitions.map(function (def) {\r\n                        if (def.kind === \"OperationDefinition\" &&\r\n                            def.operation !== \"query\") {\r\n                            return __assign(__assign({}, def), { operation: \"query\" });\r\n                        }\r\n                        return def;\r\n                    }) })\r\n            };\r\n            var add = function (doc) {\r\n                if (doc && !transformCache.has(doc)) {\r\n                    transformCache.set(doc, cacheEntry_1);\r\n                }\r\n            };\r\n            add(document);\r\n            add(transformed);\r\n            add(clientQuery);\r\n            add(serverQuery);\r\n        }\r\n        return transformCache.get(document);\r\n    };\r\n    QueryManager.prototype.getVariables = function (document, variables) {\r\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\r\n    };\r\n    QueryManager.prototype.watchQuery = function (options) {\r\n        options = __assign(__assign({}, options), { variables: this.getVariables(options.query, options.variables) });\r\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\r\n            options.notifyOnNetworkStatusChange = false;\r\n        }\r\n        var queryInfo = new QueryInfo(this);\r\n        var observable = new ObservableQuery({\r\n            queryManager: this,\r\n            queryInfo: queryInfo,\r\n            options: options,\r\n        });\r\n        this.queries.set(observable.queryId, queryInfo);\r\n        queryInfo.init({\r\n            document: options.query,\r\n            observableQuery: observable,\r\n            variables: options.variables,\r\n        });\r\n        return observable;\r\n    };\r\n    QueryManager.prototype.query = function (options, queryId) {\r\n        var _this = this;\r\n        if (queryId === void 0) { queryId = this.generateQueryId(); }\r\n        __DEV__ ? invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\r\n            'in the query option.') : invariant(options.query, 16);\r\n        __DEV__ ? invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.') : invariant(options.query.kind === 'Document', 17);\r\n        __DEV__ ? invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.') : invariant(!options.returnPartialData, 18);\r\n        __DEV__ ? invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.') : invariant(!options.pollInterval, 19);\r\n        return this.fetchQuery(queryId, options).finally(function () { return _this.stopQuery(queryId); });\r\n    };\r\n    QueryManager.prototype.generateQueryId = function () {\r\n        return String(this.queryIdCounter++);\r\n    };\r\n    QueryManager.prototype.generateRequestId = function () {\r\n        return this.requestIdCounter++;\r\n    };\r\n    QueryManager.prototype.generateMutationId = function () {\r\n        return String(this.mutationIdCounter++);\r\n    };\r\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\r\n        this.stopQueryInStoreNoBroadcast(queryId);\r\n        this.broadcastQueries();\r\n    };\r\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\r\n        var queryInfo = this.queries.get(queryId);\r\n        if (queryInfo)\r\n            queryInfo.stop();\r\n    };\r\n    QueryManager.prototype.clearStore = function () {\r\n        this.cancelPendingFetches(__DEV__ ? new InvariantError('Store reset while query was in flight (not completed in link chain)') : new InvariantError(20));\r\n        this.queries.forEach(function (queryInfo) {\r\n            if (queryInfo.observableQuery) {\r\n                queryInfo.networkStatus = NetworkStatus.loading;\r\n            }\r\n            else {\r\n                queryInfo.stop();\r\n            }\r\n        });\r\n        if (this.mutationStore) {\r\n            this.mutationStore = Object.create(null);\r\n        }\r\n        return this.cache.reset();\r\n    };\r\n    QueryManager.prototype.resetStore = function () {\r\n        var _this = this;\r\n        return this.clearStore().then(function () {\r\n            return _this.reFetchObservableQueries();\r\n        });\r\n    };\r\n    QueryManager.prototype.getObservableQueries = function (include) {\r\n        var _this = this;\r\n        if (include === void 0) { include = \"active\"; }\r\n        var queries = new Map();\r\n        var queryNamesAndDocs = new Map();\r\n        var legacyQueryOptions = new Set();\r\n        if (Array.isArray(include)) {\r\n            include.forEach(function (desc) {\r\n                if (typeof desc === \"string\") {\r\n                    queryNamesAndDocs.set(desc, false);\r\n                }\r\n                else if (isDocumentNode(desc)) {\r\n                    queryNamesAndDocs.set(_this.transform(desc).document, false);\r\n                }\r\n                else if (isNonNullObject(desc) && desc.query) {\r\n                    legacyQueryOptions.add(desc);\r\n                }\r\n            });\r\n        }\r\n        this.queries.forEach(function (_a, queryId) {\r\n            var oq = _a.observableQuery, document = _a.document;\r\n            if (oq) {\r\n                if (include === \"all\") {\r\n                    queries.set(queryId, oq);\r\n                    return;\r\n                }\r\n                var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;\r\n                if (fetchPolicy === \"standby\" || !oq.hasObservers()) {\r\n                    return;\r\n                }\r\n                if (include === \"active\" ||\r\n                    (queryName && queryNamesAndDocs.has(queryName)) ||\r\n                    (document && queryNamesAndDocs.has(document))) {\r\n                    queries.set(queryId, oq);\r\n                    if (queryName)\r\n                        queryNamesAndDocs.set(queryName, true);\r\n                    if (document)\r\n                        queryNamesAndDocs.set(document, true);\r\n                }\r\n            }\r\n        });\r\n        if (legacyQueryOptions.size) {\r\n            legacyQueryOptions.forEach(function (options) {\r\n                var queryId = makeUniqueId(\"legacyOneTimeQuery\");\r\n                var queryInfo = _this.getQuery(queryId).init({\r\n                    document: options.query,\r\n                    variables: options.variables,\r\n                });\r\n                var oq = new ObservableQuery({\r\n                    queryManager: _this,\r\n                    queryInfo: queryInfo,\r\n                    options: __assign(__assign({}, options), { fetchPolicy: \"network-only\" }),\r\n                });\r\n                invariant(oq.queryId === queryId);\r\n                queryInfo.setObservableQuery(oq);\r\n                queries.set(queryId, oq);\r\n            });\r\n        }\r\n        if (__DEV__ && queryNamesAndDocs.size) {\r\n            queryNamesAndDocs.forEach(function (included, nameOrDoc) {\r\n                if (!included) {\r\n                    __DEV__ && invariant.warn(\"Unknown query \" + (typeof nameOrDoc === \"string\" ? \"named \" : \"\") + JSON.stringify(nameOrDoc, null, 2) + \" requested in refetchQueries options.include array\");\r\n                }\r\n            });\r\n        }\r\n        return queries;\r\n    };\r\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\r\n        var _this = this;\r\n        if (includeStandby === void 0) { includeStandby = false; }\r\n        var observableQueryPromises = [];\r\n        this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(function (observableQuery, queryId) {\r\n            var fetchPolicy = observableQuery.options.fetchPolicy;\r\n            observableQuery.resetLastResults();\r\n            if (includeStandby ||\r\n                (fetchPolicy !== \"standby\" &&\r\n                    fetchPolicy !== \"cache-only\")) {\r\n                observableQueryPromises.push(observableQuery.refetch());\r\n            }\r\n            _this.getQuery(queryId).setDiff(null);\r\n        });\r\n        this.broadcastQueries();\r\n        return Promise.all(observableQueryPromises);\r\n    };\r\n    QueryManager.prototype.setObservableQuery = function (observableQuery) {\r\n        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\r\n    };\r\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\r\n        var _this = this;\r\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, errorPolicy = _a.errorPolicy, variables = _a.variables, _b = _a.context, context = _b === void 0 ? {} : _b;\r\n        query = this.transform(query).document;\r\n        variables = this.getVariables(query, variables);\r\n        var makeObservable = function (variables) {\r\n            return _this.getObservableFromLink(query, context, variables).map(function (result) {\r\n                if (fetchPolicy !== 'no-cache') {\r\n                    if (shouldWriteResult(result, errorPolicy)) {\r\n                        _this.cache.write({\r\n                            query: query,\r\n                            result: result.data,\r\n                            dataId: 'ROOT_SUBSCRIPTION',\r\n                            variables: variables,\r\n                        });\r\n                    }\r\n                    _this.broadcastQueries();\r\n                }\r\n                if (graphQLResultHasError(result)) {\r\n                    throw new ApolloError({\r\n                        graphQLErrors: result.errors,\r\n                    });\r\n                }\r\n                return result;\r\n            });\r\n        };\r\n        if (this.transform(query).hasClientExports) {\r\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);\r\n            return new Observable(function (observer) {\r\n                var sub = null;\r\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\r\n                return function () { return sub && sub.unsubscribe(); };\r\n            });\r\n        }\r\n        return makeObservable(variables);\r\n    };\r\n    QueryManager.prototype.stopQuery = function (queryId) {\r\n        this.stopQueryNoBroadcast(queryId);\r\n        this.broadcastQueries();\r\n    };\r\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\r\n        this.stopQueryInStoreNoBroadcast(queryId);\r\n        this.removeQuery(queryId);\r\n    };\r\n    QueryManager.prototype.removeQuery = function (queryId) {\r\n        this.fetchCancelFns.delete(queryId);\r\n        this.getQuery(queryId).stop();\r\n        this.queries.delete(queryId);\r\n    };\r\n    QueryManager.prototype.broadcastQueries = function () {\r\n        if (this.onBroadcast)\r\n            this.onBroadcast();\r\n        this.queries.forEach(function (info) { return info.notify(); });\r\n    };\r\n    QueryManager.prototype.getLocalState = function () {\r\n        return this.localState;\r\n    };\r\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\r\n        var _this = this;\r\n        var _a;\r\n        if (deduplication === void 0) { deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication; }\r\n        var observable;\r\n        var serverQuery = this.transform(query).serverQuery;\r\n        if (serverQuery) {\r\n            var _b = this, inFlightLinkObservables_1 = _b.inFlightLinkObservables, link = _b.link;\r\n            var operation = {\r\n                query: serverQuery,\r\n                variables: variables,\r\n                operationName: getOperationName(serverQuery) || void 0,\r\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\r\n            };\r\n            context = operation.context;\r\n            if (deduplication) {\r\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\r\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\r\n                var varJson_1 = canonicalStringify(variables);\r\n                observable = byVariables_1.get(varJson_1);\r\n                if (!observable) {\r\n                    var concast = new Concast([\r\n                        execute(link, operation)\r\n                    ]);\r\n                    byVariables_1.set(varJson_1, observable = concast);\r\n                    concast.cleanup(function () {\r\n                        if (byVariables_1.delete(varJson_1) &&\r\n                            byVariables_1.size < 1) {\r\n                            inFlightLinkObservables_1.delete(serverQuery);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                observable = new Concast([\r\n                    execute(link, operation)\r\n                ]);\r\n            }\r\n        }\r\n        else {\r\n            observable = new Concast([\r\n                Observable.of({ data: {} })\r\n            ]);\r\n            context = this.prepareContext(context);\r\n        }\r\n        var clientQuery = this.transform(query).clientQuery;\r\n        if (clientQuery) {\r\n            observable = asyncMap(observable, function (result) {\r\n                return _this.localState.runResolvers({\r\n                    document: clientQuery,\r\n                    remoteResult: result,\r\n                    context: context,\r\n                    variables: variables,\r\n                });\r\n            });\r\n        }\r\n        return observable;\r\n    };\r\n    QueryManager.prototype.getResultsFromLink = function (queryInfo, cacheWriteBehavior, options) {\r\n        var requestId = queryInfo.lastRequestId = this.generateRequestId();\r\n        return asyncMap(this.getObservableFromLink(queryInfo.document, options.context, options.variables), function (result) {\r\n            var hasErrors = isNonEmptyArray(result.errors);\r\n            if (requestId >= queryInfo.lastRequestId) {\r\n                if (hasErrors && options.errorPolicy === \"none\") {\r\n                    throw queryInfo.markError(new ApolloError({\r\n                        graphQLErrors: result.errors,\r\n                    }));\r\n                }\r\n                queryInfo.markResult(result, options, cacheWriteBehavior);\r\n                queryInfo.markReady();\r\n            }\r\n            var aqr = {\r\n                data: result.data,\r\n                loading: false,\r\n                networkStatus: queryInfo.networkStatus || NetworkStatus.ready,\r\n            };\r\n            if (hasErrors && options.errorPolicy !== \"ignore\") {\r\n                aqr.errors = result.errors;\r\n            }\r\n            return aqr;\r\n        }, function (networkError) {\r\n            var error = isApolloError(networkError)\r\n                ? networkError\r\n                : new ApolloError({ networkError: networkError });\r\n            if (requestId >= queryInfo.lastRequestId) {\r\n                queryInfo.markError(error);\r\n            }\r\n            throw error;\r\n        });\r\n    };\r\n    QueryManager.prototype.fetchQueryObservable = function (queryId, options, networkStatus) {\r\n        var _this = this;\r\n        if (networkStatus === void 0) { networkStatus = NetworkStatus.loading; }\r\n        var query = this.transform(options.query).document;\r\n        var variables = this.getVariables(query, options.variables);\r\n        var queryInfo = this.getQuery(queryId);\r\n        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? \"none\" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;\r\n        var normalized = Object.assign({}, options, {\r\n            query: query,\r\n            variables: variables,\r\n            fetchPolicy: fetchPolicy,\r\n            errorPolicy: errorPolicy,\r\n            returnPartialData: returnPartialData,\r\n            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\r\n            context: context,\r\n        });\r\n        var fromVariables = function (variables) {\r\n            normalized.variables = variables;\r\n            return _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\r\n        };\r\n        this.fetchCancelFns.set(queryId, function (reason) {\r\n            setTimeout(function () { return concast.cancel(reason); });\r\n        });\r\n        var concast = new Concast(this.transform(normalized.query).hasClientExports\r\n            ? this.localState.addExportedVariables(normalized.query, normalized.variables, normalized.context).then(fromVariables)\r\n            : fromVariables(normalized.variables));\r\n        concast.cleanup(function () {\r\n            _this.fetchCancelFns.delete(queryId);\r\n            applyNextFetchPolicy(options);\r\n        });\r\n        return concast;\r\n    };\r\n    QueryManager.prototype.refetchQueries = function (_a) {\r\n        var _this = this;\r\n        var updateCache = _a.updateCache, include = _a.include, _b = _a.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? makeUniqueId(\"refetchQueries\") : void 0 : _c, onQueryUpdated = _a.onQueryUpdated;\r\n        var includedQueriesById = new Map();\r\n        if (include) {\r\n            this.getObservableQueries(include).forEach(function (oq, queryId) {\r\n                includedQueriesById.set(queryId, {\r\n                    oq: oq,\r\n                    lastDiff: _this.getQuery(queryId).getDiff(),\r\n                });\r\n            });\r\n        }\r\n        var results = new Map;\r\n        if (updateCache) {\r\n            this.cache.batch({\r\n                update: updateCache,\r\n                optimistic: optimistic && removeOptimistic || false,\r\n                removeOptimistic: removeOptimistic,\r\n                onWatchUpdated: function (watch, diff, lastDiff) {\r\n                    var oq = watch.watcher instanceof QueryInfo &&\r\n                        watch.watcher.observableQuery;\r\n                    if (oq) {\r\n                        if (onQueryUpdated) {\r\n                            includedQueriesById.delete(oq.queryId);\r\n                            var result = onQueryUpdated(oq, diff, lastDiff);\r\n                            if (result === true) {\r\n                                result = oq.refetch();\r\n                            }\r\n                            if (result !== false) {\r\n                                results.set(oq, result);\r\n                            }\r\n                            return false;\r\n                        }\r\n                        if (onQueryUpdated !== null) {\r\n                            includedQueriesById.set(oq.queryId, { oq: oq, lastDiff: lastDiff, diff: diff });\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        }\r\n        if (includedQueriesById.size) {\r\n            includedQueriesById.forEach(function (_a, queryId) {\r\n                var oq = _a.oq, lastDiff = _a.lastDiff, diff = _a.diff;\r\n                var result;\r\n                if (onQueryUpdated) {\r\n                    if (!diff) {\r\n                        var info = oq[\"queryInfo\"];\r\n                        info.reset();\r\n                        diff = info.getDiff();\r\n                    }\r\n                    result = onQueryUpdated(oq, diff, lastDiff);\r\n                }\r\n                if (!onQueryUpdated || result === true) {\r\n                    result = oq.refetch();\r\n                }\r\n                if (result !== false) {\r\n                    results.set(oq, result);\r\n                }\r\n                if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\r\n                    _this.stopQueryNoBroadcast(queryId);\r\n                }\r\n            });\r\n        }\r\n        if (removeOptimistic) {\r\n            this.cache.removeOptimistic(removeOptimistic);\r\n        }\r\n        return results;\r\n    };\r\n    QueryManager.prototype.fetchQueryByPolicy = function (queryInfo, _a, networkStatus) {\r\n        var _this = this;\r\n        var query = _a.query, variables = _a.variables, fetchPolicy = _a.fetchPolicy, refetchWritePolicy = _a.refetchWritePolicy, errorPolicy = _a.errorPolicy, returnPartialData = _a.returnPartialData, context = _a.context, notifyOnNetworkStatusChange = _a.notifyOnNetworkStatusChange;\r\n        var oldNetworkStatus = queryInfo.networkStatus;\r\n        queryInfo.init({\r\n            document: query,\r\n            variables: variables,\r\n            networkStatus: networkStatus,\r\n        });\r\n        var readCache = function () { return queryInfo.getDiff(variables); };\r\n        var resultsFromCache = function (diff, networkStatus) {\r\n            if (networkStatus === void 0) { networkStatus = queryInfo.networkStatus || NetworkStatus.loading; }\r\n            var data = diff.result;\r\n            if (__DEV__ &&\r\n                !returnPartialData &&\r\n                !equal(data, {})) {\r\n                logMissingFieldErrors(diff.missing);\r\n            }\r\n            var fromData = function (data) { return Observable.of(__assign({ data: data, loading: isNetworkRequestInFlight(networkStatus), networkStatus: networkStatus }, (diff.complete ? null : { partial: true }))); };\r\n            if (data && _this.transform(query).hasForcedResolvers) {\r\n                return _this.localState.runResolvers({\r\n                    document: query,\r\n                    remoteResult: { data: data },\r\n                    context: context,\r\n                    variables: variables,\r\n                    onlyRunForcedResolvers: true,\r\n                }).then(function (resolved) { return fromData(resolved.data || void 0); });\r\n            }\r\n            return fromData(data);\r\n        };\r\n        var cacheWriteBehavior = fetchPolicy === \"no-cache\" ? 0 :\r\n            (networkStatus === NetworkStatus.refetch &&\r\n                refetchWritePolicy !== \"merge\") ? 1\r\n                : 2;\r\n        var resultsFromLink = function () {\r\n            return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {\r\n                variables: variables,\r\n                context: context,\r\n                fetchPolicy: fetchPolicy,\r\n                errorPolicy: errorPolicy,\r\n            });\r\n        };\r\n        var shouldNotify = notifyOnNetworkStatusChange &&\r\n            typeof oldNetworkStatus === \"number\" &&\r\n            oldNetworkStatus !== networkStatus &&\r\n            isNetworkRequestInFlight(networkStatus);\r\n        switch (fetchPolicy) {\r\n            default:\r\n            case \"cache-first\": {\r\n                var diff = readCache();\r\n                if (diff.complete) {\r\n                    return [\r\n                        resultsFromCache(diff, queryInfo.markReady()),\r\n                    ];\r\n                }\r\n                if (returnPartialData || shouldNotify) {\r\n                    return [\r\n                        resultsFromCache(diff),\r\n                        resultsFromLink(),\r\n                    ];\r\n                }\r\n                return [\r\n                    resultsFromLink(),\r\n                ];\r\n            }\r\n            case \"cache-and-network\": {\r\n                var diff = readCache();\r\n                if (diff.complete || returnPartialData || shouldNotify) {\r\n                    return [\r\n                        resultsFromCache(diff),\r\n                        resultsFromLink(),\r\n                    ];\r\n                }\r\n                return [\r\n                    resultsFromLink(),\r\n                ];\r\n            }\r\n            case \"cache-only\":\r\n                return [\r\n                    resultsFromCache(readCache(), queryInfo.markReady()),\r\n                ];\r\n            case \"network-only\":\r\n                if (shouldNotify) {\r\n                    return [\r\n                        resultsFromCache(readCache()),\r\n                        resultsFromLink(),\r\n                    ];\r\n                }\r\n                return [resultsFromLink()];\r\n            case \"no-cache\":\r\n                if (shouldNotify) {\r\n                    return [\r\n                        resultsFromCache(queryInfo.getDiff()),\r\n                        resultsFromLink(),\r\n                    ];\r\n                }\r\n                return [resultsFromLink()];\r\n            case \"standby\":\r\n                return [];\r\n        }\r\n    };\r\n    QueryManager.prototype.getQuery = function (queryId) {\r\n        if (queryId && !this.queries.has(queryId)) {\r\n            this.queries.set(queryId, new QueryInfo(this, queryId));\r\n        }\r\n        return this.queries.get(queryId);\r\n    };\r\n    QueryManager.prototype.prepareContext = function (context) {\r\n        if (context === void 0) { context = {}; }\r\n        var newContext = this.localState.prepareContext(context);\r\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\r\n    };\r\n    return QueryManager;\r\n}());\r\nexport { QueryManager };\r\n","import { __assign } from \"tslib\";\r\nimport { invariant, InvariantError } from \"../utilities/globals/index.js\";\r\nimport { ApolloLink, execute } from \"../link/core/index.js\";\r\nimport { compact } from \"../utilities/index.js\";\r\nimport { version } from \"../version.js\";\r\nimport { HttpLink } from \"../link/http/index.js\";\r\nimport { QueryManager } from \"./QueryManager.js\";\r\nimport { LocalState, } from \"./LocalState.js\";\r\nvar hasSuggestedDevtools = false;\r\nexport function mergeOptions(defaults, options) {\r\n    return compact(defaults, options, options.variables && {\r\n        variables: __assign(__assign({}, defaults.variables), options.variables),\r\n    });\r\n}\r\nvar ApolloClient = (function () {\r\n    function ApolloClient(options) {\r\n        var _this = this;\r\n        this.defaultOptions = {};\r\n        this.resetStoreCallbacks = [];\r\n        this.clearStoreCallbacks = [];\r\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ? typeof window === 'object' &&\r\n            !window.__APOLLO_CLIENT__ &&\r\n            __DEV__ : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? false : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\r\n        var link = options.link;\r\n        if (!link) {\r\n            link = uri\r\n                ? new HttpLink({ uri: uri, credentials: credentials, headers: headers })\r\n                : ApolloLink.empty();\r\n        }\r\n        if (!cache) {\r\n            throw __DEV__ ? new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" +\r\n                \"in the options object. \\n\" +\r\n                \"For more information, please visit: https://go.apollo.dev/c/docs\") : new InvariantError(9);\r\n        }\r\n        this.link = link;\r\n        this.cache = cache;\r\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\r\n        this.queryDeduplication = queryDeduplication;\r\n        this.defaultOptions = defaultOptions || {};\r\n        this.typeDefs = typeDefs;\r\n        if (ssrForceFetchDelay) {\r\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\r\n        }\r\n        this.watchQuery = this.watchQuery.bind(this);\r\n        this.query = this.query.bind(this);\r\n        this.mutate = this.mutate.bind(this);\r\n        this.resetStore = this.resetStore.bind(this);\r\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\r\n        if (connectToDevTools && typeof window === 'object') {\r\n            window.__APOLLO_CLIENT__ = this;\r\n        }\r\n        if (!hasSuggestedDevtools && __DEV__) {\r\n            hasSuggestedDevtools = true;\r\n            if (typeof window !== 'undefined' &&\r\n                window.document &&\r\n                window.top === window.self &&\r\n                !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\r\n                var nav = window.navigator;\r\n                var ua = nav && nav.userAgent;\r\n                var url = void 0;\r\n                if (typeof ua === \"string\") {\r\n                    if (ua.indexOf(\"Chrome/\") > -1) {\r\n                        url = \"https://chrome.google.com/webstore/detail/\" +\r\n                            \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\r\n                    }\r\n                    else if (ua.indexOf(\"Firefox/\") > -1) {\r\n                        url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\r\n                    }\r\n                }\r\n                if (url) {\r\n                    __DEV__ && invariant.log(\"Download the Apollo DevTools for a better development \" +\r\n                        \"experience: \" + url);\r\n                }\r\n            }\r\n        }\r\n        this.version = version;\r\n        this.localState = new LocalState({\r\n            cache: cache,\r\n            client: this,\r\n            resolvers: resolvers,\r\n            fragmentMatcher: fragmentMatcher,\r\n        });\r\n        this.queryManager = new QueryManager({\r\n            cache: this.cache,\r\n            link: this.link,\r\n            queryDeduplication: queryDeduplication,\r\n            ssrMode: ssrMode,\r\n            clientAwareness: {\r\n                name: clientAwarenessName,\r\n                version: clientAwarenessVersion,\r\n            },\r\n            localState: this.localState,\r\n            assumeImmutableResults: assumeImmutableResults,\r\n            onBroadcast: connectToDevTools ? function () {\r\n                if (_this.devToolsHookCb) {\r\n                    _this.devToolsHookCb({\r\n                        action: {},\r\n                        state: {\r\n                            queries: _this.queryManager.getQueryStore(),\r\n                            mutations: _this.queryManager.mutationStore || {},\r\n                        },\r\n                        dataWithOptimisticResults: _this.cache.extract(true),\r\n                    });\r\n                }\r\n            } : void 0,\r\n        });\r\n    }\r\n    ApolloClient.prototype.stop = function () {\r\n        this.queryManager.stop();\r\n    };\r\n    ApolloClient.prototype.watchQuery = function (options) {\r\n        if (this.defaultOptions.watchQuery) {\r\n            options = mergeOptions(this.defaultOptions.watchQuery, options);\r\n        }\r\n        if (this.disableNetworkFetches &&\r\n            (options.fetchPolicy === 'network-only' ||\r\n                options.fetchPolicy === 'cache-and-network')) {\r\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\r\n        }\r\n        return this.queryManager.watchQuery(options);\r\n    };\r\n    ApolloClient.prototype.query = function (options) {\r\n        if (this.defaultOptions.query) {\r\n            options = mergeOptions(this.defaultOptions.query, options);\r\n        }\r\n        __DEV__ ? invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\r\n            'client.query can only return a single result. Please use client.watchQuery ' +\r\n            'to receive multiple results from the cache and the network, or consider ' +\r\n            'using a different fetchPolicy, such as cache-first or network-only.') : invariant(options.fetchPolicy !== 'cache-and-network', 10);\r\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\r\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\r\n        }\r\n        return this.queryManager.query(options);\r\n    };\r\n    ApolloClient.prototype.mutate = function (options) {\r\n        if (this.defaultOptions.mutate) {\r\n            options = mergeOptions(this.defaultOptions.mutate, options);\r\n        }\r\n        return this.queryManager.mutate(options);\r\n    };\r\n    ApolloClient.prototype.subscribe = function (options) {\r\n        return this.queryManager.startGraphQLSubscription(options);\r\n    };\r\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\r\n        if (optimistic === void 0) { optimistic = false; }\r\n        return this.cache.readQuery(options, optimistic);\r\n    };\r\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\r\n        if (optimistic === void 0) { optimistic = false; }\r\n        return this.cache.readFragment(options, optimistic);\r\n    };\r\n    ApolloClient.prototype.writeQuery = function (options) {\r\n        this.cache.writeQuery(options);\r\n        this.queryManager.broadcastQueries();\r\n    };\r\n    ApolloClient.prototype.writeFragment = function (options) {\r\n        this.cache.writeFragment(options);\r\n        this.queryManager.broadcastQueries();\r\n    };\r\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\r\n        this.devToolsHookCb = cb;\r\n    };\r\n    ApolloClient.prototype.__requestRaw = function (payload) {\r\n        return execute(this.link, payload);\r\n    };\r\n    ApolloClient.prototype.resetStore = function () {\r\n        var _this = this;\r\n        return Promise.resolve()\r\n            .then(function () { return _this.queryManager.clearStore(); })\r\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\r\n            .then(function () { return _this.reFetchObservableQueries(); });\r\n    };\r\n    ApolloClient.prototype.clearStore = function () {\r\n        var _this = this;\r\n        return Promise.resolve()\r\n            .then(function () { return _this.queryManager.clearStore(); })\r\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\r\n    };\r\n    ApolloClient.prototype.onResetStore = function (cb) {\r\n        var _this = this;\r\n        this.resetStoreCallbacks.push(cb);\r\n        return function () {\r\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\r\n        };\r\n    };\r\n    ApolloClient.prototype.onClearStore = function (cb) {\r\n        var _this = this;\r\n        this.clearStoreCallbacks.push(cb);\r\n        return function () {\r\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\r\n        };\r\n    };\r\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\r\n        return this.queryManager.reFetchObservableQueries(includeStandby);\r\n    };\r\n    ApolloClient.prototype.refetchQueries = function (options) {\r\n        var map = this.queryManager.refetchQueries(options);\r\n        var queries = [];\r\n        var results = [];\r\n        map.forEach(function (result, obsQuery) {\r\n            queries.push(obsQuery);\r\n            results.push(result);\r\n        });\r\n        var result = Promise.all(results);\r\n        result.queries = queries;\r\n        result.results = results;\r\n        result.catch(function (error) {\r\n            __DEV__ && invariant.debug(\"In client.refetchQueries, Promise.all promise rejected with error \" + error);\r\n        });\r\n        return result;\r\n    };\r\n    ApolloClient.prototype.getObservableQueries = function (include) {\r\n        if (include === void 0) { include = \"active\"; }\r\n        return this.queryManager.getObservableQueries(include);\r\n    };\r\n    ApolloClient.prototype.extract = function (optimistic) {\r\n        return this.cache.extract(optimistic);\r\n    };\r\n    ApolloClient.prototype.restore = function (serializedState) {\r\n        return this.cache.restore(serializedState);\r\n    };\r\n    ApolloClient.prototype.addResolvers = function (resolvers) {\r\n        this.localState.addResolvers(resolvers);\r\n    };\r\n    ApolloClient.prototype.setResolvers = function (resolvers) {\r\n        this.localState.setResolvers(resolvers);\r\n    };\r\n    ApolloClient.prototype.getResolvers = function () {\r\n        return this.localState.getResolvers();\r\n    };\r\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\r\n        this.localState.setFragmentMatcher(fragmentMatcher);\r\n    };\r\n    ApolloClient.prototype.setLink = function (newLink) {\r\n        this.link = this.queryManager.link = newLink;\r\n    };\r\n    return ApolloClient;\r\n}());\r\nexport { ApolloClient };\r\n","import * as i0 from '@angular/core';\r\nimport { InjectionToken, Injectable, NgZone, Optional, Inject } from '@angular/core';\r\nimport { ApolloClient } from '@apollo/client/core';\r\nimport * as ɵngcc0 from '@angular/core';\r\nexport { gql, gql as graphql } from '@apollo/client/core';\r\nimport { Observable, queueScheduler, observable, from } from 'rxjs';\r\nimport { observeOn, startWith } from 'rxjs/operators';\r\n\r\nfunction fromPromise(promiseFn) {\r\n    return new Observable((subscriber) => {\r\n        promiseFn().then((result) => {\r\n            if (!subscriber.closed) {\r\n                subscriber.next(result);\r\n                subscriber.complete();\r\n            }\r\n        }, (error) => {\r\n            if (!subscriber.closed) {\r\n                subscriber.error(error);\r\n            }\r\n        });\r\n        return () => subscriber.unsubscribe();\r\n    });\r\n}\r\nclass ZoneScheduler {\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.now = Date.now ? Date.now : () => +new Date();\r\n    }\r\n    schedule(work, delay = 0, state) {\r\n        return this.zone.run(() => queueScheduler.schedule(work, delay, state));\r\n    }\r\n}\r\nfunction fixObservable(obs) {\r\n    obs[observable] = () => obs;\r\n    return obs;\r\n}\r\nfunction wrapWithZone(obs, ngZone) {\r\n    return obs.pipe(observeOn(new ZoneScheduler(ngZone)));\r\n}\r\nfunction pickFlag(flags, flag, defaultValue) {\r\n    return flags && typeof flags[flag] !== 'undefined'\r\n        ? flags[flag]\r\n        : defaultValue;\r\n}\r\n\r\nclass QueryRef {\r\n    constructor(obsQuery, ngZone, options) {\r\n        this.obsQuery = obsQuery;\r\n        const wrapped = wrapWithZone(from(fixObservable(this.obsQuery)), ngZone);\r\n        this.valueChanges = options.useInitialLoading\r\n            ? wrapped.pipe(startWith(Object.assign(Object.assign({}, this.obsQuery.getCurrentResult(false)), { error: undefined, partial: undefined, stale: true })))\r\n            : wrapped;\r\n        this.queryId = this.obsQuery.queryId;\r\n    }\r\n    // ObservableQuery's methods\r\n    result() {\r\n        return this.obsQuery.result();\r\n    }\r\n    getCurrentResult() {\r\n        return this.obsQuery.getCurrentResult();\r\n    }\r\n    getLastResult() {\r\n        return this.obsQuery.getLastResult();\r\n    }\r\n    getLastError() {\r\n        return this.obsQuery.getLastError();\r\n    }\r\n    resetLastResults() {\r\n        return this.obsQuery.resetLastResults();\r\n    }\r\n    refetch(variables) {\r\n        return this.obsQuery.refetch(variables);\r\n    }\r\n    fetchMore(fetchMoreOptions) {\r\n        return this.obsQuery.fetchMore(fetchMoreOptions);\r\n    }\r\n    subscribeToMore(options) {\r\n        // XXX: there's a bug in apollo-client typings\r\n        // it should not inherit types from ObservableQuery\r\n        return this.obsQuery.subscribeToMore(options);\r\n    }\r\n    updateQuery(mapFn) {\r\n        return this.obsQuery.updateQuery(mapFn);\r\n    }\r\n    stopPolling() {\r\n        return this.obsQuery.stopPolling();\r\n    }\r\n    startPolling(pollInterval) {\r\n        return this.obsQuery.startPolling(pollInterval);\r\n    }\r\n    setOptions(opts) {\r\n        return this.obsQuery.setOptions(opts);\r\n    }\r\n    setVariables(variables) {\r\n        return this.obsQuery.setVariables(variables);\r\n    }\r\n}\r\n\r\nconst APOLLO_FLAGS = new InjectionToken('APOLLO_FLAGS');\r\nconst APOLLO_OPTIONS = new InjectionToken('APOLLO_OPTIONS');\r\nconst APOLLO_NAMED_OPTIONS = new InjectionToken('APOLLO_NAMED_OPTIONS');\r\n\r\nclass ApolloBase {\r\n    constructor(ngZone, flags, _client) {\r\n        this.ngZone = ngZone;\r\n        this.flags = flags;\r\n        this._client = _client;\r\n        this.useInitialLoading = pickFlag(flags, 'useInitialLoading', false);\r\n    }\r\n    watchQuery(options) {\r\n        return new QueryRef(this.ensureClient().watchQuery(Object.assign({}, options)), this.ngZone, Object.assign({ useInitialLoading: this.useInitialLoading }, options));\r\n    }\r\n    query(options) {\r\n        return fromPromise(() => this.ensureClient().query(Object.assign({}, options)));\r\n    }\r\n    mutate(options) {\r\n        return fromPromise(() => this.ensureClient().mutate(Object.assign({}, options)));\r\n    }\r\n    subscribe(options, extra) {\r\n        const obs = from(fixObservable(this.ensureClient().subscribe(Object.assign({}, options))));\r\n        return extra && extra.useZone !== true\r\n            ? obs\r\n            : wrapWithZone(obs, this.ngZone);\r\n    }\r\n    /**\r\n     * Get an access to an instance of ApolloClient\r\n     * @deprecated use `apollo.client` instead\r\n     */\r\n    getClient() {\r\n        return this.client;\r\n    }\r\n    /**\r\n     * Set a new instance of ApolloClient\r\n     * Remember to clean up the store before setting a new client.\r\n     * @deprecated use `apollo.client = client` instead\r\n     *\r\n     * @param client ApolloClient instance\r\n     */\r\n    setClient(client) {\r\n        this.client = client;\r\n    }\r\n    /**\r\n     * Get an access to an instance of ApolloClient\r\n     */\r\n    get client() {\r\n        return this._client;\r\n    }\r\n    /**\r\n     * Set a new instance of ApolloClient\r\n     * Remember to clean up the store before setting a new client.\r\n     *\r\n     * @param client ApolloClient instance\r\n     */\r\n    set client(client) {\r\n        if (this._client) {\r\n            throw new Error('Client has been already defined');\r\n        }\r\n        this._client = client;\r\n    }\r\n    ensureClient() {\r\n        this.checkInstance();\r\n        return this._client;\r\n    }\r\n    checkInstance() {\r\n        if (!this._client) {\r\n            throw new Error('Client has not been defined yet');\r\n        }\r\n    }\r\n}\r\nclass Apollo extends ApolloBase {\r\n    constructor(_ngZone, apolloOptions, apolloNamedOptions, flags) {\r\n        super(_ngZone, flags);\r\n        this._ngZone = _ngZone;\r\n        this.map = new Map();\r\n        if (apolloOptions) {\r\n            this.createDefault(apolloOptions);\r\n        }\r\n        if (apolloNamedOptions && typeof apolloNamedOptions === 'object') {\r\n            for (let name in apolloNamedOptions) {\r\n                if (apolloNamedOptions.hasOwnProperty(name)) {\r\n                    const options = apolloNamedOptions[name];\r\n                    this.createNamed(name, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Create an instance of ApolloClient\r\n     * @param options Options required to create ApolloClient\r\n     * @param name client's name\r\n     */\r\n    create(options, name) {\r\n        if (isDefault(name)) {\r\n            this.createDefault(options);\r\n        }\r\n        else {\r\n            this.createNamed(name, options);\r\n        }\r\n    }\r\n    /**\r\n     * Use a default ApolloClient\r\n     */\r\n    default() {\r\n        return this;\r\n    }\r\n    /**\r\n     * Use a named ApolloClient\r\n     * @param name client's name\r\n     */\r\n    use(name) {\r\n        if (isDefault(name)) {\r\n            return this.default();\r\n        }\r\n        return this.map.get(name);\r\n    }\r\n    /**\r\n     * Create a default ApolloClient, same as `apollo.create(options)`\r\n     * @param options ApolloClient's options\r\n     */\r\n    createDefault(options) {\r\n        if (this.getClient()) {\r\n            throw new Error('Apollo has been already created.');\r\n        }\r\n        return this.setClient(new ApolloClient(options));\r\n    }\r\n    /**\r\n     * Create a named ApolloClient, same as `apollo.create(options, name)`\r\n     * @param name client's name\r\n     * @param options ApolloClient's options\r\n     */\r\n    createNamed(name, options) {\r\n        if (this.map.has(name)) {\r\n            throw new Error(`Client ${name} has been already created`);\r\n        }\r\n        this.map.set(name, new ApolloBase(this._ngZone, this.flags, new ApolloClient(options)));\r\n    }\r\n    /**\r\n     * Remember to clean up the store before removing a client\r\n     * @param name client's name\r\n     */\r\n    removeClient(name) {\r\n        if (isDefault(name)) {\r\n            this._client = undefined;\r\n        }\r\n        else {\r\n            this.map.delete(name);\r\n        }\r\n    }\r\n}\r\nApollo.ɵfac = function Apollo_Factory(t) { return new (t || Apollo)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(APOLLO_OPTIONS, 8), ɵngcc0.ɵɵinject(APOLLO_NAMED_OPTIONS, 8), ɵngcc0.ɵɵinject(APOLLO_FLAGS, 8)); };\r\nApollo.ɵprov = i0.ɵɵdefineInjectable({ factory: function Apollo_Factory() { return new Apollo(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(APOLLO_OPTIONS, 8), i0.ɵɵinject(APOLLO_NAMED_OPTIONS, 8), i0.ɵɵinject(APOLLO_FLAGS, 8)); }, token: Apollo, providedIn: \"root\" });\r\nApollo.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APOLLO_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APOLLO_NAMED_OPTIONS,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APOLLO_FLAGS,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Apollo, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [APOLLO_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [APOLLO_NAMED_OPTIONS]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [APOLLO_FLAGS]\r\n            }] }]; }, null); })();\r\nfunction isDefault(name) {\r\n    return !name || name === 'default';\r\n}\r\n\r\nclass Query {\r\n    constructor(apollo) {\r\n        this.apollo = apollo;\r\n        this.client = 'default';\r\n    }\r\n    watch(variables, options) {\r\n        return this.apollo.use(this.client).watchQuery(Object.assign(Object.assign({}, options), { variables, query: this.document }));\r\n    }\r\n    fetch(variables, options) {\r\n        return this.apollo.use(this.client).query(Object.assign(Object.assign({}, options), { variables, query: this.document }));\r\n    }\r\n}\r\nQuery.ɵfac = function Query_Factory(t) { return new (t || Query)(ɵngcc0.ɵɵinject(Apollo)); };\r\nQuery.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Query, factory: Query.ɵfac });\r\nQuery.ctorParameters = () => [\r\n    { type: Apollo }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Query, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: Apollo }]; }, null); })();\r\n\r\nclass Mutation {\r\n    constructor(apollo) {\r\n        this.apollo = apollo;\r\n        this.client = 'default';\r\n    }\r\n    mutate(variables, options) {\r\n        return this.apollo.use(this.client).mutate(Object.assign(Object.assign({}, options), { variables, mutation: this.document }));\r\n    }\r\n}\r\nMutation.ɵfac = function Mutation_Factory(t) { return new (t || Mutation)(ɵngcc0.ɵɵinject(Apollo)); };\r\nMutation.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Mutation, factory: Mutation.ɵfac });\r\nMutation.ctorParameters = () => [\r\n    { type: Apollo }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Mutation, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: Apollo }]; }, null); })();\r\n\r\nclass Subscription {\r\n    constructor(apollo) {\r\n        this.apollo = apollo;\r\n        this.client = 'default';\r\n    }\r\n    subscribe(variables, options, extra) {\r\n        return this.apollo.use(this.client).subscribe(Object.assign(Object.assign({}, options), { variables, query: this.document }), extra);\r\n    }\r\n}\r\nSubscription.ɵfac = function Subscription_Factory(t) { return new (t || Subscription)(ɵngcc0.ɵɵinject(Apollo)); };\r\nSubscription.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Subscription, factory: Subscription.ɵfac });\r\nSubscription.ctorParameters = () => [\r\n    { type: Apollo }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Subscription, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: Apollo }]; }, null); })();\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { APOLLO_FLAGS, APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, Apollo, ApolloBase, Mutation, Query, QueryRef, Subscription };\r\n\r\n","import { Trie } from '@wry/trie';\r\nexport { Trie as KeyTrie } from '@wry/trie';\r\nimport { Slot } from '@wry/context';\r\nexport { asyncFromGen, bind as bindContext, noContext, setTimeout } from '@wry/context';\r\n\r\nfunction defaultDispose() { }\r\nvar Cache = /** @class */ (function () {\r\n    function Cache(max, dispose) {\r\n        if (max === void 0) { max = Infinity; }\r\n        if (dispose === void 0) { dispose = defaultDispose; }\r\n        this.max = max;\r\n        this.dispose = dispose;\r\n        this.map = new Map();\r\n        this.newest = null;\r\n        this.oldest = null;\r\n    }\r\n    Cache.prototype.has = function (key) {\r\n        return this.map.has(key);\r\n    };\r\n    Cache.prototype.get = function (key) {\r\n        var node = this.getNode(key);\r\n        return node && node.value;\r\n    };\r\n    Cache.prototype.getNode = function (key) {\r\n        var node = this.map.get(key);\r\n        if (node && node !== this.newest) {\r\n            var older = node.older, newer = node.newer;\r\n            if (newer) {\r\n                newer.older = older;\r\n            }\r\n            if (older) {\r\n                older.newer = newer;\r\n            }\r\n            node.older = this.newest;\r\n            node.older.newer = node;\r\n            node.newer = null;\r\n            this.newest = node;\r\n            if (node === this.oldest) {\r\n                this.oldest = newer;\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    Cache.prototype.set = function (key, value) {\r\n        var node = this.getNode(key);\r\n        if (node) {\r\n            return node.value = value;\r\n        }\r\n        node = {\r\n            key: key,\r\n            value: value,\r\n            newer: null,\r\n            older: this.newest\r\n        };\r\n        if (this.newest) {\r\n            this.newest.newer = node;\r\n        }\r\n        this.newest = node;\r\n        this.oldest = this.oldest || node;\r\n        this.map.set(key, node);\r\n        return node.value;\r\n    };\r\n    Cache.prototype.clean = function () {\r\n        while (this.oldest && this.map.size > this.max) {\r\n            this.delete(this.oldest.key);\r\n        }\r\n    };\r\n    Cache.prototype.delete = function (key) {\r\n        var node = this.map.get(key);\r\n        if (node) {\r\n            if (node === this.newest) {\r\n                this.newest = node.older;\r\n            }\r\n            if (node === this.oldest) {\r\n                this.oldest = node.newer;\r\n            }\r\n            if (node.newer) {\r\n                node.newer.older = node.older;\r\n            }\r\n            if (node.older) {\r\n                node.older.newer = node.newer;\r\n            }\r\n            this.map.delete(key);\r\n            this.dispose(node.value, key);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Cache;\r\n}());\r\n\r\nvar parentEntrySlot = new Slot();\r\n\r\nvar _a;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar \r\n// This Array.from polyfill is restricted to working with Set<any> for now,\r\n// but we can improve the polyfill and add other input types, as needed. Note\r\n// that this fallback implementation will only be used if the host environment\r\n// does not support a native Array.from function. In most modern JS runtimes,\r\n// the toArray function exported here will be === Array.from.\r\ntoArray = (_a = Array.from, _a === void 0 ? function (collection) {\r\n    var array = [];\r\n    collection.forEach(function (item) { return array.push(item); });\r\n    return array;\r\n} : _a);\r\nfunction maybeUnsubscribe(entryOrDep) {\r\n    var unsubscribe = entryOrDep.unsubscribe;\r\n    if (typeof unsubscribe === \"function\") {\r\n        entryOrDep.unsubscribe = void 0;\r\n        unsubscribe();\r\n    }\r\n}\r\n\r\nvar emptySetPool = [];\r\nvar POOL_TARGET_SIZE = 100;\r\n// Since this package might be used browsers, we should avoid using the\r\n// Node built-in assert module.\r\nfunction assert(condition, optionalMessage) {\r\n    if (!condition) {\r\n        throw new Error(optionalMessage || \"assertion failure\");\r\n    }\r\n}\r\nfunction valueIs(a, b) {\r\n    var len = a.length;\r\n    return (\r\n    // Unknown values are not equal to each other.\r\n    len > 0 &&\r\n        // Both values must be ordinary (or both exceptional) to be equal.\r\n        len === b.length &&\r\n        // The underlying value or exception must be the same.\r\n        a[len - 1] === b[len - 1]);\r\n}\r\nfunction valueGet(value) {\r\n    switch (value.length) {\r\n        case 0: throw new Error(\"unknown value\");\r\n        case 1: return value[0];\r\n        case 2: throw value[1];\r\n    }\r\n}\r\nfunction valueCopy(value) {\r\n    return value.slice(0);\r\n}\r\nvar Entry = /** @class */ (function () {\r\n    function Entry(fn) {\r\n        this.fn = fn;\r\n        this.parents = new Set();\r\n        this.childValues = new Map();\r\n        // When this Entry has children that are dirty, this property becomes\r\n        // a Set containing other Entry objects, borrowed from emptySetPool.\r\n        // When the set becomes empty, it gets recycled back to emptySetPool.\r\n        this.dirtyChildren = null;\r\n        this.dirty = true;\r\n        this.recomputing = false;\r\n        this.value = [];\r\n        this.deps = null;\r\n        ++Entry.count;\r\n    }\r\n    Entry.prototype.peek = function () {\r\n        if (this.value.length === 1 && !mightBeDirty(this)) {\r\n            rememberParent(this);\r\n            return this.value[0];\r\n        }\r\n    };\r\n    // This is the most important method of the Entry API, because it\r\n    // determines whether the cached this.value can be returned immediately,\r\n    // or must be recomputed. The overall performance of the caching system\r\n    // depends on the truth of the following observations: (1) this.dirty is\r\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\r\n    // (3) valueGet(this.value) is usually returned without recomputation.\r\n    Entry.prototype.recompute = function (args) {\r\n        assert(!this.recomputing, \"already recomputing\");\r\n        rememberParent(this);\r\n        return mightBeDirty(this)\r\n            ? reallyRecompute(this, args)\r\n            : valueGet(this.value);\r\n    };\r\n    Entry.prototype.setDirty = function () {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.value.length = 0;\r\n        reportDirty(this);\r\n        // We can go ahead and unsubscribe here, since any further dirty\r\n        // notifications we receive will be redundant, and unsubscribing may\r\n        // free up some resources, e.g. file watchers.\r\n        maybeUnsubscribe(this);\r\n    };\r\n    Entry.prototype.dispose = function () {\r\n        var _this = this;\r\n        this.setDirty();\r\n        // Sever any dependency relationships with our own children, so those\r\n        // children don't retain this parent Entry in their child.parents sets,\r\n        // thereby preventing it from being fully garbage collected.\r\n        forgetChildren(this);\r\n        // Because this entry has been kicked out of the cache (in index.js),\r\n        // we've lost the ability to find out if/when this entry becomes dirty,\r\n        // whether that happens through a subscription, because of a direct call\r\n        // to entry.setDirty(), or because one of its children becomes dirty.\r\n        // Because of this loss of future information, we have to assume the\r\n        // worst (that this entry might have become dirty very soon), so we must\r\n        // immediately mark this entry's parents as dirty. Normally we could\r\n        // just call entry.setDirty() rather than calling parent.setDirty() for\r\n        // each parent, but that would leave this entry in parent.childValues\r\n        // and parent.dirtyChildren, which would prevent the child from being\r\n        // truly forgotten.\r\n        eachParent(this, function (parent, child) {\r\n            parent.setDirty();\r\n            forgetChild(parent, _this);\r\n        });\r\n    };\r\n    Entry.prototype.forget = function () {\r\n        // The code that creates Entry objects in index.ts will replace this method\r\n        // with one that actually removes the Entry from the cache, which will also\r\n        // trigger the entry.dispose method.\r\n        this.dispose();\r\n    };\r\n    Entry.prototype.dependOn = function (dep) {\r\n        dep.add(this);\r\n        if (!this.deps) {\r\n            this.deps = emptySetPool.pop() || new Set();\r\n        }\r\n        this.deps.add(dep);\r\n    };\r\n    Entry.prototype.forgetDeps = function () {\r\n        var _this = this;\r\n        if (this.deps) {\r\n            toArray(this.deps).forEach(function (dep) { return dep.delete(_this); });\r\n            this.deps.clear();\r\n            emptySetPool.push(this.deps);\r\n            this.deps = null;\r\n        }\r\n    };\r\n    Entry.count = 0;\r\n    return Entry;\r\n}());\r\nfunction rememberParent(child) {\r\n    var parent = parentEntrySlot.getValue();\r\n    if (parent) {\r\n        child.parents.add(parent);\r\n        if (!parent.childValues.has(child)) {\r\n            parent.childValues.set(child, []);\r\n        }\r\n        if (mightBeDirty(child)) {\r\n            reportDirtyChild(parent, child);\r\n        }\r\n        else {\r\n            reportCleanChild(parent, child);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nfunction reallyRecompute(entry, args) {\r\n    forgetChildren(entry);\r\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\r\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\r\n    if (maybeSubscribe(entry, args)) {\r\n        // If we successfully recomputed entry.value and did not fail to\r\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\r\n        setClean(entry);\r\n    }\r\n    return valueGet(entry.value);\r\n}\r\nfunction recomputeNewValue(entry, args) {\r\n    entry.recomputing = true;\r\n    // Set entry.value as unknown.\r\n    entry.value.length = 0;\r\n    try {\r\n        // If entry.fn succeeds, entry.value will become a normal Value.\r\n        entry.value[0] = entry.fn.apply(null, args);\r\n    }\r\n    catch (e) {\r\n        // If entry.fn throws, entry.value will become exceptional.\r\n        entry.value[1] = e;\r\n    }\r\n    // Either way, this line is always reached.\r\n    entry.recomputing = false;\r\n}\r\nfunction mightBeDirty(entry) {\r\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\r\n}\r\nfunction setClean(entry) {\r\n    entry.dirty = false;\r\n    if (mightBeDirty(entry)) {\r\n        // This Entry may still have dirty children, in which case we can't\r\n        // let our parents know we're clean just yet.\r\n        return;\r\n    }\r\n    reportClean(entry);\r\n}\r\nfunction reportDirty(child) {\r\n    eachParent(child, reportDirtyChild);\r\n}\r\nfunction reportClean(child) {\r\n    eachParent(child, reportCleanChild);\r\n}\r\nfunction eachParent(child, callback) {\r\n    var parentCount = child.parents.size;\r\n    if (parentCount) {\r\n        var parents = toArray(child.parents);\r\n        for (var i = 0; i < parentCount; ++i) {\r\n            callback(parents[i], child);\r\n        }\r\n    }\r\n}\r\n// Let a parent Entry know that one of its children may be dirty.\r\nfunction reportDirtyChild(parent, child) {\r\n    // Must have called rememberParent(child) before calling\r\n    // reportDirtyChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(mightBeDirty(child));\r\n    var parentWasClean = !mightBeDirty(parent);\r\n    if (!parent.dirtyChildren) {\r\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\r\n    }\r\n    else if (parent.dirtyChildren.has(child)) {\r\n        // If we already know this child is dirty, then we must have already\r\n        // informed our own parents that we are dirty, so we can terminate\r\n        // the recursion early.\r\n        return;\r\n    }\r\n    parent.dirtyChildren.add(child);\r\n    // If parent was clean before, it just became (possibly) dirty (according to\r\n    // mightBeDirty), since we just added child to parent.dirtyChildren.\r\n    if (parentWasClean) {\r\n        reportDirty(parent);\r\n    }\r\n}\r\n// Let a parent Entry know that one of its children is no longer dirty.\r\nfunction reportCleanChild(parent, child) {\r\n    // Must have called rememberChild(child) before calling\r\n    // reportCleanChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(!mightBeDirty(child));\r\n    var childValue = parent.childValues.get(child);\r\n    if (childValue.length === 0) {\r\n        parent.childValues.set(child, valueCopy(child.value));\r\n    }\r\n    else if (!valueIs(childValue, child.value)) {\r\n        parent.setDirty();\r\n    }\r\n    removeDirtyChild(parent, child);\r\n    if (mightBeDirty(parent)) {\r\n        return;\r\n    }\r\n    reportClean(parent);\r\n}\r\nfunction removeDirtyChild(parent, child) {\r\n    var dc = parent.dirtyChildren;\r\n    if (dc) {\r\n        dc.delete(child);\r\n        if (dc.size === 0) {\r\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\r\n                emptySetPool.push(dc);\r\n            }\r\n            parent.dirtyChildren = null;\r\n        }\r\n    }\r\n}\r\n// Removes all children from this entry and returns an array of the\r\n// removed children.\r\nfunction forgetChildren(parent) {\r\n    if (parent.childValues.size > 0) {\r\n        parent.childValues.forEach(function (_value, child) {\r\n            forgetChild(parent, child);\r\n        });\r\n    }\r\n    // Remove this parent Entry from any sets to which it was added by the\r\n    // addToSet method.\r\n    parent.forgetDeps();\r\n    // After we forget all our children, this.dirtyChildren must be empty\r\n    // and therefore must have been reset to null.\r\n    assert(parent.dirtyChildren === null);\r\n}\r\nfunction forgetChild(parent, child) {\r\n    child.parents.delete(parent);\r\n    parent.childValues.delete(child);\r\n    removeDirtyChild(parent, child);\r\n}\r\nfunction maybeSubscribe(entry, args) {\r\n    if (typeof entry.subscribe === \"function\") {\r\n        try {\r\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\r\n            entry.unsubscribe = entry.subscribe.apply(null, args);\r\n        }\r\n        catch (e) {\r\n            // If this Entry has a subscribe function and it threw an exception\r\n            // (or an unsubscribe function it previously returned now throws),\r\n            // return false to indicate that we were not able to subscribe (or\r\n            // unsubscribe), and this Entry should remain dirty.\r\n            entry.setDirty();\r\n            return false;\r\n        }\r\n    }\r\n    // Returning true indicates either that there was no entry.subscribe\r\n    // function or that it succeeded.\r\n    return true;\r\n}\r\n\r\nvar EntryMethods = {\r\n    setDirty: true,\r\n    dispose: true,\r\n    forget: true,\r\n};\r\nfunction dep(options) {\r\n    var depsByKey = new Map();\r\n    var subscribe = options && options.subscribe;\r\n    function depend(key) {\r\n        var parent = parentEntrySlot.getValue();\r\n        if (parent) {\r\n            var dep_1 = depsByKey.get(key);\r\n            if (!dep_1) {\r\n                depsByKey.set(key, dep_1 = new Set);\r\n            }\r\n            parent.dependOn(dep_1);\r\n            if (typeof subscribe === \"function\") {\r\n                maybeUnsubscribe(dep_1);\r\n                dep_1.unsubscribe = subscribe(key);\r\n            }\r\n        }\r\n    }\r\n    depend.dirty = function dirty(key, entryMethodName) {\r\n        var dep = depsByKey.get(key);\r\n        if (dep) {\r\n            var m_1 = (entryMethodName &&\r\n                hasOwnProperty.call(EntryMethods, entryMethodName)) ? entryMethodName : \"setDirty\";\r\n            // We have to use toArray(dep).forEach instead of dep.forEach, because\r\n            // modifying a Set while iterating over it can cause elements in the Set\r\n            // to be removed from the Set before they've been iterated over.\r\n            toArray(dep).forEach(function (entry) { return entry[m_1](); });\r\n            depsByKey.delete(key);\r\n            maybeUnsubscribe(dep);\r\n        }\r\n    };\r\n    return depend;\r\n}\r\n\r\nfunction makeDefaultMakeCacheKeyFunction() {\r\n    var keyTrie = new Trie(typeof WeakMap === \"function\");\r\n    return function () {\r\n        return keyTrie.lookupArray(arguments);\r\n    };\r\n}\r\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\r\n// a unique object for any shallow-identical list of arguments. If you need\r\n// to implement a custom makeCacheKey function, you may find it helpful to\r\n// delegate the final work to defaultMakeCacheKey, which is why we export it\r\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\r\n// does not support WeakMap, or you have the ability to return a string key.\r\n// In those cases, just write your own custom makeCacheKey functions.\r\nvar defaultMakeCacheKey = makeDefaultMakeCacheKeyFunction();\r\nvar caches = new Set();\r\nfunction wrap(originalFunction, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });\r\n    var keyArgs = options.keyArgs;\r\n    var makeCacheKey = options.makeCacheKey ||\r\n        makeDefaultMakeCacheKeyFunction();\r\n    var optimistic = function () {\r\n        var key = makeCacheKey.apply(null, keyArgs ? keyArgs.apply(null, arguments) : arguments);\r\n        if (key === void 0) {\r\n            return originalFunction.apply(null, arguments);\r\n        }\r\n        var entry = cache.get(key);\r\n        if (!entry) {\r\n            cache.set(key, entry = new Entry(originalFunction));\r\n            entry.subscribe = options.subscribe;\r\n            // Give the Entry the ability to trigger cache.delete(key), even though\r\n            // the Entry itself does not know about key or cache.\r\n            entry.forget = function () { return cache.delete(key); };\r\n        }\r\n        var value = entry.recompute(Array.prototype.slice.call(arguments));\r\n        // Move this entry to the front of the least-recently used queue,\r\n        // since we just finished computing its value.\r\n        cache.set(key, entry);\r\n        caches.add(cache);\r\n        // Clean up any excess entries in the cache, but only if there is no\r\n        // active parent entry, meaning we're not in the middle of a larger\r\n        // computation that might be flummoxed by the cleaning.\r\n        if (!parentEntrySlot.hasValue()) {\r\n            caches.forEach(function (cache) { return cache.clean(); });\r\n            caches.clear();\r\n        }\r\n        return value;\r\n    };\r\n    Object.defineProperty(optimistic, \"size\", {\r\n        get: function () {\r\n            return cache[\"map\"].size;\r\n        },\r\n        configurable: false,\r\n        enumerable: false,\r\n    });\r\n    function dirtyKey(key) {\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            entry.setDirty();\r\n        }\r\n    }\r\n    optimistic.dirtyKey = dirtyKey;\r\n    optimistic.dirty = function dirty() {\r\n        dirtyKey(makeCacheKey.apply(null, arguments));\r\n    };\r\n    function peekKey(key) {\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            return entry.peek();\r\n        }\r\n    }\r\n    optimistic.peekKey = peekKey;\r\n    optimistic.peek = function peek() {\r\n        return peekKey(makeCacheKey.apply(null, arguments));\r\n    };\r\n    function forgetKey(key) {\r\n        return cache.delete(key);\r\n    }\r\n    optimistic.forgetKey = forgetKey;\r\n    optimistic.forget = function forget() {\r\n        return forgetKey(makeCacheKey.apply(null, arguments));\r\n    };\r\n    optimistic.makeCacheKey = makeCacheKey;\r\n    optimistic.getKey = keyArgs ? function getKey() {\r\n        return makeCacheKey.apply(null, keyArgs.apply(null, arguments));\r\n    } : makeCacheKey;\r\n    return Object.freeze(optimistic);\r\n}\r\n\r\nexport { defaultMakeCacheKey, dep, wrap };\r\n\n","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\r\n\r\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\r\n\r\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\r\n\r\n// === Symbol Support ===\r\nvar hasSymbols = function () {\r\n  return typeof Symbol === 'function';\r\n};\r\n\r\nvar hasSymbol = function (name) {\r\n  return hasSymbols() && Boolean(Symbol[name]);\r\n};\r\n\r\nvar getSymbol = function (name) {\r\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\r\n};\r\n\r\nif (hasSymbols() && !hasSymbol('observable')) {\r\n  Symbol.observable = Symbol('observable');\r\n}\r\n\r\nvar SymbolIterator = getSymbol('iterator');\r\nvar SymbolObservable = getSymbol('observable');\r\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\r\n\r\nfunction getMethod(obj, key) {\r\n  var value = obj[key];\r\n  if (value == null) return undefined;\r\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\r\n  return value;\r\n}\r\n\r\nfunction getSpecies(obj) {\r\n  var ctor = obj.constructor;\r\n\r\n  if (ctor !== undefined) {\r\n    ctor = ctor[SymbolSpecies];\r\n\r\n    if (ctor === null) {\r\n      ctor = undefined;\r\n    }\r\n  }\r\n\r\n  return ctor !== undefined ? ctor : Observable;\r\n}\r\n\r\nfunction isObservable(x) {\r\n  return x instanceof Observable; // SPEC: Brand check\r\n}\r\n\r\nfunction hostReportError(e) {\r\n  if (hostReportError.log) {\r\n    hostReportError.log(e);\r\n  } else {\r\n    setTimeout(function () {\r\n      throw e;\r\n    });\r\n  }\r\n}\r\n\r\nfunction enqueue(fn) {\r\n  Promise.resolve().then(function () {\r\n    try {\r\n      fn();\r\n    } catch (e) {\r\n      hostReportError(e);\r\n    }\r\n  });\r\n}\r\n\r\nfunction cleanupSubscription(subscription) {\r\n  var cleanup = subscription._cleanup;\r\n  if (cleanup === undefined) return;\r\n  subscription._cleanup = undefined;\r\n\r\n  if (!cleanup) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    if (typeof cleanup === 'function') {\r\n      cleanup();\r\n    } else {\r\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\r\n\r\n      if (unsubscribe) {\r\n        unsubscribe.call(cleanup);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    hostReportError(e);\r\n  }\r\n}\r\n\r\nfunction closeSubscription(subscription) {\r\n  subscription._observer = undefined;\r\n  subscription._queue = undefined;\r\n  subscription._state = 'closed';\r\n}\r\n\r\nfunction flushSubscription(subscription) {\r\n  var queue = subscription._queue;\r\n\r\n  if (!queue) {\r\n    return;\r\n  }\r\n\r\n  subscription._queue = undefined;\r\n  subscription._state = 'ready';\r\n\r\n  for (var i = 0; i < queue.length; ++i) {\r\n    notifySubscription(subscription, queue[i].type, queue[i].value);\r\n    if (subscription._state === 'closed') break;\r\n  }\r\n}\r\n\r\nfunction notifySubscription(subscription, type, value) {\r\n  subscription._state = 'running';\r\n  var observer = subscription._observer;\r\n\r\n  try {\r\n    var m = getMethod(observer, type);\r\n\r\n    switch (type) {\r\n      case 'next':\r\n        if (m) m.call(observer, value);\r\n        break;\r\n\r\n      case 'error':\r\n        closeSubscription(subscription);\r\n        if (m) m.call(observer, value);else throw value;\r\n        break;\r\n\r\n      case 'complete':\r\n        closeSubscription(subscription);\r\n        if (m) m.call(observer);\r\n        break;\r\n    }\r\n  } catch (e) {\r\n    hostReportError(e);\r\n  }\r\n\r\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\r\n}\r\n\r\nfunction onNotify(subscription, type, value) {\r\n  if (subscription._state === 'closed') return;\r\n\r\n  if (subscription._state === 'buffering') {\r\n    subscription._queue.push({\r\n      type: type,\r\n      value: value\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if (subscription._state !== 'ready') {\r\n    subscription._state = 'buffering';\r\n    subscription._queue = [{\r\n      type: type,\r\n      value: value\r\n    }];\r\n    enqueue(function () {\r\n      return flushSubscription(subscription);\r\n    });\r\n    return;\r\n  }\r\n\r\n  notifySubscription(subscription, type, value);\r\n}\r\n\r\nvar Subscription = /*#__PURE__*/function () {\r\n  function Subscription(observer, subscriber) {\r\n    // ASSERT: observer is an object\r\n    // ASSERT: subscriber is callable\r\n    this._cleanup = undefined;\r\n    this._observer = observer;\r\n    this._queue = undefined;\r\n    this._state = 'initializing';\r\n    var subscriptionObserver = new SubscriptionObserver(this);\r\n\r\n    try {\r\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\r\n    } catch (e) {\r\n      subscriptionObserver.error(e);\r\n    }\r\n\r\n    if (this._state === 'initializing') this._state = 'ready';\r\n  }\r\n\r\n  var _proto = Subscription.prototype;\r\n\r\n  _proto.unsubscribe = function unsubscribe() {\r\n    if (this._state !== 'closed') {\r\n      closeSubscription(this);\r\n      cleanupSubscription(this);\r\n    }\r\n  };\r\n\r\n  _createClass(Subscription, [{\r\n    key: \"closed\",\r\n    get: function () {\r\n      return this._state === 'closed';\r\n    }\r\n  }]);\r\n\r\n  return Subscription;\r\n}();\r\n\r\nvar SubscriptionObserver = /*#__PURE__*/function () {\r\n  function SubscriptionObserver(subscription) {\r\n    this._subscription = subscription;\r\n  }\r\n\r\n  var _proto2 = SubscriptionObserver.prototype;\r\n\r\n  _proto2.next = function next(value) {\r\n    onNotify(this._subscription, 'next', value);\r\n  };\r\n\r\n  _proto2.error = function error(value) {\r\n    onNotify(this._subscription, 'error', value);\r\n  };\r\n\r\n  _proto2.complete = function complete() {\r\n    onNotify(this._subscription, 'complete');\r\n  };\r\n\r\n  _createClass(SubscriptionObserver, [{\r\n    key: \"closed\",\r\n    get: function () {\r\n      return this._subscription._state === 'closed';\r\n    }\r\n  }]);\r\n\r\n  return SubscriptionObserver;\r\n}();\r\n\r\nvar Observable = /*#__PURE__*/function () {\r\n  function Observable(subscriber) {\r\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\r\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\r\n    this._subscriber = subscriber;\r\n  }\r\n\r\n  var _proto3 = Observable.prototype;\r\n\r\n  _proto3.subscribe = function subscribe(observer) {\r\n    if (typeof observer !== 'object' || observer === null) {\r\n      observer = {\r\n        next: observer,\r\n        error: arguments[1],\r\n        complete: arguments[2]\r\n      };\r\n    }\r\n\r\n    return new Subscription(observer, this._subscriber);\r\n  };\r\n\r\n  _proto3.forEach = function forEach(fn) {\r\n    var _this = this;\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      if (typeof fn !== 'function') {\r\n        reject(new TypeError(fn + ' is not a function'));\r\n        return;\r\n      }\r\n\r\n      function done() {\r\n        subscription.unsubscribe();\r\n        resolve();\r\n      }\r\n\r\n      var subscription = _this.subscribe({\r\n        next: function (value) {\r\n          try {\r\n            fn(value, done);\r\n          } catch (e) {\r\n            reject(e);\r\n            subscription.unsubscribe();\r\n          }\r\n        },\r\n        error: reject,\r\n        complete: resolve\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto3.map = function map(fn) {\r\n    var _this2 = this;\r\n\r\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\r\n    var C = getSpecies(this);\r\n    return new C(function (observer) {\r\n      return _this2.subscribe({\r\n        next: function (value) {\r\n          try {\r\n            value = fn(value);\r\n          } catch (e) {\r\n            return observer.error(e);\r\n          }\r\n\r\n          observer.next(value);\r\n        },\r\n        error: function (e) {\r\n          observer.error(e);\r\n        },\r\n        complete: function () {\r\n          observer.complete();\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto3.filter = function filter(fn) {\r\n    var _this3 = this;\r\n\r\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\r\n    var C = getSpecies(this);\r\n    return new C(function (observer) {\r\n      return _this3.subscribe({\r\n        next: function (value) {\r\n          try {\r\n            if (!fn(value)) return;\r\n          } catch (e) {\r\n            return observer.error(e);\r\n          }\r\n\r\n          observer.next(value);\r\n        },\r\n        error: function (e) {\r\n          observer.error(e);\r\n        },\r\n        complete: function () {\r\n          observer.complete();\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto3.reduce = function reduce(fn) {\r\n    var _this4 = this;\r\n\r\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\r\n    var C = getSpecies(this);\r\n    var hasSeed = arguments.length > 1;\r\n    var hasValue = false;\r\n    var seed = arguments[1];\r\n    var acc = seed;\r\n    return new C(function (observer) {\r\n      return _this4.subscribe({\r\n        next: function (value) {\r\n          var first = !hasValue;\r\n          hasValue = true;\r\n\r\n          if (!first || hasSeed) {\r\n            try {\r\n              acc = fn(acc, value);\r\n            } catch (e) {\r\n              return observer.error(e);\r\n            }\r\n          } else {\r\n            acc = value;\r\n          }\r\n        },\r\n        error: function (e) {\r\n          observer.error(e);\r\n        },\r\n        complete: function () {\r\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\r\n          observer.next(acc);\r\n          observer.complete();\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto3.concat = function concat() {\r\n    var _this5 = this;\r\n\r\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      sources[_key] = arguments[_key];\r\n    }\r\n\r\n    var C = getSpecies(this);\r\n    return new C(function (observer) {\r\n      var subscription;\r\n      var index = 0;\r\n\r\n      function startNext(next) {\r\n        subscription = next.subscribe({\r\n          next: function (v) {\r\n            observer.next(v);\r\n          },\r\n          error: function (e) {\r\n            observer.error(e);\r\n          },\r\n          complete: function () {\r\n            if (index === sources.length) {\r\n              subscription = undefined;\r\n              observer.complete();\r\n            } else {\r\n              startNext(C.from(sources[index++]));\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      startNext(_this5);\r\n      return function () {\r\n        if (subscription) {\r\n          subscription.unsubscribe();\r\n          subscription = undefined;\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  _proto3.flatMap = function flatMap(fn) {\r\n    var _this6 = this;\r\n\r\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\r\n    var C = getSpecies(this);\r\n    return new C(function (observer) {\r\n      var subscriptions = [];\r\n\r\n      var outer = _this6.subscribe({\r\n        next: function (value) {\r\n          if (fn) {\r\n            try {\r\n              value = fn(value);\r\n            } catch (e) {\r\n              return observer.error(e);\r\n            }\r\n          }\r\n\r\n          var inner = C.from(value).subscribe({\r\n            next: function (value) {\r\n              observer.next(value);\r\n            },\r\n            error: function (e) {\r\n              observer.error(e);\r\n            },\r\n            complete: function () {\r\n              var i = subscriptions.indexOf(inner);\r\n              if (i >= 0) subscriptions.splice(i, 1);\r\n              completeIfDone();\r\n            }\r\n          });\r\n          subscriptions.push(inner);\r\n        },\r\n        error: function (e) {\r\n          observer.error(e);\r\n        },\r\n        complete: function () {\r\n          completeIfDone();\r\n        }\r\n      });\r\n\r\n      function completeIfDone() {\r\n        if (outer.closed && subscriptions.length === 0) observer.complete();\r\n      }\r\n\r\n      return function () {\r\n        subscriptions.forEach(function (s) {\r\n          return s.unsubscribe();\r\n        });\r\n        outer.unsubscribe();\r\n      };\r\n    });\r\n  };\r\n\r\n  _proto3[SymbolObservable] = function () {\r\n    return this;\r\n  };\r\n\r\n  Observable.from = function from(x) {\r\n    var C = typeof this === 'function' ? this : Observable;\r\n    if (x == null) throw new TypeError(x + ' is not an object');\r\n    var method = getMethod(x, SymbolObservable);\r\n\r\n    if (method) {\r\n      var observable = method.call(x);\r\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\r\n      if (isObservable(observable) && observable.constructor === C) return observable;\r\n      return new C(function (observer) {\r\n        return observable.subscribe(observer);\r\n      });\r\n    }\r\n\r\n    if (hasSymbol('iterator')) {\r\n      method = getMethod(x, SymbolIterator);\r\n\r\n      if (method) {\r\n        return new C(function (observer) {\r\n          enqueue(function () {\r\n            if (observer.closed) return;\r\n\r\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\r\n              var item = _step.value;\r\n              observer.next(item);\r\n              if (observer.closed) return;\r\n            }\r\n\r\n            observer.complete();\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    if (Array.isArray(x)) {\r\n      return new C(function (observer) {\r\n        enqueue(function () {\r\n          if (observer.closed) return;\r\n\r\n          for (var i = 0; i < x.length; ++i) {\r\n            observer.next(x[i]);\r\n            if (observer.closed) return;\r\n          }\r\n\r\n          observer.complete();\r\n        });\r\n      });\r\n    }\r\n\r\n    throw new TypeError(x + ' is not observable');\r\n  };\r\n\r\n  Observable.of = function of() {\r\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      items[_key2] = arguments[_key2];\r\n    }\r\n\r\n    var C = typeof this === 'function' ? this : Observable;\r\n    return new C(function (observer) {\r\n      enqueue(function () {\r\n        if (observer.closed) return;\r\n\r\n        for (var i = 0; i < items.length; ++i) {\r\n          observer.next(items[i]);\r\n          if (observer.closed) return;\r\n        }\r\n\r\n        observer.complete();\r\n      });\r\n    });\r\n  };\r\n\r\n  _createClass(Observable, null, [{\r\n    key: SymbolSpecies,\r\n    get: function () {\r\n      return this;\r\n    }\r\n  }]);\r\n\r\n  return Observable;\r\n}();\r\n\r\nif (hasSymbols()) {\r\n  Object.defineProperty(Observable, Symbol('extensions'), {\r\n    value: {\r\n      symbol: SymbolObservable,\r\n      hostReportError: hostReportError\r\n    },\r\n    configurable: true\r\n  });\r\n}\r\n\r\nexport { Observable };\r\n"]}