{"version":3,"mappings":"klBAQAA,aACIC,uBACIC,KAAKC,SAAW,IAAIC,8DAMxBC,SAAcC,cACV,YAAKC,SAAQC,YAAMC,aAAUC,SAAU,gBAAcD,aAAUC,SAAU,YAAUD,aAAUC,SAAU,gBAAcD,aAAUC,SAAU,eAAaD,aAAUC,SAAU,qBAAmBD,aAAUC,SAAU,iBAAeD,aAAUC,SAAU,gBAAcD,aAAUC,SAAU,oBAAkBD,aAAUE,OAAQ,gBAAcF,aAAUE,OAAQ,WAC1VT,KAAKU,oBAAuC,IAAjBN,EAC3BJ,KAAKW,iBAAmBX,KAAKK,MAAMO,UAIlCC,YACGb,EAAKc,eAETd,KAAKe,aACEf,KAAKC,mCAMhBc,sBACIf,KAAKgB,UAASC,SAAMjB,KAAKU,oBAAqBV,KAAKU,qBAAqBE,UAIvEC,YACGb,EAAKC,SAASiB,qCAMtBJ,WACId,KAAKgB,OAAOG,cACZnB,KAAKe,sCAKTK,WACIpB,KAAKgB,OAAOG,cACZnB,KAAKW,iBAAiBQ,mDAG9BE,EAAgBC,UAAO,SAAiCC,GAAK,OAAO,IAAKA,GAAKF,IAC9EA,EAAgBG,WAAsBC,+BAA0B,CAAEC,MAAOL,EAAiBM,QAASN,EAAgBC,UAAMM,WAAY,SAGlHP,EAAgBQ,mBAAkBC,gCAAmB,CAAEH,QAAS,WAAqC,OAAO,IAAIN,GAAsBK,MAAOL,EAAiBO,WAAY,aAoC7LL,EAAMQ,IAANR,EAAMQ,yBAEST,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAKQ,IAC5EA,EAAeC,UAAqBP,6BAAwB,CAAEQ,KAAMF,IACpEA,EAAeG,UAAqBT,6BAAwB,CAAEU,UAAW,CAACd,GAAkBe,QAAS,CAAC,MAJhGL","names":["n","constructor","this","expired$","Subject","startWatching","timeOutSeconds","idle$","merge","fromEvent","document","window","timeOutMilliSeconds","idleSubscription","subscribe","res","resetTimer","startTimer","timer$","timer","next","unsubscribe","stopTimer","BnNgIdleService","ɵfac","t","ɵprov","ɵngcc0","token","factory","providedIn","ngInjectableDef","ɵɵdefineInjectable","BnNgIdleModule","ɵmod","type","ɵinj","providers","imports"],"sources":["webpack:///node_modules/bn-ng-idle/fesm2015/bn-ng-idle.js"],"sourcesContent":["import { Injectable, ɵɵdefineInjectable, NgModule } from '@angular/core';\r\nimport { Subject, merge, fromEvent, timer } from 'rxjs';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass BnNgIdleService {\r\n    constructor() {\r\n        this.expired$ = new Subject();\r\n    }\r\n    /**\r\n     * @param {?} timeOutSeconds\r\n     * @return {?}\r\n     */\r\n    startWatching(timeOutSeconds) {\r\n        this.idle$ = merge(fromEvent(document, 'mousemove'), fromEvent(document, 'click'), fromEvent(document, 'mousedown'), fromEvent(document, 'keypress'), fromEvent(document, 'DOMMouseScroll'), fromEvent(document, 'mousewheel'), fromEvent(document, 'touchmove'), fromEvent(document, 'MSPointerMove'), fromEvent(window, 'mousemove'), fromEvent(window, 'resize'));\r\n        this.timeOutMilliSeconds = timeOutSeconds * 1000;\r\n        this.idleSubscription = this.idle$.subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        (res) => {\r\n            this.resetTimer();\r\n        }));\r\n        this.startTimer();\r\n        return this.expired$;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    startTimer() {\r\n        this.timer$ = timer(this.timeOutMilliSeconds, this.timeOutMilliSeconds).subscribe((/**\r\n         * @param {?} res\r\n         * @return {?}\r\n         */\r\n        (res) => {\r\n            this.expired$.next(true);\r\n        }));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    resetTimer() {\r\n        this.timer$.unsubscribe();\r\n        this.startTimer();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    stopTimer() {\r\n        this.timer$.unsubscribe();\r\n        this.idleSubscription.unsubscribe();\r\n    }\r\n}\r\nBnNgIdleService.ɵfac = function BnNgIdleService_Factory(t) { return new (t || BnNgIdleService)(); };\r\nBnNgIdleService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BnNgIdleService, factory: BnNgIdleService.ɵfac, providedIn: 'root' });\r\n/** @nocollapse */\r\nBnNgIdleService.ctorParameters = () => [];\r\n/** @nocollapse */ BnNgIdleService.ngInjectableDef = ɵɵdefineInjectable({ factory: function BnNgIdleService_Factory() { return new BnNgIdleService(); }, token: BnNgIdleService, providedIn: \"root\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BnNgIdleService, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root'\r\n            }]\r\n    }], function () { return []; }, null); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BnNgIdleService.prototype.idle$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BnNgIdleService.prototype.timer$;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BnNgIdleService.prototype.timeOutMilliSeconds;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    BnNgIdleService.prototype.idleSubscription;\r\n    /** @type {?} */\r\n    BnNgIdleService.prototype.expired$;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass BnNgIdleModule {\r\n}\r\nBnNgIdleModule.ɵfac = function BnNgIdleModule_Factory(t) { return new (t || BnNgIdleModule)(); };\r\nBnNgIdleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BnNgIdleModule });\r\nBnNgIdleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [BnNgIdleService], imports: [[]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BnNgIdleModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [],\r\n                declarations: [],\r\n                providers: [BnNgIdleService],\r\n                exports: []\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { BnNgIdleModule, BnNgIdleService };\r\n\r\n"]}