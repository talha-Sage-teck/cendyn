{"version":3,"mappings":"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","names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵngcc0","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","v","prevValue","coerceBooleanProperty","hasStickyChanged","resetStickyChanged","CDK_TABLE","InjectionToken","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","CdkCellDef_Factory","t","ɵdir","type","selectors","ngDevMode","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","Subject","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","takeUntil","subscribe","length","isStable","from","Promise","resolve","undefined","onStable","take","_CoalescedStyleScheduler_Factory","ɵprov","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","i","children","_scheduleStyleChanges","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_a","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","EmbeddedViewRef","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_viewRepeater","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","viewChange","BehaviorSubject","Number","MAX_VALUE","setAttribute","nodeName","_trackByFn","fn","console","warn","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","isDataSource","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","forEachOperation","prevIndex","previousIndex","renderRow","_renderRow","view","get","move","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isObservable","isArray","of","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","CdkTable_Factory","ɵngcc1","DOCUMENT","ɵngcc2","_VIEW_REPEATER_STRATEGY","ɵngcc3","CdkTable_ContentQueries","viewQuery","CdkTable_Query","hostVars","hostBindings","CdkTable_HostBindings","fixedLayout","exportAs","useClass","_DisposeViewRepeaterStrategy","useValue","ngContentSelectors","CdkTable_Template","styles","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵinj","imports","ScrollingModule","ngJitMode","declarations","exports"],"sources":["webpack:///node_modules/@angular/cdk/fesm2015/table.js"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/bidi';\r\nimport * as ɵngcc2 from '@angular/cdk/platform';\r\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\r\n\r\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\r\nconst _c1 = [\"caption\", \"colgroup, col\"];\r\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\r\n} }\r\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const data_r2 = ctx.$implicit;\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\r\n} }\r\nexport { DataSource } from '@angular/cdk/collections';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\r\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\r\nimport { takeUntil, take } from 'rxjs/operators';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Mixin to provide a directive with a function that checks if the sticky input has been\r\n * changed since the last time the function was called. Essentially adds a dirty-check to the\r\n * sticky value.\r\n * @docs-private\r\n */\r\nfunction mixinHasStickyInput(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._sticky = false;\r\n            /** Whether the sticky input has changed since it was last checked. */\r\n            this._hasStickyChanged = false;\r\n        }\r\n        /** Whether sticky positioning should be applied. */\r\n        get sticky() { return this._sticky; }\r\n        set sticky(v) {\r\n            const prevValue = this._sticky;\r\n            this._sticky = coerceBooleanProperty(v);\r\n            this._hasStickyChanged = prevValue !== this._sticky;\r\n        }\r\n        /** Whether the sticky value has changed since this was last called. */\r\n        hasStickyChanged() {\r\n            const hasStickyChanged = this._hasStickyChanged;\r\n            this._hasStickyChanged = false;\r\n            return hasStickyChanged;\r\n        }\r\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\r\n        resetStickyChanged() {\r\n            this._hasStickyChanged = false;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Used to provide a table to some of the sub-components without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\r\n/** Injection token that can be used to specify the text column options. */\r\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Cell definition for a CDK table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\nclass CdkCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\r\nCdkCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Header cell definition for a CDK table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\nclass CdkHeaderCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\r\nCdkHeaderCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkHeaderCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Footer cell definition for a CDK table.\r\n * Captures the template of a column's footer cell and as well as cell-specific properties.\r\n */\r\nclass CdkFooterCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\r\nCdkFooterCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkFooterCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkColumnDef.\r\n/** @docs-private */\r\nclass CdkColumnDefBase {\r\n}\r\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\r\n/**\r\n * Column definition for the CDK table.\r\n * Defines a set of cells available for a table column.\r\n */\r\nclass CdkColumnDef extends _CdkColumnDefBase {\r\n    constructor(_table) {\r\n        super();\r\n        this._table = _table;\r\n        this._stickyEnd = false;\r\n    }\r\n    /** Unique name for this column. */\r\n    get name() { return this._name; }\r\n    set name(name) { this._setNameInput(name); }\r\n    /**\r\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\r\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\r\n     * has been changed.\r\n     */\r\n    get stickyEnd() {\r\n        return this._stickyEnd;\r\n    }\r\n    set stickyEnd(v) {\r\n        const prevValue = this._stickyEnd;\r\n        this._stickyEnd = coerceBooleanProperty(v);\r\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\r\n    }\r\n    /**\r\n     * Overridable method that sets the css classes that will be added to every cell in this\r\n     * column.\r\n     * In the future, columnCssClassName will change from type string[] to string and this\r\n     * will set a single string value.\r\n     * @docs-private\r\n     */\r\n    _updateColumnCssClassName() {\r\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\r\n    }\r\n    /**\r\n     * This has been extracted to a util because of TS 4 and VE.\r\n     * View Engine doesn't support property rename inheritance.\r\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\r\n     * @docs-private\r\n     */\r\n    _setNameInput(value) {\r\n        // If the directive is set without a name (updated programmatically), then this setter will\r\n        // trigger with an empty string and should not overwrite the programmatically set value.\r\n        if (value) {\r\n            this._name = value;\r\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\r\n            this._updateColumnCssClassName();\r\n        }\r\n    }\r\n}\r\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\r\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkColumnDef.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\nCdkColumnDef.propDecorators = {\r\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\r\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\r\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\r\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\r\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkColumnDef]',\r\n                inputs: ['sticky'],\r\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, { name: [{\r\n            type: Input,\r\n            args: ['cdkColumnDef']\r\n        }], stickyEnd: [{\r\n            type: Input,\r\n            args: ['stickyEnd']\r\n        }], cell: [{\r\n            type: ContentChild,\r\n            args: [CdkCellDef]\r\n        }], headerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkHeaderCellDef]\r\n        }], footerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkFooterCellDef]\r\n        }] }); })();\r\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\r\nclass BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\r\n        // with destructuring.\r\n        const classList = elementRef.nativeElement.classList;\r\n        for (const className of columnDef._columnCssClassName) {\r\n            classList.add(className);\r\n        }\r\n    }\r\n}\r\n/** Header cell template container that adds the right classes and role. */\r\nclass CdkHeaderCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkHeaderCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\r\n                host: {\r\n                    'class': 'cdk-header-cell',\r\n                    'role': 'columnheader'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Footer cell template container that adds the right classes and role. */\r\nclass CdkFooterCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkFooterCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\r\n                host: {\r\n                    'class': 'cdk-footer-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Cell template container that adds the right classes and role. */\r\nclass CdkCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-cell, td[cdk-cell]',\r\n                host: {\r\n                    'class': 'cdk-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @docs-private\r\n */\r\nclass _Schedule {\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.endTasks = [];\r\n    }\r\n}\r\n/** Injection token used to provide a coalesced style scheduler. */\r\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\r\n/**\r\n * Allows grouping up CSSDom mutations after the current execution context.\r\n * This can significantly improve performance when separate consecutive functions are\r\n * reading from the CSSDom and then mutating it.\r\n *\r\n * @docs-private\r\n */\r\nclass _CoalescedStyleScheduler {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        this._currentSchedule = null;\r\n        this._destroyed = new Subject();\r\n    }\r\n    /**\r\n     * Schedules the specified task to run at the end of the current VM turn.\r\n     */\r\n    schedule(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.tasks.push(task);\r\n    }\r\n    /**\r\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\r\n     * VM turn.\r\n     */\r\n    scheduleEnd(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.endTasks.push(task);\r\n    }\r\n    /** Prevent any further tasks from running. */\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    _createScheduleIfNeeded() {\r\n        if (this._currentSchedule) {\r\n            return;\r\n        }\r\n        this._currentSchedule = new _Schedule();\r\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\r\n                const schedule = this._currentSchedule;\r\n                // Capture new tasks scheduled by the current set of tasks.\r\n                this._currentSchedule = new _Schedule();\r\n                for (const task of schedule.tasks) {\r\n                    task();\r\n                }\r\n                for (const task of schedule.endTasks) {\r\n                    task();\r\n                }\r\n            }\r\n            this._currentSchedule = null;\r\n        });\r\n    }\r\n    _getScheduleObservable() {\r\n        // Use onStable when in the context of an ongoing change detection cycle so that we\r\n        // do not accidentally trigger additional cycles.\r\n        return this._ngZone.isStable ?\r\n            from(Promise.resolve(undefined)) :\r\n            this._ngZone.onStable.pipe(take(1));\r\n    }\r\n}\r\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\r\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\r\n_CoalescedStyleScheduler.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The row template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n */\r\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\r\n/**\r\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\r\n * for changes and notifying the table.\r\n */\r\nclass BaseRowDef {\r\n    constructor(\r\n    /** @docs-private */ template, _differs) {\r\n        this.template = template;\r\n        this._differs = _differs;\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\r\n        // of the columns property or an empty array if none is provided.\r\n        if (!this._columnsDiffer) {\r\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\r\n            this._columnsDiffer = this._differs.find(columns).create();\r\n            this._columnsDiffer.diff(columns);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the difference between the current columns and the columns from the last diff, or null\r\n     * if there is no difference.\r\n     */\r\n    getColumnsDiff() {\r\n        return this._columnsDiffer.diff(this.columns);\r\n    }\r\n    /** Gets this row def's relevant cell template from the provided column def. */\r\n    extractCellTemplate(column) {\r\n        if (this instanceof CdkHeaderRowDef) {\r\n            return column.headerCell.template;\r\n        }\r\n        if (this instanceof CdkFooterRowDef) {\r\n            return column.footerCell.template;\r\n        }\r\n        else {\r\n            return column.cell.template;\r\n        }\r\n    }\r\n}\r\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\r\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nBaseRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkHeaderRowDef.\r\n/** @docs-private */\r\nclass CdkHeaderRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\r\n/**\r\n * Header row definition for the CDK table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkHeaderRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkHeaderRowDef]',\r\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkFooterRowDef.\r\n/** @docs-private */\r\nclass CdkFooterRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\r\n/**\r\n * Footer row definition for the CDK table.\r\n * Captures the footer row's template and other footer properties such as the columns to display.\r\n */\r\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFooterRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkFooterRowDef]',\r\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Data row definition for the CDK table.\r\n * Captures the header row's template and other row properties such as the columns to display and\r\n * a when predicate that describes when this row should be used.\r\n */\r\nclass CdkRowDef extends BaseRowDef {\r\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\r\n    //   if this template should be used.\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n}\r\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkRowDef]',\r\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Outlet for rendering cells inside of a row or header row.\r\n * @docs-private\r\n */\r\nclass CdkCellOutlet {\r\n    constructor(_viewContainer) {\r\n        this._viewContainer = _viewContainer;\r\n        CdkCellOutlet.mostRecentCellOutlet = this;\r\n    }\r\n    ngOnDestroy() {\r\n        // If this was the last outlet being rendered in the view, remove the reference\r\n        // from the static property after it has been destroyed to avoid leaking memory.\r\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\r\n            CdkCellOutlet.mostRecentCellOutlet = null;\r\n        }\r\n    }\r\n}\r\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\r\n/**\r\n * Static property containing the latest constructed instance of this class.\r\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\r\n * createEmbeddedView. After one of these components are created, this property will provide\r\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\r\n * construct the cells with the provided context.\r\n */\r\nCdkCellOutlet.mostRecentCellOutlet = null;\r\nCdkCellOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkHeaderRow {\r\n}\r\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\r\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-header-row, tr[cdk-header-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-header-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkFooterRow {\r\n}\r\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\r\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-footer-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkRow {\r\n}\r\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\r\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-row, tr[cdk-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Row that can be used to display a message when no data is shown in the table. */\r\nclass CdkNoDataRow {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n}\r\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\r\nCdkNoDataRow.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkNoDataRow]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * List of all possible directions that can be used for sticky positioning.\r\n * @docs-private\r\n */\r\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\r\n/**\r\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\r\n * @docs-private\r\n */\r\nclass StickyStyler {\r\n    /**\r\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\r\n     *     that uses the native `<table>` element.\r\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\r\n     *     sticky positioning applied.\r\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\r\n     *     by reversing left/right positions.\r\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\r\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\r\n     *     using inline styles. If false, it is assumed that position: sticky is included in\r\n     *     the component stylesheet for _stickCellCss.\r\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\r\n     *     and their dimensions.\r\n     */\r\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\r\n        this._isNativeHtmlTable = _isNativeHtmlTable;\r\n        this._stickCellCss = _stickCellCss;\r\n        this.direction = direction;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._isBrowser = _isBrowser;\r\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\r\n        this._positionListener = _positionListener;\r\n        this._cachedCellWidths = [];\r\n        this._borderCellCss = {\r\n            'top': `${_stickCellCss}-border-elem-top`,\r\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\r\n            'left': `${_stickCellCss}-border-elem-left`,\r\n            'right': `${_stickCellCss}-border-elem-right`,\r\n        };\r\n    }\r\n    /**\r\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\r\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\r\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\r\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\r\n     */\r\n    clearStickyPositioning(rows, stickyDirections) {\r\n        const elementsToClear = [];\r\n        for (const row of rows) {\r\n            // If the row isn't an element (e.g. if it's an `ng-container`),\r\n            // it won't have inline styles or `children` so we skip it.\r\n            if (row.nodeType !== row.ELEMENT_NODE) {\r\n                continue;\r\n            }\r\n            elementsToClear.push(row);\r\n            for (let i = 0; i < row.children.length; i++) {\r\n                elementsToClear.push(row.children[i]);\r\n            }\r\n        }\r\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            for (const element of elementsToClear) {\r\n                this._removeStickyStyle(element, stickyDirections);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky left and right positions to the cells of each row according to the sticky\r\n     * states of the rendered column definitions.\r\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\r\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the start of the row.\r\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the end of the row.\r\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\r\n     *     column cell. If `false` cached widths will be used instead.\r\n     */\r\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\r\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\r\n            stickyEndStates.some(state => state))) {\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\r\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\r\n            }\r\n            return;\r\n        }\r\n        const firstRow = rows[0];\r\n        const numCells = firstRow.children.length;\r\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\r\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\r\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\r\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\r\n        const firstStickyEnd = stickyEndStates.indexOf(true);\r\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            const isRtl = this.direction === 'rtl';\r\n            const start = isRtl ? 'right' : 'left';\r\n            const end = isRtl ? 'left' : 'right';\r\n            for (const row of rows) {\r\n                for (let i = 0; i < numCells; i++) {\r\n                    const cell = row.children[i];\r\n                    if (stickyStartStates[i]) {\r\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\r\n                    }\r\n                    if (stickyEndStates[i]) {\r\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\r\n                    }\r\n                }\r\n            }\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({\r\n                    sizes: lastStickyStart === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(0, lastStickyStart + 1)\r\n                            .map((width, index) => stickyStartStates[index] ? width : null)\r\n                });\r\n                this._positionListener.stickyEndColumnsUpdated({\r\n                    sizes: firstStickyEnd === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(firstStickyEnd)\r\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\r\n                            .reverse()\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\r\n     * row itself otherwise.\r\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\r\n     *     sticky state and to the provided top or bottom position.\r\n     * @param stickyStates A list of boolean states where each state represents whether the row\r\n     *     should be stuck in the particular top or bottom position.\r\n     * @param position The position direction in which the row should be stuck if that row should be\r\n     *     sticky.\r\n     *\r\n     */\r\n    stickRows(rowsToStick, stickyStates, position) {\r\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\r\n        if (!this._isBrowser) {\r\n            return;\r\n        }\r\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\r\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\r\n        // sticky states need to be reversed as well.\r\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\r\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\r\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\r\n        const stickyOffsets = [];\r\n        const stickyCellHeights = [];\r\n        const elementsToStick = [];\r\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\r\n            stickyOffsets[rowIndex] = stickyOffset;\r\n            if (!states[rowIndex]) {\r\n                continue;\r\n            }\r\n            const row = rows[rowIndex];\r\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\r\n                Array.from(row.children) : [row];\r\n            const height = row.getBoundingClientRect().height;\r\n            stickyOffset += height;\r\n            stickyCellHeights[rowIndex] = height;\r\n        }\r\n        const borderedRowIndex = states.lastIndexOf(true);\r\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\r\n        // (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            var _a, _b;\r\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n                if (!states[rowIndex]) {\r\n                    continue;\r\n                }\r\n                const offset = stickyOffsets[rowIndex];\r\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\r\n                for (const element of elementsToStick[rowIndex]) {\r\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\r\n                }\r\n            }\r\n            if (position === 'top') {\r\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n            else {\r\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\r\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\r\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\r\n     * the tfoot element.\r\n     */\r\n    updateStickyFooterContainer(tableElement, stickyStates) {\r\n        if (!this._isNativeHtmlTable) {\r\n            return;\r\n        }\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            if (stickyStates.some(state => !state)) {\r\n                this._removeStickyStyle(tfoot, ['bottom']);\r\n            }\r\n            else {\r\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\r\n     * the zIndex, removing each of the provided sticky directions, and removing the\r\n     * sticky position if there are no more directions.\r\n     */\r\n    _removeStickyStyle(element, stickyDirections) {\r\n        for (const dir of stickyDirections) {\r\n            element.style[dir] = '';\r\n            element.classList.remove(this._borderCellCss[dir]);\r\n        }\r\n        // If the element no longer has any more sticky directions, remove sticky positioning and\r\n        // the sticky CSS class.\r\n        // Short-circuit checking element.style[dir] for stickyDirections as they\r\n        // were already removed above.\r\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\r\n        if (hasDirection) {\r\n            element.style.zIndex = this._getCalculatedZIndex(element);\r\n        }\r\n        else {\r\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\r\n            element.style.zIndex = '';\r\n            if (this._needsPositionStickyOnElement) {\r\n                element.style.position = '';\r\n            }\r\n            element.classList.remove(this._stickCellCss);\r\n        }\r\n    }\r\n    /**\r\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\r\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\r\n     * direction and value.\r\n     */\r\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\r\n        element.classList.add(this._stickCellCss);\r\n        if (isBorderElement) {\r\n            element.classList.add(this._borderCellCss[dir]);\r\n        }\r\n        element.style[dir] = `${dirValue}px`;\r\n        element.style.zIndex = this._getCalculatedZIndex(element);\r\n        if (this._needsPositionStickyOnElement) {\r\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\r\n        }\r\n    }\r\n    /**\r\n     * Calculate what the z-index should be for the element, depending on what directions (top,\r\n     * bottom, left, right) have been set. It should be true that elements with a top direction\r\n     * should have the highest index since these are elements like a table header. If any of those\r\n     * elements are also sticky in another direction, then they should appear above other elements\r\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\r\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\r\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\r\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\r\n     * elements.\r\n     */\r\n    _getCalculatedZIndex(element) {\r\n        const zIndexIncrements = {\r\n            top: 100,\r\n            bottom: 10,\r\n            left: 1,\r\n            right: 1,\r\n        };\r\n        let zIndex = 0;\r\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\r\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\r\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\r\n        for (const dir of STICKY_DIRECTIONS) {\r\n            if (element.style[dir]) {\r\n                zIndex += zIndexIncrements[dir];\r\n            }\r\n        }\r\n        return zIndex ? `${zIndex}` : '';\r\n    }\r\n    /** Gets the widths for each cell in the provided row. */\r\n    _getCellWidths(row, recalculateCellWidths = true) {\r\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\r\n            return this._cachedCellWidths;\r\n        }\r\n        const cellWidths = [];\r\n        const firstRowCells = row.children;\r\n        for (let i = 0; i < firstRowCells.length; i++) {\r\n            let cell = firstRowCells[i];\r\n            cellWidths.push(cell.getBoundingClientRect().width);\r\n        }\r\n        this._cachedCellWidths = cellWidths;\r\n        return cellWidths;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyStartColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = 0; i < widths.length; i++) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyEndColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = widths.length; i > 0; i--) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Schedules styles to be applied when the style scheduler deems appropriate.\r\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\r\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\r\n     */\r\n    _scheduleStyleChanges(changes) {\r\n        if (this._coalescedStyleScheduler) {\r\n            this._coalescedStyleScheduler.schedule(changes);\r\n        }\r\n        else {\r\n            changes();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Returns an error to be thrown when attempting to find an unexisting column.\r\n * @param id Id whose lookup failed.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownColumnError(id) {\r\n    return Error(`Could not find column with id \"${id}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when two column definitions have the same name.\r\n * @docs-private\r\n */\r\nfunction getTableDuplicateColumnNameError(name) {\r\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\r\n * @docs-private\r\n */\r\nfunction getTableMultipleDefaultRowDefsError() {\r\n    return Error(`There can only be one default row without a when predicate function.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\r\n * @docs-private\r\n */\r\nfunction getTableMissingMatchingRowDefError(data) {\r\n    return Error(`Could not find a matching row definition for the` +\r\n        `provided row data: ${JSON.stringify(data)}`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there is no row definitions present in the content.\r\n * @docs-private\r\n */\r\nfunction getTableMissingRowDefsError() {\r\n    return Error('Missing definitions for header, footer, and row; ' +\r\n        'cannot determine which columns should be rendered.');\r\n}\r\n/**\r\n * Returns an error to be thrown when the data source does not match the compatible types.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownDataSourceError() {\r\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\r\n}\r\n/**\r\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingParentTableError() {\r\n    return Error(`Text column could not find a parent table for registration.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when a table text column doesn't have a name.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingNameError() {\r\n    return Error(`Table text column must have a name.`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the StickyPositioningListener. */\r\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\r\n * @docs-private\r\n */\r\nclass DataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\r\nDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[rowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\r\n * @docs-private\r\n */\r\nclass HeaderRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\r\nHeaderRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[headerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\r\n * @docs-private\r\n */\r\nclass FooterRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\r\nFooterRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[footerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view\r\n * container's ng-container to insert the no data row.\r\n * @docs-private\r\n */\r\nclass NoDataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\r\nNoDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[noDataRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * The table template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE_TEMPLATE = \r\n// Note that according to MDN, the `caption` element has to be projected as the **first**\r\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\r\n`\r\n  <ng-content select=\"caption\"></ng-content>\r\n  <ng-content select=\"colgroup, col\"></ng-content>\r\n  <ng-container headerRowOutlet></ng-container>\r\n  <ng-container rowOutlet></ng-container>\r\n  <ng-container noDataRowOutlet></ng-container>\r\n  <ng-container footerRowOutlet></ng-container>\r\n`;\r\n/**\r\n * Class used to conveniently type the embedded view ref for rows with a context.\r\n * @docs-private\r\n */\r\nclass RowViewRef extends EmbeddedViewRef {\r\n}\r\n/**\r\n * A data table that can render a header row, data rows, and a footer row.\r\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\r\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\r\n * connect function that will return an Observable stream that emits the data array to render.\r\n */\r\nclass CdkTable {\r\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\r\n     *    parameters to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \r\n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\r\n    // this property will never be null.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _viewportRuler) {\r\n        this._differs = _differs;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._elementRef = _elementRef;\r\n        this._dir = _dir;\r\n        this._platform = _platform;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._stickyPositioningListener = _stickyPositioningListener;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._onDestroy = new Subject();\r\n        /**\r\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\r\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\r\n         * any custom column definitions added to `_customColumnDefs`.\r\n         */\r\n        this._columnDefsByName = new Map();\r\n        /**\r\n         * Column definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * column definitions as *its* content child.\r\n         */\r\n        this._customColumnDefs = new Set();\r\n        /**\r\n         * Data row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in data rows as *its* content child.\r\n         */\r\n        this._customRowDefs = new Set();\r\n        /**\r\n         * Header row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in header rows as *its* content child.\r\n         */\r\n        this._customHeaderRowDefs = new Set();\r\n        /**\r\n         * Footer row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\r\n         * built-in footer row as *its* content child.\r\n         */\r\n        this._customFooterRowDefs = new Set();\r\n        /**\r\n         * Whether the header row definition has been changed. Triggers an update to the header row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._headerRowDefChanged = true;\r\n        /**\r\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._footerRowDefChanged = true;\r\n        /**\r\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\r\n         * change.\r\n         */\r\n        this._stickyColumnStylesNeedReset = true;\r\n        /**\r\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\r\n         * `false`, cached values will be used instead. This is only applicable to tables with\r\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\r\n         */\r\n        this._forceRecalculateCellWidths = true;\r\n        /**\r\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\r\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\r\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\r\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\r\n         * and understand which rows are added/moved/removed.\r\n         *\r\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\r\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\r\n         * contains an array of created pairs. The array is necessary to handle cases where the data\r\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\r\n         * stored.\r\n         */\r\n        this._cachedRenderRowsMap = new Map();\r\n        /**\r\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\r\n         * table subclasses.\r\n         */\r\n        this.stickyCssClass = 'cdk-table-sticky';\r\n        /**\r\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\r\n         * the position is set in a selector associated with the value of stickyCssClass. May be\r\n         * overridden by table subclasses\r\n         */\r\n        this.needsPositionStickyOnElement = true;\r\n        /** Whether the no data row is currently showing anything. */\r\n        this._isShowingNoDataRow = false;\r\n        this._multiTemplateDataRows = false;\r\n        this._fixedLayout = false;\r\n        // TODO(andrewseguin): Remove max value as the end index\r\n        //   and instead calculate the view on init and scroll.\r\n        /**\r\n         * Stream containing the latest information on what rows are being displayed on screen.\r\n         * Can be used by the data source to as a heuristic of what data should be provided.\r\n         *\r\n         * @docs-private\r\n         */\r\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\r\n        if (!role) {\r\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\r\n        }\r\n        this._document = _document;\r\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\r\n    }\r\n    /**\r\n     * Tracking function that will be used to check the differences in data changes. Used similarly\r\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\r\n     * relative to the function to know if a row should be added/removed/moved.\r\n     * Accepts a function that takes two parameters, `index` and `item`.\r\n     */\r\n    get trackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    set trackBy(fn) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\r\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    /**\r\n     * The table's source of data, which can be provided in three ways (in order of complexity):\r\n     *   - Simple data array (each object represents one table row)\r\n     *   - Stream that emits a data array each time the array changes\r\n     *   - `DataSource` object that implements the connect/disconnect interface.\r\n     *\r\n     * If a data array is provided, the table must be notified when the array's objects are\r\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\r\n     * render the diff since the last table render. If the data array reference is changed, the table\r\n     * will automatically trigger an update to the rows.\r\n     *\r\n     * When providing an Observable stream, the table will trigger an update automatically when the\r\n     * stream emits a new array of data.\r\n     *\r\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\r\n     * provided by the connect function and trigger updates when that stream emits new data array\r\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\r\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\r\n     * subscriptions registered during the connect process).\r\n     */\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(dataSource) {\r\n        if (this._dataSource !== dataSource) {\r\n            this._switchDataSource(dataSource);\r\n        }\r\n    }\r\n    /**\r\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\r\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\r\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\r\n     * defined in the table, or otherwise the default row which does not have a when predicate.\r\n     */\r\n    get multiTemplateDataRows() {\r\n        return this._multiTemplateDataRows;\r\n    }\r\n    set multiTemplateDataRows(v) {\r\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\r\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\r\n        // this setter will be invoked before the row outlet has been defined hence the null check.\r\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\r\n            this._forceRenderDataRows();\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\r\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\r\n     */\r\n    get fixedLayout() {\r\n        return this._fixedLayout;\r\n    }\r\n    set fixedLayout(v) {\r\n        this._fixedLayout = coerceBooleanProperty(v);\r\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\r\n        this._forceRecalculateCellWidths = true;\r\n        this._stickyColumnStylesNeedReset = true;\r\n    }\r\n    ngOnInit() {\r\n        this._setupStickyStyler();\r\n        if (this._isNativeHtmlTable) {\r\n            this._applyNativeTableSections();\r\n        }\r\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\r\n        // the user has provided a custom trackBy, return the result of that function as evaluated\r\n        // with the values of the `RenderRow`'s data and index.\r\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\r\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\r\n        });\r\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\r\n        // refresh its cache of cell widths the next time sticky styles are updated.\r\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\r\n        if (this._viewportRuler) {\r\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n                this._forceRecalculateCellWidths = true;\r\n            });\r\n        }\r\n    }\r\n    ngAfterContentChecked() {\r\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\r\n        this._cacheRowDefs();\r\n        this._cacheColumnDefs();\r\n        // Make sure that the user has at least added header, footer, or data row def.\r\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingRowDefsError();\r\n        }\r\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\r\n        const columnsChanged = this._renderUpdatedColumns();\r\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\r\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\r\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\r\n        this._forceRecalculateCellWidths = rowDefsChanged;\r\n        // If the header row definition has been changed, trigger a render to the header row.\r\n        if (this._headerRowDefChanged) {\r\n            this._forceRenderHeaderRows();\r\n            this._headerRowDefChanged = false;\r\n        }\r\n        // If the footer row definition has been changed, trigger a render to the footer row.\r\n        if (this._footerRowDefChanged) {\r\n            this._forceRenderFooterRows();\r\n            this._footerRowDefChanged = false;\r\n        }\r\n        // If there is a data source and row definitions, connect to the data source unless a\r\n        // connection has already been made.\r\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\r\n            this._observeRenderChanges();\r\n        }\r\n        else if (this._stickyColumnStylesNeedReset) {\r\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\r\n            // called when it row data arrives. Otherwise, we need to call it proactively.\r\n            this.updateStickyColumnStyles();\r\n        }\r\n        this._checkStickyStates();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rowOutlet.viewContainer.clear();\r\n        this._noDataRowOutlet.viewContainer.clear();\r\n        this._headerRowOutlet.viewContainer.clear();\r\n        this._footerRowOutlet.viewContainer.clear();\r\n        this._cachedRenderRowsMap.clear();\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n    }\r\n    /**\r\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\r\n     * input or retrieved through an Observable stream (directly or from a DataSource).\r\n     * Checks for differences in the data since the last diff to perform only the necessary\r\n     * changes (add/remove/move rows).\r\n     *\r\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\r\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\r\n     * an array, this function will need to be called to render any changes.\r\n     */\r\n    renderRows() {\r\n        this._renderRows = this._getAllRenderRows();\r\n        const changes = this._dataDiffer.diff(this._renderRows);\r\n        if (!changes) {\r\n            this._updateNoDataRow();\r\n            return;\r\n        }\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\r\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\r\n        if (this._viewRepeater) {\r\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\r\n                if (change.operation === 1 /* INSERTED */ && change.context) {\r\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\r\n                if (record.previousIndex == null) {\r\n                    const renderRow = record.item;\r\n                    const rowDef = renderRow.rowDef;\r\n                    const context = { $implicit: renderRow.data };\r\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\r\n                }\r\n                else if (currentIndex == null) {\r\n                    viewContainer.remove(prevIndex);\r\n                }\r\n                else {\r\n                    const view = viewContainer.get(prevIndex);\r\n                    viewContainer.move(view, currentIndex);\r\n                }\r\n            });\r\n        }\r\n        // Update the meta context of a row's context data (index, count, first, last, ...)\r\n        this._updateRowIndexContext();\r\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\r\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\r\n        changes.forEachIdentityChange((record) => {\r\n            const rowView = viewContainer.get(record.currentIndex);\r\n            rowView.context.$implicit = record.item.data;\r\n        });\r\n        this._updateNoDataRow();\r\n        this.updateStickyColumnStyles();\r\n    }\r\n    /** Adds a column definition that was not included as part of the content children. */\r\n    addColumnDef(columnDef) {\r\n        this._customColumnDefs.add(columnDef);\r\n    }\r\n    /** Removes a column definition that was not included as part of the content children. */\r\n    removeColumnDef(columnDef) {\r\n        this._customColumnDefs.delete(columnDef);\r\n    }\r\n    /** Adds a row definition that was not included as part of the content children. */\r\n    addRowDef(rowDef) {\r\n        this._customRowDefs.add(rowDef);\r\n    }\r\n    /** Removes a row definition that was not included as part of the content children. */\r\n    removeRowDef(rowDef) {\r\n        this._customRowDefs.delete(rowDef);\r\n    }\r\n    /** Adds a header row definition that was not included as part of the content children. */\r\n    addHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.add(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Removes a header row definition that was not included as part of the content children. */\r\n    removeHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.delete(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Adds a footer row definition that was not included as part of the content children. */\r\n    addFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.add(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Removes a footer row definition that was not included as part of the content children. */\r\n    removeFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.delete(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Sets a no data row definition that was not included as a part of the content children. */\r\n    setNoDataRow(noDataRow) {\r\n        this._customNoDataRow = noDataRow;\r\n    }\r\n    /**\r\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\r\n     * automatically called when the header row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyHeaderRowStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const thead = tableElement.querySelector('thead');\r\n        if (thead) {\r\n            thead.style.display = headerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\r\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\r\n     * automatically called when the footer row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyFooterRowStyles() {\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        if (tfoot) {\r\n            tfoot.style.display = footerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\r\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\r\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the left and right. Then sticky styles are added for the left and right according\r\n     * to the column definitions for each cell in each row. This is automatically called when\r\n     * the data source provides a new set of data or when a column definition changes its sticky\r\n     * input. May be called manually for cases where the cell content changes outside of these events.\r\n     */\r\n    updateStickyColumnStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const dataRows = this._getRenderedRows(this._rowOutlet);\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\r\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\r\n        // don't need to be cleared unless either the sticky column config changes or one of the row\r\n        // defs change.\r\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\r\n            || this._stickyColumnStylesNeedReset) {\r\n            // Clear the left and right positioning from all columns in the table across all rows since\r\n            // sticky columns span across all table sections (header, data, footer)\r\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\r\n            this._stickyColumnStylesNeedReset = false;\r\n        }\r\n        // Update the sticky styles for each header row depending on the def's sticky state\r\n        headerRows.forEach((headerRow, i) => {\r\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\r\n        });\r\n        // Update the sticky styles for each data row depending on its def's sticky state\r\n        this._rowDefs.forEach(rowDef => {\r\n            // Collect all the rows rendered with this row definition.\r\n            const rows = [];\r\n            for (let i = 0; i < dataRows.length; i++) {\r\n                if (this._renderRows[i].rowDef === rowDef) {\r\n                    rows.push(dataRows[i]);\r\n                }\r\n            }\r\n            this._addStickyColumnStyles(rows, rowDef);\r\n        });\r\n        // Update the sticky styles for each footer row depending on the def's sticky state\r\n        footerRows.forEach((footerRow, i) => {\r\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\r\n        });\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Get the list of RenderRow objects to render according to the current list of data and defined\r\n     * row definitions. If the previous list already contained a particular pair, it should be reused\r\n     * so that the differ equates their references.\r\n     */\r\n    _getAllRenderRows() {\r\n        const renderRows = [];\r\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\r\n        // new cache while unused ones can be picked up by garbage collection.\r\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\r\n        this._cachedRenderRowsMap = new Map();\r\n        // For each data object, get the list of rows that should be rendered, represented by the\r\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            let data = this._data[i];\r\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\r\n            if (!this._cachedRenderRowsMap.has(data)) {\r\n                this._cachedRenderRowsMap.set(data, new WeakMap());\r\n            }\r\n            for (let j = 0; j < renderRowsForData.length; j++) {\r\n                let renderRow = renderRowsForData[j];\r\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\r\n                if (cache.has(renderRow.rowDef)) {\r\n                    cache.get(renderRow.rowDef).push(renderRow);\r\n                }\r\n                else {\r\n                    cache.set(renderRow.rowDef, [renderRow]);\r\n                }\r\n                renderRows.push(renderRow);\r\n            }\r\n        }\r\n        return renderRows;\r\n    }\r\n    /**\r\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\r\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\r\n     * `(T, CdkRowDef)` pair.\r\n     */\r\n    _getRenderRowsForData(data, dataIndex, cache) {\r\n        const rowDefs = this._getRowDefs(data, dataIndex);\r\n        return rowDefs.map(rowDef => {\r\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\r\n            if (cachedRenderRows.length) {\r\n                const dataRow = cachedRenderRows.shift();\r\n                dataRow.dataIndex = dataIndex;\r\n                return dataRow;\r\n            }\r\n            else {\r\n                return { data, rowDef, dataIndex };\r\n            }\r\n        });\r\n    }\r\n    /** Update the map containing the content's column definitions. */\r\n    _cacheColumnDefs() {\r\n        this._columnDefsByName.clear();\r\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\r\n        columnDefs.forEach(columnDef => {\r\n            if (this._columnDefsByName.has(columnDef.name) &&\r\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableDuplicateColumnNameError(columnDef.name);\r\n            }\r\n            this._columnDefsByName.set(columnDef.name, columnDef);\r\n        });\r\n    }\r\n    /** Update the list of all available row definitions that can be used. */\r\n    _cacheRowDefs() {\r\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\r\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\r\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\r\n        // After all row definitions are determined, find the row definition to be considered default.\r\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\r\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMultipleDefaultRowDefsError();\r\n        }\r\n        this._defaultRowDef = defaultRowDefs[0];\r\n    }\r\n    /**\r\n     * Check if the header, data, or footer rows have changed what columns they want to display or\r\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\r\n     * re-render that section.\r\n     */\r\n    _renderUpdatedColumns() {\r\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\r\n        // Force re-render data rows if the list of column definitions have changed.\r\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\r\n        if (dataColumnsChanged) {\r\n            this._forceRenderDataRows();\r\n        }\r\n        // Force re-render header/footer rows if the list of column definitions have changed.\r\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (headerColumnsChanged) {\r\n            this._forceRenderHeaderRows();\r\n        }\r\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (footerColumnsChanged) {\r\n            this._forceRenderFooterRows();\r\n        }\r\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\r\n    }\r\n    /**\r\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\r\n     * render change subscription if one exists. If the data source is null, interpret this by\r\n     * clearing the row outlet. Otherwise start listening for new data.\r\n     */\r\n    _switchDataSource(dataSource) {\r\n        this._data = [];\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n        // Stop listening for data from the previous data source.\r\n        if (this._renderChangeSubscription) {\r\n            this._renderChangeSubscription.unsubscribe();\r\n            this._renderChangeSubscription = null;\r\n        }\r\n        if (!dataSource) {\r\n            if (this._dataDiffer) {\r\n                this._dataDiffer.diff([]);\r\n            }\r\n            this._rowOutlet.viewContainer.clear();\r\n        }\r\n        this._dataSource = dataSource;\r\n    }\r\n    /** Set up a subscription for the data provided by the data source. */\r\n    _observeRenderChanges() {\r\n        // If no data source has been set, there is nothing to observe for changes.\r\n        if (!this.dataSource) {\r\n            return;\r\n        }\r\n        let dataStream;\r\n        if (isDataSource(this.dataSource)) {\r\n            dataStream = this.dataSource.connect(this);\r\n        }\r\n        else if (isObservable(this.dataSource)) {\r\n            dataStream = this.dataSource;\r\n        }\r\n        else if (Array.isArray(this.dataSource)) {\r\n            dataStream = of(this.dataSource);\r\n        }\r\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableUnknownDataSourceError();\r\n        }\r\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\r\n            .subscribe(data => {\r\n            this._data = data || [];\r\n            this.renderRows();\r\n        });\r\n    }\r\n    /**\r\n     * Clears any existing content in the header row outlet and creates a new embedded view\r\n     * in the outlet using the header row definition.\r\n     */\r\n    _forceRenderHeaderRows() {\r\n        // Clear the header row outlet if any content exists.\r\n        if (this._headerRowOutlet.viewContainer.length > 0) {\r\n            this._headerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\r\n        this.updateStickyHeaderRowStyles();\r\n    }\r\n    /**\r\n     * Clears any existing content in the footer row outlet and creates a new embedded view\r\n     * in the outlet using the footer row definition.\r\n     */\r\n    _forceRenderFooterRows() {\r\n        // Clear the footer row outlet if any content exists.\r\n        if (this._footerRowOutlet.viewContainer.length > 0) {\r\n            this._footerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\r\n        this.updateStickyFooterRowStyles();\r\n    }\r\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\r\n    _addStickyColumnStyles(rows, rowDef) {\r\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\r\n            const columnDef = this._columnDefsByName.get(columnName);\r\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnName);\r\n            }\r\n            return columnDef;\r\n        });\r\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\r\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\r\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\r\n    }\r\n    /** Gets the list of rows that have been rendered in the row outlet. */\r\n    _getRenderedRows(rowOutlet) {\r\n        const renderedRows = [];\r\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\r\n            const viewRef = rowOutlet.viewContainer.get(i);\r\n            renderedRows.push(viewRef.rootNodes[0]);\r\n        }\r\n        return renderedRows;\r\n    }\r\n    /**\r\n     * Get the matching row definitions that should be used for this row data. If there is only\r\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\r\n     * predicate that returns true with the data. If none return true, return the default row\r\n     * definition.\r\n     */\r\n    _getRowDefs(data, dataIndex) {\r\n        if (this._rowDefs.length == 1) {\r\n            return [this._rowDefs[0]];\r\n        }\r\n        let rowDefs = [];\r\n        if (this.multiTemplateDataRows) {\r\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\r\n        }\r\n        else {\r\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\r\n            if (rowDef) {\r\n                rowDefs.push(rowDef);\r\n            }\r\n        }\r\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingMatchingRowDefError(data);\r\n        }\r\n        return rowDefs;\r\n    }\r\n    _getEmbeddedViewArgs(renderRow, index) {\r\n        const rowDef = renderRow.rowDef;\r\n        const context = { $implicit: renderRow.data };\r\n        return {\r\n            templateRef: rowDef.template,\r\n            context,\r\n            index,\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\r\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\r\n     * of where to place the new row template in the outlet.\r\n     */\r\n    _renderRow(outlet, rowDef, index, context = {}) {\r\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\r\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\r\n        this._renderCellTemplateForItem(rowDef, context);\r\n        return view;\r\n    }\r\n    _renderCellTemplateForItem(rowDef, context) {\r\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\r\n            if (CdkCellOutlet.mostRecentCellOutlet) {\r\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\r\n            }\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\r\n     * e.g. first/last/even/odd.\r\n     */\r\n    _updateRowIndexContext() {\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            if (this.multiTemplateDataRows) {\r\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\r\n                context.renderIndex = renderIndex;\r\n            }\r\n            else {\r\n                context.index = this._renderRows[renderIndex].dataIndex;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the column definitions for the provided row def. */\r\n    _getCellTemplates(rowDef) {\r\n        if (!rowDef || !rowDef.columns) {\r\n            return [];\r\n        }\r\n        return Array.from(rowDef.columns, columnId => {\r\n            const column = this._columnDefsByName.get(columnId);\r\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnId);\r\n            }\r\n            return rowDef.extractCellTemplate(column);\r\n        });\r\n    }\r\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\r\n    _applyNativeTableSections() {\r\n        const documentFragment = this._document.createDocumentFragment();\r\n        const sections = [\r\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\r\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\r\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\r\n        ];\r\n        for (const section of sections) {\r\n            const element = this._document.createElement(section.tag);\r\n            element.setAttribute('role', 'rowgroup');\r\n            for (const outlet of section.outlets) {\r\n                element.appendChild(outlet.elementRef.nativeElement);\r\n            }\r\n            documentFragment.appendChild(element);\r\n        }\r\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\r\n        this._elementRef.nativeElement.appendChild(documentFragment);\r\n    }\r\n    /**\r\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\r\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\r\n     * `multiTemplateDataRows` or adding/removing row definitions.\r\n     */\r\n    _forceRenderDataRows() {\r\n        this._dataDiffer.diff([]);\r\n        this._rowOutlet.viewContainer.clear();\r\n        this.renderRows();\r\n    }\r\n    /**\r\n     * Checks if there has been a change in sticky states since last check and applies the correct\r\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\r\n     * during a change detection and after the inputs are settled (after content check).\r\n     */\r\n    _checkStickyStates() {\r\n        const stickyCheckReducer = (acc, d) => {\r\n            return acc || d.hasStickyChanged();\r\n        };\r\n        // Note that the check needs to occur for every definition since it notifies the definition\r\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\r\n        // remaining definitions and leave them in an unchecked state.\r\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyHeaderRowStyles();\r\n        }\r\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyFooterRowStyles();\r\n        }\r\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\r\n            this._stickyColumnStylesNeedReset = true;\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\r\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\r\n     * stickiness when directionality changes.\r\n     */\r\n    _setupStickyStyler() {\r\n        const direction = this._dir ? this._dir.value : 'ltr';\r\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\r\n        (this._dir ? this._dir.change : of())\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(value => {\r\n            this._stickyStyler.direction = value;\r\n            this.updateStickyColumnStyles();\r\n        });\r\n    }\r\n    /** Filters definitions that belong to this table from a QueryList. */\r\n    _getOwnDefs(items) {\r\n        return items.filter(item => !item._table || item._table === this);\r\n    }\r\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\r\n    _updateNoDataRow() {\r\n        const noDataRow = this._customNoDataRow || this._noDataRow;\r\n        if (noDataRow) {\r\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\r\n            if (shouldShow !== this._isShowingNoDataRow) {\r\n                const container = this._noDataRowOutlet.viewContainer;\r\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\r\n                this._isShowingNoDataRow = shouldShow;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\r\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\r\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\r\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: CDK_TABLE, useExisting: CdkTable },\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef(_c0);\r\n        ɵngcc0.ɵɵprojection(0);\r\n        ɵngcc0.ɵɵprojection(1, 1);\r\n        ɵngcc0.ɵɵelementContainer(2, 0);\r\n        ɵngcc0.ɵɵelementContainer(3, 1);\r\n        ɵngcc0.ɵɵelementContainer(4, 2);\r\n        ɵngcc0.ɵɵelementContainer(5, 3);\r\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\r\nCdkTable.ctorParameters = () => [\r\n    { type: IterableDiffers },\r\n    { type: ChangeDetectorRef },\r\n    { type: ElementRef },\r\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\r\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\r\n];\r\nCdkTable.propDecorators = {\r\n    trackBy: [{ type: Input }],\r\n    dataSource: [{ type: Input }],\r\n    multiTemplateDataRows: [{ type: Input }],\r\n    fixedLayout: [{ type: Input }],\r\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\r\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\r\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\r\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\r\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\r\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\r\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-table, table[cdk-table]',\r\n                exportAs: 'cdkTable',\r\n                template: CDK_TABLE_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-table',\r\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\r\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\r\n                // declared elsewhere, they are checked when their declaration points are checked.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                providers: [\r\n                    { provide: CDK_TABLE, useExisting: CdkTable },\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n                ],\r\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['role']\r\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_COALESCED_STYLE_SCHEDULER]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }, {\r\n                type: Inject,\r\n                args: [STICKY_POSITIONING_LISTENER]\r\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { trackBy: [{\r\n            type: Input\r\n        }], dataSource: [{\r\n            type: Input\r\n        }], multiTemplateDataRows: [{\r\n            type: Input\r\n        }], fixedLayout: [{\r\n            type: Input\r\n        }], _rowOutlet: [{\r\n            type: ViewChild,\r\n            args: [DataRowOutlet, { static: true }]\r\n        }], _headerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [HeaderRowOutlet, { static: true }]\r\n        }], _footerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [FooterRowOutlet, { static: true }]\r\n        }], _noDataRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [NoDataRowOutlet, { static: true }]\r\n        }], _contentColumnDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkColumnDef, { descendants: true }]\r\n        }], _contentRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkRowDef, { descendants: true }]\r\n        }], _contentHeaderRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _contentFooterRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _noDataRow: [{\r\n            type: ContentChild,\r\n            args: [CdkNoDataRow]\r\n        }] }); })();\r\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\r\nfunction mergeArrayAndSet(array, set) {\r\n    return array.concat(Array.from(set));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Column that simply shows text content for the header and row cells. Assumes that the table\r\n * is using the native table implementation (`<table>`).\r\n *\r\n * By default, the name of this column will be the header text and data property accessor.\r\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\r\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\r\n * input.\r\n */\r\nclass CdkTextColumn {\r\n    constructor(\r\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\r\n    // for better error reporting.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _table, _options) {\r\n        this._table = _table;\r\n        this._options = _options;\r\n        /** Alignment of the cell values. */\r\n        this.justify = 'start';\r\n        this._options = _options || {};\r\n    }\r\n    /** Column name that should be used to reference this column. */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        this._name = name;\r\n        // With Ivy, inputs can be initialized before static query results are\r\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\r\n        this._syncColumnDefName();\r\n    }\r\n    ngOnInit() {\r\n        this._syncColumnDefName();\r\n        if (this.headerText === undefined) {\r\n            this.headerText = this._createDefaultHeaderText();\r\n        }\r\n        if (!this.dataAccessor) {\r\n            this.dataAccessor =\r\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\r\n        }\r\n        if (this._table) {\r\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\r\n            // since the columnDef will not pick up its content by the time the table finishes checking\r\n            // its content and initializing the rows.\r\n            this.columnDef.cell = this.cell;\r\n            this.columnDef.headerCell = this.headerCell;\r\n            this._table.addColumnDef(this.columnDef);\r\n        }\r\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            throw getTableTextColumnMissingParentTableError();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._table) {\r\n            this._table.removeColumnDef(this.columnDef);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a default header text. Use the options' header text transformation function if one\r\n     * has been provided. Otherwise simply capitalize the column name.\r\n     */\r\n    _createDefaultHeaderText() {\r\n        const name = this.name;\r\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableTextColumnMissingNameError();\r\n        }\r\n        if (this._options && this._options.defaultHeaderTextTransform) {\r\n            return this._options.defaultHeaderTextTransform(name);\r\n        }\r\n        return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n    /** Synchronizes the column definition name with the text column name. */\r\n    _syncColumnDefName() {\r\n        if (this.columnDef) {\r\n            this.columnDef.name = this.name;\r\n        }\r\n    }\r\n}\r\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\r\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\r\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\r\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\r\n        ɵngcc0.ɵɵelementContainerEnd();\r\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\r\nCdkTextColumn.ctorParameters = () => [\r\n    { type: CdkTable, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\r\n];\r\nCdkTextColumn.propDecorators = {\r\n    name: [{ type: Input }],\r\n    headerText: [{ type: Input }],\r\n    dataAccessor: [{ type: Input }],\r\n    justify: [{ type: Input }],\r\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\r\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\r\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-text-column',\r\n                template: `\r\n    <ng-container cdkColumnDef>\r\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\r\n        {{headerText}}\r\n      </th>\r\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n      </td>\r\n    </ng-container>\r\n  `,\r\n                encapsulation: ViewEncapsulation.None,\r\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\r\n                // to the table to be inserted into its view. This is problematic when change detection runs since\r\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\r\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\r\n                // an ExpressionChangedAfterItHasBeenCheckedError).\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default\r\n            }]\r\n    }], function () { return [{ type: CdkTable, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [TEXT_COLUMN_OPTIONS]\r\n            }] }]; }, { justify: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], headerText: [{\r\n            type: Input\r\n        }], dataAccessor: [{\r\n            type: Input\r\n        }], columnDef: [{\r\n            type: ViewChild,\r\n            args: [CdkColumnDef, { static: true }]\r\n        }], cell: [{\r\n            type: ViewChild,\r\n            args: [CdkCellDef, { static: true }]\r\n        }], headerCell: [{\r\n            type: ViewChild,\r\n            args: [CdkHeaderCellDef, { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst EXPORTED_DECLARATIONS = [\r\n    CdkTable,\r\n    CdkRowDef,\r\n    CdkCellDef,\r\n    CdkCellOutlet,\r\n    CdkHeaderCellDef,\r\n    CdkFooterCellDef,\r\n    CdkColumnDef,\r\n    CdkCell,\r\n    CdkRow,\r\n    CdkHeaderCell,\r\n    CdkFooterCell,\r\n    CdkHeaderRow,\r\n    CdkHeaderRowDef,\r\n    CdkFooterRow,\r\n    CdkFooterRowDef,\r\n    DataRowOutlet,\r\n    HeaderRowOutlet,\r\n    FooterRowOutlet,\r\n    CdkTextColumn,\r\n    CdkNoDataRow,\r\n    NoDataRowOutlet,\r\n];\r\nclass CdkTableModule {\r\n}\r\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\r\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\r\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: EXPORTED_DECLARATIONS,\r\n                declarations: EXPORTED_DECLARATIONS,\r\n                imports: [ScrollingModule]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\r\n\r\n"]}