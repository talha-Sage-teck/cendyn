{"version":3,"mappings":"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","names":["t","getStatus","e","checkAccess","s","n","r","acl","length","i","forEach","l","every","c","onLineItemAdd","constructor","arguments","this","addClasses","klass","Array","Set","Object","join","E","onClick","label","icon","labelKey","titleKey","map","default","values","exclude","init","keys","addEntry","excludeEntry","push","getGroupEntries","includes","register","u","getKey","get","has","v","initDefault","valueSubject","O","valueChanges$","asObservable","valueState","emitValueChanges","valueListState","valueObjectState","valueObjectArrayState","next","value","valueList","valueObject","j","factory","Éµfac","o","primary","A","JSON","parse","stringify","L","isArray","_","String","padStart","D","b","I","x","R","trim","V","y","C","f","NONE","d","FIRST","h","ALL"],"sources":["webpack:///core/app/common/src/lib/actions/field-logic-action.model.ts","webpack:///core/app/common/src/lib/actions/action.model.ts","webpack:///core/app/common/src/lib/components/button/button.model.ts","webpack:///core/app/common/src/lib/types/overridable-map.ts","webpack:///core/app/common/src/lib/components/registry/base-component.registry.ts","webpack:///core/app/common/src/lib/record/field.model.ts","webpack:///core/app/common/src/lib/record/record-mappers/record-mapper.registry.ts","webpack:///core/app/common/src/lib/types/messages.ts","webpack:///core/app/common/src/lib/utils/object-utils.ts","webpack:///core/app/common/src/lib/utils/value-utils.ts","webpack:///core/app/common/src/lib/views/view.model.ts","webpack:///core/app/common/src/lib/utils/view-utils.ts","webpack:///core/app/common/src/lib/views/list/list-navigation.model.ts","webpack:///core/app/common/src/lib/views/list/record-selection.model.ts"],"sourcesContent":["/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {Action} from './action.model';\r\nimport {AttributeDependency} from '../record/field.model';\r\n\r\nexport interface FieldLogicMap {\r\n    [key: string]: FieldLogic;\r\n}\r\n\r\nexport enum LineActionEvent {\r\n    onLineItemAdd = 'onLineItemAdd',\r\n    onLineItemRemove = 'onLineItemRemove'\r\n}\r\n\r\nexport interface FieldLogic extends Action {\r\n    params?: {\r\n        fieldDependencies?: string[];\r\n        attributeDependencies?: AttributeDependency[];\r\n        triggerOnEvents?: [LineActionEvent: boolean][];\r\n        [key: string]: any;\r\n    };\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {ViewMode} from '../views/view.model';\r\nimport {Record} from '../record/record.model';\r\nimport {SearchCriteria} from '../views/list/search-criteria.model';\r\nimport {StringMap} from '../types/string-map';\r\n\r\nexport interface ActionData {\r\n    [key: string]: any;\r\n\r\n    action?: Action;\r\n}\r\n\r\nexport interface ActionHandlerMap<D extends ActionData> {\r\n    [key: string]: ActionHandler<D>;\r\n}\r\n\r\nexport abstract class ActionHandler<D extends ActionData> {\r\n    abstract key: string;\r\n\r\n    abstract modes: ViewMode[];\r\n\r\n    abstract run(data: D, action?: Action): void;\r\n\r\n    getStatus(data: D): string {\r\n        return '';\r\n    }\r\n\r\n    abstract shouldDisplay(data: D): boolean;\r\n\r\n    protected checkAccess(action: Action, acls: string[], defaultAcls?: string[]) {\r\n        let requiredAcls = defaultAcls || [];\r\n\r\n        if (action && action.acl) {\r\n            requiredAcls = action.acl\r\n        }\r\n\r\n        if (!requiredAcls || !requiredAcls.length) {\r\n            return true;\r\n        }\r\n\r\n        const aclsMap = {} as StringMap;\r\n        acls.forEach(value => aclsMap[value] = value);\r\n\r\n        return requiredAcls.every(value => aclsMap[value]);\r\n    }\r\n}\r\n\r\nexport interface ModeActions {\r\n    [key: string]: Action[];\r\n}\r\n\r\nexport interface Action {\r\n    key: string;\r\n    labelKey?: string;\r\n    titleKey?: string;\r\n    label?: string;\r\n    icon?: string;\r\n    klass?: string[];\r\n    status?: string;\r\n    modes?: string[];\r\n    asyncProcess?: boolean;\r\n    params?: { [key: string]: any };\r\n    extraParams?: { [key: string]: any };\r\n    acl?: string[];\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ActionDataSource {\r\n    getActions(context?: ActionContext): Observable<Action[]>;\r\n\r\n    runAction(action: Action, context?: ActionContext): void;\r\n}\r\n\r\nexport interface ActionManager<D extends ActionData> {\r\n\r\n    run(action: Action, mode: ViewMode, data: D): void;\r\n\r\n    getHandler(action: Action, mode: ViewMode): ActionHandler<D>;\r\n\r\n    addHandler(action: Action, mode: ViewMode, handler: ActionHandler<D>);\r\n}\r\n\r\nexport interface ActionContext {\r\n    [key: string]: any;\r\n\r\n    module?: string;\r\n    record?: Record;\r\n    ids?: string[];\r\n    criteria?: SearchCriteria;\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nexport declare type ButtonCallback = (...args) => void;\r\n\r\nexport interface ButtonInterface {\r\n    klass?: string | string[] | Set<string> | { [key: string]: any };\r\n    onClick?: ButtonCallback;\r\n    debounceClick?: boolean;\r\n    clickDebounceTime?: number;\r\n    label?: string;\r\n    labelKey?: string;\r\n    titleKey?: string;\r\n    icon?: string;\r\n    iconKlass?: string;\r\n}\r\n\r\nexport class Button implements ButtonInterface {\r\n\r\n    constructor(\r\n        public klass: string | string[] | Set<string> | { [key: string]: any } = null,\r\n        public onClick: ButtonCallback = null,\r\n        public label: string = null,\r\n        public icon: string = null,\r\n        public labelKey: string = null,\r\n        public titleKey: string = null\r\n    ) {\r\n    }\r\n\r\n    public static fromButton(button: ButtonInterface): Button {\r\n        return new Button(\r\n            button.klass,\r\n            button.onClick,\r\n            button.label,\r\n            button.icon,\r\n            button.labelKey,\r\n            button.titleKey\r\n        );\r\n    }\r\n\r\n    public static appendClasses(button: ButtonInterface, newClasses: string[]): void {\r\n\r\n        if (!button.klass) {\r\n            button.klass = newClasses;\r\n            return;\r\n        }\r\n\r\n        if (typeof button.klass === 'string') {\r\n            button.klass = newClasses.join(' ') + ' ' + button.klass;\r\n            return;\r\n        }\r\n\r\n        if (button.klass instanceof Array || button.klass instanceof Set) {\r\n            button.klass = [\r\n                ...button.klass,\r\n                ...newClasses\r\n            ];\r\n\r\n            return;\r\n        }\r\n\r\n        if (button.klass instanceof Object) {\r\n            const classes = {\r\n                ...button.klass,\r\n            };\r\n\r\n            classes[newClasses.join(' ')] = true;\r\n            button.klass = classes;\r\n        }\r\n    }\r\n\r\n    public addClasses(newClasses: string[]): void {\r\n\r\n        if (!this.klass) {\r\n            this.klass = newClasses;\r\n            return;\r\n        }\r\n\r\n        if (typeof this.klass === 'string') {\r\n            this.klass = newClasses.join(' ') + ' ' + this.klass;\r\n            return;\r\n        }\r\n\r\n        if (this.klass instanceof Array || this.klass instanceof Set) {\r\n            this.klass = [\r\n                ...this.klass,\r\n                ...newClasses\r\n            ];\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.klass instanceof Object) {\r\n            const classes = {\r\n                ...this.klass,\r\n            };\r\n\r\n            classes[newClasses.join(' ')] = true;\r\n            this.klass = classes;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nexport interface MapEntry<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport interface MapGroupEntry<T> {\r\n    values?: MapEntry<T>;\r\n    exclude?: string[];\r\n}\r\n\r\nexport interface OverridableMapType<T> {\r\n    [key: string]: MapGroupEntry<T>;\r\n}\r\n\r\nexport interface OverridableMapInterface<T> {\r\n\r\n    init(entryMap: OverridableMapType<T>): void;\r\n\r\n    addEntry(group: string, key: string, value: T): void;\r\n\r\n    excludeEntry(group: string, key: string);\r\n\r\n    getGroupEntries(group: string);\r\n}\r\n\r\nexport class OverridableMap<T> implements OverridableMapInterface<T> {\r\n    public map: OverridableMapType<T>;\r\n\r\n    constructor() {\r\n        this.map = {\r\n            default: {\r\n                values: {},\r\n                exclude: []\r\n            }\r\n        };\r\n    }\r\n\r\n    public init(entryMap: OverridableMapType<T>): void {\r\n        Object.keys(entryMap).forEach(group => {\r\n\r\n            if (entryMap[group].values) {\r\n                Object.keys(entryMap[group].values).forEach(key => {\r\n                    this.addEntry(group, key, entryMap[group].values[key]);\r\n                });\r\n            }\r\n\r\n            if (entryMap[group].exclude) {\r\n                entryMap[group].exclude.forEach(excluded => this.excludeEntry(group, excluded));\r\n            }\r\n        });\r\n    }\r\n\r\n    public addEntry(group: string, key: string, value: T): void {\r\n\r\n        if (!(group in this.map)) {\r\n            this.map[group] = {\r\n                values: {},\r\n                exclude: []\r\n            };\r\n        }\r\n\r\n        this.map[group].values[key] = value;\r\n    }\r\n\r\n    public excludeEntry(group: string, key: string): void {\r\n\r\n        if (!(group in this.map)) {\r\n            this.map[group] = {\r\n                values: {},\r\n                exclude: []\r\n            };\r\n        }\r\n\r\n        this.map[group].exclude.push(key);\r\n    }\r\n\r\n    public getGroupEntries(group: string): MapEntry<T> {\r\n        const values = {};\r\n\r\n        const allValues = {...this.map.default.values};\r\n        let groupEntry: MapGroupEntry<T> = {\r\n            values: {},\r\n            exclude: []\r\n        };\r\n\r\n        if (group in this.map) {\r\n            groupEntry = this.map[group];\r\n            groupEntry.values = groupEntry.values || {};\r\n            groupEntry.exclude = groupEntry.exclude || [];\r\n        }\r\n\r\n        Object.keys(groupEntry.values).forEach(key => {\r\n            allValues[key] = groupEntry.values[key];\r\n        });\r\n\r\n        Object.keys(allValues).forEach(key => {\r\n            if (this.map.default.exclude.includes(key)) {\r\n                return;\r\n            }\r\n\r\n            if (groupEntry.exclude.includes(key)) {\r\n                return;\r\n            }\r\n\r\n            values[key] = allValues[key];\r\n        });\r\n\r\n        return values;\r\n    }\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {Type} from '@angular/core';\r\nimport {OverridableMap} from '../../types/overridable-map';\r\n\r\nexport interface RegistryInterface<T> {\r\n    register(module: string, type: string, component: Type<T>): void;\r\n\r\n    exclude(module: string, key: string): void;\r\n\r\n    get(module: string, type: string): Type<T>;\r\n\r\n    has(module: string, type: string): boolean;\r\n}\r\n\r\nexport abstract class BaseComponentRegistry<T> implements RegistryInterface<T> {\r\n    protected map: OverridableMap<Type<T>>;\r\n\r\n    protected constructor() {\r\n        this.init();\r\n    }\r\n\r\n    public static getKey(type: string): string {\r\n        return type;\r\n    }\r\n\r\n    public register(module: string, type: string, component: Type<T>): void {\r\n        this.map.addEntry(module, BaseComponentRegistry.getKey(type), component);\r\n    }\r\n\r\n    public exclude(module: string, key: string): void {\r\n        this.map.excludeEntry(module, key);\r\n    }\r\n\r\n    public get(module: string, type: string): Type<T> {\r\n\r\n        const components = this.map.getGroupEntries(module);\r\n\r\n        let key = BaseComponentRegistry.getKey(type);\r\n        if (components[key]) {\r\n            return components[key];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public has(module: string, type: string): boolean {\r\n\r\n        const components = this.map.getGroupEntries(module);\r\n\r\n        const key = BaseComponentRegistry.getKey(type);\r\n        return !!components[key];\r\n    }\r\n\r\n    protected init(): void {\r\n        this.map = new OverridableMap<Type<T>>();\r\n\r\n        this.initDefault();\r\n    }\r\n\r\n    protected initDefault(): void {\r\n    }\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {SearchCriteriaFieldFilter} from '../views/list/search-criteria.model';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {AsyncValidatorFn, FormArray, FormControl, ValidatorFn} from '@angular/forms';\r\nimport {Record} from './record.model';\r\nimport {FieldLogicMap} from '../actions/field-logic-action.model';\r\nimport {ObjectMap} from '../types/object-map';\r\nimport {ViewMode} from '../views/view.model';\r\n\r\nexport interface Option {\r\n    value: string;\r\n    label?: string;\r\n    labelKey?: string;\r\n}\r\n\r\nexport interface ValidationDefinition {\r\n    [key: string]: number | string;\r\n\r\n    type: string;\r\n    min?: number | string;\r\n    max?: number | string;\r\n    compareto?: string;\r\n    blank?: string;\r\n}\r\n\r\nexport interface FieldDefinitionMap {\r\n    [key: string]: FieldDefinition;\r\n}\r\n\r\nexport interface FieldDefinition {\r\n    name?: string;\r\n    type?: string; // label key to use\r\n    vname?: string; // original label\r\n    options?: string;\r\n    reportable?: boolean;\r\n    required?: boolean;\r\n    // eslint-disable-next-line camelcase\r\n    duplicate_merge?: string;\r\n    source?: string;\r\n    id?: string;\r\n    // eslint-disable-next-line camelcase\r\n    id_name?: string;\r\n    link?: string;\r\n    module?: string;\r\n    type_name?: string;\r\n    rname?: string;\r\n    table?: string;\r\n    readonly?: boolean;\r\n    // eslint-disable-next-line camelcase\r\n    inline_edit?: boolean;\r\n    validation?: ValidationDefinition;\r\n    validations?: ValidationDefinition[];\r\n    template?: string;\r\n    display?: string;\r\n    displayType?: string;\r\n    displayDirection?: string;\r\n    layout?: string[];\r\n    showLabel?: any;\r\n    groupFields?: FieldDefinitionMap;\r\n    attributeFields?: FieldDefinitionMap;\r\n    valuePath?: string;\r\n    valueParent?: string;\r\n    dynamic?: boolean;\r\n    parentenum?: string;\r\n    logic?: FieldLogicMap;\r\n    lineItems?: LineItemsMetadata;\r\n    metadata?: FieldMetadata;\r\n    default?: string;\r\n    modes?: ViewMode[];\r\n    relationship?: string;\r\n    relationshipMetadata?: RelationshipMetadata\r\n}\r\n\r\nexport interface RelationshipMetadata {\r\n    side: string;\r\n    related_id?: string;\r\n    type: string;\r\n}\r\n\r\nexport interface LineItemsMetadata {\r\n    definition: FieldDefinition;\r\n    labelOnFirstLine?: boolean;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport declare type FieldClickCallback = (field: Field, record: Record) => void;\r\n\r\nexport interface FieldMetadata {\r\n    format?: boolean;\r\n    target?: string;\r\n    link?: boolean;\r\n    rows?: number;\r\n    cols?: number;\r\n    digits?: number;\r\n    isBaseCurrency?: boolean;\r\n    labelDisplay?: string;\r\n    options$?: Observable<Option[]>;\r\n    extraOptions?: Option[];\r\n    onClick?: FieldClickCallback;\r\n    tinymce?: any;\r\n}\r\n\r\nexport interface FieldAttributeMap {\r\n    [key: string]: FieldAttribute;\r\n}\r\n\r\nexport interface FieldAttribute extends Field {\r\n    valuePath?: string;\r\n    valueParent?: string;\r\n}\r\n\r\nexport interface FieldMap {\r\n    [key: string]: Field;\r\n}\r\n\r\nexport interface AttributeDependency {\r\n    field: string;\r\n    attribute: string;\r\n}\r\n\r\nexport interface Field {\r\n    type: string;\r\n    value?: string;\r\n    valueList?: string[];\r\n    valueObject?: any;\r\n    valueObjectArray?: ObjectMap[];\r\n    name?: string;\r\n    label?: string;\r\n    labelKey?: string;\r\n    parentKey?: string;\r\n    attributes?: FieldAttributeMap;\r\n    items?: Record[];\r\n    display?: string;\r\n    defaultDisplay?: string;\r\n    source?: 'field' | 'attribute' | 'item';\r\n    valueSource?: 'value' | 'valueList' | 'valueObject' | 'criteria';\r\n    metadata?: FieldMetadata;\r\n    definition?: FieldDefinition;\r\n    criteria?: SearchCriteriaFieldFilter;\r\n    formControl?: FormControl;\r\n    itemFormArray?: FormArray;\r\n    validators?: ValidatorFn[];\r\n    asyncValidators?: AsyncValidatorFn[];\r\n    valueSubject?: BehaviorSubject<FieldValue>;\r\n    valueChanges$?: Observable<FieldValue>;\r\n    fieldDependencies?: string[];\r\n    attributeDependencies?: AttributeDependency[];\r\n    logic?: FieldLogicMap;\r\n}\r\n\r\nexport class BaseField implements Field {\r\n    type: string;\r\n    name?: string;\r\n    label?: string;\r\n    labelKey?: string;\r\n    display?: string;\r\n    defaultDisplay?: string;\r\n    source?: 'field' | 'attribute';\r\n    metadata?: FieldMetadata;\r\n    definition?: FieldDefinition;\r\n    criteria?: SearchCriteriaFieldFilter;\r\n    formControl?: FormControl;\r\n    itemFormArray?: FormArray;\r\n    validators?: ValidatorFn[];\r\n    asyncValidators?: AsyncValidatorFn[];\r\n    attributes?: FieldAttributeMap;\r\n    valueSubject?: BehaviorSubject<FieldValue>;\r\n    valueChanges$?: Observable<FieldValue>;\r\n    fieldDependencies: string[] = [];\r\n    attributeDependencies: AttributeDependency[] = [];\r\n    logic?: FieldLogicMap;\r\n\r\n    protected valueState?: string;\r\n    protected valueListState?: string[];\r\n    protected valueObjectState?: any;\r\n    protected valueObjectArrayState?: ObjectMap[];\r\n\r\n    constructor() {\r\n        this.valueSubject = new BehaviorSubject<FieldValue>({} as FieldValue);\r\n        this.valueChanges$ = this.valueSubject.asObservable();\r\n    }\r\n\r\n    get value(): string {\r\n        return this.valueState;\r\n    }\r\n\r\n    set value(value: string) {\r\n        const changed = value !== this.valueState;\r\n\r\n        this.valueState = value;\r\n\r\n        if (changed) {\r\n            this.emitValueChanges();\r\n        }\r\n    }\r\n\r\n    get valueList(): string[] {\r\n        return this.valueListState;\r\n    }\r\n\r\n    set valueList(value: string[]) {\r\n\r\n        this.valueListState = value;\r\n\r\n        this.emitValueChanges();\r\n    }\r\n\r\n    get valueObject(): any {\r\n        return this.valueObjectState;\r\n    }\r\n\r\n    set valueObject(value: any) {\r\n        this.valueObjectState = value;\r\n        this.emitValueChanges();\r\n    }\r\n\r\n    get valueObjectArray(): any {\r\n        return this.valueObjectArrayState;\r\n    }\r\n\r\n    set valueObjectArray(value: ObjectMap[]) {\r\n        this.valueObjectArrayState = value;\r\n        this.emitValueChanges();\r\n    }\r\n\r\n    protected emitValueChanges() {\r\n        this.valueSubject.next({\r\n            value: this.valueState,\r\n            valueList: this.valueListState,\r\n            valueObject: this.valueObjectState\r\n        })\r\n    }\r\n}\r\n\r\nexport interface FieldValue {\r\n    value?: string;\r\n    valueList?: string[];\r\n    valueObject?: any;\r\n}\r\n\r\n\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {RecordMapper, RecordMapperRegistryInterface} from './record-mapper.model';\r\nimport {MapEntry, OverridableMap} from '../../types/overridable-map';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RecordMapperRegistry implements RecordMapperRegistryInterface {\r\n    protected map: OverridableMap<RecordMapper>;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    public register(module: string, key: string, mapper: RecordMapper): void {\r\n        this.map.addEntry(module, key, mapper);\r\n    }\r\n\r\n    public exclude(module: string, key: string): void {\r\n        this.map.excludeEntry(module, key);\r\n    }\r\n\r\n    public get(module: string): MapEntry<RecordMapper> {\r\n\r\n        return this.map.getGroupEntries(module);\r\n    }\r\n\r\n    public has(module: string, key: string): boolean {\r\n\r\n        const moduleFields = this.map.getGroupEntries(module);\r\n\r\n        return !!moduleFields[key];\r\n    }\r\n\r\n    protected init(): void {\r\n        this.map = new OverridableMap<RecordMapper>();\r\n    }\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\n// bootstrap css alert types\r\nexport interface Message {\r\n    type: MessageTypes;\r\n    text?: string;\r\n    labelKey?: string;\r\n}\r\n\r\nexport enum MessageTypes {\r\n    primary = 'alert alert-primary',\r\n    secondary = 'alert alert-secondary',\r\n    success = 'alert alert-success',\r\n    danger = 'alert alert-danger',\r\n    warning = 'alert alert-warning',\r\n    info = 'alert alert-info',\r\n    light = 'alert alert-light',\r\n    dark = 'alert alert-dark'\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\n/**\r\n * Deep clones an object\r\n *\r\n * @param {object} obj to clone\r\n * @returns {string} any\r\n */\r\nexport const deepClone = (obj: any): any => JSON.parse(JSON.stringify(obj));\r\n\r\n/**\r\n * Check if all entries have been loaded and are ready to use\r\n *\r\n * @param entries\r\n * @returns boolean\r\n */\r\nexport const ready = (entries: (Array<any> | Record<string, any>)[]): boolean => {\r\n    let areReady = true;\r\n\r\n    entries.every(entry => {\r\n\r\n        if (!entry) {\r\n            areReady = false;\r\n            return false;\r\n        }\r\n        if (Array.isArray(entry) && entry.length <= 0) {\r\n            areReady = false;\r\n            return false;\r\n        }\r\n\r\n        if (typeof entry === 'object' && Object.keys(entry).length <= 0) {\r\n            areReady = false;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\n    return areReady;\r\n};\r\n\r\n/**\r\n * Pad all values of an object\r\n * Singular digit numbers will be padded/prefixed with a 0\r\n * e.g. numbers 1-9 will be padded with a 0 in front to 01-09\r\n *\r\n * @param {object} obj to pad\r\n * @returns {object} any\r\n */\r\nexport const padObjectValues = (obj: any): any => {\r\n    Object.keys(obj).forEach(key => {\r\n        obj[key] = String(obj[key]).padStart(2, '0');\r\n    });\r\n    return obj;\r\n};\r\n\r\n/**\r\n * @param {object} obj to be checked\r\n * @returns {boolean} true/false\r\n * @description Returns true, if the object is empty\r\n */\r\nexport const emptyObject = (obj: any): boolean =>\r\n    (obj && (Object.keys(obj).length === 0));\r\n\r\n\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\n/**\r\n * Check if value is false\r\n *\r\n * @param {any} value to check\r\n * @returns {boolean} isFalse\r\n */\r\nexport const isFalse = (value: any): boolean => (value === false || value === 'false');\r\n\r\n/**\r\n * Check if value is true\r\n *\r\n * @param {any} value to check\r\n * @returns {boolean} isFalse\r\n */\r\nexport const isTrue = (value: any): boolean => (value === true || value === 'true');\r\n\r\n/**\r\n * Check if value is null or undefined\r\n *\r\n * @param {any} value to check\r\n * @returns {boolean} isVoid\r\n */\r\nexport const isVoid = (value: any): boolean => (value === null || typeof value === 'undefined');\r\n/**\r\n * Check if value is an empty string\r\n *\r\n * @param {any} value to check\r\n * @returns {boolean} isEmptyString\r\n */\r\nexport const isEmptyString = (value: any): boolean => (typeof value === 'string' && !value.trim());\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {SortingSelection} from './list/list-navigation.model';\r\nimport {SearchCriteria} from './list/search-criteria.model';\r\nimport {Record} from '../record/record.model';\r\n\r\nexport type ViewMode = 'detail' | 'edit' | 'list' | 'create' | 'massupdate' | 'filter';\r\n\r\nexport const ALL_VIEW_MODES = ['detail', 'edit', 'list', 'create', 'massupdate', 'filter'] as ViewMode[];\r\nexport const EDITABLE_VIEW_MODES = ['edit', 'create', 'massupdate', 'filter'] as ViewMode[];\r\n\r\nexport interface ViewContext {\r\n    module?: string;\r\n    id?: string;\r\n    record?: Record;\r\n    criteria?: SearchCriteria;\r\n    sort?: SortingSelection;\r\n}\r\n\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nimport {EDITABLE_VIEW_MODES, ViewMode} from '../views/view.model';\r\n\r\n/**\r\n * Check if value is editable\r\n *\r\n * @param {string} value to check\r\n * @returns {boolean} isEditable\r\n */\r\nexport const isEditable = (value: ViewMode): boolean => EDITABLE_VIEW_MODES.includes(value);\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nexport enum SortDirection {\r\n    NONE = 'NONE',\r\n    ASC = 'ASC',\r\n    DESC = 'DESC'\r\n}\r\n\r\nexport interface SortingSelection {\r\n    orderBy?: string;\r\n    sortOrder?: SortDirection;\r\n}\r\n\r\nexport interface Pagination {\r\n    pageSize: number;\r\n    current: number;\r\n    previous: number;\r\n    next: number;\r\n    last: number;\r\n    pageFirst: number;\r\n    pageLast: number;\r\n    total: number;\r\n}\r\n\r\nexport interface PaginationCount {\r\n    pageFirst: number;\r\n    pageLast: number;\r\n    total: number;\r\n}\r\n\r\nexport enum PageSelection {\r\n    FIRST = 'FIRST',\r\n    PREVIOUS = 'PREVIOUS',\r\n    NEXT = 'NEXT',\r\n    LAST = 'LAST',\r\n}\r\n","/**\r\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\r\n * Copyright (C) 2021 SalesAgility Ltd.\r\n *\r\n * This program is free software; you can redistribute it and/or modify it under\r\n * the terms of the GNU Affero General Public License version 3 as published by the\r\n * Free Software Foundation with the addition of the following permission added\r\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\r\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\r\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\r\n *\r\n * This program is distributed in the hope that it will be useful, but WITHOUT\r\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\r\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\r\n * details.\r\n *\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n *\r\n * In accordance with Section 7(b) of the GNU Affero General Public License\r\n * version 3, these Appropriate Legal Notices must retain the display of the\r\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\r\n * feasible for technical reasons, the Appropriate Legal Notices must display\r\n * the words \"Supercharged by SuiteCRM\".\r\n */\r\n\r\nexport enum SelectionStatus {\r\n    ALL = 'ALL',\r\n    SOME = 'SOME',\r\n    PAGE = 'PAGE',\r\n    NONE = 'NONE',\r\n}\r\n\r\nexport interface RecordSelection {\r\n    all: boolean;\r\n    status: SelectionStatus;\r\n    selected: { [key: string]: string };\r\n    count: number;\r\n}\r\n"]}