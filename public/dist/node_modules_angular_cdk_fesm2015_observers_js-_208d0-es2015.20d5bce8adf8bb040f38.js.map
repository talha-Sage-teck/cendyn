{"version":3,"file":"node_modules_angular_cdk_fesm2015_observers_js-_208d0-es2015.20d5bce8adf8bb040f38.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAClC,SAAOA,KAAK,IAAI,IAAT,IAAkB,GAAEA,KAAM,EAAT,KAAe,OAAvC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,oBAAT,CAA8BD,KAA9B,EAAqCE,aAAa,GAAG,CAArD,EAAwD;AACpD,SAAOC,cAAc,CAACH,KAAD,CAAd,GAAwBI,MAAM,CAACJ,KAAD,CAA9B,GAAwCE,aAA/C;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAwBH,KAAxB,EAA+B;AAC3B;AACA;AACA;AACA,SAAO,CAACK,KAAK,CAACC,UAAU,CAACN,KAAD,CAAX,CAAN,IAA6B,CAACK,KAAK,CAACD,MAAM,CAACJ,KAAD,CAAP,CAA1C;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,WAAT,CAAqBP,KAArB,EAA4B;AACxB,SAAOQ,KAAK,CAACC,OAAN,CAAcT,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAtC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAASU,mBAAT,CAA6BV,KAA7B,EAAoC;AAChC,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACf,WAAO,EAAP;AACH;;AACD,SAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAqC,GAAEA,KAAM,IAApD;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASW,aAAT,CAAuBC,YAAvB,EAAqC;AACjC,SAAOA,YAAY,YAAYd,qDAAxB,GAAqCc,YAAY,CAACC,aAAlD,GAAkED,YAAzE;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,iBAAT,CAA2Bd,KAA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","sources":["./node_modules/@angular/cdk/fesm2015/coercion.js","./node_modules/@angular/cdk/fesm2015/observers.js"],"sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a data-bound value (typically a string) to a boolean. */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n/**\r\n * Whether the provided value is considered a number.\r\n * @docs-private\r\n */\r\nfunction _isNumberValue(value) {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a value to a CSS pixel value. */\r\nfunction coerceCssPixelValue(value) {\r\n    if (value == null) {\r\n        return '';\r\n    }\r\n    return typeof value === 'string' ? value : `${value}px`;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces an ElementRef or an Element into an element.\r\n * Useful for APIs that can accept either a ref or the native element itself.\r\n */\r\nfunction coerceElement(elementOrRef) {\r\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces a value to an array of trimmed non-empty strings.\r\n * Any input that is not an array, `null` or `undefined` will be turned into a string\r\n * via `toString()` and subsequently split with the given separator.\r\n * `null` and `undefined` will result in an empty array.\r\n * This results in the following outcomes:\r\n * - `null` -&gt; `[]`\r\n * - `[null]` -&gt; `[\"null\"]`\r\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\r\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\r\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\r\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\r\n *\r\n * Useful for defining CSS classes or table columns.\r\n * @param value the value to coerce into an array of strings\r\n * @param separator split-separator if value isn't an array\r\n */\r\nfunction coerceStringArray(value, separator = /\\s+/) {\r\n    const result = [];\r\n    if (value != null) {\r\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\r\n        for (const sourceValue of sourceValues) {\r\n            const trimmedString = `${sourceValue}`.trim();\r\n            if (trimmedString) {\r\n                result.push(trimmedString);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\r\n\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\r\n * @docs-private\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass MutationObserverFactory {\r\n    create(callback) {\r\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\r\n    }\r\n}\r\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\r\nMutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], null, null); })();\r\n/** An injectable service that allows watching elements for changes to their content. */\r\nclass ContentObserver {\r\n    constructor(_mutationObserverFactory) {\r\n        this._mutationObserverFactory = _mutationObserverFactory;\r\n        /** Keeps track of the existing MutationObservers so they can be reused. */\r\n        this._observedElements = new Map();\r\n    }\r\n    ngOnDestroy() {\r\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\r\n    }\r\n    observe(elementOrRef) {\r\n        const element = coerceElement(elementOrRef);\r\n        return new Observable((observer) => {\r\n            const stream = this._observeElement(element);\r\n            const subscription = stream.subscribe(observer);\r\n            return () => {\r\n                subscription.unsubscribe();\r\n                this._unobserveElement(element);\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Observes the given element by using the existing MutationObserver if available, or creating a\r\n     * new one if not.\r\n     */\r\n    _observeElement(element) {\r\n        if (!this._observedElements.has(element)) {\r\n            const stream = new Subject();\r\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\r\n            if (observer) {\r\n                observer.observe(element, {\r\n                    characterData: true,\r\n                    childList: true,\r\n                    subtree: true\r\n                });\r\n            }\r\n            this._observedElements.set(element, { observer, stream, count: 1 });\r\n        }\r\n        else {\r\n            this._observedElements.get(element).count++;\r\n        }\r\n        return this._observedElements.get(element).stream;\r\n    }\r\n    /**\r\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\r\n     * observing this element.\r\n     */\r\n    _unobserveElement(element) {\r\n        if (this._observedElements.has(element)) {\r\n            this._observedElements.get(element).count--;\r\n            if (!this._observedElements.get(element).count) {\r\n                this._cleanupObserver(element);\r\n            }\r\n        }\r\n    }\r\n    /** Clean up the underlying MutationObserver for the specified element. */\r\n    _cleanupObserver(element) {\r\n        if (this._observedElements.has(element)) {\r\n            const { observer, stream } = this._observedElements.get(element);\r\n            if (observer) {\r\n                observer.disconnect();\r\n            }\r\n            stream.complete();\r\n            this._observedElements.delete(element);\r\n        }\r\n    }\r\n}\r\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\r\nContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\r\nContentObserver.ctorParameters = () => [\r\n    { type: MutationObserverFactory }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\r\n/**\r\n * Directive that triggers a callback whenever the content of\r\n * its associated element has changed.\r\n */\r\nclass CdkObserveContent {\r\n    constructor(_contentObserver, _elementRef, _ngZone) {\r\n        this._contentObserver = _contentObserver;\r\n        this._elementRef = _elementRef;\r\n        this._ngZone = _ngZone;\r\n        /** Event emitted for each change in the element's content. */\r\n        this.event = new EventEmitter();\r\n        this._disabled = false;\r\n        this._currentSubscription = null;\r\n    }\r\n    /**\r\n     * Whether observing content is disabled. This option can be used\r\n     * to disconnect the underlying MutationObserver until it is needed.\r\n     */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._disabled ? this._unsubscribe() : this._subscribe();\r\n    }\r\n    /** Debounce interval for emitting the changes. */\r\n    get debounce() { return this._debounce; }\r\n    set debounce(value) {\r\n        this._debounce = coerceNumberProperty(value);\r\n        this._subscribe();\r\n    }\r\n    ngAfterContentInit() {\r\n        if (!this._currentSubscription && !this.disabled) {\r\n            this._subscribe();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._unsubscribe();\r\n    }\r\n    _subscribe() {\r\n        this._unsubscribe();\r\n        const stream = this._contentObserver.observe(this._elementRef);\r\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\r\n        // Consider brining it back inside the zone next time we're making breaking changes.\r\n        // Bringing it back inside can cause things like infinite change detection loops and changed\r\n        // after checked errors if people's code isn't handling it properly.\r\n        this._ngZone.runOutsideAngular(() => {\r\n            this._currentSubscription =\r\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\r\n        });\r\n    }\r\n    _unsubscribe() {\r\n        var _a;\r\n        (_a = this._currentSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\r\n    }\r\n}\r\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\r\nCdkObserveContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\r\nCdkObserveContent.ctorParameters = () => [\r\n    { type: ContentObserver },\r\n    { type: ElementRef },\r\n    { type: NgZone }\r\n];\r\nCdkObserveContent.propDecorators = {\r\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\r\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\r\n    debounce: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkObserveContent]',\r\n                exportAs: 'cdkObserveContent'\r\n            }]\r\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\r\n            type: Output,\r\n            args: ['cdkObserveContent']\r\n        }], disabled: [{\r\n            type: Input,\r\n            args: ['cdkObserveContentDisabled']\r\n        }], debounce: [{\r\n            type: Input\r\n        }] }); })();\r\nclass ObserversModule {\r\n}\r\nObserversModule.ɵfac = function ObserversModule_Factory(t) { return new (t || ObserversModule)(); };\r\nObserversModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\r\nObserversModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MutationObserverFactory] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [CdkObserveContent],\r\n                declarations: [CdkObserveContent],\r\n                providers: [MutationObserverFactory]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\r\n\r\n"],"names":["ElementRef","coerceBooleanProperty","value","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","nativeElement","coerceStringArray","separator","result","sourceValues","split","sourceValue","trimmedString","trim","push","ɵɵdefineInjectable","Injectable","ɵɵinject","EventEmitter","Directive","NgZone","Output","Input","NgModule","Observable","Subject","debounceTime","ɵngcc0","MutationObserverFactory","create","callback","MutationObserver","ɵfac","MutationObserverFactory_Factory","t","ɵprov","factory","token","providedIn","ngDevMode","ContentObserver","constructor","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","_","element","_cleanupObserver","observe","observer","stream","_observeElement","subscription","subscribe","unsubscribe","_unobserveElement","has","mutations","next","characterData","childList","subtree","set","count","get","disconnect","complete","delete","ContentObserver_Factory","CdkObserveContent","_contentObserver","_elementRef","_ngZone","event","_disabled","_currentSubscription","disabled","_unsubscribe","_subscribe","debounce","_debounce","ngAfterContentInit","runOutsideAngular","pipe","_a","CdkObserveContent_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","outputs","exportAs","ObserversModule","ObserversModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","ngJitMode","ɵɵsetNgModuleScope","declarations","exports"],"sourceRoot":"webpack:///"}