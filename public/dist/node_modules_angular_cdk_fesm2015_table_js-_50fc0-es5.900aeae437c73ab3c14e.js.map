{"version":3,"mappings":"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","names":["DIR_DOCUMENT","InjectionToken","providedIn","factory","DIR_DOCUMENT_FACTORY","inject","DOCUMENT","Directionality","constructor","_document","value","change","EventEmitter","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵfac","Directionality_Factory","t","ɵngcc0","ɵprov","ɵɵdefineInjectable","ɵɵinject","token","ngDevMode","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","Dir_Factory","ɵdir","type","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","inputs","outputs","exportAs","features","provide","useExisting","BidiModule","BidiModule_Factory","ɵmod","ɵinj","ngJitMode","declarations","exports","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","ElementRef","nativeElement","coerceStringArray","separator","result","sourceValues","split","sourceValue","trimmedString","trim","push","DataSource","isDataSource","connect","ArrayDataSource","_data","isObservable","of","disconnect","_DisposeViewRepeaterStrategy","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","remove","get","move","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","destroy","cachedView","_insertViewFromCache","$implicit","undefined","viewArgs","detachedView","_maybeCacheView","length","indexOf","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","Subject","forEach","_markSelected","_selected","from","values","select","_verifyValueAssignment","_emitChangeEvent","deselect","_unmarkSelected","toggle","isSelected","clear","_unmarkAll","has","isEmpty","size","hasValue","sort","predicate","selected","isMultipleSelection","next","source","added","removed","add","getMultipleValuesInSingleSelectionError","Error","UniqueSelectionDispatcher","_listeners","notify","id","name","listener","listen","filter","registered","UniqueSelectionDispatcher_Factory","_VIEW_REPEATER_STRATEGY","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","PLATFORM_ID","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","createElement","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","Object","defineProperty","normalizePassiveListenerOptions","options","capture","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","style","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","scrollLeft","parentNode","removeChild","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","element","rootNode","getRootNode","ShadowRoot","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","pipe","distinctUntilChanged","_viewport","_itemSize","_minBufferPx","_maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","Math","ceil","newVisibleIndex","max","min","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","ngOnChanges","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","forwardRef","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","Map","register","scrollable","set","elementScrolled","subscribe","deregister","scrollableReference","unsubscribe","scrolled","auditTimeInMs","Observable","observer","_addGlobalListener","subscription","auditTime","_removeGlobalListener","_","container","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","getElementRef","parentElement","runOutsideAngular","fromEvent","ScrollDispatcher_Factory","ɵngcc1","NgZone","CdkScrollable","elementRef","scrollDispatcher","ngZone","_destroyed","_elementScrolled","takeUntil","ngOnInit","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","ɵngcc2","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_changeListener","event","_updateViewportSize","removeEventListener","_viewportSize","output","getViewportRect","scrollPosition","getViewportScrollPosition","documentRect","getBoundingClientRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","animationFrameScheduler","asapScheduler","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","run","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","Subscription","checkViewportSize","orientation","_calculateSpacerSize","_measureViewportSize","startWith","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","_doChangeDetection","range","getOffsetToRenderedContentStart","offset","to","isHorizontal","axis","axisDirection","transform","_renderedContentTransform","measureRenderedContentSize","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","styles","encapsulation","changeDetection","getOffset","direction","node","rect","CdkVirtualForOf","_viewContainerRef","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","pairwise","switchMap","prev","cur","_changeDataSource","shareReplay","_differ","_needsUpdate","_onRenderedDataChange","_cdkVirtualForOf","_cdkVirtualForTrackBy","item","renderedStartIndex","rangeLen","firstNode","lastNode","i","rootNodes","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","slice","find","create","cdkVirtualForTrackBy","oldDs","newDs","count","_updateComputedContextProperties","detectChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","cdkVirtualForOf","CdkVirtualForOf_Factory","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","useClass","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","imports","CdkTextColumn_th_1_Template","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","ctx_r1","dataAccessor","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","cell","headerCell","footerCell","sticky","stickyEnd","BaseCdkCell","columnDef","classList","className","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","schedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","isStable","onStable","take","_CoalescedStyleScheduler_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_columnsDiffer","columns","currentValue","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","directives","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","children","_scheduleStyleChanges","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","map","reverse","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","borderedRowIndex","_b","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","EmbeddedViewRef","CdkTable","_elementRef","role","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","BehaviorSubject","MAX_VALUE","nodeName","_trackByFn","console","warn","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_renderCellTemplateForItem","rowDef","prevIndex","renderRow","_renderRow","_updateRowIndexContext","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","columnName","rowOutlet","renderedRows","viewRef","outlet","_getCellTemplates","cellTemplate","renderIndex","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","stickyCheckReducer","d","items","_noDataRow","shouldShow","CdkTable_Factory","ɵngcc3","CdkTable_ContentQueries","CdkTable_Query","CdkTable_HostBindings","fixedLayout","useValue","CdkTable_Template","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory"],"sources":["webpack:///node_modules/@angular/cdk/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/cdk/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/fesm2015/table.js"],"sourcesContent":["import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n *\r\n * This token is defined in a separate file from Directionality as a workaround for\r\n * https://github.com/angular/angular/issues/22559\r\n *\r\n * @docs-private\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\r\n    providedIn: 'root',\r\n    factory: DIR_DOCUMENT_FACTORY,\r\n});\r\n/** @docs-private */\r\nfunction DIR_DOCUMENT_FACTORY() {\r\n    return inject(DOCUMENT);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\nclass Directionality {\r\n    constructor(_document) {\r\n        /** The current 'ltr' or 'rtl' value. */\r\n        this.value = 'ltr';\r\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\r\n        this.change = new EventEmitter();\r\n        if (_document) {\r\n            // TODO: handle 'auto' value -\r\n            // We still need to account for dir=\"auto\".\r\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n            const bodyDir = _document.body ? _document.body.dir : null;\r\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n            const value = bodyDir || htmlDir;\r\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.change.complete();\r\n    }\r\n}\r\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\r\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\r\nDirectionality.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DIR_DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Directive to listen for changes of direction of part of the DOM.\r\n *\r\n * Provides itself as Directionality such that descendant directives only need to ever inject\r\n * Directionality to get the closest direction.\r\n */\r\nclass Dir {\r\n    constructor() {\r\n        /** Normalized direction that accounts for invalid/unsupported values. */\r\n        this._dir = 'ltr';\r\n        /** Whether the `value` has been set to its initial value. */\r\n        this._isInitialized = false;\r\n        /** Event emitted when the direction changes. */\r\n        this.change = new EventEmitter();\r\n    }\r\n    /** @docs-private */\r\n    get dir() { return this._dir; }\r\n    set dir(value) {\r\n        const old = this._dir;\r\n        const normalizedValue = value ? value.toLowerCase() : value;\r\n        this._rawDir = value;\r\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\r\n        if (old !== this._dir && this._isInitialized) {\r\n            this.change.emit(this._dir);\r\n        }\r\n    }\r\n    /** Current layout direction of the element. */\r\n    get value() { return this.dir; }\r\n    /** Initialize once default value has been set. */\r\n    ngAfterContentInit() {\r\n        this._isInitialized = true;\r\n    }\r\n    ngOnDestroy() {\r\n        this.change.complete();\r\n    }\r\n}\r\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\r\nDir.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\r\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\r\nDir.propDecorators = {\r\n    change: [{ type: Output, args: ['dirChange',] }],\r\n    dir: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[dir]',\r\n                providers: [{ provide: Directionality, useExisting: Dir }],\r\n                host: { '[attr.dir]': '_rawDir' },\r\n                exportAs: 'dir'\r\n            }]\r\n    }], function () { return []; }, { change: [{\r\n            type: Output,\r\n            args: ['dirChange']\r\n        }], dir: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass BidiModule {\r\n}\r\nBidiModule.ɵfac = function BidiModule_Factory(t) { return new (t || BidiModule)(); };\r\nBidiModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\r\nBidiModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [Dir],\r\n                declarations: [Dir]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\r\n\r\n","import { ElementRef } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a data-bound value (typically a string) to a boolean. */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n/**\r\n * Whether the provided value is considered a number.\r\n * @docs-private\r\n */\r\nfunction _isNumberValue(value) {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a value to a CSS pixel value. */\r\nfunction coerceCssPixelValue(value) {\r\n    if (value == null) {\r\n        return '';\r\n    }\r\n    return typeof value === 'string' ? value : `${value}px`;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces an ElementRef or an Element into an element.\r\n * Useful for APIs that can accept either a ref or the native element itself.\r\n */\r\nfunction coerceElement(elementOrRef) {\r\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces a value to an array of trimmed non-empty strings.\r\n * Any input that is not an array, `null` or `undefined` will be turned into a string\r\n * via `toString()` and subsequently split with the given separator.\r\n * `null` and `undefined` will result in an empty array.\r\n * This results in the following outcomes:\r\n * - `null` -&gt; `[]`\r\n * - `[null]` -&gt; `[\"null\"]`\r\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\r\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\r\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\r\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\r\n *\r\n * Useful for defining CSS classes or table columns.\r\n * @param value the value to coerce into an array of strings\r\n * @param separator split-separator if value isn't an array\r\n */\r\nfunction coerceStringArray(value, separator = /\\s+/) {\r\n    const result = [];\r\n    if (value != null) {\r\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\r\n        for (const sourceValue of sourceValues) {\r\n            const trimmedString = `${sourceValue}`.trim();\r\n            if (trimmedString) {\r\n                result.push(trimmedString);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\r\n\n","import { isObservable, of, Subject } from 'rxjs';\r\nimport { ɵɵdefineInjectable, Injectable, InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass DataSource {\r\n}\r\n/** Checks whether an object is a data source. */\r\nfunction isDataSource(value) {\r\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\r\n    // be checked as an `instanceof DataSource` since people could create their own sources\r\n    // that match the interface, but don't extend DataSource.\r\n    return value && typeof value.connect === 'function';\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** DataSource wrapper for a native array. */\r\nclass ArrayDataSource extends DataSource {\r\n    constructor(_data) {\r\n        super();\r\n        this._data = _data;\r\n    }\r\n    connect() {\r\n        return isObservable(this._data) ? this._data : of(this._data);\r\n    }\r\n    disconnect() { }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A repeater that destroys views when they are removed from a\r\n * {@link ViewContainerRef}. When new items are inserted into the container,\r\n * the repeater will always construct a new embedded view for each item.\r\n *\r\n * @template T The type for the embedded view's $implicit property.\r\n * @template R The type for the item in each IterableDiffer change record.\r\n * @template C The type for the context passed to each embedded view.\r\n */\r\nclass _DisposeViewRepeaterStrategy {\r\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\r\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\r\n            let view;\r\n            let operation;\r\n            if (record.previousIndex == null) {\r\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\r\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\r\n                operation = 1 /* INSERTED */;\r\n            }\r\n            else if (currentIndex == null) {\r\n                viewContainerRef.remove(adjustedPreviousIndex);\r\n                operation = 3 /* REMOVED */;\r\n            }\r\n            else {\r\n                view = viewContainerRef.get(adjustedPreviousIndex);\r\n                viewContainerRef.move(view, currentIndex);\r\n                operation = 2 /* MOVED */;\r\n            }\r\n            if (itemViewChanged) {\r\n                itemViewChanged({\r\n                    context: view === null || view === void 0 ? void 0 : view.context,\r\n                    operation,\r\n                    record,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    detach() {\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A repeater that caches views when they are removed from a\r\n * {@link ViewContainerRef}. When new items are inserted into the container,\r\n * the repeater will reuse one of the cached views instead of creating a new\r\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\r\n * inserts.\r\n *\r\n * @template T The type for the embedded view's $implicit property.\r\n * @template R The type for the item in each IterableDiffer change record.\r\n * @template C The type for the context passed to each embedded view.\r\n */\r\nclass _RecycleViewRepeaterStrategy {\r\n    constructor() {\r\n        /**\r\n         * The size of the cache used to store unused views.\r\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\r\n         */\r\n        this.viewCacheSize = 20;\r\n        /**\r\n         * View cache that stores embedded view instances that have been previously stamped out,\r\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\r\n         * creating brand new ones.\r\n         *\r\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\r\n         */\r\n        this._viewCache = [];\r\n    }\r\n    /** Apply changes to the DOM. */\r\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\r\n        // Rearrange the views to put them in the right location.\r\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\r\n            let view;\r\n            let operation;\r\n            if (record.previousIndex == null) { // Item added.\r\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\r\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\r\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\r\n            }\r\n            else if (currentIndex == null) { // Item removed.\r\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\r\n                operation = 3 /* REMOVED */;\r\n            }\r\n            else { // Item moved.\r\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\r\n                operation = 2 /* MOVED */;\r\n            }\r\n            if (itemViewChanged) {\r\n                itemViewChanged({\r\n                    context: view === null || view === void 0 ? void 0 : view.context,\r\n                    operation,\r\n                    record,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    detach() {\r\n        for (const view of this._viewCache) {\r\n            view.destroy();\r\n        }\r\n        this._viewCache = [];\r\n    }\r\n    /**\r\n     * Inserts a view for a new item, either from the cache or by creating a new\r\n     * one. Returns `undefined` if the item was inserted into a cached view.\r\n     */\r\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\r\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\r\n        if (cachedView) {\r\n            cachedView.context.$implicit = value;\r\n            return undefined;\r\n        }\r\n        const viewArgs = viewArgsFactory();\r\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\r\n    }\r\n    /** Detaches the view at the given index and inserts into the view cache. */\r\n    _detachAndCacheView(index, viewContainerRef) {\r\n        const detachedView = viewContainerRef.detach(index);\r\n        this._maybeCacheView(detachedView, viewContainerRef);\r\n    }\r\n    /** Moves view at the previous index to the current index. */\r\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\r\n        const view = viewContainerRef.get(adjustedPreviousIndex);\r\n        viewContainerRef.move(view, currentIndex);\r\n        view.context.$implicit = value;\r\n        return view;\r\n    }\r\n    /**\r\n     * Cache the given detached view. If the cache is full, the view will be\r\n     * destroyed.\r\n     */\r\n    _maybeCacheView(view, viewContainerRef) {\r\n        if (this._viewCache.length < this.viewCacheSize) {\r\n            this._viewCache.push(view);\r\n        }\r\n        else {\r\n            const index = viewContainerRef.indexOf(view);\r\n            // The host component could remove views from the container outside of\r\n            // the view repeater. It's unlikely this will occur, but just in case,\r\n            // destroy the view on its own, otherwise destroy it through the\r\n            // container to ensure that all the references are removed.\r\n            if (index === -1) {\r\n                view.destroy();\r\n            }\r\n            else {\r\n                viewContainerRef.remove(index);\r\n            }\r\n        }\r\n    }\r\n    /** Inserts a recycled view from the cache at the given index. */\r\n    _insertViewFromCache(index, viewContainerRef) {\r\n        const cachedView = this._viewCache.pop();\r\n        if (cachedView) {\r\n            viewContainerRef.insert(cachedView, index);\r\n        }\r\n        return cachedView || null;\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Class to be used to power selecting one or more options from a list.\r\n */\r\nclass SelectionModel {\r\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\r\n        this._multiple = _multiple;\r\n        this._emitChanges = _emitChanges;\r\n        /** Currently-selected values. */\r\n        this._selection = new Set();\r\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\r\n        this._deselectedToEmit = [];\r\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\r\n        this._selectedToEmit = [];\r\n        /** Event emitted when the value has changed. */\r\n        this.changed = new Subject();\r\n        if (initiallySelectedValues && initiallySelectedValues.length) {\r\n            if (_multiple) {\r\n                initiallySelectedValues.forEach(value => this._markSelected(value));\r\n            }\r\n            else {\r\n                this._markSelected(initiallySelectedValues[0]);\r\n            }\r\n            // Clear the array in order to avoid firing the change event for preselected values.\r\n            this._selectedToEmit.length = 0;\r\n        }\r\n    }\r\n    /** Selected values. */\r\n    get selected() {\r\n        if (!this._selected) {\r\n            this._selected = Array.from(this._selection.values());\r\n        }\r\n        return this._selected;\r\n    }\r\n    /**\r\n     * Selects a value or an array of values.\r\n     */\r\n    select(...values) {\r\n        this._verifyValueAssignment(values);\r\n        values.forEach(value => this._markSelected(value));\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Deselects a value or an array of values.\r\n     */\r\n    deselect(...values) {\r\n        this._verifyValueAssignment(values);\r\n        values.forEach(value => this._unmarkSelected(value));\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Toggles a value between selected and deselected.\r\n     */\r\n    toggle(value) {\r\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\r\n    }\r\n    /**\r\n     * Clears all of the selected values.\r\n     */\r\n    clear() {\r\n        this._unmarkAll();\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Determines whether a value is selected.\r\n     */\r\n    isSelected(value) {\r\n        return this._selection.has(value);\r\n    }\r\n    /**\r\n     * Determines whether the model does not have a value.\r\n     */\r\n    isEmpty() {\r\n        return this._selection.size === 0;\r\n    }\r\n    /**\r\n     * Determines whether the model has a value.\r\n     */\r\n    hasValue() {\r\n        return !this.isEmpty();\r\n    }\r\n    /**\r\n     * Sorts the selected values based on a predicate function.\r\n     */\r\n    sort(predicate) {\r\n        if (this._multiple && this.selected) {\r\n            this._selected.sort(predicate);\r\n        }\r\n    }\r\n    /**\r\n     * Gets whether multiple values can be selected.\r\n     */\r\n    isMultipleSelection() {\r\n        return this._multiple;\r\n    }\r\n    /** Emits a change event and clears the records of selected and deselected values. */\r\n    _emitChangeEvent() {\r\n        // Clear the selected values so they can be re-cached.\r\n        this._selected = null;\r\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\r\n            this.changed.next({\r\n                source: this,\r\n                added: this._selectedToEmit,\r\n                removed: this._deselectedToEmit\r\n            });\r\n            this._deselectedToEmit = [];\r\n            this._selectedToEmit = [];\r\n        }\r\n    }\r\n    /** Selects a value. */\r\n    _markSelected(value) {\r\n        if (!this.isSelected(value)) {\r\n            if (!this._multiple) {\r\n                this._unmarkAll();\r\n            }\r\n            this._selection.add(value);\r\n            if (this._emitChanges) {\r\n                this._selectedToEmit.push(value);\r\n            }\r\n        }\r\n    }\r\n    /** Deselects a value. */\r\n    _unmarkSelected(value) {\r\n        if (this.isSelected(value)) {\r\n            this._selection.delete(value);\r\n            if (this._emitChanges) {\r\n                this._deselectedToEmit.push(value);\r\n            }\r\n        }\r\n    }\r\n    /** Clears out the selected values. */\r\n    _unmarkAll() {\r\n        if (!this.isEmpty()) {\r\n            this._selection.forEach(value => this._unmarkSelected(value));\r\n        }\r\n    }\r\n    /**\r\n     * Verifies the value assignment and throws an error if the specified value array is\r\n     * including multiple values while the selection model is not supporting multiple values.\r\n     */\r\n    _verifyValueAssignment(values) {\r\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getMultipleValuesInSingleSelectionError();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns an error that reports that multiple values are passed into a selection model\r\n * with a single value.\r\n * @docs-private\r\n */\r\nfunction getMultipleValuesInSingleSelectionError() {\r\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Class to coordinate unique selection based on name.\r\n * Intended to be consumed as an Angular service.\r\n * This service is needed because native radio change events are only fired on the item currently\r\n * being selected, and we still need to uncheck the previous selection.\r\n *\r\n * This service does not *store* any IDs and names because they may change at any time, so it is\r\n * less error-prone if they are simply passed through when the events occur.\r\n */\r\nclass UniqueSelectionDispatcher {\r\n    constructor() {\r\n        this._listeners = [];\r\n    }\r\n    /**\r\n     * Notify other items that selection for the given name has been set.\r\n     * @param id ID of the item.\r\n     * @param name Name of the item.\r\n     */\r\n    notify(id, name) {\r\n        for (let listener of this._listeners) {\r\n            listener(id, name);\r\n        }\r\n    }\r\n    /**\r\n     * Listen for future changes to item selection.\r\n     * @return Function used to deregister listener\r\n     */\r\n    listen(listener) {\r\n        this._listeners.push(listener);\r\n        return () => {\r\n            this._listeners = this._listeners.filter((registered) => {\r\n                return listener !== registered;\r\n            });\r\n        };\r\n    }\r\n    ngOnDestroy() {\r\n        this._listeners = [];\r\n    }\r\n}\r\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\r\nUniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return []; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\r\n * @docs-private\r\n */\r\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\r\n\r\n","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nimport * as ɵngcc0 from '@angular/core';\r\nlet hasV8BreakIterator;\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\r\n}\r\ncatch (_a) {\r\n    hasV8BreakIterator = false;\r\n}\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\nclass Platform {\r\n    constructor(_platformId) {\r\n        this._platformId = _platformId;\r\n        // We want to use the Angular platform check because if the Document is shimmed\r\n        // without the navigator, the following checks will fail. This is preferred because\r\n        // sometimes the Document may be shimmed without the user's knowledge or intention\r\n        /** Whether the Angular application is being rendered in the browser. */\r\n        this.isBrowser = this._platformId ?\r\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\r\n        /** Whether the current browser is Microsoft Edge. */\r\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n        /** Whether the current rendering engine is Microsoft Trident. */\r\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\r\n        /** Whether the current rendering engine is Blink. */\r\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\r\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\r\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\r\n        // ensure that Webkit runs standalone and is not used as another engine's base.\r\n        /** Whether the current rendering engine is WebKit. */\r\n        this.WEBKIT = this.isBrowser &&\r\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n        /** Whether the current platform is Apple iOS. */\r\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n            !('MSStream' in window);\r\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n        // instead of having an unstable check for Gecko.\r\n        /** Whether the current browser is Firefox. */\r\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n        /** Whether the current platform is Android. */\r\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\r\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\r\n        // Safari browser should also use Webkit as its layout engine.\r\n        /** Whether the current browser is Safari. */\r\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n    }\r\n}\r\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\r\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\r\nPlatform.ctorParameters = () => [\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass PlatformModule {\r\n}\r\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\r\nPlatformModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\r\nPlatformModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\r\n        type: NgModule,\r\n        args: [{}]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result Set of input types support by the current browser. */\r\nlet supportedInputTypes;\r\n/** Types of `<input>` that *might* be supported. */\r\nconst candidateInputTypes = [\r\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\r\n    // first changing it to something else:\r\n    // The specified value \"\" does not conform to the required format.\r\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\r\n    'color',\r\n    'button',\r\n    'checkbox',\r\n    'date',\r\n    'datetime-local',\r\n    'email',\r\n    'file',\r\n    'hidden',\r\n    'image',\r\n    'month',\r\n    'number',\r\n    'password',\r\n    'radio',\r\n    'range',\r\n    'reset',\r\n    'search',\r\n    'submit',\r\n    'tel',\r\n    'text',\r\n    'time',\r\n    'url',\r\n    'week',\r\n];\r\n/** @returns The input types supported by this browser. */\r\nfunction getSupportedInputTypes() {\r\n    // Result is cached.\r\n    if (supportedInputTypes) {\r\n        return supportedInputTypes;\r\n    }\r\n    // We can't check if an input type is not supported until we're on the browser, so say that\r\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n    // just a helper function and can't inject it.\r\n    if (typeof document !== 'object' || !document) {\r\n        supportedInputTypes = new Set(candidateInputTypes);\r\n        return supportedInputTypes;\r\n    }\r\n    let featureTestInput = document.createElement('input');\r\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\r\n        featureTestInput.setAttribute('type', value);\r\n        return featureTestInput.type === value;\r\n    }));\r\n    return supportedInputTypes;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result of whether the user's browser supports passive event listeners. */\r\nlet supportsPassiveEvents;\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n */\r\nfunction supportsPassiveEventListeners() {\r\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n        try {\r\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                get: () => supportsPassiveEvents = true\r\n            }));\r\n        }\r\n        finally {\r\n            supportsPassiveEvents = supportsPassiveEvents || false;\r\n        }\r\n    }\r\n    return supportsPassiveEvents;\r\n}\r\n/**\r\n * Normalizes an `AddEventListener` object to something that can be passed\r\n * to `addEventListener` on any browser, no matter whether it supports the\r\n * `options` parameter.\r\n * @param options Object to be normalized.\r\n */\r\nfunction normalizePassiveListenerOptions(options) {\r\n    return supportsPassiveEventListeners() ? options : !!options.capture;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\r\nlet rtlScrollAxisType;\r\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\r\nlet scrollBehaviorSupported;\r\n/** Check whether the browser supports scroll behaviors. */\r\nfunction supportsScrollBehavior() {\r\n    if (scrollBehaviorSupported == null) {\r\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\r\n        // some projects stub out the global `document` during SSR which can throw us off.\r\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\r\n            scrollBehaviorSupported = false;\r\n            return scrollBehaviorSupported;\r\n        }\r\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\r\n        if ('scrollBehavior' in document.documentElement.style) {\r\n            scrollBehaviorSupported = true;\r\n        }\r\n        else {\r\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\r\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\r\n            const scrollToFunction = Element.prototype.scrollTo;\r\n            if (scrollToFunction) {\r\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\r\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\r\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\r\n                // polyfilled functions as supporting scroll behavior.\r\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\r\n            }\r\n            else {\r\n                scrollBehaviorSupported = false;\r\n            }\r\n        }\r\n    }\r\n    return scrollBehaviorSupported;\r\n}\r\n/**\r\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\r\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\r\n */\r\nfunction getRtlScrollAxisType() {\r\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\r\n    if (typeof document !== 'object' || !document) {\r\n        return 0 /* NORMAL */;\r\n    }\r\n    if (rtlScrollAxisType == null) {\r\n        // Create a 1px wide scrolling container and a 2px wide content element.\r\n        const scrollContainer = document.createElement('div');\r\n        const containerStyle = scrollContainer.style;\r\n        scrollContainer.dir = 'rtl';\r\n        containerStyle.width = '1px';\r\n        containerStyle.overflow = 'auto';\r\n        containerStyle.visibility = 'hidden';\r\n        containerStyle.pointerEvents = 'none';\r\n        containerStyle.position = 'absolute';\r\n        const content = document.createElement('div');\r\n        const contentStyle = content.style;\r\n        contentStyle.width = '2px';\r\n        contentStyle.height = '1px';\r\n        scrollContainer.appendChild(content);\r\n        document.body.appendChild(scrollContainer);\r\n        rtlScrollAxisType = 0 /* NORMAL */;\r\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\r\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\r\n        // dealing with one of the other two types of browsers.\r\n        if (scrollContainer.scrollLeft === 0) {\r\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\r\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\r\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\r\n            // return 0 when we read it again.\r\n            scrollContainer.scrollLeft = 1;\r\n            rtlScrollAxisType =\r\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\r\n        }\r\n        scrollContainer.parentNode.removeChild(scrollContainer);\r\n    }\r\n    return rtlScrollAxisType;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nlet shadowDomIsSupported;\r\n/** Checks whether the user's browser support Shadow DOM. */\r\nfunction _supportsShadowDom() {\r\n    if (shadowDomIsSupported == null) {\r\n        const head = typeof document !== 'undefined' ? document.head : null;\r\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\r\n    }\r\n    return shadowDomIsSupported;\r\n}\r\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\r\nfunction _getShadowRoot(element) {\r\n    if (_supportsShadowDom()) {\r\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\r\n        // Note that this should be caught by `_supportsShadowDom`, but some\r\n        // teams have been able to hit this code path on unsupported browsers.\r\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\r\n            return rootNode;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\r\n\r\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\r\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\r\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\r\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\r\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\r\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the virtual scrolling strategy. */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/platform';\r\nimport * as ɵngcc2 from '@angular/cdk/bidi';\r\nimport * as ɵngcc3 from '@angular/cdk/collections';\r\n\r\nconst _c0 = [\"contentWrapper\"];\r\nconst _c1 = [\"*\"];\r\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Virtual scrolling strategy for lists with items of known fixed size. */\r\nclass FixedSizeVirtualScrollStrategy {\r\n    /**\r\n     * @param itemSize The size of the items in the virtually scrolling list.\r\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\r\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\r\n     */\r\n    constructor(itemSize, minBufferPx, maxBufferPx) {\r\n        this._scrolledIndexChange = new Subject();\r\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\r\n        /** The attached viewport. */\r\n        this._viewport = null;\r\n        this._itemSize = itemSize;\r\n        this._minBufferPx = minBufferPx;\r\n        this._maxBufferPx = maxBufferPx;\r\n    }\r\n    /**\r\n     * Attaches this scroll strategy to a viewport.\r\n     * @param viewport The viewport to attach this strategy to.\r\n     */\r\n    attach(viewport) {\r\n        this._viewport = viewport;\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** Detaches this scroll strategy from the currently attached viewport. */\r\n    detach() {\r\n        this._scrolledIndexChange.complete();\r\n        this._viewport = null;\r\n    }\r\n    /**\r\n     * Update the item size and buffer size.\r\n     * @param itemSize The size of the items in the virtually scrolling list.\r\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\r\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\r\n     */\r\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\r\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\r\n        }\r\n        this._itemSize = itemSize;\r\n        this._minBufferPx = minBufferPx;\r\n        this._maxBufferPx = maxBufferPx;\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onContentScrolled() {\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onDataLengthChanged() {\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onContentRendered() { }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onRenderedOffsetChanged() { }\r\n    /**\r\n     * Scroll to the offset for the given index.\r\n     * @param index The index of the element to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling.\r\n     */\r\n    scrollToIndex(index, behavior) {\r\n        if (this._viewport) {\r\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\r\n        }\r\n    }\r\n    /** Update the viewport's total content size. */\r\n    _updateTotalContentSize() {\r\n        if (!this._viewport) {\r\n            return;\r\n        }\r\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\r\n    }\r\n    /** Update the viewport's rendered range. */\r\n    _updateRenderedRange() {\r\n        if (!this._viewport) {\r\n            return;\r\n        }\r\n        const renderedRange = this._viewport.getRenderedRange();\r\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\r\n        const viewportSize = this._viewport.getViewportSize();\r\n        const dataLength = this._viewport.getDataLength();\r\n        let scrollOffset = this._viewport.measureScrollOffset();\r\n        // Prevent NaN as result when dividing by zero.\r\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\r\n        // If user scrolls to the bottom of the list and data changes to a smaller list\r\n        if (newRange.end > dataLength) {\r\n            // We have to recalculate the first visible index based on new data length and viewport size.\r\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\r\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\r\n            // If first visible index changed we must update scroll offset to handle start/end buffers\r\n            // Current range must also be adjusted to cover the new position (bottom of new list).\r\n            if (firstVisibleIndex != newVisibleIndex) {\r\n                firstVisibleIndex = newVisibleIndex;\r\n                scrollOffset = newVisibleIndex * this._itemSize;\r\n                newRange.start = Math.floor(firstVisibleIndex);\r\n            }\r\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\r\n        }\r\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\r\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\r\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\r\n            newRange.start = Math.max(0, newRange.start - expandStart);\r\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\r\n        }\r\n        else {\r\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\r\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\r\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\r\n                if (expandEnd > 0) {\r\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\r\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\r\n                }\r\n            }\r\n        }\r\n        this._viewport.setRenderedRange(newRange);\r\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\r\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\r\n    }\r\n}\r\n/**\r\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\r\n * `FixedSizeVirtualScrollStrategy` from the given directive.\r\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\r\n *     `FixedSizeVirtualScrollStrategy` from.\r\n */\r\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\r\n    return fixedSizeDir._scrollStrategy;\r\n}\r\n/** A virtual scroll strategy that supports fixed-size items. */\r\nclass CdkFixedSizeVirtualScroll {\r\n    constructor() {\r\n        this._itemSize = 20;\r\n        this._minBufferPx = 100;\r\n        this._maxBufferPx = 200;\r\n        /** The scroll strategy used by this directive. */\r\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\r\n    }\r\n    /** The size of the items in the list (in pixels). */\r\n    get itemSize() { return this._itemSize; }\r\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\r\n    /**\r\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\r\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\r\n     */\r\n    get minBufferPx() { return this._minBufferPx; }\r\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\r\n    /**\r\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\r\n     */\r\n    get maxBufferPx() { return this._maxBufferPx; }\r\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\r\n    ngOnChanges() {\r\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\r\n    }\r\n}\r\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\r\nCdkFixedSizeVirtualScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\r\n                provide: VIRTUAL_SCROLL_STRATEGY,\r\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\r\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\r\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFixedSizeVirtualScroll.propDecorators = {\r\n    itemSize: [{ type: Input }],\r\n    minBufferPx: [{ type: Input }],\r\n    maxBufferPx: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\r\n                providers: [{\r\n                        provide: VIRTUAL_SCROLL_STRATEGY,\r\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\r\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\r\n                    }]\r\n            }]\r\n    }], function () { return []; }, { itemSize: [{\r\n            type: Input\r\n        }], minBufferPx: [{\r\n            type: Input\r\n        }], maxBufferPx: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Time in ms to throttle the scrolling events by default. */\r\nconst DEFAULT_SCROLL_TIME = 20;\r\n/**\r\n * Service contained all registered Scrollable references and emits an event when any one of the\r\n * Scrollable references emit a scrolled event.\r\n */\r\nclass ScrollDispatcher {\r\n    constructor(_ngZone, _platform, document) {\r\n        this._ngZone = _ngZone;\r\n        this._platform = _platform;\r\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\r\n        this._scrolled = new Subject();\r\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\r\n        this._globalSubscription = null;\r\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\r\n        this._scrolledCount = 0;\r\n        /**\r\n         * Map of all the scrollable references that are registered with the service and their\r\n         * scroll event subscriptions.\r\n         */\r\n        this.scrollContainers = new Map();\r\n        this._document = document;\r\n    }\r\n    /**\r\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\r\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\r\n     * @param scrollable Scrollable instance to be registered.\r\n     */\r\n    register(scrollable) {\r\n        if (!this.scrollContainers.has(scrollable)) {\r\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\r\n                .subscribe(() => this._scrolled.next(scrollable)));\r\n        }\r\n    }\r\n    /**\r\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\r\n     * @param scrollable Scrollable instance to be deregistered.\r\n     */\r\n    deregister(scrollable) {\r\n        const scrollableReference = this.scrollContainers.get(scrollable);\r\n        if (scrollableReference) {\r\n            scrollableReference.unsubscribe();\r\n            this.scrollContainers.delete(scrollable);\r\n        }\r\n    }\r\n    /**\r\n     * Returns an observable that emits an event whenever any of the registered Scrollable\r\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\r\n     * to override the default \"throttle\" time.\r\n     *\r\n     * **Note:** in order to avoid hitting change detection for every scroll event,\r\n     * all of the events emitted from this stream will be run outside the Angular zone.\r\n     * If you need to update any data bindings as a result of a scroll event, you have\r\n     * to run the callback using `NgZone.run`.\r\n     */\r\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\r\n        if (!this._platform.isBrowser) {\r\n            return of();\r\n        }\r\n        return new Observable((observer) => {\r\n            if (!this._globalSubscription) {\r\n                this._addGlobalListener();\r\n            }\r\n            // In the case of a 0ms delay, use an observable without auditTime\r\n            // since it does add a perceptible delay in processing overhead.\r\n            const subscription = auditTimeInMs > 0 ?\r\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\r\n                this._scrolled.subscribe(observer);\r\n            this._scrolledCount++;\r\n            return () => {\r\n                subscription.unsubscribe();\r\n                this._scrolledCount--;\r\n                if (!this._scrolledCount) {\r\n                    this._removeGlobalListener();\r\n                }\r\n            };\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._removeGlobalListener();\r\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\r\n        this._scrolled.complete();\r\n    }\r\n    /**\r\n     * Returns an observable that emits whenever any of the\r\n     * scrollable ancestors of an element are scrolled.\r\n     * @param elementOrElementRef Element whose ancestors to listen for.\r\n     * @param auditTimeInMs Time to throttle the scroll events.\r\n     */\r\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\r\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\r\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\r\n            return !target || ancestors.indexOf(target) > -1;\r\n        }));\r\n    }\r\n    /** Returns all registered Scrollables that contain the provided element. */\r\n    getAncestorScrollContainers(elementOrElementRef) {\r\n        const scrollingContainers = [];\r\n        this.scrollContainers.forEach((_subscription, scrollable) => {\r\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\r\n                scrollingContainers.push(scrollable);\r\n            }\r\n        });\r\n        return scrollingContainers;\r\n    }\r\n    /** Use defaultView of injected document if available or fallback to global window reference */\r\n    _getWindow() {\r\n        return this._document.defaultView || window;\r\n    }\r\n    /** Returns true if the element is contained within the provided Scrollable. */\r\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\r\n        let element = coerceElement(elementOrElementRef);\r\n        let scrollableElement = scrollable.getElementRef().nativeElement;\r\n        // Traverse through the element parents until we reach null, checking if any of the elements\r\n        // are the scrollable's element.\r\n        do {\r\n            if (element == scrollableElement) {\r\n                return true;\r\n            }\r\n        } while (element = element.parentElement);\r\n        return false;\r\n    }\r\n    /** Sets up the global scroll listeners. */\r\n    _addGlobalListener() {\r\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\r\n            const window = this._getWindow();\r\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\r\n        });\r\n    }\r\n    /** Cleans up the global scroll listener. */\r\n    _removeGlobalListener() {\r\n        if (this._globalSubscription) {\r\n            this._globalSubscription.unsubscribe();\r\n            this._globalSubscription = null;\r\n        }\r\n    }\r\n}\r\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\r\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\r\nScrollDispatcher.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Sends an event when the directive's element is scrolled. Registers itself with the\r\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\r\n * can be listened to through the service.\r\n */\r\nclass CdkScrollable {\r\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\r\n        this.elementRef = elementRef;\r\n        this.scrollDispatcher = scrollDispatcher;\r\n        this.ngZone = ngZone;\r\n        this.dir = dir;\r\n        this._destroyed = new Subject();\r\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\r\n            .subscribe(observer)));\r\n    }\r\n    ngOnInit() {\r\n        this.scrollDispatcher.register(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.scrollDispatcher.deregister(this);\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /** Returns observable that emits when a scroll event is fired on the host element. */\r\n    elementScrolled() {\r\n        return this._elementScrolled;\r\n    }\r\n    /** Gets the ElementRef for the viewport. */\r\n    getElementRef() {\r\n        return this.elementRef;\r\n    }\r\n    /**\r\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\r\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\r\n     * left and right always refer to the left and right side of the scrolling container irrespective\r\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n     * in an RTL context.\r\n     * @param options specified the offsets to scroll to.\r\n     */\r\n    scrollTo(options) {\r\n        const el = this.elementRef.nativeElement;\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        // Rewrite start & end offsets as right or left offsets.\r\n        if (options.left == null) {\r\n            options.left = isRtl ? options.end : options.start;\r\n        }\r\n        if (options.right == null) {\r\n            options.right = isRtl ? options.start : options.end;\r\n        }\r\n        // Rewrite the bottom offset as a top offset.\r\n        if (options.bottom != null) {\r\n            options.top =\r\n                el.scrollHeight - el.clientHeight - options.bottom;\r\n        }\r\n        // Rewrite the right offset as a left offset.\r\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\r\n            if (options.left != null) {\r\n                options.right =\r\n                    el.scrollWidth - el.clientWidth - options.left;\r\n            }\r\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\r\n                options.left = options.right;\r\n            }\r\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\r\n                options.left = options.right ? -options.right : options.right;\r\n            }\r\n        }\r\n        else {\r\n            if (options.right != null) {\r\n                options.left =\r\n                    el.scrollWidth - el.clientWidth - options.right;\r\n            }\r\n        }\r\n        this._applyScrollToOptions(options);\r\n    }\r\n    _applyScrollToOptions(options) {\r\n        const el = this.elementRef.nativeElement;\r\n        if (supportsScrollBehavior()) {\r\n            el.scrollTo(options);\r\n        }\r\n        else {\r\n            if (options.top != null) {\r\n                el.scrollTop = options.top;\r\n            }\r\n            if (options.left != null) {\r\n                el.scrollLeft = options.left;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\r\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\r\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\r\n     * left and right always refer to the left and right side of the scrolling container irrespective\r\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n     * in an RTL context.\r\n     * @param from The edge to measure from.\r\n     */\r\n    measureScrollOffset(from) {\r\n        const LEFT = 'left';\r\n        const RIGHT = 'right';\r\n        const el = this.elementRef.nativeElement;\r\n        if (from == 'top') {\r\n            return el.scrollTop;\r\n        }\r\n        if (from == 'bottom') {\r\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\r\n        }\r\n        // Rewrite start & end as left or right offsets.\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        if (from == 'start') {\r\n            from = isRtl ? RIGHT : LEFT;\r\n        }\r\n        else if (from == 'end') {\r\n            from = isRtl ? LEFT : RIGHT;\r\n        }\r\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\r\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\r\n            // 0 when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\r\n            }\r\n            else {\r\n                return el.scrollLeft;\r\n            }\r\n        }\r\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\r\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\r\n            // 0 when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\r\n            }\r\n            else {\r\n                return -el.scrollLeft;\r\n            }\r\n        }\r\n        else {\r\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\r\n            // (scrollWidth - clientWidth) when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollLeft;\r\n            }\r\n            else {\r\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\r\nCdkScrollable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\r\nCdkScrollable.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ScrollDispatcher },\r\n    { type: NgZone },\r\n    { type: Directionality, decorators: [{ type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdk-scrollable], [cdkScrollable]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Time in ms to throttle the resize events by default. */\r\nconst DEFAULT_RESIZE_TIME = 20;\r\n/**\r\n * Simple utility for getting the bounds of the browser viewport.\r\n * @docs-private\r\n */\r\nclass ViewportRuler {\r\n    constructor(_platform, ngZone, document) {\r\n        this._platform = _platform;\r\n        /** Stream of viewport change events. */\r\n        this._change = new Subject();\r\n        /** Event listener that will be used to handle the viewport change events. */\r\n        this._changeListener = (event) => {\r\n            this._change.next(event);\r\n        };\r\n        this._document = document;\r\n        ngZone.runOutsideAngular(() => {\r\n            if (_platform.isBrowser) {\r\n                const window = this._getWindow();\r\n                // Note that bind the events ourselves, rather than going through something like RxJS's\r\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\r\n                window.addEventListener('resize', this._changeListener);\r\n                window.addEventListener('orientationchange', this._changeListener);\r\n            }\r\n            // We don't need to keep track of the subscription,\r\n            // because we complete the `change` stream on destroy.\r\n            this.change().subscribe(() => this._updateViewportSize());\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._platform.isBrowser) {\r\n            const window = this._getWindow();\r\n            window.removeEventListener('resize', this._changeListener);\r\n            window.removeEventListener('orientationchange', this._changeListener);\r\n        }\r\n        this._change.complete();\r\n    }\r\n    /** Returns the viewport's width and height. */\r\n    getViewportSize() {\r\n        if (!this._viewportSize) {\r\n            this._updateViewportSize();\r\n        }\r\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\r\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\r\n        if (!this._platform.isBrowser) {\r\n            this._viewportSize = null;\r\n        }\r\n        return output;\r\n    }\r\n    /** Gets a ClientRect for the viewport's bounds. */\r\n    getViewportRect() {\r\n        // Use the document element's bounding rect rather than the window scroll properties\r\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\r\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\r\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\r\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\r\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\r\n        // We use the documentElement instead of the body because, by default (without a css reset)\r\n        // browsers typically give the document body an 8px margin, which is not included in\r\n        // getBoundingClientRect().\r\n        const scrollPosition = this.getViewportScrollPosition();\r\n        const { width, height } = this.getViewportSize();\r\n        return {\r\n            top: scrollPosition.top,\r\n            left: scrollPosition.left,\r\n            bottom: scrollPosition.top + height,\r\n            right: scrollPosition.left + width,\r\n            height,\r\n            width,\r\n        };\r\n    }\r\n    /** Gets the (top, left) scroll position of the viewport. */\r\n    getViewportScrollPosition() {\r\n        // While we can get a reference to the fake document\r\n        // during SSR, it doesn't have getBoundingClientRect.\r\n        if (!this._platform.isBrowser) {\r\n            return { top: 0, left: 0 };\r\n        }\r\n        // The top-left-corner of the viewport is determined by the scroll position of the document\r\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\r\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\r\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\r\n        // `document.documentElement` works consistently, where the `top` and `left` values will\r\n        // equal negative the scroll position.\r\n        const document = this._document;\r\n        const window = this._getWindow();\r\n        const documentElement = document.documentElement;\r\n        const documentRect = documentElement.getBoundingClientRect();\r\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\r\n            documentElement.scrollTop || 0;\r\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\r\n            documentElement.scrollLeft || 0;\r\n        return { top, left };\r\n    }\r\n    /**\r\n     * Returns a stream that emits whenever the size of the viewport changes.\r\n     * @param throttleTime Time in milliseconds to throttle the stream.\r\n     */\r\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\r\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\r\n    }\r\n    /** Use defaultView of injected document if available or fallback to global window reference */\r\n    _getWindow() {\r\n        return this._document.defaultView || window;\r\n    }\r\n    /** Updates the cached viewport size. */\r\n    _updateViewportSize() {\r\n        const window = this._getWindow();\r\n        this._viewportSize = this._platform.isBrowser ?\r\n            { width: window.innerWidth, height: window.innerHeight } :\r\n            { width: 0, height: 0 };\r\n    }\r\n}\r\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\r\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\r\nViewportRuler.ctorParameters = () => [\r\n    { type: Platform },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Checks if the given ranges are equal. */\r\nfunction rangesEqual(r1, r2) {\r\n    return r1.start == r2.start && r1.end == r2.end;\r\n}\r\n/**\r\n * Scheduler to be used for scroll events. Needs to fall back to\r\n * something that doesn't rely on requestAnimationFrame on environments\r\n * that don't support it (e.g. server-side rendering).\r\n */\r\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\r\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\r\nclass CdkVirtualScrollViewport extends CdkScrollable {\r\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\r\n        super(elementRef, scrollDispatcher, ngZone, dir);\r\n        this.elementRef = elementRef;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._scrollStrategy = _scrollStrategy;\r\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\r\n        this._detachedSubject = new Subject();\r\n        /** Emits when the rendered range changes. */\r\n        this._renderedRangeSubject = new Subject();\r\n        this._orientation = 'vertical';\r\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\r\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\r\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\r\n        // performance.\r\n        /** Emits when the index of the first element visible in the viewport changes. */\r\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\r\n        /** A stream that emits whenever the rendered range changes. */\r\n        this.renderedRangeStream = this._renderedRangeSubject;\r\n        /**\r\n         * The total size of all content (in pixels), including content that is not currently rendered.\r\n         */\r\n        this._totalContentSize = 0;\r\n        /** A string representing the `style.width` property value to be used for the spacer element. */\r\n        this._totalContentWidth = '';\r\n        /** A string representing the `style.height` property value to be used for the spacer element. */\r\n        this._totalContentHeight = '';\r\n        /** The currently rendered range of indices. */\r\n        this._renderedRange = { start: 0, end: 0 };\r\n        /** The length of the data bound to this viewport (in number of items). */\r\n        this._dataLength = 0;\r\n        /** The size of the viewport (in pixels). */\r\n        this._viewportSize = 0;\r\n        /** The last rendered content offset that was set. */\r\n        this._renderedContentOffset = 0;\r\n        /**\r\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\r\n         * be rewritten as an offset to the start of the content).\r\n         */\r\n        this._renderedContentOffsetNeedsRewrite = false;\r\n        /** Whether there is a pending change detection cycle. */\r\n        this._isChangeDetectionPending = false;\r\n        /** A list of functions to run after the next change detection cycle. */\r\n        this._runAfterChangeDetection = [];\r\n        /** Subscription to changes in the viewport size. */\r\n        this._viewportChanges = Subscription.EMPTY;\r\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\r\n        }\r\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\r\n            this.checkViewportSize();\r\n        });\r\n    }\r\n    /** The direction the viewport scrolls. */\r\n    get orientation() {\r\n        return this._orientation;\r\n    }\r\n    set orientation(orientation) {\r\n        if (this._orientation !== orientation) {\r\n            this._orientation = orientation;\r\n            this._calculateSpacerSize();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\r\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\r\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\r\n        // ourselves instead.\r\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\r\n            this._measureViewportSize();\r\n            this._scrollStrategy.attach(this);\r\n            this.elementScrolled()\r\n                .pipe(\r\n            // Start off with a fake scroll event so we properly detect our initial position.\r\n            startWith(null), \r\n            // Collect multiple events into one until the next animation frame. This way if\r\n            // there are multiple scroll events in the same frame we only need to recheck\r\n            // our layout once.\r\n            auditTime(0, SCROLL_SCHEDULER))\r\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\r\n            this._markChangeDetectionNeeded();\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.detach();\r\n        this._scrollStrategy.detach();\r\n        // Complete all subjects\r\n        this._renderedRangeSubject.complete();\r\n        this._detachedSubject.complete();\r\n        this._viewportChanges.unsubscribe();\r\n        super.ngOnDestroy();\r\n    }\r\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\r\n    attach(forOf) {\r\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('CdkVirtualScrollViewport is already attached.');\r\n        }\r\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\r\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\r\n        // change detection loop ourselves.\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this._forOf = forOf;\r\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\r\n                const newLength = data.length;\r\n                if (newLength !== this._dataLength) {\r\n                    this._dataLength = newLength;\r\n                    this._scrollStrategy.onDataLengthChanged();\r\n                }\r\n                this._doChangeDetection();\r\n            });\r\n        });\r\n    }\r\n    /** Detaches the current `CdkVirtualForOf`. */\r\n    detach() {\r\n        this._forOf = null;\r\n        this._detachedSubject.next();\r\n    }\r\n    /** Gets the length of the data bound to this viewport (in number of items). */\r\n    getDataLength() {\r\n        return this._dataLength;\r\n    }\r\n    /** Gets the size of the viewport (in pixels). */\r\n    getViewportSize() {\r\n        return this._viewportSize;\r\n    }\r\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\r\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\r\n    // setting it to something else, but its error prone and should probably be split into\r\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\r\n    /** Get the current rendered range of items. */\r\n    getRenderedRange() {\r\n        return this._renderedRange;\r\n    }\r\n    /**\r\n     * Sets the total size of all content (in pixels), including content that is not currently\r\n     * rendered.\r\n     */\r\n    setTotalContentSize(size) {\r\n        if (this._totalContentSize !== size) {\r\n            this._totalContentSize = size;\r\n            this._calculateSpacerSize();\r\n            this._markChangeDetectionNeeded();\r\n        }\r\n    }\r\n    /** Sets the currently rendered range of indices. */\r\n    setRenderedRange(range) {\r\n        if (!rangesEqual(this._renderedRange, range)) {\r\n            this._renderedRangeSubject.next(this._renderedRange = range);\r\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\r\n        }\r\n    }\r\n    /**\r\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\r\n     */\r\n    getOffsetToRenderedContentStart() {\r\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\r\n    }\r\n    /**\r\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\r\n     * (in pixels).\r\n     */\r\n    setRenderedContentOffset(offset, to = 'to-start') {\r\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\r\n        // in the negative direction.\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        const isHorizontal = this.orientation == 'horizontal';\r\n        const axis = isHorizontal ? 'X' : 'Y';\r\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\r\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\r\n        this._renderedContentOffset = offset;\r\n        if (to === 'to-end') {\r\n            transform += ` translate${axis}(-100%)`;\r\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\r\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\r\n            // expand upward).\r\n            this._renderedContentOffsetNeedsRewrite = true;\r\n        }\r\n        if (this._renderedContentTransform != transform) {\r\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\r\n            // into the string.\r\n            this._renderedContentTransform = transform;\r\n            this._markChangeDetectionNeeded(() => {\r\n                if (this._renderedContentOffsetNeedsRewrite) {\r\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\r\n                    this._renderedContentOffsetNeedsRewrite = false;\r\n                    this.setRenderedContentOffset(this._renderedContentOffset);\r\n                }\r\n                else {\r\n                    this._scrollStrategy.onRenderedOffsetChanged();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\r\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\r\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\r\n     * @param offset The offset to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\r\n     */\r\n    scrollToOffset(offset, behavior = 'auto') {\r\n        const options = { behavior };\r\n        if (this.orientation === 'horizontal') {\r\n            options.start = offset;\r\n        }\r\n        else {\r\n            options.top = offset;\r\n        }\r\n        this.scrollTo(options);\r\n    }\r\n    /**\r\n     * Scrolls to the offset for the given index.\r\n     * @param index The index of the element to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\r\n     */\r\n    scrollToIndex(index, behavior = 'auto') {\r\n        this._scrollStrategy.scrollToIndex(index, behavior);\r\n    }\r\n    /**\r\n     * Gets the current scroll offset from the start of the viewport (in pixels).\r\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\r\n     *     in horizontal mode.\r\n     */\r\n    measureScrollOffset(from) {\r\n        return from ?\r\n            super.measureScrollOffset(from) :\r\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\r\n    }\r\n    /** Measure the combined size of all of the rendered items. */\r\n    measureRenderedContentSize() {\r\n        const contentEl = this._contentWrapper.nativeElement;\r\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\r\n    }\r\n    /**\r\n     * Measure the total combined size of the given range. Throws if the range includes items that are\r\n     * not rendered.\r\n     */\r\n    measureRangeSize(range) {\r\n        if (!this._forOf) {\r\n            return 0;\r\n        }\r\n        return this._forOf.measureRangeSize(range, this.orientation);\r\n    }\r\n    /** Update the viewport dimensions and re-render. */\r\n    checkViewportSize() {\r\n        // TODO: Cleanup later when add logic for handling content resize\r\n        this._measureViewportSize();\r\n        this._scrollStrategy.onDataLengthChanged();\r\n    }\r\n    /** Measure the viewport size. */\r\n    _measureViewportSize() {\r\n        const viewportEl = this.elementRef.nativeElement;\r\n        this._viewportSize = this.orientation === 'horizontal' ?\r\n            viewportEl.clientWidth : viewportEl.clientHeight;\r\n    }\r\n    /** Queue up change detection to run. */\r\n    _markChangeDetectionNeeded(runAfter) {\r\n        if (runAfter) {\r\n            this._runAfterChangeDetection.push(runAfter);\r\n        }\r\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\r\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\r\n        if (!this._isChangeDetectionPending) {\r\n            this._isChangeDetectionPending = true;\r\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\r\n                this._doChangeDetection();\r\n            }));\r\n        }\r\n    }\r\n    /** Run change detection. */\r\n    _doChangeDetection() {\r\n        this._isChangeDetectionPending = false;\r\n        // Apply the content transform. The transform can't be set via an Angular binding because\r\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\r\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\r\n        // the `Number` function first to coerce it to a numeric value.\r\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\r\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\r\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\r\n        // instead does not properly check the projected content.\r\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\r\n        const runAfterChangeDetection = this._runAfterChangeDetection;\r\n        this._runAfterChangeDetection = [];\r\n        for (const fn of runAfterChangeDetection) {\r\n            fn();\r\n        }\r\n    }\r\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\r\n    _calculateSpacerSize() {\r\n        this._totalContentHeight =\r\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\r\n        this._totalContentWidth =\r\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\r\n    }\r\n}\r\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\r\nCdkVirtualScrollViewport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\r\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\r\n                provide: CdkScrollable,\r\n                useExisting: CdkVirtualScrollViewport\r\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵprojection(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵadvance(3);\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\r\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nCdkVirtualScrollViewport.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: ScrollDispatcher },\r\n    { type: ViewportRuler }\r\n];\r\nCdkVirtualScrollViewport.propDecorators = {\r\n    orientation: [{ type: Input }],\r\n    scrolledIndexChange: [{ type: Output }],\r\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-virtual-scroll-viewport',\r\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\r\n                host: {\r\n                    'class': 'cdk-virtual-scroll-viewport',\r\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\r\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                providers: [{\r\n                        provide: CdkScrollable,\r\n                        useExisting: CdkVirtualScrollViewport\r\n                    }],\r\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [VIRTUAL_SCROLL_STRATEGY]\r\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\r\n            type: Output\r\n        }], orientation: [{\r\n            type: Input\r\n        }], _contentWrapper: [{\r\n            type: ViewChild,\r\n            args: ['contentWrapper', { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Helper to extract the offset of a DOM Node in a certain direction. */\r\nfunction getOffset(orientation, direction, node) {\r\n    const el = node;\r\n    if (!el.getBoundingClientRect) {\r\n        return 0;\r\n    }\r\n    const rect = el.getBoundingClientRect();\r\n    if (orientation === 'horizontal') {\r\n        return direction === 'start' ? rect.left : rect.right;\r\n    }\r\n    return direction === 'start' ? rect.top : rect.bottom;\r\n}\r\n/**\r\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\r\n * container.\r\n */\r\nclass CdkVirtualForOf {\r\n    constructor(\r\n    /** The view container to add items to. */\r\n    _viewContainerRef, \r\n    /** The template to use when stamping out new items. */\r\n    _template, \r\n    /** The set of available differs. */\r\n    _differs, \r\n    /** The strategy used to render items in the virtual scroll viewport. */\r\n    _viewRepeater, \r\n    /** The virtual scrolling viewport that these items are being rendered in. */\r\n    _viewport, ngZone) {\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._template = _template;\r\n        this._differs = _differs;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._viewport = _viewport;\r\n        /** Emits when the rendered view of the data changes. */\r\n        this.viewChange = new Subject();\r\n        /** Subject that emits when a new DataSource instance is given. */\r\n        this._dataSourceChanges = new Subject();\r\n        /** Emits whenever the data in the current DataSource changes. */\r\n        this.dataStream = this._dataSourceChanges\r\n            .pipe(\r\n        // Start off with null `DataSource`.\r\n        startWith(null), \r\n        // Bundle up the previous and current data sources so we can work with both.\r\n        pairwise(), \r\n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\r\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\r\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\r\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \r\n        // Replay the last emitted data when someone subscribes.\r\n        shareReplay(1));\r\n        /** The differ used to calculate changes to the data. */\r\n        this._differ = null;\r\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\r\n        this._needsUpdate = false;\r\n        this._destroyed = new Subject();\r\n        this.dataStream.subscribe(data => {\r\n            this._data = data;\r\n            this._onRenderedDataChange();\r\n        });\r\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\r\n            this._renderedRange = range;\r\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\r\n            this._onRenderedDataChange();\r\n        });\r\n        this._viewport.attach(this);\r\n    }\r\n    /** The DataSource to display. */\r\n    get cdkVirtualForOf() {\r\n        return this._cdkVirtualForOf;\r\n    }\r\n    set cdkVirtualForOf(value) {\r\n        this._cdkVirtualForOf = value;\r\n        if (isDataSource(value)) {\r\n            this._dataSourceChanges.next(value);\r\n        }\r\n        else {\r\n            // If value is an an NgIterable, convert it to an array.\r\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\r\n        }\r\n    }\r\n    /**\r\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\r\n     * the item and produces a value to be used as the item's identity when tracking changes.\r\n     */\r\n    get cdkVirtualForTrackBy() {\r\n        return this._cdkVirtualForTrackBy;\r\n    }\r\n    set cdkVirtualForTrackBy(fn) {\r\n        this._needsUpdate = true;\r\n        this._cdkVirtualForTrackBy = fn ?\r\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\r\n            undefined;\r\n    }\r\n    /** The template used to stamp out new elements. */\r\n    set cdkVirtualForTemplate(value) {\r\n        if (value) {\r\n            this._needsUpdate = true;\r\n            this._template = value;\r\n        }\r\n    }\r\n    /**\r\n     * The size of the cache used to store templates that are not being used for re-use later.\r\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\r\n     */\r\n    get cdkVirtualForTemplateCacheSize() {\r\n        return this._viewRepeater.viewCacheSize;\r\n    }\r\n    set cdkVirtualForTemplateCacheSize(size) {\r\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\r\n    }\r\n    /**\r\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\r\n     * in the specified range. Throws an error if the range includes items that are not currently\r\n     * rendered.\r\n     */\r\n    measureRangeSize(range, orientation) {\r\n        if (range.start >= range.end) {\r\n            return 0;\r\n        }\r\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\r\n        }\r\n        // The index into the list of rendered views for the first item in the range.\r\n        const renderedStartIndex = range.start - this._renderedRange.start;\r\n        // The length of the range we're measuring.\r\n        const rangeLen = range.end - range.start;\r\n        // Loop over all the views, find the first and land node and compute the size by subtracting\r\n        // the top of the first node from the bottom of the last one.\r\n        let firstNode;\r\n        let lastNode;\r\n        // Find the first node by starting from the beginning and going forwards.\r\n        for (let i = 0; i < rangeLen; i++) {\r\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\r\n            if (view && view.rootNodes.length) {\r\n                firstNode = lastNode = view.rootNodes[0];\r\n                break;\r\n            }\r\n        }\r\n        // Find the last node by starting from the end and going backwards.\r\n        for (let i = rangeLen - 1; i > -1; i--) {\r\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\r\n            if (view && view.rootNodes.length) {\r\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\r\n                break;\r\n            }\r\n        }\r\n        return firstNode && lastNode ?\r\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\r\n    }\r\n    ngDoCheck() {\r\n        if (this._differ && this._needsUpdate) {\r\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\r\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\r\n            // changing (need to do this diff).\r\n            const changes = this._differ.diff(this._renderedItems);\r\n            if (!changes) {\r\n                this._updateContext();\r\n            }\r\n            else {\r\n                this._applyChanges(changes);\r\n            }\r\n            this._needsUpdate = false;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._viewport.detach();\r\n        this._dataSourceChanges.next(undefined);\r\n        this._dataSourceChanges.complete();\r\n        this.viewChange.complete();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n        this._viewRepeater.detach();\r\n    }\r\n    /** React to scroll state changes in the viewport. */\r\n    _onRenderedDataChange() {\r\n        if (!this._renderedRange) {\r\n            return;\r\n        }\r\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\r\n        if (!this._differ) {\r\n            // Use a wrapper function for the `trackBy` so any new values are\r\n            // picked up automatically without having to recreate the differ.\r\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\r\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\r\n            });\r\n        }\r\n        this._needsUpdate = true;\r\n    }\r\n    /** Swap out one `DataSource` for another. */\r\n    _changeDataSource(oldDs, newDs) {\r\n        if (oldDs) {\r\n            oldDs.disconnect(this);\r\n        }\r\n        this._needsUpdate = true;\r\n        return newDs ? newDs.connect(this) : of();\r\n    }\r\n    /** Update the `CdkVirtualForOfContext` for all views. */\r\n    _updateContext() {\r\n        const count = this._data.length;\r\n        let i = this._viewContainerRef.length;\r\n        while (i--) {\r\n            const view = this._viewContainerRef.get(i);\r\n            view.context.index = this._renderedRange.start + i;\r\n            view.context.count = count;\r\n            this._updateComputedContextProperties(view.context);\r\n            view.detectChanges();\r\n        }\r\n    }\r\n    /** Apply changes to the DOM. */\r\n    _applyChanges(changes) {\r\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\r\n        // Update $implicit for any items that had an identity change.\r\n        changes.forEachIdentityChange((record) => {\r\n            const view = this._viewContainerRef.get(record.currentIndex);\r\n            view.context.$implicit = record.item;\r\n        });\r\n        // Update the context variables on all items.\r\n        const count = this._data.length;\r\n        let i = this._viewContainerRef.length;\r\n        while (i--) {\r\n            const view = this._viewContainerRef.get(i);\r\n            view.context.index = this._renderedRange.start + i;\r\n            view.context.count = count;\r\n            this._updateComputedContextProperties(view.context);\r\n        }\r\n    }\r\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\r\n    _updateComputedContextProperties(context) {\r\n        context.first = context.index === 0;\r\n        context.last = context.index === context.count - 1;\r\n        context.even = context.index % 2 === 0;\r\n        context.odd = !context.even;\r\n    }\r\n    _getEmbeddedViewArgs(record, index) {\r\n        // Note that it's important that we insert the item directly at the proper index,\r\n        // rather than inserting it and the moving it in place, because if there's a directive\r\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\r\n        // comment node which can throw off the move when it's being repeated for all items.\r\n        return {\r\n            templateRef: this._template,\r\n            context: {\r\n                $implicit: record.item,\r\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\r\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\r\n                cdkVirtualForOf: this._cdkVirtualForOf,\r\n                index: -1,\r\n                count: -1,\r\n                first: false,\r\n                last: false,\r\n                odd: false,\r\n                even: false\r\n            },\r\n            index,\r\n        };\r\n    }\r\n}\r\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\r\nCdkVirtualForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\r\n        ])] });\r\nCdkVirtualForOf.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\r\n    { type: NgZone }\r\n];\r\nCdkVirtualForOf.propDecorators = {\r\n    cdkVirtualForOf: [{ type: Input }],\r\n    cdkVirtualForTrackBy: [{ type: Input }],\r\n    cdkVirtualForTemplate: [{ type: Input }],\r\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\r\n                providers: [\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\r\n                type: SkipSelf\r\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\r\n            type: Input\r\n        }], cdkVirtualForTrackBy: [{\r\n            type: Input\r\n        }], cdkVirtualForTemplate: [{\r\n            type: Input\r\n        }], cdkVirtualForTemplateCacheSize: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass CdkScrollableModule {\r\n}\r\nCdkScrollableModule.ɵfac = function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); };\r\nCdkScrollableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\r\nCdkScrollableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [CdkScrollable],\r\n                declarations: [CdkScrollable]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\r\n/**\r\n * @docs-primary-export\r\n */\r\nclass ScrollingModule {\r\n}\r\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\r\nScrollingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\r\nScrollingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\r\n            BidiModule,\r\n            PlatformModule,\r\n            CdkScrollableModule\r\n        ], BidiModule, CdkScrollableModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    BidiModule,\r\n                    PlatformModule,\r\n                    CdkScrollableModule\r\n                ],\r\n                exports: [\r\n                    BidiModule,\r\n                    CdkScrollableModule,\r\n                    CdkFixedSizeVirtualScroll,\r\n                    CdkVirtualForOf,\r\n                    CdkVirtualScrollViewport,\r\n                ],\r\n                declarations: [\r\n                    CdkFixedSizeVirtualScroll,\r\n                    CdkVirtualForOf,\r\n                    CdkVirtualScrollViewport,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\r\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\r\n\r\n","import { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/bidi';\r\nimport * as ɵngcc2 from '@angular/cdk/platform';\r\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\r\n\r\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\r\nconst _c1 = [\"caption\", \"colgroup, col\"];\r\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\r\n} }\r\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const data_r2 = ctx.$implicit;\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\r\n} }\r\nexport { DataSource } from '@angular/cdk/collections';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\r\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\r\nimport { takeUntil, take } from 'rxjs/operators';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Mixin to provide a directive with a function that checks if the sticky input has been\r\n * changed since the last time the function was called. Essentially adds a dirty-check to the\r\n * sticky value.\r\n * @docs-private\r\n */\r\nfunction mixinHasStickyInput(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._sticky = false;\r\n            /** Whether the sticky input has changed since it was last checked. */\r\n            this._hasStickyChanged = false;\r\n        }\r\n        /** Whether sticky positioning should be applied. */\r\n        get sticky() { return this._sticky; }\r\n        set sticky(v) {\r\n            const prevValue = this._sticky;\r\n            this._sticky = coerceBooleanProperty(v);\r\n            this._hasStickyChanged = prevValue !== this._sticky;\r\n        }\r\n        /** Whether the sticky value has changed since this was last called. */\r\n        hasStickyChanged() {\r\n            const hasStickyChanged = this._hasStickyChanged;\r\n            this._hasStickyChanged = false;\r\n            return hasStickyChanged;\r\n        }\r\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\r\n        resetStickyChanged() {\r\n            this._hasStickyChanged = false;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Used to provide a table to some of the sub-components without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\r\n/** Injection token that can be used to specify the text column options. */\r\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Cell definition for a CDK table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\nclass CdkCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\r\nCdkCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Header cell definition for a CDK table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\nclass CdkHeaderCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\r\nCdkHeaderCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkHeaderCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Footer cell definition for a CDK table.\r\n * Captures the template of a column's footer cell and as well as cell-specific properties.\r\n */\r\nclass CdkFooterCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\r\nCdkFooterCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkFooterCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkColumnDef.\r\n/** @docs-private */\r\nclass CdkColumnDefBase {\r\n}\r\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\r\n/**\r\n * Column definition for the CDK table.\r\n * Defines a set of cells available for a table column.\r\n */\r\nclass CdkColumnDef extends _CdkColumnDefBase {\r\n    constructor(_table) {\r\n        super();\r\n        this._table = _table;\r\n        this._stickyEnd = false;\r\n    }\r\n    /** Unique name for this column. */\r\n    get name() { return this._name; }\r\n    set name(name) { this._setNameInput(name); }\r\n    /**\r\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\r\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\r\n     * has been changed.\r\n     */\r\n    get stickyEnd() {\r\n        return this._stickyEnd;\r\n    }\r\n    set stickyEnd(v) {\r\n        const prevValue = this._stickyEnd;\r\n        this._stickyEnd = coerceBooleanProperty(v);\r\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\r\n    }\r\n    /**\r\n     * Overridable method that sets the css classes that will be added to every cell in this\r\n     * column.\r\n     * In the future, columnCssClassName will change from type string[] to string and this\r\n     * will set a single string value.\r\n     * @docs-private\r\n     */\r\n    _updateColumnCssClassName() {\r\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\r\n    }\r\n    /**\r\n     * This has been extracted to a util because of TS 4 and VE.\r\n     * View Engine doesn't support property rename inheritance.\r\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\r\n     * @docs-private\r\n     */\r\n    _setNameInput(value) {\r\n        // If the directive is set without a name (updated programmatically), then this setter will\r\n        // trigger with an empty string and should not overwrite the programmatically set value.\r\n        if (value) {\r\n            this._name = value;\r\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\r\n            this._updateColumnCssClassName();\r\n        }\r\n    }\r\n}\r\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\r\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkColumnDef.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\nCdkColumnDef.propDecorators = {\r\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\r\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\r\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\r\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\r\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkColumnDef]',\r\n                inputs: ['sticky'],\r\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, { name: [{\r\n            type: Input,\r\n            args: ['cdkColumnDef']\r\n        }], stickyEnd: [{\r\n            type: Input,\r\n            args: ['stickyEnd']\r\n        }], cell: [{\r\n            type: ContentChild,\r\n            args: [CdkCellDef]\r\n        }], headerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkHeaderCellDef]\r\n        }], footerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkFooterCellDef]\r\n        }] }); })();\r\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\r\nclass BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\r\n        // with destructuring.\r\n        const classList = elementRef.nativeElement.classList;\r\n        for (const className of columnDef._columnCssClassName) {\r\n            classList.add(className);\r\n        }\r\n    }\r\n}\r\n/** Header cell template container that adds the right classes and role. */\r\nclass CdkHeaderCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkHeaderCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\r\n                host: {\r\n                    'class': 'cdk-header-cell',\r\n                    'role': 'columnheader'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Footer cell template container that adds the right classes and role. */\r\nclass CdkFooterCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkFooterCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\r\n                host: {\r\n                    'class': 'cdk-footer-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Cell template container that adds the right classes and role. */\r\nclass CdkCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-cell, td[cdk-cell]',\r\n                host: {\r\n                    'class': 'cdk-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @docs-private\r\n */\r\nclass _Schedule {\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.endTasks = [];\r\n    }\r\n}\r\n/** Injection token used to provide a coalesced style scheduler. */\r\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\r\n/**\r\n * Allows grouping up CSSDom mutations after the current execution context.\r\n * This can significantly improve performance when separate consecutive functions are\r\n * reading from the CSSDom and then mutating it.\r\n *\r\n * @docs-private\r\n */\r\nclass _CoalescedStyleScheduler {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        this._currentSchedule = null;\r\n        this._destroyed = new Subject();\r\n    }\r\n    /**\r\n     * Schedules the specified task to run at the end of the current VM turn.\r\n     */\r\n    schedule(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.tasks.push(task);\r\n    }\r\n    /**\r\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\r\n     * VM turn.\r\n     */\r\n    scheduleEnd(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.endTasks.push(task);\r\n    }\r\n    /** Prevent any further tasks from running. */\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    _createScheduleIfNeeded() {\r\n        if (this._currentSchedule) {\r\n            return;\r\n        }\r\n        this._currentSchedule = new _Schedule();\r\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\r\n                const schedule = this._currentSchedule;\r\n                // Capture new tasks scheduled by the current set of tasks.\r\n                this._currentSchedule = new _Schedule();\r\n                for (const task of schedule.tasks) {\r\n                    task();\r\n                }\r\n                for (const task of schedule.endTasks) {\r\n                    task();\r\n                }\r\n            }\r\n            this._currentSchedule = null;\r\n        });\r\n    }\r\n    _getScheduleObservable() {\r\n        // Use onStable when in the context of an ongoing change detection cycle so that we\r\n        // do not accidentally trigger additional cycles.\r\n        return this._ngZone.isStable ?\r\n            from(Promise.resolve(undefined)) :\r\n            this._ngZone.onStable.pipe(take(1));\r\n    }\r\n}\r\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\r\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\r\n_CoalescedStyleScheduler.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The row template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n */\r\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\r\n/**\r\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\r\n * for changes and notifying the table.\r\n */\r\nclass BaseRowDef {\r\n    constructor(\r\n    /** @docs-private */ template, _differs) {\r\n        this.template = template;\r\n        this._differs = _differs;\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\r\n        // of the columns property or an empty array if none is provided.\r\n        if (!this._columnsDiffer) {\r\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\r\n            this._columnsDiffer = this._differs.find(columns).create();\r\n            this._columnsDiffer.diff(columns);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the difference between the current columns and the columns from the last diff, or null\r\n     * if there is no difference.\r\n     */\r\n    getColumnsDiff() {\r\n        return this._columnsDiffer.diff(this.columns);\r\n    }\r\n    /** Gets this row def's relevant cell template from the provided column def. */\r\n    extractCellTemplate(column) {\r\n        if (this instanceof CdkHeaderRowDef) {\r\n            return column.headerCell.template;\r\n        }\r\n        if (this instanceof CdkFooterRowDef) {\r\n            return column.footerCell.template;\r\n        }\r\n        else {\r\n            return column.cell.template;\r\n        }\r\n    }\r\n}\r\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\r\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nBaseRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkHeaderRowDef.\r\n/** @docs-private */\r\nclass CdkHeaderRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\r\n/**\r\n * Header row definition for the CDK table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkHeaderRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkHeaderRowDef]',\r\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkFooterRowDef.\r\n/** @docs-private */\r\nclass CdkFooterRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\r\n/**\r\n * Footer row definition for the CDK table.\r\n * Captures the footer row's template and other footer properties such as the columns to display.\r\n */\r\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFooterRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkFooterRowDef]',\r\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Data row definition for the CDK table.\r\n * Captures the header row's template and other row properties such as the columns to display and\r\n * a when predicate that describes when this row should be used.\r\n */\r\nclass CdkRowDef extends BaseRowDef {\r\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\r\n    //   if this template should be used.\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n}\r\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkRowDef]',\r\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Outlet for rendering cells inside of a row or header row.\r\n * @docs-private\r\n */\r\nclass CdkCellOutlet {\r\n    constructor(_viewContainer) {\r\n        this._viewContainer = _viewContainer;\r\n        CdkCellOutlet.mostRecentCellOutlet = this;\r\n    }\r\n    ngOnDestroy() {\r\n        // If this was the last outlet being rendered in the view, remove the reference\r\n        // from the static property after it has been destroyed to avoid leaking memory.\r\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\r\n            CdkCellOutlet.mostRecentCellOutlet = null;\r\n        }\r\n    }\r\n}\r\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\r\n/**\r\n * Static property containing the latest constructed instance of this class.\r\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\r\n * createEmbeddedView. After one of these components are created, this property will provide\r\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\r\n * construct the cells with the provided context.\r\n */\r\nCdkCellOutlet.mostRecentCellOutlet = null;\r\nCdkCellOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkHeaderRow {\r\n}\r\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\r\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-header-row, tr[cdk-header-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-header-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkFooterRow {\r\n}\r\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\r\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-footer-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkRow {\r\n}\r\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\r\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-row, tr[cdk-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Row that can be used to display a message when no data is shown in the table. */\r\nclass CdkNoDataRow {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n}\r\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\r\nCdkNoDataRow.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkNoDataRow]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * List of all possible directions that can be used for sticky positioning.\r\n * @docs-private\r\n */\r\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\r\n/**\r\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\r\n * @docs-private\r\n */\r\nclass StickyStyler {\r\n    /**\r\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\r\n     *     that uses the native `<table>` element.\r\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\r\n     *     sticky positioning applied.\r\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\r\n     *     by reversing left/right positions.\r\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\r\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\r\n     *     using inline styles. If false, it is assumed that position: sticky is included in\r\n     *     the component stylesheet for _stickCellCss.\r\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\r\n     *     and their dimensions.\r\n     */\r\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\r\n        this._isNativeHtmlTable = _isNativeHtmlTable;\r\n        this._stickCellCss = _stickCellCss;\r\n        this.direction = direction;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._isBrowser = _isBrowser;\r\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\r\n        this._positionListener = _positionListener;\r\n        this._cachedCellWidths = [];\r\n        this._borderCellCss = {\r\n            'top': `${_stickCellCss}-border-elem-top`,\r\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\r\n            'left': `${_stickCellCss}-border-elem-left`,\r\n            'right': `${_stickCellCss}-border-elem-right`,\r\n        };\r\n    }\r\n    /**\r\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\r\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\r\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\r\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\r\n     */\r\n    clearStickyPositioning(rows, stickyDirections) {\r\n        const elementsToClear = [];\r\n        for (const row of rows) {\r\n            // If the row isn't an element (e.g. if it's an `ng-container`),\r\n            // it won't have inline styles or `children` so we skip it.\r\n            if (row.nodeType !== row.ELEMENT_NODE) {\r\n                continue;\r\n            }\r\n            elementsToClear.push(row);\r\n            for (let i = 0; i < row.children.length; i++) {\r\n                elementsToClear.push(row.children[i]);\r\n            }\r\n        }\r\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            for (const element of elementsToClear) {\r\n                this._removeStickyStyle(element, stickyDirections);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky left and right positions to the cells of each row according to the sticky\r\n     * states of the rendered column definitions.\r\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\r\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the start of the row.\r\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the end of the row.\r\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\r\n     *     column cell. If `false` cached widths will be used instead.\r\n     */\r\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\r\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\r\n            stickyEndStates.some(state => state))) {\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\r\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\r\n            }\r\n            return;\r\n        }\r\n        const firstRow = rows[0];\r\n        const numCells = firstRow.children.length;\r\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\r\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\r\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\r\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\r\n        const firstStickyEnd = stickyEndStates.indexOf(true);\r\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            const isRtl = this.direction === 'rtl';\r\n            const start = isRtl ? 'right' : 'left';\r\n            const end = isRtl ? 'left' : 'right';\r\n            for (const row of rows) {\r\n                for (let i = 0; i < numCells; i++) {\r\n                    const cell = row.children[i];\r\n                    if (stickyStartStates[i]) {\r\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\r\n                    }\r\n                    if (stickyEndStates[i]) {\r\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\r\n                    }\r\n                }\r\n            }\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({\r\n                    sizes: lastStickyStart === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(0, lastStickyStart + 1)\r\n                            .map((width, index) => stickyStartStates[index] ? width : null)\r\n                });\r\n                this._positionListener.stickyEndColumnsUpdated({\r\n                    sizes: firstStickyEnd === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(firstStickyEnd)\r\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\r\n                            .reverse()\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\r\n     * row itself otherwise.\r\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\r\n     *     sticky state and to the provided top or bottom position.\r\n     * @param stickyStates A list of boolean states where each state represents whether the row\r\n     *     should be stuck in the particular top or bottom position.\r\n     * @param position The position direction in which the row should be stuck if that row should be\r\n     *     sticky.\r\n     *\r\n     */\r\n    stickRows(rowsToStick, stickyStates, position) {\r\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\r\n        if (!this._isBrowser) {\r\n            return;\r\n        }\r\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\r\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\r\n        // sticky states need to be reversed as well.\r\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\r\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\r\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\r\n        const stickyOffsets = [];\r\n        const stickyCellHeights = [];\r\n        const elementsToStick = [];\r\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\r\n            stickyOffsets[rowIndex] = stickyOffset;\r\n            if (!states[rowIndex]) {\r\n                continue;\r\n            }\r\n            const row = rows[rowIndex];\r\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\r\n                Array.from(row.children) : [row];\r\n            const height = row.getBoundingClientRect().height;\r\n            stickyOffset += height;\r\n            stickyCellHeights[rowIndex] = height;\r\n        }\r\n        const borderedRowIndex = states.lastIndexOf(true);\r\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\r\n        // (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            var _a, _b;\r\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n                if (!states[rowIndex]) {\r\n                    continue;\r\n                }\r\n                const offset = stickyOffsets[rowIndex];\r\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\r\n                for (const element of elementsToStick[rowIndex]) {\r\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\r\n                }\r\n            }\r\n            if (position === 'top') {\r\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n            else {\r\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\r\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\r\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\r\n     * the tfoot element.\r\n     */\r\n    updateStickyFooterContainer(tableElement, stickyStates) {\r\n        if (!this._isNativeHtmlTable) {\r\n            return;\r\n        }\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            if (stickyStates.some(state => !state)) {\r\n                this._removeStickyStyle(tfoot, ['bottom']);\r\n            }\r\n            else {\r\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\r\n     * the zIndex, removing each of the provided sticky directions, and removing the\r\n     * sticky position if there are no more directions.\r\n     */\r\n    _removeStickyStyle(element, stickyDirections) {\r\n        for (const dir of stickyDirections) {\r\n            element.style[dir] = '';\r\n            element.classList.remove(this._borderCellCss[dir]);\r\n        }\r\n        // If the element no longer has any more sticky directions, remove sticky positioning and\r\n        // the sticky CSS class.\r\n        // Short-circuit checking element.style[dir] for stickyDirections as they\r\n        // were already removed above.\r\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\r\n        if (hasDirection) {\r\n            element.style.zIndex = this._getCalculatedZIndex(element);\r\n        }\r\n        else {\r\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\r\n            element.style.zIndex = '';\r\n            if (this._needsPositionStickyOnElement) {\r\n                element.style.position = '';\r\n            }\r\n            element.classList.remove(this._stickCellCss);\r\n        }\r\n    }\r\n    /**\r\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\r\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\r\n     * direction and value.\r\n     */\r\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\r\n        element.classList.add(this._stickCellCss);\r\n        if (isBorderElement) {\r\n            element.classList.add(this._borderCellCss[dir]);\r\n        }\r\n        element.style[dir] = `${dirValue}px`;\r\n        element.style.zIndex = this._getCalculatedZIndex(element);\r\n        if (this._needsPositionStickyOnElement) {\r\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\r\n        }\r\n    }\r\n    /**\r\n     * Calculate what the z-index should be for the element, depending on what directions (top,\r\n     * bottom, left, right) have been set. It should be true that elements with a top direction\r\n     * should have the highest index since these are elements like a table header. If any of those\r\n     * elements are also sticky in another direction, then they should appear above other elements\r\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\r\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\r\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\r\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\r\n     * elements.\r\n     */\r\n    _getCalculatedZIndex(element) {\r\n        const zIndexIncrements = {\r\n            top: 100,\r\n            bottom: 10,\r\n            left: 1,\r\n            right: 1,\r\n        };\r\n        let zIndex = 0;\r\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\r\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\r\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\r\n        for (const dir of STICKY_DIRECTIONS) {\r\n            if (element.style[dir]) {\r\n                zIndex += zIndexIncrements[dir];\r\n            }\r\n        }\r\n        return zIndex ? `${zIndex}` : '';\r\n    }\r\n    /** Gets the widths for each cell in the provided row. */\r\n    _getCellWidths(row, recalculateCellWidths = true) {\r\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\r\n            return this._cachedCellWidths;\r\n        }\r\n        const cellWidths = [];\r\n        const firstRowCells = row.children;\r\n        for (let i = 0; i < firstRowCells.length; i++) {\r\n            let cell = firstRowCells[i];\r\n            cellWidths.push(cell.getBoundingClientRect().width);\r\n        }\r\n        this._cachedCellWidths = cellWidths;\r\n        return cellWidths;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyStartColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = 0; i < widths.length; i++) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyEndColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = widths.length; i > 0; i--) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Schedules styles to be applied when the style scheduler deems appropriate.\r\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\r\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\r\n     */\r\n    _scheduleStyleChanges(changes) {\r\n        if (this._coalescedStyleScheduler) {\r\n            this._coalescedStyleScheduler.schedule(changes);\r\n        }\r\n        else {\r\n            changes();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Returns an error to be thrown when attempting to find an unexisting column.\r\n * @param id Id whose lookup failed.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownColumnError(id) {\r\n    return Error(`Could not find column with id \"${id}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when two column definitions have the same name.\r\n * @docs-private\r\n */\r\nfunction getTableDuplicateColumnNameError(name) {\r\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\r\n * @docs-private\r\n */\r\nfunction getTableMultipleDefaultRowDefsError() {\r\n    return Error(`There can only be one default row without a when predicate function.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\r\n * @docs-private\r\n */\r\nfunction getTableMissingMatchingRowDefError(data) {\r\n    return Error(`Could not find a matching row definition for the` +\r\n        `provided row data: ${JSON.stringify(data)}`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there is no row definitions present in the content.\r\n * @docs-private\r\n */\r\nfunction getTableMissingRowDefsError() {\r\n    return Error('Missing definitions for header, footer, and row; ' +\r\n        'cannot determine which columns should be rendered.');\r\n}\r\n/**\r\n * Returns an error to be thrown when the data source does not match the compatible types.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownDataSourceError() {\r\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\r\n}\r\n/**\r\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingParentTableError() {\r\n    return Error(`Text column could not find a parent table for registration.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when a table text column doesn't have a name.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingNameError() {\r\n    return Error(`Table text column must have a name.`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the StickyPositioningListener. */\r\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\r\n * @docs-private\r\n */\r\nclass DataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\r\nDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[rowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\r\n * @docs-private\r\n */\r\nclass HeaderRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\r\nHeaderRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[headerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\r\n * @docs-private\r\n */\r\nclass FooterRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\r\nFooterRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[footerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view\r\n * container's ng-container to insert the no data row.\r\n * @docs-private\r\n */\r\nclass NoDataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\r\nNoDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[noDataRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * The table template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE_TEMPLATE = \r\n// Note that according to MDN, the `caption` element has to be projected as the **first**\r\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\r\n`\r\n  <ng-content select=\"caption\"></ng-content>\r\n  <ng-content select=\"colgroup, col\"></ng-content>\r\n  <ng-container headerRowOutlet></ng-container>\r\n  <ng-container rowOutlet></ng-container>\r\n  <ng-container noDataRowOutlet></ng-container>\r\n  <ng-container footerRowOutlet></ng-container>\r\n`;\r\n/**\r\n * Class used to conveniently type the embedded view ref for rows with a context.\r\n * @docs-private\r\n */\r\nclass RowViewRef extends EmbeddedViewRef {\r\n}\r\n/**\r\n * A data table that can render a header row, data rows, and a footer row.\r\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\r\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\r\n * connect function that will return an Observable stream that emits the data array to render.\r\n */\r\nclass CdkTable {\r\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\r\n     *    parameters to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \r\n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\r\n    // this property will never be null.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _viewportRuler) {\r\n        this._differs = _differs;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._elementRef = _elementRef;\r\n        this._dir = _dir;\r\n        this._platform = _platform;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._stickyPositioningListener = _stickyPositioningListener;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._onDestroy = new Subject();\r\n        /**\r\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\r\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\r\n         * any custom column definitions added to `_customColumnDefs`.\r\n         */\r\n        this._columnDefsByName = new Map();\r\n        /**\r\n         * Column definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * column definitions as *its* content child.\r\n         */\r\n        this._customColumnDefs = new Set();\r\n        /**\r\n         * Data row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in data rows as *its* content child.\r\n         */\r\n        this._customRowDefs = new Set();\r\n        /**\r\n         * Header row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in header rows as *its* content child.\r\n         */\r\n        this._customHeaderRowDefs = new Set();\r\n        /**\r\n         * Footer row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\r\n         * built-in footer row as *its* content child.\r\n         */\r\n        this._customFooterRowDefs = new Set();\r\n        /**\r\n         * Whether the header row definition has been changed. Triggers an update to the header row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._headerRowDefChanged = true;\r\n        /**\r\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._footerRowDefChanged = true;\r\n        /**\r\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\r\n         * change.\r\n         */\r\n        this._stickyColumnStylesNeedReset = true;\r\n        /**\r\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\r\n         * `false`, cached values will be used instead. This is only applicable to tables with\r\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\r\n         */\r\n        this._forceRecalculateCellWidths = true;\r\n        /**\r\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\r\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\r\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\r\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\r\n         * and understand which rows are added/moved/removed.\r\n         *\r\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\r\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\r\n         * contains an array of created pairs. The array is necessary to handle cases where the data\r\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\r\n         * stored.\r\n         */\r\n        this._cachedRenderRowsMap = new Map();\r\n        /**\r\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\r\n         * table subclasses.\r\n         */\r\n        this.stickyCssClass = 'cdk-table-sticky';\r\n        /**\r\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\r\n         * the position is set in a selector associated with the value of stickyCssClass. May be\r\n         * overridden by table subclasses\r\n         */\r\n        this.needsPositionStickyOnElement = true;\r\n        /** Whether the no data row is currently showing anything. */\r\n        this._isShowingNoDataRow = false;\r\n        this._multiTemplateDataRows = false;\r\n        this._fixedLayout = false;\r\n        // TODO(andrewseguin): Remove max value as the end index\r\n        //   and instead calculate the view on init and scroll.\r\n        /**\r\n         * Stream containing the latest information on what rows are being displayed on screen.\r\n         * Can be used by the data source to as a heuristic of what data should be provided.\r\n         *\r\n         * @docs-private\r\n         */\r\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\r\n        if (!role) {\r\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\r\n        }\r\n        this._document = _document;\r\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\r\n    }\r\n    /**\r\n     * Tracking function that will be used to check the differences in data changes. Used similarly\r\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\r\n     * relative to the function to know if a row should be added/removed/moved.\r\n     * Accepts a function that takes two parameters, `index` and `item`.\r\n     */\r\n    get trackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    set trackBy(fn) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\r\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    /**\r\n     * The table's source of data, which can be provided in three ways (in order of complexity):\r\n     *   - Simple data array (each object represents one table row)\r\n     *   - Stream that emits a data array each time the array changes\r\n     *   - `DataSource` object that implements the connect/disconnect interface.\r\n     *\r\n     * If a data array is provided, the table must be notified when the array's objects are\r\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\r\n     * render the diff since the last table render. If the data array reference is changed, the table\r\n     * will automatically trigger an update to the rows.\r\n     *\r\n     * When providing an Observable stream, the table will trigger an update automatically when the\r\n     * stream emits a new array of data.\r\n     *\r\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\r\n     * provided by the connect function and trigger updates when that stream emits new data array\r\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\r\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\r\n     * subscriptions registered during the connect process).\r\n     */\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(dataSource) {\r\n        if (this._dataSource !== dataSource) {\r\n            this._switchDataSource(dataSource);\r\n        }\r\n    }\r\n    /**\r\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\r\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\r\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\r\n     * defined in the table, or otherwise the default row which does not have a when predicate.\r\n     */\r\n    get multiTemplateDataRows() {\r\n        return this._multiTemplateDataRows;\r\n    }\r\n    set multiTemplateDataRows(v) {\r\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\r\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\r\n        // this setter will be invoked before the row outlet has been defined hence the null check.\r\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\r\n            this._forceRenderDataRows();\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\r\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\r\n     */\r\n    get fixedLayout() {\r\n        return this._fixedLayout;\r\n    }\r\n    set fixedLayout(v) {\r\n        this._fixedLayout = coerceBooleanProperty(v);\r\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\r\n        this._forceRecalculateCellWidths = true;\r\n        this._stickyColumnStylesNeedReset = true;\r\n    }\r\n    ngOnInit() {\r\n        this._setupStickyStyler();\r\n        if (this._isNativeHtmlTable) {\r\n            this._applyNativeTableSections();\r\n        }\r\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\r\n        // the user has provided a custom trackBy, return the result of that function as evaluated\r\n        // with the values of the `RenderRow`'s data and index.\r\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\r\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\r\n        });\r\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\r\n        // refresh its cache of cell widths the next time sticky styles are updated.\r\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\r\n        if (this._viewportRuler) {\r\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n                this._forceRecalculateCellWidths = true;\r\n            });\r\n        }\r\n    }\r\n    ngAfterContentChecked() {\r\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\r\n        this._cacheRowDefs();\r\n        this._cacheColumnDefs();\r\n        // Make sure that the user has at least added header, footer, or data row def.\r\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingRowDefsError();\r\n        }\r\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\r\n        const columnsChanged = this._renderUpdatedColumns();\r\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\r\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\r\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\r\n        this._forceRecalculateCellWidths = rowDefsChanged;\r\n        // If the header row definition has been changed, trigger a render to the header row.\r\n        if (this._headerRowDefChanged) {\r\n            this._forceRenderHeaderRows();\r\n            this._headerRowDefChanged = false;\r\n        }\r\n        // If the footer row definition has been changed, trigger a render to the footer row.\r\n        if (this._footerRowDefChanged) {\r\n            this._forceRenderFooterRows();\r\n            this._footerRowDefChanged = false;\r\n        }\r\n        // If there is a data source and row definitions, connect to the data source unless a\r\n        // connection has already been made.\r\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\r\n            this._observeRenderChanges();\r\n        }\r\n        else if (this._stickyColumnStylesNeedReset) {\r\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\r\n            // called when it row data arrives. Otherwise, we need to call it proactively.\r\n            this.updateStickyColumnStyles();\r\n        }\r\n        this._checkStickyStates();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rowOutlet.viewContainer.clear();\r\n        this._noDataRowOutlet.viewContainer.clear();\r\n        this._headerRowOutlet.viewContainer.clear();\r\n        this._footerRowOutlet.viewContainer.clear();\r\n        this._cachedRenderRowsMap.clear();\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n    }\r\n    /**\r\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\r\n     * input or retrieved through an Observable stream (directly or from a DataSource).\r\n     * Checks for differences in the data since the last diff to perform only the necessary\r\n     * changes (add/remove/move rows).\r\n     *\r\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\r\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\r\n     * an array, this function will need to be called to render any changes.\r\n     */\r\n    renderRows() {\r\n        this._renderRows = this._getAllRenderRows();\r\n        const changes = this._dataDiffer.diff(this._renderRows);\r\n        if (!changes) {\r\n            this._updateNoDataRow();\r\n            return;\r\n        }\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\r\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\r\n        if (this._viewRepeater) {\r\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\r\n                if (change.operation === 1 /* INSERTED */ && change.context) {\r\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\r\n                if (record.previousIndex == null) {\r\n                    const renderRow = record.item;\r\n                    const rowDef = renderRow.rowDef;\r\n                    const context = { $implicit: renderRow.data };\r\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\r\n                }\r\n                else if (currentIndex == null) {\r\n                    viewContainer.remove(prevIndex);\r\n                }\r\n                else {\r\n                    const view = viewContainer.get(prevIndex);\r\n                    viewContainer.move(view, currentIndex);\r\n                }\r\n            });\r\n        }\r\n        // Update the meta context of a row's context data (index, count, first, last, ...)\r\n        this._updateRowIndexContext();\r\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\r\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\r\n        changes.forEachIdentityChange((record) => {\r\n            const rowView = viewContainer.get(record.currentIndex);\r\n            rowView.context.$implicit = record.item.data;\r\n        });\r\n        this._updateNoDataRow();\r\n        this.updateStickyColumnStyles();\r\n    }\r\n    /** Adds a column definition that was not included as part of the content children. */\r\n    addColumnDef(columnDef) {\r\n        this._customColumnDefs.add(columnDef);\r\n    }\r\n    /** Removes a column definition that was not included as part of the content children. */\r\n    removeColumnDef(columnDef) {\r\n        this._customColumnDefs.delete(columnDef);\r\n    }\r\n    /** Adds a row definition that was not included as part of the content children. */\r\n    addRowDef(rowDef) {\r\n        this._customRowDefs.add(rowDef);\r\n    }\r\n    /** Removes a row definition that was not included as part of the content children. */\r\n    removeRowDef(rowDef) {\r\n        this._customRowDefs.delete(rowDef);\r\n    }\r\n    /** Adds a header row definition that was not included as part of the content children. */\r\n    addHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.add(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Removes a header row definition that was not included as part of the content children. */\r\n    removeHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.delete(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Adds a footer row definition that was not included as part of the content children. */\r\n    addFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.add(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Removes a footer row definition that was not included as part of the content children. */\r\n    removeFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.delete(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Sets a no data row definition that was not included as a part of the content children. */\r\n    setNoDataRow(noDataRow) {\r\n        this._customNoDataRow = noDataRow;\r\n    }\r\n    /**\r\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\r\n     * automatically called when the header row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyHeaderRowStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const thead = tableElement.querySelector('thead');\r\n        if (thead) {\r\n            thead.style.display = headerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\r\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\r\n     * automatically called when the footer row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyFooterRowStyles() {\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        if (tfoot) {\r\n            tfoot.style.display = footerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\r\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\r\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the left and right. Then sticky styles are added for the left and right according\r\n     * to the column definitions for each cell in each row. This is automatically called when\r\n     * the data source provides a new set of data or when a column definition changes its sticky\r\n     * input. May be called manually for cases where the cell content changes outside of these events.\r\n     */\r\n    updateStickyColumnStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const dataRows = this._getRenderedRows(this._rowOutlet);\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\r\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\r\n        // don't need to be cleared unless either the sticky column config changes or one of the row\r\n        // defs change.\r\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\r\n            || this._stickyColumnStylesNeedReset) {\r\n            // Clear the left and right positioning from all columns in the table across all rows since\r\n            // sticky columns span across all table sections (header, data, footer)\r\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\r\n            this._stickyColumnStylesNeedReset = false;\r\n        }\r\n        // Update the sticky styles for each header row depending on the def's sticky state\r\n        headerRows.forEach((headerRow, i) => {\r\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\r\n        });\r\n        // Update the sticky styles for each data row depending on its def's sticky state\r\n        this._rowDefs.forEach(rowDef => {\r\n            // Collect all the rows rendered with this row definition.\r\n            const rows = [];\r\n            for (let i = 0; i < dataRows.length; i++) {\r\n                if (this._renderRows[i].rowDef === rowDef) {\r\n                    rows.push(dataRows[i]);\r\n                }\r\n            }\r\n            this._addStickyColumnStyles(rows, rowDef);\r\n        });\r\n        // Update the sticky styles for each footer row depending on the def's sticky state\r\n        footerRows.forEach((footerRow, i) => {\r\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\r\n        });\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Get the list of RenderRow objects to render according to the current list of data and defined\r\n     * row definitions. If the previous list already contained a particular pair, it should be reused\r\n     * so that the differ equates their references.\r\n     */\r\n    _getAllRenderRows() {\r\n        const renderRows = [];\r\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\r\n        // new cache while unused ones can be picked up by garbage collection.\r\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\r\n        this._cachedRenderRowsMap = new Map();\r\n        // For each data object, get the list of rows that should be rendered, represented by the\r\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            let data = this._data[i];\r\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\r\n            if (!this._cachedRenderRowsMap.has(data)) {\r\n                this._cachedRenderRowsMap.set(data, new WeakMap());\r\n            }\r\n            for (let j = 0; j < renderRowsForData.length; j++) {\r\n                let renderRow = renderRowsForData[j];\r\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\r\n                if (cache.has(renderRow.rowDef)) {\r\n                    cache.get(renderRow.rowDef).push(renderRow);\r\n                }\r\n                else {\r\n                    cache.set(renderRow.rowDef, [renderRow]);\r\n                }\r\n                renderRows.push(renderRow);\r\n            }\r\n        }\r\n        return renderRows;\r\n    }\r\n    /**\r\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\r\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\r\n     * `(T, CdkRowDef)` pair.\r\n     */\r\n    _getRenderRowsForData(data, dataIndex, cache) {\r\n        const rowDefs = this._getRowDefs(data, dataIndex);\r\n        return rowDefs.map(rowDef => {\r\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\r\n            if (cachedRenderRows.length) {\r\n                const dataRow = cachedRenderRows.shift();\r\n                dataRow.dataIndex = dataIndex;\r\n                return dataRow;\r\n            }\r\n            else {\r\n                return { data, rowDef, dataIndex };\r\n            }\r\n        });\r\n    }\r\n    /** Update the map containing the content's column definitions. */\r\n    _cacheColumnDefs() {\r\n        this._columnDefsByName.clear();\r\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\r\n        columnDefs.forEach(columnDef => {\r\n            if (this._columnDefsByName.has(columnDef.name) &&\r\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableDuplicateColumnNameError(columnDef.name);\r\n            }\r\n            this._columnDefsByName.set(columnDef.name, columnDef);\r\n        });\r\n    }\r\n    /** Update the list of all available row definitions that can be used. */\r\n    _cacheRowDefs() {\r\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\r\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\r\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\r\n        // After all row definitions are determined, find the row definition to be considered default.\r\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\r\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMultipleDefaultRowDefsError();\r\n        }\r\n        this._defaultRowDef = defaultRowDefs[0];\r\n    }\r\n    /**\r\n     * Check if the header, data, or footer rows have changed what columns they want to display or\r\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\r\n     * re-render that section.\r\n     */\r\n    _renderUpdatedColumns() {\r\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\r\n        // Force re-render data rows if the list of column definitions have changed.\r\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\r\n        if (dataColumnsChanged) {\r\n            this._forceRenderDataRows();\r\n        }\r\n        // Force re-render header/footer rows if the list of column definitions have changed.\r\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (headerColumnsChanged) {\r\n            this._forceRenderHeaderRows();\r\n        }\r\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (footerColumnsChanged) {\r\n            this._forceRenderFooterRows();\r\n        }\r\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\r\n    }\r\n    /**\r\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\r\n     * render change subscription if one exists. If the data source is null, interpret this by\r\n     * clearing the row outlet. Otherwise start listening for new data.\r\n     */\r\n    _switchDataSource(dataSource) {\r\n        this._data = [];\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n        // Stop listening for data from the previous data source.\r\n        if (this._renderChangeSubscription) {\r\n            this._renderChangeSubscription.unsubscribe();\r\n            this._renderChangeSubscription = null;\r\n        }\r\n        if (!dataSource) {\r\n            if (this._dataDiffer) {\r\n                this._dataDiffer.diff([]);\r\n            }\r\n            this._rowOutlet.viewContainer.clear();\r\n        }\r\n        this._dataSource = dataSource;\r\n    }\r\n    /** Set up a subscription for the data provided by the data source. */\r\n    _observeRenderChanges() {\r\n        // If no data source has been set, there is nothing to observe for changes.\r\n        if (!this.dataSource) {\r\n            return;\r\n        }\r\n        let dataStream;\r\n        if (isDataSource(this.dataSource)) {\r\n            dataStream = this.dataSource.connect(this);\r\n        }\r\n        else if (isObservable(this.dataSource)) {\r\n            dataStream = this.dataSource;\r\n        }\r\n        else if (Array.isArray(this.dataSource)) {\r\n            dataStream = of(this.dataSource);\r\n        }\r\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableUnknownDataSourceError();\r\n        }\r\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\r\n            .subscribe(data => {\r\n            this._data = data || [];\r\n            this.renderRows();\r\n        });\r\n    }\r\n    /**\r\n     * Clears any existing content in the header row outlet and creates a new embedded view\r\n     * in the outlet using the header row definition.\r\n     */\r\n    _forceRenderHeaderRows() {\r\n        // Clear the header row outlet if any content exists.\r\n        if (this._headerRowOutlet.viewContainer.length > 0) {\r\n            this._headerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\r\n        this.updateStickyHeaderRowStyles();\r\n    }\r\n    /**\r\n     * Clears any existing content in the footer row outlet and creates a new embedded view\r\n     * in the outlet using the footer row definition.\r\n     */\r\n    _forceRenderFooterRows() {\r\n        // Clear the footer row outlet if any content exists.\r\n        if (this._footerRowOutlet.viewContainer.length > 0) {\r\n            this._footerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\r\n        this.updateStickyFooterRowStyles();\r\n    }\r\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\r\n    _addStickyColumnStyles(rows, rowDef) {\r\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\r\n            const columnDef = this._columnDefsByName.get(columnName);\r\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnName);\r\n            }\r\n            return columnDef;\r\n        });\r\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\r\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\r\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\r\n    }\r\n    /** Gets the list of rows that have been rendered in the row outlet. */\r\n    _getRenderedRows(rowOutlet) {\r\n        const renderedRows = [];\r\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\r\n            const viewRef = rowOutlet.viewContainer.get(i);\r\n            renderedRows.push(viewRef.rootNodes[0]);\r\n        }\r\n        return renderedRows;\r\n    }\r\n    /**\r\n     * Get the matching row definitions that should be used for this row data. If there is only\r\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\r\n     * predicate that returns true with the data. If none return true, return the default row\r\n     * definition.\r\n     */\r\n    _getRowDefs(data, dataIndex) {\r\n        if (this._rowDefs.length == 1) {\r\n            return [this._rowDefs[0]];\r\n        }\r\n        let rowDefs = [];\r\n        if (this.multiTemplateDataRows) {\r\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\r\n        }\r\n        else {\r\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\r\n            if (rowDef) {\r\n                rowDefs.push(rowDef);\r\n            }\r\n        }\r\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingMatchingRowDefError(data);\r\n        }\r\n        return rowDefs;\r\n    }\r\n    _getEmbeddedViewArgs(renderRow, index) {\r\n        const rowDef = renderRow.rowDef;\r\n        const context = { $implicit: renderRow.data };\r\n        return {\r\n            templateRef: rowDef.template,\r\n            context,\r\n            index,\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\r\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\r\n     * of where to place the new row template in the outlet.\r\n     */\r\n    _renderRow(outlet, rowDef, index, context = {}) {\r\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\r\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\r\n        this._renderCellTemplateForItem(rowDef, context);\r\n        return view;\r\n    }\r\n    _renderCellTemplateForItem(rowDef, context) {\r\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\r\n            if (CdkCellOutlet.mostRecentCellOutlet) {\r\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\r\n            }\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\r\n     * e.g. first/last/even/odd.\r\n     */\r\n    _updateRowIndexContext() {\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            if (this.multiTemplateDataRows) {\r\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\r\n                context.renderIndex = renderIndex;\r\n            }\r\n            else {\r\n                context.index = this._renderRows[renderIndex].dataIndex;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the column definitions for the provided row def. */\r\n    _getCellTemplates(rowDef) {\r\n        if (!rowDef || !rowDef.columns) {\r\n            return [];\r\n        }\r\n        return Array.from(rowDef.columns, columnId => {\r\n            const column = this._columnDefsByName.get(columnId);\r\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnId);\r\n            }\r\n            return rowDef.extractCellTemplate(column);\r\n        });\r\n    }\r\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\r\n    _applyNativeTableSections() {\r\n        const documentFragment = this._document.createDocumentFragment();\r\n        const sections = [\r\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\r\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\r\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\r\n        ];\r\n        for (const section of sections) {\r\n            const element = this._document.createElement(section.tag);\r\n            element.setAttribute('role', 'rowgroup');\r\n            for (const outlet of section.outlets) {\r\n                element.appendChild(outlet.elementRef.nativeElement);\r\n            }\r\n            documentFragment.appendChild(element);\r\n        }\r\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\r\n        this._elementRef.nativeElement.appendChild(documentFragment);\r\n    }\r\n    /**\r\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\r\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\r\n     * `multiTemplateDataRows` or adding/removing row definitions.\r\n     */\r\n    _forceRenderDataRows() {\r\n        this._dataDiffer.diff([]);\r\n        this._rowOutlet.viewContainer.clear();\r\n        this.renderRows();\r\n    }\r\n    /**\r\n     * Checks if there has been a change in sticky states since last check and applies the correct\r\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\r\n     * during a change detection and after the inputs are settled (after content check).\r\n     */\r\n    _checkStickyStates() {\r\n        const stickyCheckReducer = (acc, d) => {\r\n            return acc || d.hasStickyChanged();\r\n        };\r\n        // Note that the check needs to occur for every definition since it notifies the definition\r\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\r\n        // remaining definitions and leave them in an unchecked state.\r\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyHeaderRowStyles();\r\n        }\r\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyFooterRowStyles();\r\n        }\r\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\r\n            this._stickyColumnStylesNeedReset = true;\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\r\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\r\n     * stickiness when directionality changes.\r\n     */\r\n    _setupStickyStyler() {\r\n        const direction = this._dir ? this._dir.value : 'ltr';\r\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\r\n        (this._dir ? this._dir.change : of())\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(value => {\r\n            this._stickyStyler.direction = value;\r\n            this.updateStickyColumnStyles();\r\n        });\r\n    }\r\n    /** Filters definitions that belong to this table from a QueryList. */\r\n    _getOwnDefs(items) {\r\n        return items.filter(item => !item._table || item._table === this);\r\n    }\r\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\r\n    _updateNoDataRow() {\r\n        const noDataRow = this._customNoDataRow || this._noDataRow;\r\n        if (noDataRow) {\r\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\r\n            if (shouldShow !== this._isShowingNoDataRow) {\r\n                const container = this._noDataRowOutlet.viewContainer;\r\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\r\n                this._isShowingNoDataRow = shouldShow;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\r\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\r\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\r\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: CDK_TABLE, useExisting: CdkTable },\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef(_c0);\r\n        ɵngcc0.ɵɵprojection(0);\r\n        ɵngcc0.ɵɵprojection(1, 1);\r\n        ɵngcc0.ɵɵelementContainer(2, 0);\r\n        ɵngcc0.ɵɵelementContainer(3, 1);\r\n        ɵngcc0.ɵɵelementContainer(4, 2);\r\n        ɵngcc0.ɵɵelementContainer(5, 3);\r\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\r\nCdkTable.ctorParameters = () => [\r\n    { type: IterableDiffers },\r\n    { type: ChangeDetectorRef },\r\n    { type: ElementRef },\r\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\r\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\r\n];\r\nCdkTable.propDecorators = {\r\n    trackBy: [{ type: Input }],\r\n    dataSource: [{ type: Input }],\r\n    multiTemplateDataRows: [{ type: Input }],\r\n    fixedLayout: [{ type: Input }],\r\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\r\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\r\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\r\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\r\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\r\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\r\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-table, table[cdk-table]',\r\n                exportAs: 'cdkTable',\r\n                template: CDK_TABLE_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-table',\r\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\r\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\r\n                // declared elsewhere, they are checked when their declaration points are checked.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                providers: [\r\n                    { provide: CDK_TABLE, useExisting: CdkTable },\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n                ],\r\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['role']\r\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_COALESCED_STYLE_SCHEDULER]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }, {\r\n                type: Inject,\r\n                args: [STICKY_POSITIONING_LISTENER]\r\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { trackBy: [{\r\n            type: Input\r\n        }], dataSource: [{\r\n            type: Input\r\n        }], multiTemplateDataRows: [{\r\n            type: Input\r\n        }], fixedLayout: [{\r\n            type: Input\r\n        }], _rowOutlet: [{\r\n            type: ViewChild,\r\n            args: [DataRowOutlet, { static: true }]\r\n        }], _headerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [HeaderRowOutlet, { static: true }]\r\n        }], _footerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [FooterRowOutlet, { static: true }]\r\n        }], _noDataRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [NoDataRowOutlet, { static: true }]\r\n        }], _contentColumnDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkColumnDef, { descendants: true }]\r\n        }], _contentRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkRowDef, { descendants: true }]\r\n        }], _contentHeaderRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _contentFooterRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _noDataRow: [{\r\n            type: ContentChild,\r\n            args: [CdkNoDataRow]\r\n        }] }); })();\r\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\r\nfunction mergeArrayAndSet(array, set) {\r\n    return array.concat(Array.from(set));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Column that simply shows text content for the header and row cells. Assumes that the table\r\n * is using the native table implementation (`<table>`).\r\n *\r\n * By default, the name of this column will be the header text and data property accessor.\r\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\r\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\r\n * input.\r\n */\r\nclass CdkTextColumn {\r\n    constructor(\r\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\r\n    // for better error reporting.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _table, _options) {\r\n        this._table = _table;\r\n        this._options = _options;\r\n        /** Alignment of the cell values. */\r\n        this.justify = 'start';\r\n        this._options = _options || {};\r\n    }\r\n    /** Column name that should be used to reference this column. */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        this._name = name;\r\n        // With Ivy, inputs can be initialized before static query results are\r\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\r\n        this._syncColumnDefName();\r\n    }\r\n    ngOnInit() {\r\n        this._syncColumnDefName();\r\n        if (this.headerText === undefined) {\r\n            this.headerText = this._createDefaultHeaderText();\r\n        }\r\n        if (!this.dataAccessor) {\r\n            this.dataAccessor =\r\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\r\n        }\r\n        if (this._table) {\r\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\r\n            // since the columnDef will not pick up its content by the time the table finishes checking\r\n            // its content and initializing the rows.\r\n            this.columnDef.cell = this.cell;\r\n            this.columnDef.headerCell = this.headerCell;\r\n            this._table.addColumnDef(this.columnDef);\r\n        }\r\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            throw getTableTextColumnMissingParentTableError();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._table) {\r\n            this._table.removeColumnDef(this.columnDef);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a default header text. Use the options' header text transformation function if one\r\n     * has been provided. Otherwise simply capitalize the column name.\r\n     */\r\n    _createDefaultHeaderText() {\r\n        const name = this.name;\r\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableTextColumnMissingNameError();\r\n        }\r\n        if (this._options && this._options.defaultHeaderTextTransform) {\r\n            return this._options.defaultHeaderTextTransform(name);\r\n        }\r\n        return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n    /** Synchronizes the column definition name with the text column name. */\r\n    _syncColumnDefName() {\r\n        if (this.columnDef) {\r\n            this.columnDef.name = this.name;\r\n        }\r\n    }\r\n}\r\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\r\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\r\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\r\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\r\n        ɵngcc0.ɵɵelementContainerEnd();\r\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\r\nCdkTextColumn.ctorParameters = () => [\r\n    { type: CdkTable, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\r\n];\r\nCdkTextColumn.propDecorators = {\r\n    name: [{ type: Input }],\r\n    headerText: [{ type: Input }],\r\n    dataAccessor: [{ type: Input }],\r\n    justify: [{ type: Input }],\r\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\r\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\r\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-text-column',\r\n                template: `\r\n    <ng-container cdkColumnDef>\r\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\r\n        {{headerText}}\r\n      </th>\r\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n      </td>\r\n    </ng-container>\r\n  `,\r\n                encapsulation: ViewEncapsulation.None,\r\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\r\n                // to the table to be inserted into its view. This is problematic when change detection runs since\r\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\r\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\r\n                // an ExpressionChangedAfterItHasBeenCheckedError).\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default\r\n            }]\r\n    }], function () { return [{ type: CdkTable, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [TEXT_COLUMN_OPTIONS]\r\n            }] }]; }, { justify: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], headerText: [{\r\n            type: Input\r\n        }], dataAccessor: [{\r\n            type: Input\r\n        }], columnDef: [{\r\n            type: ViewChild,\r\n            args: [CdkColumnDef, { static: true }]\r\n        }], cell: [{\r\n            type: ViewChild,\r\n            args: [CdkCellDef, { static: true }]\r\n        }], headerCell: [{\r\n            type: ViewChild,\r\n            args: [CdkHeaderCellDef, { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst EXPORTED_DECLARATIONS = [\r\n    CdkTable,\r\n    CdkRowDef,\r\n    CdkCellDef,\r\n    CdkCellOutlet,\r\n    CdkHeaderCellDef,\r\n    CdkFooterCellDef,\r\n    CdkColumnDef,\r\n    CdkCell,\r\n    CdkRow,\r\n    CdkHeaderCell,\r\n    CdkFooterCell,\r\n    CdkHeaderRow,\r\n    CdkHeaderRowDef,\r\n    CdkFooterRow,\r\n    CdkFooterRowDef,\r\n    DataRowOutlet,\r\n    HeaderRowOutlet,\r\n    FooterRowOutlet,\r\n    CdkTextColumn,\r\n    CdkNoDataRow,\r\n    NoDataRowOutlet,\r\n];\r\nclass CdkTableModule {\r\n}\r\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\r\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\r\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: EXPORTED_DECLARATIONS,\r\n                declarations: EXPORTED_DECLARATIONS,\r\n                imports: [ScrollingModule]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\r\n\r\n"]}