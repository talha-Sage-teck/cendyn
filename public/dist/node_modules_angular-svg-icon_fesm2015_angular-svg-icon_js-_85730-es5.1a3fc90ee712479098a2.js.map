{"version":3,"mappings":"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","names":["_c0","SvgLoader","SvgHttpLoader","constructor","http","getSvg","url","get","responseType","ɵfac","SvgHttpLoader_Factory","t","ɵngcc0","ɵngcc1","ɵprov","token","factory","ngDevMode","SERVER_URL","InjectionToken","SvgIconRegistryService","loader","platformId","serverUrl","_document","iconsByUrl","Map","iconsLoadingByUrl","document","addSvg","name","data","has","div","createElement","innerHTML","svg","querySelector","set","loadSvg","match","of","o","pipe","map","tap","catchError","err","console","error","throwError","finalize","share","getSvgByName","unloadSvg","SvgIconRegistryService_Factory","PLATFORM_ID","DOCUMENT","SVG_ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","SVG_ICON_REGISTRY_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","SvgIconHelper","loaded","SvgIconComponent","element","differs","renderer","iconReg","cdr","stretch","applyClass","applyCss","helper","_svgStyle","values","differ","find","create","ngOnInit","init","ngOnDestroy","destroy","ngOnChanges","changeRecord","elemSvg","nativeElement","firstChild","src","stylize","setClass","klass","svgClass","previousValue","currentValue","elem","viewBox","warn","svgAriaLabel","doAria","ngDoCheck","changes","diff","applyChanges","svgObs","icnSub","subscribe","initSvg","markForCheck","setSvg","resetDiffer","unsubscribe","icon","cloneNode","appendChild","copyNgContentAttribute","w","getAttribute","h","vb","setAttribute","removeAttribute","undefined","hasAttribute","hostElem","attributes","len","length","i","attribute","item","startsWith","setNgContentAttribute","parent","attributeName","childNodes","child","Element","forEachRemovedItem","record","setStyle","key","forEachAddedItem","forEachChangedItem","nameAndUnit","value","split","unit","removeStyle","target","previous","current","klasses","Array","isArray","k","removeClass","addClass","label","SvgIconComponent_Factory","ɵcmp","type","selectors","inputs","svgStyle","features","ngContentSelectors","decls","vars","template","SvgIconComponent_Template","rf","ctx","encapsulation","AngularSvgIconModule","config","ngModule","providers","useClass","AngularSvgIconModule_Factory","ɵmod","ɵinj","imports","CommonModule","ngJitMode","declarations","exports"],"sources":["webpack:///node_modules/angular-svg-icon/fesm2015/angular-svg-icon.js"],"sourcesContent":["import { Injectable, InjectionToken, Inject, PLATFORM_ID, Optional, SkipSelf, Component, ElementRef, KeyValueDiffers, Renderer2, ChangeDetectorRef, Input, NgModule } from '@angular/core';\r\nimport { DOCUMENT, CommonModule } from '@angular/common';\r\nimport { of, throwError } from 'rxjs';\r\nimport { map, tap, catchError, finalize, share } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/common/http';\r\n\r\nconst _c0 = [\"*\"];\r\nclass SvgLoader {\r\n}\r\nclass SvgHttpLoader extends SvgLoader {\r\n    constructor(http) {\r\n        super();\r\n        this.http = http;\r\n    }\r\n    getSvg(url) {\r\n        return this.http.get(url, { responseType: 'text' });\r\n    }\r\n}\r\nSvgHttpLoader.ɵfac = function SvgHttpLoader_Factory(t) { return new (t || SvgHttpLoader)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\r\nSvgHttpLoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SvgHttpLoader, factory: SvgHttpLoader.ɵfac });\r\nSvgHttpLoader.ctorParameters = () => [\r\n    { type: HttpClient }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SvgHttpLoader, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\r\n\r\nconst SERVER_URL = new InjectionToken('SERVER_URL');\r\nclass SvgIconRegistryService {\r\n    constructor(loader, platformId, serverUrl, _document) {\r\n        this.loader = loader;\r\n        this.platformId = platformId;\r\n        this.serverUrl = serverUrl;\r\n        this._document = _document;\r\n        this.iconsByUrl = new Map();\r\n        this.iconsLoadingByUrl = new Map();\r\n        this.document = this._document;\r\n    }\r\n    /** Add a SVG to the registry by passing a name and the SVG. */\r\n    addSvg(name, data) {\r\n        if (!this.iconsByUrl.has(name)) {\r\n            const div = this.document.createElement('DIV');\r\n            div.innerHTML = data;\r\n            const svg = div.querySelector('svg');\r\n            this.iconsByUrl.set(name, svg);\r\n        }\r\n    }\r\n    /** Load a SVG to the registry from a URL. */\r\n    loadSvg(url, name = url) {\r\n        // not sure if there should be a possibility to use name for server usage\r\n        // so overriding it for now if provided\r\n        // maybe should separate functionality for url and name use-cases\r\n        if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\r\n            url = this.serverUrl + url;\r\n            name = url;\r\n        }\r\n        if (this.iconsByUrl.has(name)) {\r\n            return of(this.iconsByUrl.get(name));\r\n        }\r\n        else if (this.iconsLoadingByUrl.has(name)) {\r\n            return this.iconsLoadingByUrl.get(name);\r\n        }\r\n        const o = this.loader.getSvg(url).pipe(map(svg => {\r\n            const div = this.document.createElement('DIV');\r\n            div.innerHTML = svg;\r\n            return div.querySelector('svg');\r\n        }), tap(svg => this.iconsByUrl.set(name, svg)), catchError(err => {\r\n            console.error(err);\r\n            return throwError(err);\r\n        }), finalize(() => this.iconsLoadingByUrl.delete(name)), share());\r\n        this.iconsLoadingByUrl.set(name, o);\r\n        return o;\r\n    }\r\n    /** Get loaded SVG from registry by name. (also works by url because of blended map) */\r\n    getSvgByName(name) {\r\n        if (this.iconsByUrl.has(name)) {\r\n            return of(this.iconsByUrl.get(name));\r\n        }\r\n        else if (this.iconsLoadingByUrl.has(name)) {\r\n            return this.iconsLoadingByUrl.get(name);\r\n        }\r\n        return throwError(`No svg with name '${name}' has been loaded`);\r\n    }\r\n    /** Remove a SVG from the registry by URL (or name). */\r\n    unloadSvg(url) {\r\n        if (this.iconsByUrl.has(url)) {\r\n            this.iconsByUrl.delete(url);\r\n        }\r\n    }\r\n}\r\nSvgIconRegistryService.ɵfac = function SvgIconRegistryService_Factory(t) { return new (t || SvgIconRegistryService)(ɵngcc0.ɵɵinject(SvgLoader), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(SERVER_URL, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\r\nSvgIconRegistryService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SvgIconRegistryService, factory: SvgIconRegistryService.ɵfac });\r\nSvgIconRegistryService.ctorParameters = () => [\r\n    { type: SvgLoader },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [SERVER_URL,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SvgIconRegistryService, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: SvgLoader }, { type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [SERVER_URL]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\nfunction SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, loader, platformId, serverUrl, document) {\r\n    return parentRegistry || new SvgIconRegistryService(loader, platformId, serverUrl, document);\r\n}\r\nconst SVG_ICON_REGISTRY_PROVIDER = {\r\n    provide: SvgIconRegistryService,\r\n    deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID],\r\n        [new Optional(), SERVER_URL], [new Optional(), DOCUMENT]\r\n    ],\r\n    useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\r\n};\r\n\r\nclass SvgIconHelper {\r\n    constructor() {\r\n        this.loaded = false;\r\n    }\r\n}\r\nclass SvgIconComponent {\r\n    constructor(element, differs, renderer, iconReg, cdr) {\r\n        this.element = element;\r\n        this.differs = differs;\r\n        this.renderer = renderer;\r\n        this.iconReg = iconReg;\r\n        this.cdr = cdr;\r\n        this.stretch = false;\r\n        this.applyClass = false;\r\n        /** @deprecated since 9.1.0 */\r\n        this.applyCss = false;\r\n        this.helper = new SvgIconHelper();\r\n        this._svgStyle = null;\r\n    }\r\n    // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\r\n    set svgStyle(values) {\r\n        this._svgStyle = values;\r\n        if (!this.helper.differ && values) {\r\n            this.helper.differ = this.differs.find(values).create();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    ngOnChanges(changeRecord) {\r\n        const elemSvg = this.element.nativeElement.firstChild;\r\n        if (changeRecord.src || changeRecord.name) {\r\n            if (this.helper.loaded) {\r\n                this.destroy();\r\n            }\r\n            this.init();\r\n        }\r\n        if (changeRecord.stretch) {\r\n            this.stylize();\r\n        }\r\n        if (changeRecord.applyClass) {\r\n            if (this.applyClass) {\r\n                this.setClass(elemSvg, null, this.klass);\r\n            }\r\n            else {\r\n                this.setClass(elemSvg, this.klass, null);\r\n            }\r\n        }\r\n        if (changeRecord.svgClass) {\r\n            this.setClass(elemSvg, changeRecord.svgClass.previousValue, changeRecord.svgClass.currentValue);\r\n        }\r\n        if (changeRecord.klass) {\r\n            const elem = this.element.nativeElement;\r\n            this.setClass(elem, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\r\n            if (this.applyClass) {\r\n                this.setClass(elemSvg, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\r\n            }\r\n            else {\r\n                this.setClass(elemSvg, changeRecord.klass.previousValue, null);\r\n            }\r\n        }\r\n        if (changeRecord.viewBox) {\r\n            if (this.helper.loaded) {\r\n                this.destroy();\r\n            }\r\n            this.init();\r\n        }\r\n        if (changeRecord.applyCss) {\r\n            console.warn('applyCss deprecated since 9.1.0, will be removed in 10.0.0');\r\n            console.warn('use applyClass instead');\r\n        }\r\n        if (changeRecord.svgAriaLabel) {\r\n            this.doAria(changeRecord.svgAriaLabel.currentValue);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.helper.svg && this.helper.differ) {\r\n            const changes = this.helper.differ.diff(this._svgStyle);\r\n            if (changes) {\r\n                this.applyChanges(changes);\r\n            }\r\n        }\r\n    }\r\n    init() {\r\n        if (this.name) {\r\n            const svgObs = this.iconReg.getSvgByName(this.name);\r\n            if (svgObs) {\r\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\r\n            }\r\n        }\r\n        else if (this.src) {\r\n            const svgObs = this.iconReg.loadSvg(this.src);\r\n            if (svgObs) {\r\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\r\n            }\r\n        }\r\n        else {\r\n            const elem = this.element.nativeElement;\r\n            elem.innerHTML = '';\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    initSvg(svg) {\r\n        if (!this.helper.loaded && svg) {\r\n            this.setSvg(svg);\r\n            this.resetDiffer();\r\n        }\r\n    }\r\n    destroy() {\r\n        if (this.helper.icnSub) {\r\n            this.helper.icnSub.unsubscribe();\r\n        }\r\n        this.helper = new SvgIconHelper();\r\n    }\r\n    resetDiffer() {\r\n        if (this._svgStyle && !this.helper.differ) {\r\n            this.helper.differ = this.differs.find(this._svgStyle).create();\r\n        }\r\n    }\r\n    setSvg(svg) {\r\n        if (!this.helper.loaded && svg) {\r\n            this.helper.svg = svg;\r\n            const icon = svg.cloneNode(true);\r\n            const elem = this.element.nativeElement;\r\n            elem.innerHTML = '';\r\n            this.renderer.appendChild(elem, icon);\r\n            this.helper.loaded = true;\r\n            this.copyNgContentAttribute(elem, icon);\r\n            if (this.klass && this.applyClass) {\r\n                this.setClass(elem.firstChild, null, this.klass);\r\n            }\r\n            if (this.svgClass) {\r\n                this.setClass(elem.firstChild, null, this.svgClass);\r\n            }\r\n            if (this.viewBox) {\r\n                if (this.viewBox === 'auto') {\r\n                    // Attempt to convert height & width to a viewBox.\r\n                    const w = icon.getAttribute('width');\r\n                    const h = icon.getAttribute('height');\r\n                    if (h && w) {\r\n                        const vb = `0 0 ${w} ${h}`;\r\n                        this.renderer.setAttribute(icon, 'viewBox', vb);\r\n                        this.renderer.removeAttribute(icon, 'width');\r\n                        this.renderer.removeAttribute(icon, 'height');\r\n                    }\r\n                }\r\n                else if (this.viewBox !== '') {\r\n                    this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\r\n                    this.renderer.removeAttribute(icon, 'width');\r\n                    this.renderer.removeAttribute(icon, 'height');\r\n                }\r\n            }\r\n            this.stylize();\r\n            // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\r\n            // the SVG's aria-label.\r\n            if (!(this.svgAriaLabel === undefined && elem.firstChild.hasAttribute('aria-label'))) {\r\n                this.doAria(this.svgAriaLabel || '');\r\n            }\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n    copyNgContentAttribute(hostElem, icon) {\r\n        const attributes = hostElem.attributes;\r\n        const len = attributes.length;\r\n        for (let i = 0; i < len; i += 1) {\r\n            const attribute = attributes.item(i);\r\n            if (attribute && attribute.name.startsWith('_ngcontent')) {\r\n                this.setNgContentAttribute(icon, attribute.name);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    setNgContentAttribute(parent, attributeName) {\r\n        this.renderer.setAttribute(parent, attributeName, '');\r\n        const len = parent.childNodes.length;\r\n        for (let i = 0; i < len; i += 1) {\r\n            const child = parent.childNodes[i];\r\n            if (child instanceof Element) {\r\n                this.setNgContentAttribute(child, attributeName);\r\n            }\r\n        }\r\n    }\r\n    stylize() {\r\n        if (this.helper.svg) {\r\n            const svg = this.element.nativeElement.firstChild;\r\n            if (this.stretch === true) {\r\n                this.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\r\n            }\r\n            else if (this.stretch === false) {\r\n                this.renderer.removeAttribute(svg, 'preserveAspectRatio');\r\n            }\r\n        }\r\n    }\r\n    applyChanges(changes) {\r\n        changes.forEachRemovedItem((record) => this.setStyle(record.key, null));\r\n        changes.forEachAddedItem((record) => this.setStyle(record.key, record.currentValue));\r\n        changes.forEachChangedItem((record) => this.setStyle(record.key, record.currentValue));\r\n    }\r\n    setStyle(nameAndUnit, value) {\r\n        const [name, unit] = nameAndUnit.split('.');\r\n        value = value !== null && unit ? `${value}${unit}` : value;\r\n        const svg = this.element.nativeElement.firstChild;\r\n        if (value !== null) {\r\n            this.renderer.setStyle(svg, name, value);\r\n        }\r\n        else {\r\n            this.renderer.removeStyle(svg, name);\r\n        }\r\n    }\r\n    setClass(target, previous, current) {\r\n        if (target) {\r\n            if (previous) {\r\n                const klasses = Array.isArray(previous) ? previous : previous.split(' ');\r\n                for (const k of klasses) {\r\n                    this.renderer.removeClass(target, k);\r\n                }\r\n            }\r\n            if (current) {\r\n                const klasses = Array.isArray(current) ? current : current.split(' ');\r\n                for (const k of klasses) {\r\n                    this.renderer.addClass(target, k);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    doAria(label) {\r\n        const svg = this.element.nativeElement.firstChild;\r\n        if (svg) {\r\n            if (label === '') {\r\n                this.renderer.setAttribute(svg, 'aria-hidden', 'true');\r\n                this.renderer.removeAttribute(svg, 'aria-label');\r\n            }\r\n            else {\r\n                this.renderer.removeAttribute(svg, 'aria-hidden');\r\n                this.renderer.setAttribute(svg, 'aria-label', label);\r\n            }\r\n        }\r\n    }\r\n}\r\nSvgIconComponent.ɵfac = function SvgIconComponent_Factory(t) { return new (t || SvgIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SvgIconRegistryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\r\nSvgIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SvgIconComponent, selectors: [[\"svg-icon\"]], inputs: { stretch: \"stretch\", applyClass: \"applyClass\", applyCss: \"applyCss\", svgStyle: \"svgStyle\", src: \"src\", name: \"name\", svgClass: \"svgClass\", klass: [\"class\", \"klass\"], viewBox: \"viewBox\", svgAriaLabel: \"svgAriaLabel\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function SvgIconComponent_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵprojection(0);\r\n    } }, encapsulation: 2 });\r\nSvgIconComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: KeyValueDiffers },\r\n    { type: Renderer2 },\r\n    { type: SvgIconRegistryService },\r\n    { type: ChangeDetectorRef }\r\n];\r\nSvgIconComponent.propDecorators = {\r\n    src: [{ type: Input }],\r\n    name: [{ type: Input }],\r\n    stretch: [{ type: Input }],\r\n    applyClass: [{ type: Input }],\r\n    applyCss: [{ type: Input }],\r\n    svgClass: [{ type: Input }],\r\n    klass: [{ type: Input, args: ['class',] }],\r\n    viewBox: [{ type: Input }],\r\n    svgAriaLabel: [{ type: Input }],\r\n    svgStyle: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SvgIconComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'svg-icon',\r\n                template: '<ng-content></ng-content>'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.Renderer2 }, { type: SvgIconRegistryService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { stretch: [{\r\n            type: Input\r\n        }], applyClass: [{\r\n            type: Input\r\n        }], applyCss: [{\r\n            type: Input\r\n        }], svgStyle: [{\r\n            type: Input\r\n        }], src: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], svgClass: [{\r\n            type: Input\r\n        }], klass: [{\r\n            type: Input,\r\n            args: ['class']\r\n        }], viewBox: [{\r\n            type: Input\r\n        }], svgAriaLabel: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\nclass AngularSvgIconModule {\r\n    static forRoot(config = {}) {\r\n        return {\r\n            ngModule: AngularSvgIconModule,\r\n            providers: [\r\n                SVG_ICON_REGISTRY_PROVIDER,\r\n                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }\r\n            ]\r\n        };\r\n    }\r\n}\r\nAngularSvgIconModule.ɵfac = function AngularSvgIconModule_Factory(t) { return new (t || AngularSvgIconModule)(); };\r\nAngularSvgIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularSvgIconModule });\r\nAngularSvgIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\r\n            CommonModule,\r\n        ]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularSvgIconModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    CommonModule,\r\n                ],\r\n                declarations: [\r\n                    SvgIconComponent\r\n                ],\r\n                exports: [SvgIconComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularSvgIconModule, { declarations: function () { return [SvgIconComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SvgIconComponent]; } }); })();\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { AngularSvgIconModule, SERVER_URL, SVG_ICON_REGISTRY_PROVIDER, SVG_ICON_REGISTRY_PROVIDER_FACTORY, SvgHttpLoader, SvgIconComponent, SvgIconRegistryService, SvgLoader };\r\n\r\n"]}