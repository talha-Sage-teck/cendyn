"use strict";
(self["webpackChunkshell"] = self["webpackChunkshell"] || []).push([["node_modules_ngx-chips_fesm2015_ngx-chips_js-_f0731"],{

/***/ 18635:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 86065:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": function() { return /* binding */ __extends; },
/* harmony export */   "__assign": function() { return /* binding */ __assign; },
/* harmony export */   "__rest": function() { return /* binding */ __rest; },
/* harmony export */   "__decorate": function() { return /* binding */ __decorate; },
/* harmony export */   "__param": function() { return /* binding */ __param; },
/* harmony export */   "__metadata": function() { return /* binding */ __metadata; },
/* harmony export */   "__awaiter": function() { return /* binding */ __awaiter; },
/* harmony export */   "__generator": function() { return /* binding */ __generator; },
/* harmony export */   "__createBinding": function() { return /* binding */ __createBinding; },
/* harmony export */   "__exportStar": function() { return /* binding */ __exportStar; },
/* harmony export */   "__values": function() { return /* binding */ __values; },
/* harmony export */   "__read": function() { return /* binding */ __read; },
/* harmony export */   "__spread": function() { return /* binding */ __spread; },
/* harmony export */   "__spreadArrays": function() { return /* binding */ __spreadArrays; },
/* harmony export */   "__await": function() { return /* binding */ __await; },
/* harmony export */   "__asyncGenerator": function() { return /* binding */ __asyncGenerator; },
/* harmony export */   "__asyncDelegator": function() { return /* binding */ __asyncDelegator; },
/* harmony export */   "__asyncValues": function() { return /* binding */ __asyncValues; },
/* harmony export */   "__makeTemplateObject": function() { return /* binding */ __makeTemplateObject; },
/* harmony export */   "__importStar": function() { return /* binding */ __importStar; },
/* harmony export */   "__importDefault": function() { return /* binding */ __importDefault; },
/* harmony export */   "__classPrivateFieldGet": function() { return /* binding */ __classPrivateFieldGet; },
/* harmony export */   "__classPrivateFieldSet": function() { return /* binding */ __classPrivateFieldSet; }
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 16719:
/*!******************************************************************************!*\
  !*** ./node_modules/ng2-material-dropdown/fesm2015/ng2-material-dropdown.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownStateService": function() { return /* binding */ DropdownStateService; },
/* harmony export */   "Ng2Dropdown": function() { return /* binding */ Ng2Dropdown; },
/* harmony export */   "Ng2DropdownButton": function() { return /* binding */ Ng2DropdownButton; },
/* harmony export */   "Ng2DropdownMenu": function() { return /* binding */ Ng2DropdownMenu; },
/* harmony export */   "Ng2DropdownModule": function() { return /* binding */ Ng2DropdownModule; },
/* harmony export */   "Ng2MenuItem": function() { return /* binding */ Ng2MenuItem; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 18635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 14468);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/animations */ 84562);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angular_animations__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 1090);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_angular_common__WEBPACK_IMPORTED_MODULE_2__);







function Ng2DropdownButton_span_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "g");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
}

const _c0 = ["*"];

function Ng2DropdownMenu_div_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function Ng2DropdownMenu_div_3_Template_div_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2);
      const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r1.hide();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
}

const _c1 = [[["ng2-dropdown-button"]], [["ng2-dropdown-menu"]]];
const _c2 = ["ng2-dropdown-button", "ng2-dropdown-menu"];
let Ng2DropdownButton = /*#__PURE__*/(() => {
  let Ng2DropdownButton = class Ng2DropdownButton {
    constructor(element) {
      this.element = element;
      this.onMenuToggled = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      this.showCaret = true;
    }
    /**
     * @name toggleMenu
     * @desc emits event to toggle menu
     */


    toggleMenu() {
      this.onMenuToggled.emit(true);
    }
    /**
     * @name getPosition
     * @desc returns position of the button
     */


    getPosition() {
      return this.element.nativeElement.getBoundingClientRect();
    }

  };

  Ng2DropdownButton.ɵfac = function Ng2DropdownButton_Factory(t) {
    return new (t || Ng2DropdownButton)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
  };

  Ng2DropdownButton.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: Ng2DropdownButton,
    selectors: [["ng2-dropdown-button"]],
    inputs: {
      showCaret: "showCaret"
    },
    outputs: {
      onMenuToggled: "onMenuToggled"
    },
    ngContentSelectors: _c0,
    decls: 4,
    vars: 1,
    consts: [["type", "button", "tabindex", "0s", 1, "ng2-dropdown-button", 3, "click"], [1, "ng2-dropdown-button__label"], ["class", "ng2-dropdown-button__caret", 4, "ngIf"], [1, "ng2-dropdown-button__caret"], ["enable-background", "new 0 0 32 32", "height", "16px", "id", "\u0421\u043B\u043E\u0439_1", "version", "1.1", "viewBox", "0 0 32 32", "width", "16px", 0, "xml", "space", "preserve", "xmlns", "http://www.w3.org/2000/svg", 0, "xmlns", "xlink", "http://www.w3.org/1999/xlink"], ["d", "M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z", "fill", "#121313", "id", "Expand_More"]],
    template: function Ng2DropdownButton_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function Ng2DropdownButton_Template_button_click_0_listener() {
          return ctx.toggleMenu();
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, Ng2DropdownButton_span_3_Template, 9, 0, "span", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showCaret);
      }
    },
    directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf],
    styles: [".ng2-dropdown-button[_ngcontent-%COMP%]{font-family:Roboto,\"Helvetica Neue\",Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button[_ngcontent-%COMP%]:hover{color:#222}.ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button[_ngcontent-%COMP%]:focus{color:#222;border-bottom:2px solid #2196f3}.ng2-dropdown-button__label[_ngcontent-%COMP%]{flex:1 1 95%}.ng2-dropdown-button__caret[_ngcontent-%COMP%]{width:12px;height:12px;display:flex;flex:1 1 6%}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%], .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]{border:none;min-width:40px;width:40px;border-radius:100%;transition:.2s;text-align:center;height:40px;padding:.5em}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active{background:rgba(0,0,0,.2)}"]
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], Ng2DropdownButton.prototype, "onMenuToggled", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownButton.prototype, "showCaret", void 0);

  return Ng2DropdownButton;
})();
const KEYS = {
  BACKSPACE: 9,
  PREV: 38,
  NEXT: 40,
  ENTER: 13,
  ESCAPE: 27
};
/**
 * @name onSwitchNext
 * @param index
 * @param items
 * @param state
 */

const onSwitchNext = (index, items, state) => {
  if (index < items.length - 1) {
    state.select(items[index + 1], true);
  }
};

const ɵ0 = onSwitchNext;
/**
 * @name onSwitchPrev
 * @param index
 * @param items
 * @param state
 */

const onSwitchPrev = (index, items, state) => {
  if (index > 0) {
    state.select(items[index - 1], true);
  }
};

const ɵ1 = onSwitchPrev;
/**
 * @name onBackspace
 * @param index
 * @param items
 * @param state
 */

const onBackspace = (index, items, state) => {
  if (index < items.length - 1) {
    state.select(items[index + 1], true);
  } else {
    state.select(items[0], true);
  }
};

const ɵ2 = onBackspace;

function onEscape() {
  this.hide();
}

;
/**
 * @name onItemClicked
 * @param index
 * @param items
 * @param state
 */

const onItemClicked = (index, items, state) => {
  return state.selectedItem ? state.selectedItem.click() : undefined;
};

const ɵ3 = onItemClicked;
const ACTIONS = {
  [KEYS.BACKSPACE]: onBackspace,
  [KEYS.PREV]: onSwitchPrev,
  [KEYS.NEXT]: onSwitchNext,
  [KEYS.ENTER]: onItemClicked,
  [KEYS.ESCAPE]: onEscape
};

function arrowKeysHandler(event) {
  if ([38, 40].indexOf(event.keyCode) > -1) {
    event.preventDefault();
  }
}

class Ng2DropdownState {
  constructor() {
    this.onItemSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onItemClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onItemDestroyed = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  /**
   * @name selectedItem
   * @desc getter for _selectedItem
   */


  get selectedItem() {
    return this._selectedItem;
  }
  /**
   * @name selects a menu item and emits event
   * @param item
   */


  select(item, dispatchEvent = true) {
    this._selectedItem = item;

    if (!dispatchEvent || !item) {
      return;
    }

    item.focus();
    this.onItemSelected.emit(item);
  }
  /**
   * @name unselect
   * @desc sets _selectedItem as undefined
   */


  unselect() {
    this._selectedItem = undefined;
  }

}

let DropdownStateService = /*#__PURE__*/(() => {
  let DropdownStateService = class DropdownStateService {
    constructor() {
      this.menuState = {
        isVisible: false,

        toString() {
          return this.isVisible === true ? 'visible' : 'hidden';
        }

      };
      this.dropdownState = new Ng2DropdownState();
    }

  };

  DropdownStateService.ɵfac = function DropdownStateService_Factory(t) {
    return new (t || DropdownStateService)();
  };

  DropdownStateService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: DropdownStateService,
    factory: function (t) {
      return DropdownStateService.ɵfac(t);
    }
  });
  return DropdownStateService;
})();
let Ng2MenuItem = /*#__PURE__*/(() => {
  let Ng2MenuItem = class Ng2MenuItem {
    constructor(state, element) {
      this.state = state;
      this.element = element;
      /**
       * @preventClose
       * @desc if true, clicking on the item won't close the dropdown
       */

      this.preventClose = false;
    }

    ngOnDestroy() {
      this.state.dropdownState.onItemDestroyed.emit(this);
    }
    /**
     * @name isSelected
     * @desc returns current selected item
     */


    get isSelected() {
      return this === this.state.dropdownState.selectedItem;
    }
    /**
     * @name click
     * @desc emits select event
     */


    select($event) {
      this.state.dropdownState.select(this, true);

      if ($event) {
        $event.stopPropagation();
        $event.preventDefault();
      }
    }
    /**
     * @name click
     * @desc emits click event
     */


    click() {
      this.state.dropdownState.onItemClicked.emit(this);
    }
    /**
     * @name focus
     */


    focus() {
      this.element.nativeElement.children[0].focus();
    }

  };

  Ng2MenuItem.ɵfac = function Ng2MenuItem_Factory(t) {
    return new (t || Ng2MenuItem)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](DropdownStateService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
  };

  Ng2MenuItem.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: Ng2MenuItem,
    selectors: [["ng2-menu-item"]],
    inputs: {
      preventClose: "preventClose",
      value: "value"
    },
    ngContentSelectors: _c0,
    decls: 2,
    vars: 2,
    consts: [["role", "button", "tabindex", "0", 1, "ng2-menu-item", 3, "keydown.enter", "click", "mouseover"]],
    template: function Ng2MenuItem_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown.enter", function Ng2MenuItem_Template_div_keydown_enter_0_listener() {
          return ctx.click();
        })("click", function Ng2MenuItem_Template_div_click_0_listener() {
          return ctx.click();
        })("mouseover", function Ng2MenuItem_Template_div_mouseover_0_listener() {
          return ctx.select();
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng2-menu-item--selected", ctx.isSelected);
      }
    },
    styles: [".ng2-menu-item[_ngcontent-%COMP%]{font-family:Roboto,\"Helvetica Neue\",Helvetica,Arial;background:#fff;color:rgba(0,0,0,.87);cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected[_ngcontent-%COMP%]{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item[_ngcontent-%COMP%]:focus{outline:0}.ng2-menu-item[_ngcontent-%COMP%]:active{background:rgba(158,158,158,.4)}ng2-menu-item[_nghost-%COMP%]     [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:rgba(0,0,0,.44)}"]
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2MenuItem.prototype, "preventClose", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2MenuItem.prototype, "value", void 0);

  return Ng2MenuItem;
})();
let Ng2DropdownMenu = /*#__PURE__*/(() => {
  let Ng2DropdownMenu = class Ng2DropdownMenu {
    constructor(dropdownState, element, renderer) {
      this.dropdownState = dropdownState;
      this.element = element;
      this.renderer = renderer;
      /**
       * @name width
       */

      this.width = 4;
      /**
       * @description if set to true, the first element of the dropdown will be automatically focused
       * @name focusFirstElement
       */

      this.focusFirstElement = true;
      /**
       * @name appendToBody
       */

      this.appendToBody = true;
      /**
       * @name zIndex
       */

      this.zIndex = 1000;
      this.listeners = {
        arrowHandler: undefined,
        handleKeypress: undefined
      };
    }
    /**
     * @name show
     * @shows menu and selects first item
     */


    show(position, dynamic = true) {
      const dc = typeof document !== 'undefined' ? document : undefined;
      const wd = typeof window !== 'undefined' ? window : undefined;

      if (!this.dropdownState.menuState.isVisible) {
        // setting handlers
        this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));
        this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);
      } // update state


      this.dropdownState.menuState.isVisible = true;

      if (position) {
        this.updatePosition(position, dynamic);
      }
    }
    /**
     * @name hide
     * @desc hides menu
     */


    hide() {
      this.dropdownState.menuState.isVisible = false; // reset selected item state

      this.dropdownState.dropdownState.unselect(); // call function to unlisten

      this.listeners.arrowHandler && this.listeners.arrowHandler();
      this.listeners.handleKeypress && this.listeners.handleKeypress();
    }
    /**
     * @name updatePosition
     * @desc updates the menu position every time it is toggled
     * @param position {ClientRect}
     * @param dynamic {boolean}
     */


    updatePosition(position, dynamic) {
      this.position = position;
      this.updateOnChange(dynamic);
    }
    /**
     * @name handleKeypress
     * @desc executes functions on keyPress based on the key pressed
     * @param $event
     */


    handleKeypress($event) {
      const key = $event.keyCode;
      const items = this.items.toArray();
      const index = items.indexOf(this.dropdownState.dropdownState.selectedItem);

      if (!ACTIONS.hasOwnProperty(key)) {
        return;
      }

      ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);
    }
    /**
     * @name getMenuElement
     */


    getMenuElement() {
      return this.element.nativeElement.children[0];
    }
    /**
     * @name calcPositionOffset
     * @param position
     */


    calcPositionOffset(position) {
      const wd = typeof window !== 'undefined' ? window : undefined;
      const dc = typeof document !== 'undefined' ? document : undefined;

      if (!wd || !dc || !position) {
        return;
      }

      const element = this.getMenuElement();
      const supportPageOffset = wd.pageXOffset !== undefined;
      const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';
      const x = supportPageOffset ? wd.pageXOffset : isCSS1Compat ? dc.documentElement.scrollLeft : dc.body.scrollLeft;
      const y = supportPageOffset ? wd.pageYOffset : isCSS1Compat ? dc.documentElement.scrollTop : dc.body.scrollTop;
      let {
        top,
        left
      } = this.applyOffset(`${position.top + (this.appendToBody ? y - 15 : 0)}px`, `${position.left + x - 5}px`);
      const clientWidth = element.clientWidth;
      const clientHeight = element.clientHeight;
      const marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);
      const marginFromRight = parseInt(left) + clientWidth;
      const windowScrollHeight = wd.innerHeight + wd.scrollY;
      const windowScrollWidth = wd.innerWidth + wd.scrollX;

      if (marginFromBottom >= windowScrollHeight) {
        top = `${parseInt(top.replace('px', '')) - clientHeight}px`;
      }

      if (marginFromRight >= windowScrollWidth) {
        const marginRight = marginFromRight - windowScrollWidth + 30;
        left = `${parseInt(left.replace('px', '')) - marginRight}px`;
      }

      return {
        top,
        left
      };
    }

    applyOffset(top, left) {
      if (!this.offset) {
        return {
          top,
          left
        };
      }

      const offset = this.offset.split(' ');

      if (!offset[1]) {
        offset[1] = '0';
      }

      top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;
      left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;
      return {
        top,
        left
      };
    }

    ngOnInit() {
      const dc = typeof document !== 'undefined' ? document : undefined;

      if (this.appendToBody) {
        // append menu element to the body
        dc.body.appendChild(this.element.nativeElement);
      }
    }

    updateOnChange(dynamic = true) {
      const element = this.getMenuElement();
      const position = this.calcPositionOffset(this.position);

      if (position) {
        this.renderer.setStyle(element, 'top', position.top.toString());
        this.renderer.setStyle(element, 'left', position.left.toString());
      } // select first item unless user disabled this option


      if (this.focusFirstElement && this.items.first && !this.dropdownState.dropdownState.selectedItem) {
        this.dropdownState.dropdownState.select(this.items.first, false);
      }
    }

    ngOnDestroy() {
      const elem = this.element.nativeElement;
      elem.parentNode.removeChild(elem);

      if (this.listeners.handleKeypress) {
        this.listeners.handleKeypress();
      }
    }

  };

  Ng2DropdownMenu.ɵfac = function Ng2DropdownMenu_Factory(t) {
    return new (t || Ng2DropdownMenu)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](DropdownStateService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
  };

  Ng2DropdownMenu.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: Ng2DropdownMenu,
    selectors: [["ng2-dropdown-menu"]],
    contentQueries: function Ng2DropdownMenu_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, Ng2MenuItem, 5);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.items = _t);
      }
    },
    inputs: {
      width: "width",
      focusFirstElement: "focusFirstElement",
      appendToBody: "appendToBody",
      zIndex: "zIndex",
      offset: "offset"
    },
    ngContentSelectors: _c0,
    decls: 4,
    vars: 12,
    consts: [[1, "ng2-dropdown-menu__options-container"], ["class", "ng2-dropdown-backdrop", 3, "click", 4, "ngIf"], [1, "ng2-dropdown-backdrop", 3, "click"]],
    template: function Ng2DropdownMenu_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, Ng2DropdownMenu_div_3_Template, 1, 0, "div", 1);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("ng2-dropdown-menu ng2-dropdown-menu---width--", ctx.width, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("z-index", ctx.zIndex);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng2-dropdown-menu--inside-element", !ctx.appendToBody)("ng2-dropdown-menu--open", ctx.dropdownState.menuState.isVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("@fade", ctx.dropdownState.menuState.toString());
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("@opacity", ctx.dropdownState.menuState.toString());
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.dropdownState.menuState.isVisible);
      }
    },
    directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf],
    styles: ["[_nghost-%COMP%]{display:block}.ng2-dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;box-shadow:0 1px 2px 0 rgba(0,0,0,.3);position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element[_ngcontent-%COMP%]{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2[_ngcontent-%COMP%]{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4[_ngcontent-%COMP%]{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6[_ngcontent-%COMP%]{width:320px}.ng2-dropdown-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}[_nghost-%COMP%]     .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}"],
    data: {
      animation: [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.trigger)('fade', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.state)('visible', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 1,
        height: '*',
        width: '*'
      })), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.state)('hidden', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 0,
        overflow: 'hidden',
        height: 0,
        width: 0
      })), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('hidden => visible', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('250ms ease-in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 1,
        height: '*',
        width: '*'
      }))]), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('visible => hidden', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('350ms ease-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 0,
        width: 0,
        height: 0
      }))])]), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.trigger)('opacity', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('hidden => visible', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('450ms ease-in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.keyframes)([(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 0,
        offset: 0
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 1,
        offset: 1
      })]))]), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('visible => hidden', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('250ms ease-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.keyframes)([(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 1,
        offset: 0
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 0.5,
        offset: 0.3
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
        opacity: 0,
        offset: 1
      })]))])])]
    }
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownMenu.prototype, "width", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownMenu.prototype, "focusFirstElement", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownMenu.prototype, "offset", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownMenu.prototype, "appendToBody", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2DropdownMenu.prototype, "zIndex", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren)(Ng2MenuItem, {
    descendants: true
  })], Ng2DropdownMenu.prototype, "items", void 0);

  return Ng2DropdownMenu;
})();
let Ng2Dropdown = /*#__PURE__*/(() => {
  let Ng2Dropdown = class Ng2Dropdown {
    constructor(state) {
      this.state = state;
      this.dynamicUpdate = true; // outputs

      this.onItemClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      this.onItemSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    }

    ngOnInit() {
      this.state.dropdownState.onItemClicked.subscribe(item => {
        this.onItemClicked.emit(item);

        if (item.preventClose) {
          return;
        }

        this.hide.call(this);
      });

      if (this.button) {
        this.button.onMenuToggled.subscribe(() => {
          this.toggleMenu();
        });
      }

      this.state.dropdownState.onItemSelected.subscribe(item => {
        this.onItemSelected.emit(item);
      });
      this.state.dropdownState.onItemDestroyed.subscribe(item => {
        let newSelectedItem;
        const items = this.menu.items.toArray();

        if (item !== this.state.dropdownState.selectedItem) {
          return;
        }

        if (this.menu.focusFirstElement) {
          newSelectedItem = item === items[0] && items.length > 1 ? items[1] : items[0];
        }

        this.state.dropdownState.select(newSelectedItem);
      });
    }
    /**
     * @name toggleMenu
     * @desc toggles menu visibility
     */


    toggleMenu(position = this.button.getPosition()) {
      this.state.menuState.isVisible ? this.hide() : this.show(position);
    }
    /**
     * - hides dropdown
     * @name hide
     */


    hide() {
      this.menu.hide();
      this.onHide.emit(this);
    }
    /**
     * - shows dropdown
     * @name show
     * @param position
     */


    show(position = this.button.getPosition()) {
      this.menu.show(position, this.dynamicUpdate);
      this.onShow.emit(this);
    }
    /**
     * @name scrollListener
     */


    scrollListener() {
      if (this.button && this.dynamicUpdate) {
        this.menu.updatePosition(this.button.getPosition(), true);
      }
    }

  };

  Ng2Dropdown.ɵfac = function Ng2Dropdown_Factory(t) {
    return new (t || Ng2Dropdown)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](DropdownStateService));
  };

  Ng2Dropdown.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: Ng2Dropdown,
    selectors: [["ng2-dropdown"]],
    contentQueries: function Ng2Dropdown_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, Ng2DropdownButton, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, Ng2DropdownMenu, 7);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.button = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.menu = _t.first);
      }
    },
    hostBindings: function Ng2Dropdown_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("scroll", function Ng2Dropdown_scroll_HostBindingHandler() {
          return ctx.scrollListener();
        }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"]);
      }
    },
    inputs: {
      dynamicUpdate: "dynamicUpdate"
    },
    outputs: {
      onItemClicked: "onItemClicked",
      onItemSelected: "onItemSelected",
      onShow: "onShow",
      onHide: "onHide"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([DropdownStateService])],
    ngContentSelectors: _c2,
    decls: 3,
    vars: 0,
    consts: [[1, "ng2-dropdown-container"]],
    template: function Ng2Dropdown_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2, 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    },
    encapsulation: 2
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild)(Ng2DropdownButton, {
    static: true
  })], Ng2Dropdown.prototype, "button", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild)(Ng2DropdownMenu, {
    static: true
  })], Ng2Dropdown.prototype, "menu", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], Ng2Dropdown.prototype, "dynamicUpdate", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], Ng2Dropdown.prototype, "onItemClicked", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], Ng2Dropdown.prototype, "onItemSelected", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], Ng2Dropdown.prototype, "onShow", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], Ng2Dropdown.prototype, "onHide", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener)('window:scroll')], Ng2Dropdown.prototype, "scrollListener", null);

  return Ng2Dropdown;
})();
let Ng2DropdownModule = /*#__PURE__*/(() => {
  let Ng2DropdownModule = class Ng2DropdownModule {};

  Ng2DropdownModule.ɵfac = function Ng2DropdownModule_Factory(t) {
    return new (t || Ng2DropdownModule)();
  };

  Ng2DropdownModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: Ng2DropdownModule
  });
  Ng2DropdownModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule]]
  });
  return Ng2DropdownModule;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](Ng2DropdownModule, {
    declarations: function () {
      return [Ng2Dropdown, Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu];
    },
    imports: function () {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule];
    },
    exports: function () {
      return [Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu, Ng2Dropdown];
    }
  });
})();
/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 49714:
/*!******************************************************!*\
  !*** ./node_modules/ngx-chips/fesm2015/ngx-chips.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteIconComponent": function() { return /* binding */ DeleteIconComponent; },
/* harmony export */   "TagComponent": function() { return /* binding */ TagComponent; },
/* harmony export */   "TagInputComponent": function() { return /* binding */ TagInputComponent; },
/* harmony export */   "TagInputDropdown": function() { return /* binding */ TagInputDropdown; },
/* harmony export */   "TagInputForm": function() { return /* binding */ TagInputForm; },
/* harmony export */   "TagInputModule": function() { return /* binding */ TagInputModule; },
/* harmony export */   "TagRipple": function() { return /* binding */ TagRipple; },
/* harmony export */   "ɵa": function() { return /* binding */ TagInputAccessor; },
/* harmony export */   "ɵb": function() { return /* binding */ animations; },
/* harmony export */   "ɵc": function() { return /* binding */ DragProvider; },
/* harmony export */   "ɵd": function() { return /* binding */ HighlightPipe; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 86065);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 14468);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 25864);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angular_forms__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 1090);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_angular_common__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ng2-material-dropdown */ 16719);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 92343);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/animations */ 84562);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_angular_animations__WEBPACK_IMPORTED_MODULE_4__);











const _c0 = ["input"];

function TagComponent_div_1_ng_template_1_Template(rf, ctx) {}

const _c1 = function (a0, a1) {
  return {
    item: a0,
    index: a1
  };
};

function TagComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, TagComponent_div_1_ng_template_1_Template, 0, 0, "ng-template", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("contenteditable", ctx_r0.editing);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](3, _c1, ctx_r0.model, ctx_r0.index))("ngTemplateOutlet", ctx_r0.template);
  }
}

function TagComponent_div_2_delete_icon_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "delete-icon", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TagComponent_div_2_delete_icon_3_Template_delete_icon_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return ctx_r5.remove($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
}

function TagComponent_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown.enter", function TagComponent_div_2_Template_div_keydown_enter_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r7.disableEditMode($event);
    })("keydown.escape", function TagComponent_div_2_Template_div_keydown_escape_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r9.disableEditMode($event);
    })("click", function TagComponent_div_2_Template_div_click_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r10.editing ? $event.stopPropagation() : undefined;
    })("blur", function TagComponent_div_2_Template_div_blur_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r11.onBlurred($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, TagComponent_div_2_delete_icon_3_Template, 1, 0, "delete-icon", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("contenteditable", ctx_r1.editing)("title", ctx_r1.getDisplayValue(ctx_r1.model));
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r1.getDisplayValue(ctx_r1.model), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isDeleteIconVisible());
  }
}

function TagComponent_tag_ripple_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tag-ripple", 9);
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r2.rippleState);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", -1);
  }
}

function TagInputDropdown_ng2_menu_item_2_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "highlight");
  }

  if (rf & 2) {
    const item_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHTML", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](1, 1, item_r1[ctx_r4.displayBy], ctx_r4.tagInput.inputForm.value.value), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}

function TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template(rf, ctx) {}

const _c2 = function (a0, a1, a2) {
  return {
    item: a0,
    index: a1,
    last: a2
  };
};

function TagInputDropdown_ng2_menu_item_2_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template, 0, 0, "ng-template", 7);
  }

  if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    const item_r1 = ctx_r8.$implicit;
    const index_r2 = ctx_r8.index;
    const last_r3 = ctx_r8.last;
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r5.templates.first)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction3"](2, _c2, item_r1, index_r2, last_r3));
  }
}

function TagInputDropdown_ng2_menu_item_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng2-menu-item", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, TagInputDropdown_ng2_menu_item_2_span_1_Template, 2, 4, "span", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, TagInputDropdown_ng2_menu_item_2_2_Template, 1, 6, undefined, 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", item_r1)("ngSwitch", !!ctx_r0.templates.length);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", false);
  }
}

function TagInputComponent_tag_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tag", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onSelect", function TagInputComponent_tag_2_Template_tag_onSelect_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const item_r3 = restoredCtx.$implicit;
      const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r5.selectItem(item_r3);
    })("onRemove", function TagInputComponent_tag_2_Template_tag_onRemove_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const item_r3 = restoredCtx.$implicit;
      const i_r4 = restoredCtx.index;
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r7.onRemoveRequested(item_r3, i_r4);
    })("onKeyDown", function TagInputComponent_tag_2_Template_tag_onKeyDown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r8.handleKeydown($event);
    })("onTagEdited", function TagInputComponent_tag_2_Template_tag_onTagEdited_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r9.updateEditedTag($event);
    })("onBlur", function TagInputComponent_tag_2_Template_tag_onBlur_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const i_r4 = restoredCtx.index;
      const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r10.onTagBlurred($event, i_r4);
    })("dragstart", function TagInputComponent_tag_2_Template_tag_dragstart_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const item_r3 = restoredCtx.$implicit;
      const i_r4 = restoredCtx.index;
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r11.dragZone ? ctx_r11.onDragStarted($event, item_r3, i_r4) : undefined;
    })("drop", function TagInputComponent_tag_2_Template_tag_drop_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const i_r4 = restoredCtx.index;
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r12.dragZone ? ctx_r12.onTagDropped($event, i_r4) : undefined;
    })("dragenter", function TagInputComponent_tag_2_Template_tag_dragenter_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r13.dragZone ? ctx_r13.onDragOver($event) : undefined;
    })("dragover", function TagInputComponent_tag_2_Template_tag_dragover_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const i_r4 = restoredCtx.index;
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r14.dragZone ? ctx_r14.onDragOver($event, i_r4) : undefined;
    })("dragleave", function TagInputComponent_tag_2_Template_tag_dragleave_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return ctx_r15.dragZone ? ctx_r15.dragProvider.onDragEnd() : undefined;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const item_r3 = ctx.$implicit;
    const i_r4 = ctx.index;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate"]("draggable", ctx_r0.editable);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("canAddTag", ctx_r0.isTagValid)("disabled", ctx_r0.disable)("@animation", ctx_r0.animationMetadata)("hasRipple", ctx_r0.ripple)("index", i_r4)("removable", ctx_r0.removable)("editable", ctx_r0.editable)("displayBy", ctx_r0.displayBy)("identifyBy", ctx_r0.identifyBy)("template", !!ctx_r0.hasCustomTemplate() ? ctx_r0.templates.first : undefined)("draggable", ctx_r0.dragZone)("model", item_r3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", 0);
  }
}

function TagInputComponent_div_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 7);
  }
}

function TagInputComponent_div_6_p_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "p", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const error_r17 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](error_r17);
  }
}

function TagInputComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, TagInputComponent_div_6_p_1_Template, 3, 1, "p", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r2.theme);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r2.errors);
  }
}

const _c3 = ["*"];

const escape = s => s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');

const ɵ0 = escape;
let HighlightPipe = /*#__PURE__*/(() => {
  let HighlightPipe = class HighlightPipe {
    /**
     * @name transform
     * @param value {string}
     * @param arg {string}
     */
    transform(value, arg) {
      if (!arg.trim()) {
        return value;
      }

      try {
        const regex = new RegExp(`(${escape(arg)})`, 'i');
        return value.replace(regex, '<b>$1</b>');
      } catch (e) {
        return value;
      }
    }

  };

  HighlightPipe.ɵfac = function HighlightPipe_Factory(t) {
    return new (t || HighlightPipe)();
  };

  HighlightPipe.ɵpipe = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({
    name: "highlight",
    type: HighlightPipe,
    pure: true
  });
  /*
  ** constants and default values for <tag-input>
   */

  return HighlightPipe;
})();
const PLACEHOLDER = '+ Tag';
const SECONDARY_PLACEHOLDER = 'Enter a new tag';
const KEYDOWN = 'keydown';
const KEYUP = 'keyup';
const FOCUS = 'focus';
const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';
const ACTIONS_KEYS = {
  DELETE: 'DELETE',
  SWITCH_PREV: 'SWITCH_PREV',
  SWITCH_NEXT: 'SWITCH_NEXT',
  TAB: 'TAB'
};
const KEY_PRESS_ACTIONS = {
  8: ACTIONS_KEYS.DELETE,
  46: ACTIONS_KEYS.DELETE,
  37: ACTIONS_KEYS.SWITCH_PREV,
  39: ACTIONS_KEYS.SWITCH_NEXT,
  9: ACTIONS_KEYS.TAB
};
const DRAG_AND_DROP_KEY = 'Text';
const NEXT = 'NEXT';
const PREV = 'PREV';
let DragProvider = /*#__PURE__*/(() => {
  let DragProvider = class DragProvider {
    constructor() {
      this.state = {
        dragging: false,
        dropping: false,
        index: undefined
      };
    }
    /**
     * @name setDraggedItem
     * @param event
     * @param tag
     */


    setDraggedItem(event, tag) {
      if (event && event.dataTransfer) {
        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));
      }
    }
    /**
     * @name getDraggedItem
     * @param event
     */


    getDraggedItem(event) {
      if (event && event.dataTransfer) {
        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);

        try {
          return JSON.parse(data);
        } catch (_a) {
          return;
        }
      }
    }
    /**
     * @name setSender
     * @param sender
     */


    setSender(sender) {
      this.sender = sender;
    }
    /**
     * @name setReceiver
     * @param receiver
     */


    setReceiver(receiver) {
      this.receiver = receiver;
    }
    /**
     * @name onTagDropped
     * @param tag
     * @param indexDragged
     * @param indexDropped
     */


    onTagDropped(tag, indexDragged, indexDropped) {
      this.onDragEnd();
      this.sender.onRemoveRequested(tag, indexDragged);
      this.receiver.onAddingRequested(false, tag, indexDropped);
    }
    /**
     * @name setState
     * @param state
     */


    setState(state) {
      this.state = Object.assign(Object.assign({}, this.state), state);
    }
    /**
     * @name getState
     * @param key
     */


    getState(key) {
      return key ? this.state[key] : this.state;
    }
    /**
     * @name onDragEnd
     */


    onDragEnd() {
      this.setState({
        dragging: false,
        dropping: false,
        index: undefined
      });
    }

  };

  DragProvider.ɵfac = function DragProvider_Factory(t) {
    return new (t || DragProvider)();
  };

  DragProvider.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: DragProvider,
    factory: function (t) {
      return DragProvider.ɵfac(t);
    }
  });
  return DragProvider;
})();
const defaults = {
  tagInput: {
    separatorKeys: [],
    separatorKeyCodes: [],
    maxItems: Infinity,
    placeholder: PLACEHOLDER,
    secondaryPlaceholder: SECONDARY_PLACEHOLDER,
    validators: [],
    asyncValidators: [],
    onlyFromAutocomplete: false,
    errorMessages: {},
    theme: '',
    onTextChangeDebounce: 250,
    inputId: null,
    inputClass: '',
    clearOnBlur: false,
    hideForm: false,
    addOnBlur: false,
    addOnPaste: false,
    pasteSplitPattern: ',',
    blinkIfDupe: true,
    removable: true,
    editable: false,
    allowDupes: false,
    modelAsStrings: false,
    trimTags: true,
    ripple: true,
    tabIndex: '',
    disable: false,
    dragZone: '',
    onRemoving: undefined,
    onAdding: undefined,
    displayBy: 'display',
    identifyBy: 'value',
    animationDuration: {
      enter: '250ms',
      leave: '150ms'
    }
  },
  dropdown: {
    displayBy: 'display',
    identifyBy: 'value',
    appendToBody: true,
    offset: '50 0',
    focusFirstElement: false,
    showDropdownIfEmpty: false,
    minimumTextLength: 1,
    limitItemsTo: Infinity,
    keepOpen: true,
    dynamicUpdate: true,
    zIndex: 1000,
    matchingFn
  }
};
/**
 * @name matchingFn
 * @param this
 * @param value
 * @param target
 */

function matchingFn(value, target) {
  const targetValue = target[this.displayBy].toString();
  return targetValue && targetValue.toLowerCase().indexOf(value.toLowerCase()) >= 0;
}

let OptionsProvider = /*#__PURE__*/(() => {
  class OptionsProvider {
    setOptions(options) {
      OptionsProvider.defaults.tagInput = Object.assign(Object.assign({}, defaults.tagInput), options.tagInput);
      OptionsProvider.defaults.dropdown = Object.assign(Object.assign({}, defaults.dropdown), options.dropdown);
    }

  }

  OptionsProvider.defaults = defaults;
  return OptionsProvider;
})();

class TagModelClass {}

function isObject(obj) {
  return obj === Object(obj);
}

let TagInputAccessor = /*#__PURE__*/(() => {
  let TagInputAccessor = class TagInputAccessor {
    constructor() {
      this._items = [];
      /**
       * @name displayBy
       */

      this.displayBy = OptionsProvider.defaults.tagInput.displayBy;
      /**
       * @name identifyBy
       */

      this.identifyBy = OptionsProvider.defaults.tagInput.identifyBy;
    }

    get items() {
      return this._items;
    }

    set items(items) {
      this._items = items;

      this._onChangeCallback(this._items);
    }

    onTouched() {
      this._onTouchedCallback();
    }

    writeValue(items) {
      this._items = items || [];
    }

    registerOnChange(fn) {
      this._onChangeCallback = fn;
    }

    registerOnTouched(fn) {
      this._onTouchedCallback = fn;
    }
    /**
     * @name getItemValue
     * @param item
     * @param fromDropdown
     */


    getItemValue(item, fromDropdown = false) {
      const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;
      return isObject(item) ? item[property] : item;
    }
    /**
     * @name getItemDisplay
     * @param item
     * @param fromDropdown
     */


    getItemDisplay(item, fromDropdown = false) {
      const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;
      return isObject(item) ? item[property] : item;
    }
    /**
     * @name getItemsWithout
     * @param index
     */


    getItemsWithout(index) {
      return this.items.filter((item, position) => position !== index);
    }

  };

  TagInputAccessor.ɵfac = function TagInputAccessor_Factory(t) {
    return new (t || TagInputAccessor)();
  };

  TagInputAccessor.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: TagInputAccessor,
    inputs: {
      displayBy: "displayBy",
      identifyBy: "identifyBy"
    }
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputAccessor.prototype, "displayBy", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputAccessor.prototype, "identifyBy", void 0);
  /**
   * @name listen
   * @param listenerType
   * @param action
   * @param condition
   */


  return TagInputAccessor;
})();

function listen(listenerType, action, condition = true) {
  // if the event provided does not exist, throw an error
  if (!this.listeners.hasOwnProperty(listenerType)) {
    throw new Error('The event entered may be wrong');
  } // if a condition is present and is false, exit early


  if (!condition) {
    return;
  } // fire listener


  this.listeners[listenerType].push(action);
}

let TagInputForm = /*#__PURE__*/(() => {
  let TagInputForm = class TagInputForm {
    constructor() {
      /**
       * @name onSubmit
       */
      this.onSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onBlur
       */

      this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onFocus
       */

      this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onKeyup
       */

      this.onKeyup = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onKeydown
       */

      this.onKeydown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name inputTextChange
       */

      this.inputTextChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name validators
       */

      this.validators = [];
      /**
       * @name asyncValidators
       * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list
       */

      this.asyncValidators = [];
      /**
       * @name tabindex
       * @desc pass through the specified tabindex to the input
       */

      this.tabindex = '';
      /**
       * @name disabled
       */

      this.disabled = false;
      this.item = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControl({
        value: '',
        disabled: this.disabled
      });
    }
    /**
     * @name inputText
     */


    get inputText() {
      return this.item.value;
    }
    /**
     * @name inputText
     * @param text {string}
     */


    set inputText(text) {
      this.item.setValue(text);
      this.inputTextChange.emit(text);
    }

    ngOnInit() {
      this.item.setValidators(this.validators);
      this.item.setAsyncValidators(this.asyncValidators); // creating form

      this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroup({
        item: this.item
      });
    }

    ngOnChanges(changes) {
      if (changes.disabled && !changes.disabled.firstChange) {
        if (changes.disabled.currentValue) {
          this.form.controls['item'].disable();
        } else {
          this.form.controls['item'].enable();
        }
      }
    }
    /**
     * @name value
     */


    get value() {
      return this.form.get('item');
    }
    /**
     * @name isInputFocused
     */


    isInputFocused() {
      const doc = typeof document !== 'undefined' ? document : undefined;
      return doc ? doc.activeElement === this.input.nativeElement : false;
    }
    /**
     * @name getErrorMessages
     * @param messages
     */


    getErrorMessages(messages) {
      return Object.keys(messages).filter(err => this.value.hasError(err)).map(err => messages[err]);
    }
    /**
     * @name hasErrors
     */


    hasErrors() {
      const {
        dirty,
        value,
        valid
      } = this.form;
      return dirty && value.item && !valid;
    }
    /**
     * @name focus
     */


    focus() {
      this.input.nativeElement.focus();
    }
    /**
     * @name blur
     */


    blur() {
      this.input.nativeElement.blur();
    }
    /**
     * @name getElementPosition
     */


    getElementPosition() {
      return this.input.nativeElement.getBoundingClientRect();
    }
    /**
     * - removes input from the component
     * @name destroy
     */


    destroy() {
      const input = this.input.nativeElement;
      input.parentElement.removeChild(input);
    }
    /**
     * @name onKeyDown
     * @param $event
     */


    onKeyDown($event) {
      this.inputText = this.value.value;

      if ($event.key === 'Enter') {
        this.submit($event);
      } else {
        return this.onKeydown.emit($event);
      }
    }
    /**
     * @name onKeyUp
     * @param $event
     */


    onKeyUp($event) {
      this.inputText = this.value.value;
      return this.onKeyup.emit($event);
    }
    /**
     * @name submit
     */


    submit($event) {
      $event.preventDefault();
      this.onSubmit.emit($event);
    }

  };

  TagInputForm.ɵfac = function TagInputForm_Factory(t) {
    return new (t || TagInputForm)();
  };

  TagInputForm.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TagInputForm,
    selectors: [["tag-input-form"]],
    viewQuery: function TagInputForm_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.input = _t.first);
      }
    },
    inputs: {
      validators: "validators",
      asyncValidators: "asyncValidators",
      tabindex: "tabindex",
      disabled: "disabled",
      inputText: "inputText",
      placeholder: "placeholder",
      inputId: "inputId",
      inputClass: "inputClass"
    },
    outputs: {
      onSubmit: "onSubmit",
      onBlur: "onBlur",
      onFocus: "onFocus",
      onKeyup: "onKeyup",
      onKeydown: "onKeydown",
      inputTextChange: "inputTextChange"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
    decls: 3,
    vars: 8,
    consts: [[3, "formGroup", "ngSubmit"], ["type", "text", "autocomplete", "off", "minlength", "1", "formControlName", "item", 1, "ng2-tag-input__text-input", 3, "tabindex", "ngClass", "focus", "blur", "keydown", "keyup"], ["input", ""]],
    template: function TagInputForm_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function TagInputForm_Template_form_ngSubmit_0_listener($event) {
          return ctx.submit($event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "input", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("focus", function TagInputForm_Template_input_focus_1_listener($event) {
          return ctx.onFocus.emit($event);
        })("blur", function TagInputForm_Template_input_blur_1_listener($event) {
          return ctx.onBlur.emit($event);
        })("keydown", function TagInputForm_Template_input_keydown_1_listener($event) {
          return ctx.onKeyDown($event);
        })("keyup", function TagInputForm_Template_input_keyup_1_listener($event) {
          return ctx.onKeyUp($event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate"]("tabindex", ctx.disabled ? -1 : ctx.tabindex ? ctx.tabindex : 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx.inputClass);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("id", ctx.inputId)("placeholder", ctx.placeholder)("aria-label", ctx.placeholder)("tabindex", ctx.tabindex)("disabled", ctx.disabled ? ctx.disabled : null);
      }
    },
    directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.MinLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass],
    styles: [".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.ng2-tag-input__text-input[_ngcontent-%COMP%]{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,\"Helvetica Neue\",sans-serif}.ng2-tag-input__text-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input__text-input[disabled=true][_ngcontent-%COMP%]{opacity:.5;background:#fff}"]
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "onSubmit", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "onBlur", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "onFocus", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "onKeyup", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "onKeydown", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputForm.prototype, "inputTextChange", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "placeholder", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "validators", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "asyncValidators", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "inputId", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "inputClass", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "tabindex", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "disabled", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('input')], TagInputForm.prototype, "input", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputForm.prototype, "inputText", null);

  return TagInputForm;
})();
let TagRipple = /*#__PURE__*/(() => {
  let TagRipple = class TagRipple {
    constructor() {
      this.state = 'none';
    }

  };

  TagRipple.ɵfac = function TagRipple_Factory(t) {
    return new (t || TagRipple)();
  };

  TagRipple.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TagRipple,
    selectors: [["tag-ripple"]],
    inputs: {
      state: "state"
    },
    decls: 1,
    vars: 1,
    consts: [[1, "tag-ripple"]],
    template: function TagRipple_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 0);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("@ink", ctx.state);
      }
    },
    styles: ["[_nghost-%COMP%] {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple[_ngcontent-%COMP%] {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }"],
    data: {
      animation: [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.trigger)('ink', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('none', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
        width: 0,
        opacity: 0
      })), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)('none => clicked', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)(300, (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.keyframes)([(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
        opacity: 1,
        offset: 0,
        width: '30%',
        borderRadius: '100%'
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
        opacity: 1,
        offset: 0.5,
        width: '50%'
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
        opacity: 0.5,
        offset: 1,
        width: '100%',
        borderRadius: '16px'
      })]))])])]
    }
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagRipple.prototype, "state", void 0); // mocking navigator


  return TagRipple;
})();
const navigator = typeof window !== 'undefined' ? window.navigator : {
  userAgent: 'Chrome',
  vendor: 'Google Inc'
};
const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
let TagComponent = /*#__PURE__*/(() => {
  let TagComponent = class TagComponent {
    constructor(element, renderer, cdRef) {
      this.element = element;
      this.renderer = renderer;
      this.cdRef = cdRef;
      /**
       * @name disabled
       */

      this.disabled = false;
      /**
       * @name onSelect
       */

      this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onRemove
       */

      this.onRemove = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onBlur
       */

      this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onKeyDown
       */

      this.onKeyDown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onTagEdited
       */

      this.onTagEdited = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name editing
       */

      this.editing = false;
      /**
       * @name rippleState
       */

      this.rippleState = 'none';
    }
    /**
     * @name readonly {boolean}
     */


    get readonly() {
      return typeof this.model !== 'string' && this.model.readonly === true;
    }
    /**
     * @name select
     */


    select($event) {
      if (this.readonly || this.disabled) {
        return;
      }

      if ($event) {
        $event.stopPropagation();
      }

      this.focus();
      this.onSelect.emit(this.model);
    }
    /**
     * @name remove
     */


    remove($event) {
      $event.stopPropagation();
      this.onRemove.emit(this);
    }
    /**
     * @name focus
     */


    focus() {
      this.element.nativeElement.focus();
    }

    move() {
      this.moving = true;
    }
    /**
     * @name keydown
     * @param event
     */


    keydown(event) {
      if (this.editing) {
        if (event.keyCode === 13) {
          return this.disableEditMode(event);
        }
      } else {
        this.onKeyDown.emit({
          event,
          model: this.model
        });
      }
    }
    /**
     * @name blink
     */


    blink() {
      const classList = this.element.nativeElement.classList;
      classList.add('blink');
      setTimeout(() => classList.remove('blink'), 50);
    }
    /**
     * @name toggleEditMode
     */


    toggleEditMode() {
      if (this.editable) {
        return this.editing ? undefined : this.activateEditMode();
      }
    }
    /**
     * @name onBlurred
     * @param event
     */


    onBlurred(event) {
      // Checks if it is editable first before handeling the onBlurred event in order to prevent
      // a bug in IE where tags are still editable with onlyFromAutocomplete set to true
      if (!this.editable) {
        return;
      }

      this.disableEditMode();
      const value = event.target.innerText;
      const result = typeof this.model === 'string' ? value : Object.assign(Object.assign({}, this.model), {
        [this.displayBy]: value
      });
      this.onBlur.emit(result);
    }
    /**
     * @name getDisplayValue
     * @param item
     */


    getDisplayValue(item) {
      return typeof item === 'string' ? item : item[this.displayBy];
    }
    /**
     * @desc returns whether the ripple is visible or not
     * only works in Chrome
     * @name isRippleVisible
     */


    get isRippleVisible() {
      return !this.readonly && !this.editing && isChrome && this.hasRipple;
    }
    /**
     * @name disableEditMode
     * @param $event
     */


    disableEditMode($event) {
      const classList = this.element.nativeElement.classList;
      const input = this.getContentEditableText();
      this.editing = false;
      classList.remove('tag--editing');

      if (!input) {
        this.setContentEditableText(this.model);
        return;
      }

      this.storeNewValue(input);
      this.cdRef.detectChanges();

      if ($event) {
        $event.preventDefault();
      }
    }
    /**
     * @name isDeleteIconVisible
     */


    isDeleteIconVisible() {
      return !this.readonly && !this.disabled && this.removable && !this.editing;
    }
    /**
     * @name getContentEditableText
     */


    getContentEditableText() {
      const input = this.getContentEditable();
      return input ? input.innerText.trim() : '';
    }
    /**
     * @name setContentEditableText
     * @param model
     */


    setContentEditableText(model) {
      const input = this.getContentEditable();
      const value = this.getDisplayValue(model);
      input.innerText = value;
    }
    /**
     * @name
     */


    activateEditMode() {
      const classList = this.element.nativeElement.classList;
      classList.add('tag--editing');
      this.editing = true;
    }
    /**
     * @name storeNewValue
     * @param input
     */


    storeNewValue(input) {
      const exists = tag => {
        return typeof tag === 'string' ? tag === input : tag[this.displayBy] === input;
      };

      const hasId = () => {
        return this.model[this.identifyBy] !== this.model[this.displayBy];
      }; // if the value changed, replace the value in the model


      if (exists(this.model)) {
        return;
      }

      const model = typeof this.model === 'string' ? input : {
        index: this.index,
        [this.identifyBy]: hasId() ? this.model[this.identifyBy] : input,
        [this.displayBy]: input
      };

      if (this.canAddTag(model)) {
        this.onTagEdited.emit({
          tag: model,
          index: this.index
        });
      } else {
        this.setContentEditableText(this.model);
      }
    }
    /**
     * @name getContentEditable
     */


    getContentEditable() {
      return this.element.nativeElement.querySelector('[contenteditable]');
    }

  };

  TagComponent.ɵfac = function TagComponent_Factory(t) {
    return new (t || TagComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef));
  };

  TagComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TagComponent,
    selectors: [["tag"]],
    viewQuery: function TagComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](TagRipple, 5);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.ripple = _t.first);
      }
    },
    hostVars: 2,
    hostBindings: function TagComponent_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown", function TagComponent_keydown_HostBindingHandler($event) {
          return ctx.keydown($event);
        });
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("moving", ctx.moving);
      }
    },
    inputs: {
      disabled: "disabled",
      model: "model",
      removable: "removable",
      editable: "editable",
      template: "template",
      displayBy: "displayBy",
      identifyBy: "identifyBy",
      index: "index",
      hasRipple: "hasRipple",
      canAddTag: "canAddTag"
    },
    outputs: {
      onSelect: "onSelect",
      onRemove: "onRemove",
      onBlur: "onBlur",
      onKeyDown: "onKeyDown",
      onTagEdited: "onTagEdited"
    },
    decls: 4,
    vars: 8,
    consts: [[3, "ngSwitch", "click", "dblclick", "mousedown", "mouseup"], [4, "ngSwitchCase"], ["class", "tag-wrapper", 4, "ngSwitchCase"], [3, "state", 4, "ngIf"], [3, "ngTemplateOutletContext", "ngTemplateOutlet"], [1, "tag-wrapper"], ["spellcheck", "false", 1, "tag__text", "inline", 3, "keydown.enter", "keydown.escape", "click", "blur"], ["aria-label", "Remove tag", "role", "button", 3, "click", 4, "ngIf"], ["aria-label", "Remove tag", "role", "button", 3, "click"], [3, "state"]],
    template: function TagComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TagComponent_Template_div_click_0_listener($event) {
          return ctx.select($event);
        })("dblclick", function TagComponent_Template_div_dblclick_0_listener() {
          return ctx.toggleEditMode();
        })("mousedown", function TagComponent_Template_div_mousedown_0_listener() {
          return ctx.rippleState = "clicked";
        })("mouseup", function TagComponent_Template_div_mouseup_0_listener() {
          return ctx.rippleState = "none";
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, TagComponent_div_1_Template, 2, 6, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, TagComponent_div_2_Template, 4, 4, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, TagComponent_tag_ripple_3_Template, 1, 2, "tag-ripple", 3);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", ctx.disabled);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitch", !!ctx.template);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", -1)("aria-label", ctx.getDisplayValue(ctx.model));
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isRippleVisible);
      }
    },
    directives: function () {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgTemplateOutlet, DeleteIconComponent, TagRipple];
    },
    styles: ["[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}[_nghost-%COMP%]{max-width:400px}.blink[_nghost-%COMP%]{-webkit-animation:.3s ease-in-out forwards blink;animation:.3s ease-in-out forwards blink}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}[_nghost-%COMP%]   .disabled[_ngcontent-%COMP%]{cursor:not-allowed}[_nghost-%COMP%]   [contenteditable=true][_ngcontent-%COMP%]{outline:0}.tag-wrapper[_ngcontent-%COMP%]{flex-direction:row;display:flex}.tag__text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}"]
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "model", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "removable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "editable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "template", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "displayBy", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "identifyBy", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "index", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "hasRipple", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "disabled", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagComponent.prototype, "canAddTag", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagComponent.prototype, "onSelect", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagComponent.prototype, "onRemove", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagComponent.prototype, "onBlur", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagComponent.prototype, "onKeyDown", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagComponent.prototype, "onTagEdited", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding)('class.moving')], TagComponent.prototype, "moving", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)(TagRipple)], TagComponent.prototype, "ripple", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener)('keydown', ['$event'])], TagComponent.prototype, "keydown", null);
  /**
   * @name animations
   */


  return TagComponent;
})();
const animations = [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.trigger)('animation', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 1
})), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.state)('out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0
})), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)(':enter', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)('{{ enter }}', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.keyframes)([(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0,
  offset: 0,
  transform: 'translate(0px, 20px)'
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0.3,
  offset: 0.3,
  transform: 'translate(0px, -10px)'
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0.5,
  offset: 0.5,
  transform: 'translate(0px, 0px)'
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0.75,
  offset: 0.75,
  transform: 'translate(0px, 5px)'
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 1,
  offset: 1,
  transform: 'translate(0px, 0px)'
})]))]), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.transition)(':leave', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.animate)('{{ leave }}', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.keyframes)([(0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 1,
  transform: 'translateX(0)',
  offset: 0
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 1,
  transform: 'translateX(-15px)',
  offset: 0.7
}), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_4__.style)({
  opacity: 0,
  transform: 'translateX(100%)',
  offset: 1.0
})]))])])];
let TagInputDropdown = /*#__PURE__*/(() => {
  let TagInputDropdown = class TagInputDropdown {
    constructor(injector) {
      this.injector = injector;
      /**
       * @name offset
       */

      this.offset = defaults.dropdown.offset;
      /**
       * @name focusFirstElement
       */

      this.focusFirstElement = defaults.dropdown.focusFirstElement;
      /**
       * - show autocomplete dropdown if the value of input is empty
       * @name showDropdownIfEmpty
       */

      this.showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;
      /**
       * - desc minimum text length in order to display the autocomplete dropdown
       * @name minimumTextLength
       */

      this.minimumTextLength = defaults.dropdown.minimumTextLength;
      /**
       * - number of items to display in the autocomplete dropdown
       * @name limitItemsTo
       */

      this.limitItemsTo = defaults.dropdown.limitItemsTo;
      /**
       * @name displayBy
       */

      this.displayBy = defaults.dropdown.displayBy;
      /**
       * @name identifyBy
       */

      this.identifyBy = defaults.dropdown.identifyBy;
      /**
       * @description a function a developer can use to implement custom matching for the autocomplete
       * @name matchingFn
       */

      this.matchingFn = defaults.dropdown.matchingFn;
      /**
       * @name appendToBody
       */

      this.appendToBody = defaults.dropdown.appendToBody;
      /**
       * @name keepOpen
       * @description option to leave dropdown open when adding a new item
       */

      this.keepOpen = defaults.dropdown.keepOpen;
      /**
       * @name dynamicUpdate
       */

      this.dynamicUpdate = defaults.dropdown.dynamicUpdate;
      /**
       * @name zIndex
       */

      this.zIndex = defaults.dropdown.zIndex;
      /**
       * list of items that match the current value of the input (for autocomplete)
       * @name items
       */

      this.items = [];
      /**
       * @name tagInput
       */

      this.tagInput = this.injector.get(TagInputComponent);
      /**
       * @name _autocompleteItems
       */

      this._autocompleteItems = [];
      /**
       *
       * @name show
       */

      this.show = () => {
        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;
        const value = this.getFormValue();
        const hasMinimumText = value.trim().length >= this.minimumTextLength;
        const position = this.calculatePosition();
        const items = this.getMatchingItems(value);
        const hasItems = items.length > 0;
        const isHidden = this.isVisible === false;
        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;
        const isDisabled = this.tagInput.disable;
        const shouldShow = isHidden && (hasItems && hasMinimumText || showDropdownIfEmpty);
        const shouldHide = this.isVisible && !hasItems;

        if (this.autocompleteObservable && hasMinimumText) {
          return this.getItemsFromObservable(value);
        }

        if (!this.showDropdownIfEmpty && !value || maxItemsReached || isDisabled) {
          return this.dropdown.hide();
        }

        this.setItems(items);

        if (shouldShow) {
          this.dropdown.show(position);
        } else if (shouldHide) {
          this.hide();
        }
      };
      /**
       * @name requestAdding
       * @param item {Ng2MenuItem}
       */


      this.requestAdding = item => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
        const tag = this.createTagModel(item);
        yield this.tagInput.onAddingRequested(true, tag).catch(() => {});
      });
      /**
       * @name resetItems
       */


      this.resetItems = () => {
        this.items = [];
      };
      /**
       * @name getItemsFromObservable
       * @param text
       */


      this.getItemsFromObservable = text => {
        this.setLoadingState(true);

        const subscribeFn = data => {
          // hide loading animation
          this.setLoadingState(false) // add items
          .populateItems(data);
          this.setItems(this.getMatchingItems(text));

          if (this.items.length) {
            this.dropdown.show(this.calculatePosition());
          } else {
            this.dropdown.hide();
          }
        };

        this.autocompleteObservable(text).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.first)()).subscribe(subscribeFn, () => this.setLoadingState(false));
      };
    }
    /**
     * @name autocompleteItems
     * @param items
     */


    set autocompleteItems(items) {
      this._autocompleteItems = items;
    }
    /**
     * @name autocompleteItems
     * @desc array of items that will populate the autocomplete
     */


    get autocompleteItems() {
      const items = this._autocompleteItems;

      if (!items) {
        return [];
      }

      return items.map(item => {
        return typeof item === 'string' ? {
          [this.displayBy]: item,
          [this.identifyBy]: item
        } : item;
      });
    }
    /**
     * @name ngAfterviewInit
     */


    ngAfterViewInit() {
      this.onItemClicked().subscribe(item => {
        this.requestAdding(item);
      }); // reset itemsMatching array when the dropdown is hidden

      this.onHide().subscribe(this.resetItems);
      const DEBOUNCE_TIME = 200;
      const KEEP_OPEN = this.keepOpen;
      this.tagInput.onTextChange.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.distinctUntilChanged)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.debounceTime)(DEBOUNCE_TIME), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(value => {
        if (KEEP_OPEN === false) {
          return value.length > 0;
        }

        return true;
      })).subscribe(this.show);
    }
    /**
     * @name updatePosition
     */


    updatePosition() {
      const position = this.tagInput.inputForm.getElementPosition();
      this.dropdown.menu.updatePosition(position, this.dynamicUpdate);
    }
    /**
     * @name isVisible
     */


    get isVisible() {
      return this.dropdown.menu.dropdownState.menuState.isVisible;
    }
    /**
     * @name onHide
     */


    onHide() {
      return this.dropdown.onHide;
    }
    /**
     * @name onItemClicked
     */


    onItemClicked() {
      return this.dropdown.onItemClicked;
    }
    /**
     * @name selectedItem
     */


    get selectedItem() {
      return this.dropdown.menu.dropdownState.dropdownState.selectedItem;
    }
    /**
     * @name state
     */


    get state() {
      return this.dropdown.menu.dropdownState;
    }
    /**
     * @name hide
     */


    hide() {
      this.resetItems();
      this.dropdown.hide();
    }
    /**
     * @name scrollListener
     */


    scrollListener() {
      if (!this.isVisible || !this.dynamicUpdate) {
        return;
      }

      this.updatePosition();
    }
    /**
     * @name onWindowBlur
     */


    onWindowBlur() {
      this.dropdown.hide();
    }
    /**
     * @name getFormValue
     */


    getFormValue() {
      const formValue = this.tagInput.formValue;
      return formValue ? formValue.toString().trim() : '';
    }
    /**
     * @name calculatePosition
     */


    calculatePosition() {
      return this.tagInput.inputForm.getElementPosition();
    }
    /**
     * @name createTagModel
     * @param item
     */


    createTagModel(item) {
      const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];
      const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];
      return Object.assign(Object.assign({}, item.value), {
        [this.tagInput.displayBy]: display,
        [this.tagInput.identifyBy]: value
      });
    }
    /**
     *
     * @param value {string}
     */


    getMatchingItems(value) {
      if (!value && !this.showDropdownIfEmpty) {
        return [];
      }

      const dupesAllowed = this.tagInput.allowDupes;
      return this.autocompleteItems.filter(item => {
        const hasValue = dupesAllowed ? false : this.tagInput.tags.some(tag => {
          const identifyBy = this.tagInput.identifyBy;
          const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];
          return model === item[this.identifyBy];
        });
        return this.matchingFn(value, item) && hasValue === false;
      });
    }
    /**
     * @name setItems
     */


    setItems(items) {
      this.items = items.slice(0, this.limitItemsTo || items.length);
    }
    /**
     * @name populateItems
     * @param data
     */


    populateItems(data) {
      this.autocompleteItems = data.map(item => {
        return typeof item === 'string' ? {
          [this.displayBy]: item,
          [this.identifyBy]: item
        } : item;
      });
      return this;
    }
    /**
     * @name setLoadingState
     * @param state
     */


    setLoadingState(state) {
      this.tagInput.isLoading = state;
      return this;
    }

  };

  TagInputDropdown.ɵfac = function TagInputDropdown_Factory(t) {
    return new (t || TagInputDropdown)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector));
  };

  TagInputDropdown.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TagInputDropdown,
    selectors: [["tag-input-dropdown"]],
    contentQueries: function TagInputDropdown_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef, 4);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.templates = _t);
      }
    },
    viewQuery: function TagInputDropdown_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2Dropdown, 5);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dropdown = _t.first);
      }
    },
    hostBindings: function TagInputDropdown_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("scroll", function TagInputDropdown_scroll_HostBindingHandler() {
          return ctx.scrollListener();
        }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"])("blur", function TagInputDropdown_blur_HostBindingHandler() {
          return ctx.onWindowBlur();
        }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"]);
      }
    },
    inputs: {
      offset: "offset",
      focusFirstElement: "focusFirstElement",
      showDropdownIfEmpty: "showDropdownIfEmpty",
      minimumTextLength: "minimumTextLength",
      limitItemsTo: "limitItemsTo",
      displayBy: "displayBy",
      identifyBy: "identifyBy",
      matchingFn: "matchingFn",
      appendToBody: "appendToBody",
      keepOpen: "keepOpen",
      dynamicUpdate: "dynamicUpdate",
      zIndex: "zIndex",
      autocompleteItems: "autocompleteItems",
      autocompleteObservable: "autocompleteObservable"
    },
    decls: 3,
    vars: 6,
    consts: [[3, "dynamicUpdate"], [3, "focusFirstElement", "zIndex", "appendToBody", "offset"], [3, "value", "ngSwitch", 4, "ngFor", "ngForOf"], [3, "value", "ngSwitch"], [3, "innerHTML", 4, "ngSwitchCase"], [4, "ngSwitchDefault"], [3, "innerHTML"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]],
    template: function TagInputDropdown_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng2-dropdown", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ng2-dropdown-menu", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, TagInputDropdown_ng2_menu_item_2_Template, 3, 3, "ng2-menu-item", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dynamicUpdate", ctx.dynamicUpdate);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("focusFirstElement", ctx.focusFirstElement)("zIndex", ctx.zIndex)("appendToBody", ctx.appendToBody)("offset", ctx.offset);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.items);
      }
    },
    directives: [ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2Dropdown, ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2DropdownMenu, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf, ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2MenuItem, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgSwitchDefault, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgTemplateOutlet],
    pipes: [HighlightPipe],
    encapsulation: 2
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)(ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2Dropdown)], TagInputDropdown.prototype, "dropdown", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef)], TagInputDropdown.prototype, "templates", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "offset", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "focusFirstElement", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "showDropdownIfEmpty", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "autocompleteObservable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "minimumTextLength", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "limitItemsTo", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "displayBy", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "identifyBy", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "matchingFn", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "appendToBody", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "keepOpen", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "dynamicUpdate", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "zIndex", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputDropdown.prototype, "autocompleteItems", null);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener)('window:scroll')], TagInputDropdown.prototype, "scrollListener", null);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener)('window:blur')], TagInputDropdown.prototype, "onWindowBlur", null); // angular universal hacks

  /* tslint:disable-next-line */


  return TagInputDropdown;
})();
const DragEvent = typeof window !== 'undefined' && window.DragEvent;
const CUSTOM_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NG_VALUE_ACCESSOR,
  useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => TagInputComponent),
  multi: true
};
let TagInputComponent = /*#__PURE__*/(() => {
  let TagInputComponent = class TagInputComponent extends TagInputAccessor {
    constructor(renderer, dragProvider) {
      super();
      this.renderer = renderer;
      this.dragProvider = dragProvider;
      /**
       * @name separatorKeys
       * @desc keyboard keys with which a user can separate items
       */

      this.separatorKeys = defaults.tagInput.separatorKeys;
      /**
       * @name separatorKeyCodes
       * @desc keyboard key codes with which a user can separate items
       */

      this.separatorKeyCodes = defaults.tagInput.separatorKeyCodes;
      /**
       * @name placeholder
       * @desc the placeholder of the input text
       */

      this.placeholder = defaults.tagInput.placeholder;
      /**
       * @name secondaryPlaceholder
       * @desc placeholder to appear when the input is empty
       */

      this.secondaryPlaceholder = defaults.tagInput.secondaryPlaceholder;
      /**
       * @name maxItems
       * @desc maximum number of items that can be added
       */

      this.maxItems = defaults.tagInput.maxItems;
      /**
       * @name validators
       * @desc array of Validators that are used to validate the tag before it gets appended to the list
       */

      this.validators = defaults.tagInput.validators;
      /**
       * @name asyncValidators
       * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list
       */

      this.asyncValidators = defaults.tagInput.asyncValidators;
      /**
      * - if set to true, it will only possible to add items from the autocomplete
      * @name onlyFromAutocomplete
      */

      this.onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;
      /**
       * @name errorMessages
       */

      this.errorMessages = defaults.tagInput.errorMessages;
      /**
       * @name theme
       */

      this.theme = defaults.tagInput.theme;
      /**
       * @name onTextChangeDebounce
       */

      this.onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;
      /**
       * - custom id assigned to the input
       * @name id
       */

      this.inputId = defaults.tagInput.inputId;
      /**
       * - custom class assigned to the input
       */

      this.inputClass = defaults.tagInput.inputClass;
      /**
       * - option to clear text input when the form is blurred
       * @name clearOnBlur
       */

      this.clearOnBlur = defaults.tagInput.clearOnBlur;
      /**
       * - hideForm
       * @name clearOnBlur
       */

      this.hideForm = defaults.tagInput.hideForm;
      /**
       * @name addOnBlur
       */

      this.addOnBlur = defaults.tagInput.addOnBlur;
      /**
       * @name addOnPaste
       */

      this.addOnPaste = defaults.tagInput.addOnPaste;
      /**
       * - pattern used with the native method split() to separate patterns in the string pasted
       * @name pasteSplitPattern
       */

      this.pasteSplitPattern = defaults.tagInput.pasteSplitPattern;
      /**
       * @name blinkIfDupe
       */

      this.blinkIfDupe = defaults.tagInput.blinkIfDupe;
      /**
       * @name removable
       */

      this.removable = defaults.tagInput.removable;
      /**
       * @name editable
       */

      this.editable = defaults.tagInput.editable;
      /**
       * @name allowDupes
       */

      this.allowDupes = defaults.tagInput.allowDupes;
      /**
       * @description if set to true, the newly added tags will be added as strings, and not objects
       * @name modelAsStrings
       */

      this.modelAsStrings = defaults.tagInput.modelAsStrings;
      /**
       * @name trimTags
       */

      this.trimTags = defaults.tagInput.trimTags;
      /**
       * @name ripple
       */

      this.ripple = defaults.tagInput.ripple;
      /**
       * @name tabindex
       * @desc pass through the specified tabindex to the input
       */

      this.tabindex = defaults.tagInput.tabIndex;
      /**
       * @name disable
       */

      this.disable = defaults.tagInput.disable;
      /**
       * @name dragZone
       */

      this.dragZone = defaults.tagInput.dragZone;
      /**
       * @name onRemoving
       */

      this.onRemoving = defaults.tagInput.onRemoving;
      /**
       * @name onAdding
       */

      this.onAdding = defaults.tagInput.onAdding;
      /**
       * @name animationDuration
       */

      this.animationDuration = defaults.tagInput.animationDuration;
      /**
       * @name onAdd
       * @desc event emitted when adding a new item
       */

      this.onAdd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onRemove
       * @desc event emitted when removing an existing item
       */

      this.onRemove = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onSelect
       * @desc event emitted when selecting an item
       */

      this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onFocus
       * @desc event emitted when the input is focused
       */

      this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onFocus
       * @desc event emitted when the input is blurred
       */

      this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name onTextChange
       * @desc event emitted when the input value changes
       */

      this.onTextChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * - output triggered when text is pasted in the form
       * @name onPaste
       */

      this.onPaste = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * - output triggered when tag entered is not valid
       * @name onValidationError
       */

      this.onValidationError = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * - output triggered when tag is edited
       * @name onTagEdited
       */

      this.onTagEdited = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @name isLoading
       */

      this.isLoading = false;
      /**
       * @name listeners
       * @desc array of events that get fired using @fireEvents
       */

      this.listeners = {
        [KEYDOWN]: [],
        [KEYUP]: []
      };
      /**
       * @description emitter for the 2-way data binding inputText value
       * @name inputTextChange
       */

      this.inputTextChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
      /**
       * @description private variable to bind get/set
       * @name inputTextValue
       */

      this.inputTextValue = '';
      this.errors = [];
      /**
       * @name appendTag
       * @param tag {TagModel}
       */

      this.appendTag = (tag, index = this.items.length) => {
        const items = this.items;
        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;
        this.items = [...items.slice(0, index), model, ...items.slice(index, items.length)];
      };
      /**
       * @name createTag
       * @param model
       */


      this.createTag = model => {
        const trim = (val, key) => {
          return typeof val === 'string' ? val.trim() : val[key];
        };

        return Object.assign(Object.assign({}, typeof model !== 'string' ? model : {}), {
          [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,
          [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model
        });
      };
      /**
       *
       * @param tag
       * @param isFromAutocomplete
       */


      this.isTagValid = (tag, fromAutocomplete = false) => {
        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;
        const value = this.getItemDisplay(tag).trim();

        if (selectedItem && !fromAutocomplete || !value) {
          return false;
        }

        const dupe = this.findDupe(tag, fromAutocomplete); // if so, give a visual cue and return false

        if (!this.allowDupes && dupe && this.blinkIfDupe) {
          const model = this.tags.find(item => {
            return this.getItemValue(item.model) === this.getItemValue(dupe);
          });

          if (model) {
            model.blink();
          }
        }

        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;
        const assertions = [// 3. check item comes from autocomplete or onlyFromAutocomplete is false
        // 1. there must be no dupe OR dupes are allowed
        !dupe || this.allowDupes, // 2. check max items has not been reached
        !this.maxItemsReached, isFromAutocomplete || !this.onlyFromAutocomplete];
        return assertions.filter(Boolean).length === assertions.length;
      };
      /**
       * @name onPasteCallback
       * @param data
       */


      this.onPasteCallback = data => (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
        const getText = () => {
          const isIE = Boolean(window.clipboardData);
          const clipboardData = isIE ? window.clipboardData : data.clipboardData;
          const type = isIE ? 'Text' : 'text/plain';
          return clipboardData === null ? '' : clipboardData.getData(type) || '';
        };

        const text = getText();
        const requests = text.split(this.pasteSplitPattern).map(item => {
          const tag = this.createTag(item);
          this.setInputValue(tag[this.displayBy]);
          return this.onAddingRequested(false, tag);
        });

        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);

        Promise.all(requests).then(() => {
          this.onPaste.emit(text);
          resetInput();
        }).catch(resetInput);
      });
    }
    /**
     * @name inputText
     */


    get inputText() {
      return this.inputTextValue;
    }
    /**
     * @name inputText
     * @param text
     */


    set inputText(text) {
      this.inputTextValue = text;
      this.inputTextChange.emit(text);
    }
    /**
     * @desc removes the tab index if it is set - it will be passed through to the input
     * @name tabindexAttr
     */


    get tabindexAttr() {
      return this.tabindex !== '' ? '-1' : '';
    }
    /**
     * @name ngAfterViewInit
     */


    ngAfterViewInit() {
      // set up listeners
      this.setUpKeypressListeners();
      this.setupSeparatorKeysListener();
      this.setUpInputKeydownListeners();

      if (this.onTextChange.observers.length) {
        this.setUpTextChangeSubscriber();
      } // if clear on blur is set to true, subscribe to the event and clear the text's form


      if (this.clearOnBlur || this.addOnBlur) {
        this.setUpOnBlurSubscriber();
      } // if addOnPaste is set to true, register the handler and add items


      if (this.addOnPaste) {
        this.setUpOnPasteListener();
      }

      const statusChanges$ = this.inputForm.form.statusChanges;
      statusChanges$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(status => status !== 'PENDING')).subscribe(() => {
        this.errors = this.inputForm.getErrorMessages(this.errorMessages);
      });
      this.isProgressBarVisible$ = statusChanges$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(status => {
        return status === 'PENDING' || this.isLoading;
      })); // if hideForm is set to true, remove the input

      if (this.hideForm) {
        this.inputForm.destroy();
      }
    }
    /**
     * @name ngOnInit
     */


    ngOnInit() {
      // if the number of items specified in the model is > of the value of maxItems
      // degrade gracefully and let the max number of items to be the number of items in the model
      // though, warn the user.
      const hasReachedMaxItems = this.maxItems !== undefined && this.items && this.items.length > this.maxItems;

      if (hasReachedMaxItems) {
        this.maxItems = this.items.length;
        console.warn(MAX_ITEMS_WARNING);
      } // Setting editable to false to fix problem with tags in IE still being editable when
      // onlyFromAutocomplete is true


      this.editable = this.onlyFromAutocomplete ? false : this.editable;
      this.setAnimationMetadata();
    }
    /**
     * @name onRemoveRequested
     * @param tag
     * @param index
     */


    onRemoveRequested(tag, index) {
      return new Promise(resolve => {
        const subscribeFn = model => {
          this.removeItem(model, index);
          resolve(tag);
        };

        this.onRemoving ? this.onRemoving(tag).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.first)()).subscribe(subscribeFn) : subscribeFn(tag);
      });
    }
    /**
     * @name onAddingRequested
     * @param fromAutocomplete {boolean}
     * @param tag {TagModel}
     * @param index? {number}
     * @param giveupFocus? {boolean}
     */


    onAddingRequested(fromAutocomplete, tag, index, giveupFocus) {
      return new Promise((resolve, reject) => {
        const subscribeFn = model => {
          return this.addItem(fromAutocomplete, model, index, giveupFocus).then(resolve).catch(reject);
        };

        return this.onAdding ? this.onAdding(tag).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.first)()).subscribe(subscribeFn, reject) : subscribeFn(tag);
      });
    }
    /**
     * @name selectItem
     * @desc selects item passed as parameter as the selected tag
     * @param item
     * @param emit
     */


    selectItem(item, emit = true) {
      const isReadonly = item && typeof item !== 'string' && item.readonly;

      if (isReadonly || this.selectedTag === item) {
        return;
      }

      this.selectedTag = item;

      if (emit) {
        this.onSelect.emit(item);
      }
    }
    /**
     * @name fireEvents
     * @desc goes through the list of the events for a given eventName, and fires each of them
     * @param eventName
     * @param $event
     */


    fireEvents(eventName, $event) {
      this.listeners[eventName].forEach(listener => listener.call(this, $event));
    }
    /**
     * @name handleKeydown
     * @desc handles action when the user hits a keyboard key
     * @param data
     */


    handleKeydown(data) {
      const event = data.event;
      const key = event.keyCode || event.which;
      const shiftKey = event.shiftKey || false;

      switch (KEY_PRESS_ACTIONS[key]) {
        case ACTIONS_KEYS.DELETE:
          if (this.selectedTag && this.removable) {
            const index = this.items.indexOf(this.selectedTag);
            this.onRemoveRequested(this.selectedTag, index);
          }

          break;

        case ACTIONS_KEYS.SWITCH_PREV:
          this.moveToTag(data.model, PREV);
          break;

        case ACTIONS_KEYS.SWITCH_NEXT:
          this.moveToTag(data.model, NEXT);
          break;

        case ACTIONS_KEYS.TAB:
          if (shiftKey) {
            if (this.isFirstTag(data.model)) {
              return;
            }

            this.moveToTag(data.model, PREV);
          } else {
            if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {
              return;
            }

            this.moveToTag(data.model, NEXT);
          }

          break;

        default:
          return;
      } // prevent default behaviour


      event.preventDefault();
    }

    onFormSubmit() {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function* () {
        try {
          yield this.onAddingRequested(false, this.formValue);
        } catch (_a) {
          return;
        }
      });
    }
    /**
     * @name setInputValue
     * @param value
     */


    setInputValue(value, emitEvent = true) {
      const control = this.getControl(); // update form value with the transformed item

      control.setValue(value, {
        emitEvent
      });
    }
    /**
     * @name getControl
     */


    getControl() {
      return this.inputForm.value;
    }
    /**
     * @name focus
     * @param applyFocus
     * @param displayAutocomplete
     */


    focus(applyFocus = false, displayAutocomplete = false) {
      if (this.dragProvider.getState('dragging')) {
        return;
      }

      this.selectItem(undefined, false);

      if (applyFocus) {
        this.inputForm.focus();
        this.onFocus.emit(this.formValue);
      }
    }
    /**
     * @name blur
     */


    blur() {
      this.onTouched();
      this.onBlur.emit(this.formValue);
    }
    /**
     * @name hasErrors
     */


    hasErrors() {
      return !!this.inputForm && this.inputForm.hasErrors();
    }
    /**
     * @name isInputFocused
     */


    isInputFocused() {
      return !!this.inputForm && this.inputForm.isInputFocused();
    }
    /**
     * - this is the one way I found to tell if the template has been passed and it is not
     * the template for the menu item
     * @name hasCustomTemplate
     */


    hasCustomTemplate() {
      const template = this.templates ? this.templates.first : undefined;
      const menuTemplate = this.dropdown && this.dropdown.templates ? this.dropdown.templates.first : undefined;
      return Boolean(template && template !== menuTemplate);
    }
    /**
     * @name maxItemsReached
     */


    get maxItemsReached() {
      return this.maxItems !== undefined && this.items.length >= this.maxItems;
    }
    /**
     * @name formValue
     */


    get formValue() {
      const form = this.inputForm.value;
      return form ? form.value : '';
    }
    /**3
     * @name onDragStarted
     * @param event
     * @param index
     */


    onDragStarted(event, tag, index) {
      event.stopPropagation();
      const item = {
        zone: this.dragZone,
        tag,
        index
      };
      this.dragProvider.setSender(this);
      this.dragProvider.setDraggedItem(event, item);
      this.dragProvider.setState({
        dragging: true,
        index
      });
    }
    /**
     * @name onDragOver
     * @param event
     */


    onDragOver(event, index) {
      this.dragProvider.setState({
        dropping: true
      });
      this.dragProvider.setReceiver(this);
      event.preventDefault();
    }
    /**
     * @name onTagDropped
     * @param event
     * @param index
     */


    onTagDropped(event, index) {
      const item = this.dragProvider.getDraggedItem(event);

      if (!item || item.zone !== this.dragZone) {
        return;
      }

      this.dragProvider.onTagDropped(item.tag, item.index, index);
      event.preventDefault();
      event.stopPropagation();
    }
    /**
     * @name isDropping
     */


    isDropping() {
      const isReceiver = this.dragProvider.receiver === this;
      const isDropping = this.dragProvider.getState('dropping');
      return Boolean(isReceiver && isDropping);
    }
    /**
     * @name onTagBlurred
     * @param changedElement {TagModel}
     * @param index {number}
     */


    onTagBlurred(changedElement, index) {
      this.items[index] = changedElement;
      this.blur();
    }
    /**
     * @name trackBy
     * @param items
     */


    trackBy(index, item) {
      return item[this.identifyBy];
    }
    /**
     * @name updateEditedTag
     * @param tag
     */


    updateEditedTag({
      tag,
      index
    }) {
      this.onTagEdited.emit(tag);
    }
    /**
     * @name moveToTag
     * @param item
     * @param direction
     */


    moveToTag(item, direction) {
      const isLast = this.isLastTag(item);
      const isFirst = this.isFirstTag(item);
      const stopSwitch = direction === NEXT && isLast || direction === PREV && isFirst;

      if (stopSwitch) {
        this.focus(true);
        return;
      }

      const offset = direction === NEXT ? 1 : -1;
      const index = this.getTagIndex(item) + offset;
      const tag = this.getTagAtIndex(index);
      return tag.select.call(tag);
    }
    /**
     * @name isFirstTag
     * @param item {TagModel}
     */


    isFirstTag(item) {
      return this.tags.first.model === item;
    }
    /**
     * @name isLastTag
     * @param item {TagModel}
     */


    isLastTag(item) {
      return this.tags.last.model === item;
    }
    /**
     * @name getTagIndex
     * @param item
     */


    getTagIndex(item) {
      const tags = this.tags.toArray();
      return tags.findIndex(tag => tag.model === item);
    }
    /**
     * @name getTagAtIndex
     * @param index
     */


    getTagAtIndex(index) {
      const tags = this.tags.toArray();
      return tags[index];
    }
    /**
     * @name removeItem
     * @desc removes an item from the array of the model
     * @param tag {TagModel}
     * @param index {number}
     */


    removeItem(tag, index) {
      this.items = this.getItemsWithout(index); // if the removed tag was selected, set it as undefined

      if (this.selectedTag === tag) {
        this.selectItem(undefined, false);
      } // focus input


      this.focus(true, false); // emit remove event

      this.onRemove.emit(tag);
    }
    /**
     * @name addItem
     * @desc adds the current text model to the items array
     * @param fromAutocomplete {boolean}
     * @param item {TagModel}
     * @param index? {number}
     * @param giveupFocus? {boolean}
     */


    addItem(fromAutocomplete = false, item, index, giveupFocus) {
      const display = this.getItemDisplay(item);
      const tag = this.createTag(item);

      if (fromAutocomplete) {
        this.setInputValue(this.getItemValue(item, true));
      }

      return new Promise((resolve, reject) => {
        /**
         * @name reset
         */
        const reset = () => {
          // reset control and focus input
          this.setInputValue('');

          if (giveupFocus) {
            this.focus(false, false);
          } else {
            // focus input
            this.focus(true, false);
          }

          resolve(display);
        };

        const appendItem = () => {
          this.appendTag(tag, index); // emit event

          this.onAdd.emit(tag);

          if (!this.dropdown) {
            return;
          }

          this.dropdown.hide();

          if (this.dropdown.showDropdownIfEmpty) {
            this.dropdown.show();
          }
        };

        const status = this.inputForm.form.status;
        const isTagValid = this.isTagValid(tag, fromAutocomplete);

        const onValidationError = () => {
          this.onValidationError.emit(tag);
          return reject();
        };

        if (status === 'VALID' && isTagValid) {
          appendItem();
          return reset();
        }

        if (status === 'INVALID' || !isTagValid) {
          reset();
          return onValidationError();
        }

        if (status === 'PENDING') {
          const statusUpdate$ = this.inputForm.form.statusChanges;
          return statusUpdate$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(statusUpdate => statusUpdate !== 'PENDING'), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.first)()).subscribe(statusUpdate => {
            if (statusUpdate === 'VALID' && isTagValid) {
              appendItem();
              return reset();
            } else {
              reset();
              return onValidationError();
            }
          });
        }
      });
    }
    /**
     * @name setupSeparatorKeysListener
     */


    setupSeparatorKeysListener() {
      const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;

      const listener = $event => {
        const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;
        const hasKey = this.separatorKeys.indexOf($event.key) >= 0; // the keyCode of keydown event is 229 when IME is processing the key event.

        const isIMEProcessing = $event.keyCode === 229;

        if (hasKeyCode || hasKey && !isIMEProcessing) {
          $event.preventDefault();
          this.onAddingRequested(false, this.formValue).catch(() => {});
        }
      };

      listen.call(this, KEYDOWN, listener, useSeparatorKeys);
    }
    /**
     * @name setUpKeypressListeners
     */


    setUpKeypressListeners() {
      const listener = $event => {
        const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;

        if (isCorrectKey && !this.formValue && this.items.length) {
          this.tags.last.select.call(this.tags.last);
        }
      }; // setting up the keypress listeners


      listen.call(this, KEYDOWN, listener);
    }
    /**
     * @name setUpKeydownListeners
     */


    setUpInputKeydownListeners() {
      this.inputForm.onKeydown.subscribe(event => {
        if (event.key === 'Backspace' && this.formValue.trim() === '') {
          event.preventDefault();
        }
      });
    }
    /**
     * @name setUpOnPasteListener
     */


    setUpOnPasteListener() {
      const input = this.inputForm.input.nativeElement; // attach listener to input

      this.renderer.listen(input, 'paste', event => {
        this.onPasteCallback(event);
        event.preventDefault();
        return true;
      });
    }
    /**
     * @name setUpTextChangeSubscriber
     */


    setUpTextChangeSubscriber() {
      this.inputForm.form.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.debounceTime)(this.onTextChangeDebounce)).subscribe(value => {
        this.onTextChange.emit(value.item);
      });
    }
    /**
     * @name setUpOnBlurSubscriber
     */


    setUpOnBlurSubscriber() {
      const filterFn = () => {
        const isVisible = this.dropdown && this.dropdown.isVisible;
        return !isVisible && !!this.formValue;
      };

      this.inputForm.onBlur.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.debounceTime)(100), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.filter)(filterFn)).subscribe(() => {
        const reset = () => this.setInputValue('');

        if (this.addOnBlur) {
          return this.onAddingRequested(false, this.formValue, undefined, true).then(reset).catch(reset);
        }

        reset();
      });
    }
    /**
     * @name findDupe
     * @param tag
     * @param isFromAutocomplete
     */


    findDupe(tag, isFromAutocomplete) {
      const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;
      const id = tag[identifyBy];
      return this.items.find(item => this.getItemValue(item) === id);
    }
    /**
     * @name setAnimationMetadata
     */


    setAnimationMetadata() {
      this.animationMetadata = {
        value: 'in',
        params: Object.assign({}, this.animationDuration)
      };
    }

  };

  TagInputComponent.ɵfac = function TagInputComponent_Factory(t) {
    return new (t || TagInputComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](DragProvider));
  };

  TagInputComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TagInputComponent,
    selectors: [["tag-input"]],
    contentQueries: function TagInputComponent_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, TagInputDropdown, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef, 4);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dropdown = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.templates = _t);
      }
    },
    viewQuery: function TagInputComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](TagInputForm, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](TagComponent, 5);
      }

      if (rf & 2) {
        let _t;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.inputForm = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.tags = _t);
      }
    },
    hostVars: 1,
    hostBindings: function TagInputComponent_HostBindings(rf, ctx) {
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", ctx.tabindexAttr);
      }
    },
    inputs: {
      separatorKeys: "separatorKeys",
      separatorKeyCodes: "separatorKeyCodes",
      placeholder: "placeholder",
      secondaryPlaceholder: "secondaryPlaceholder",
      maxItems: "maxItems",
      validators: "validators",
      asyncValidators: "asyncValidators",
      onlyFromAutocomplete: "onlyFromAutocomplete",
      errorMessages: "errorMessages",
      theme: "theme",
      onTextChangeDebounce: "onTextChangeDebounce",
      inputId: "inputId",
      inputClass: "inputClass",
      clearOnBlur: "clearOnBlur",
      hideForm: "hideForm",
      addOnBlur: "addOnBlur",
      addOnPaste: "addOnPaste",
      pasteSplitPattern: "pasteSplitPattern",
      blinkIfDupe: "blinkIfDupe",
      removable: "removable",
      editable: "editable",
      allowDupes: "allowDupes",
      modelAsStrings: "modelAsStrings",
      trimTags: "trimTags",
      ripple: "ripple",
      tabindex: "tabindex",
      disable: "disable",
      dragZone: "dragZone",
      onRemoving: "onRemoving",
      onAdding: "onAdding",
      animationDuration: "animationDuration",
      inputText: "inputText"
    },
    outputs: {
      onAdd: "onAdd",
      onRemove: "onRemove",
      onSelect: "onSelect",
      onFocus: "onFocus",
      onBlur: "onBlur",
      onTextChange: "onTextChange",
      onPaste: "onPaste",
      onValidationError: "onValidationError",
      onTagEdited: "onTagEdited",
      inputTextChange: "inputTextChange"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([CUSTOM_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
    ngContentSelectors: _c3,
    decls: 8,
    vars: 27,
    consts: [[1, "ng2-tag-input", 3, "ngClass", "click", "drop", "dragenter", "dragover", "dragend"], [1, "ng2-tags-container"], [3, "draggable", "canAddTag", "disabled", "hasRipple", "index", "removable", "editable", "displayBy", "identifyBy", "template", "model", "onSelect", "onRemove", "onKeyDown", "onTagEdited", "onBlur", "dragstart", "drop", "dragenter", "dragover", "dragleave", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "inputText", "disabled", "validators", "asyncValidators", "hidden", "placeholder", "inputClass", "inputId", "tabindex", "onSubmit", "onBlur", "click", "onKeydown", "onKeyup"], ["class", "progress-bar", 4, "ngIf"], ["class", "error-messages", 3, "ngClass", 4, "ngIf"], [3, "draggable", "canAddTag", "disabled", "hasRipple", "index", "removable", "editable", "displayBy", "identifyBy", "template", "model", "onSelect", "onRemove", "onKeyDown", "onTagEdited", "onBlur", "dragstart", "drop", "dragenter", "dragover", "dragleave"], [1, "progress-bar"], [1, "error-messages", 3, "ngClass"], ["class", "error-message", 4, "ngFor", "ngForOf"], [1, "error-message"]],
    template: function TagInputComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TagInputComponent_Template_div_click_0_listener() {
          return ctx.focus(true, false);
        })("drop", function TagInputComponent_Template_div_drop_0_listener($event) {
          return ctx.dragZone ? ctx.onTagDropped($event, undefined) : undefined;
        })("dragenter", function TagInputComponent_Template_div_dragenter_0_listener($event) {
          return ctx.dragZone ? ctx.onDragOver($event) : undefined;
        })("dragover", function TagInputComponent_Template_div_dragover_0_listener($event) {
          return ctx.dragZone ? ctx.onDragOver($event) : undefined;
        })("dragend", function TagInputComponent_Template_div_dragend_0_listener() {
          return ctx.dragZone ? ctx.dragProvider.onDragEnd() : undefined;
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, TagInputComponent_tag_2_Template, 1, 14, "tag", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "tag-input-form", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onSubmit", function TagInputComponent_Template_tag_input_form_onSubmit_3_listener() {
          return ctx.onFormSubmit();
        })("onBlur", function TagInputComponent_Template_tag_input_form_onBlur_3_listener() {
          return ctx.blur();
        })("click", function TagInputComponent_Template_tag_input_form_click_3_listener() {
          return ctx.dropdown ? ctx.dropdown.show() : undefined;
        })("onKeydown", function TagInputComponent_Template_tag_input_form_onKeydown_3_listener($event) {
          return ctx.fireEvents("keydown", $event);
        })("onKeyup", function TagInputComponent_Template_tag_input_form_onKeyup_3_listener($event) {
          return ctx.fireEvents("keyup", $event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, TagInputComponent_div_4_Template, 1, 0, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](5, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, TagInputComponent_div_6_Template, 2, 2, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](7);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng2-tag-input--dropping", ctx.isDropping())("ng2-tag-input--disabled", ctx.disable)("ng2-tag-input--loading", ctx.isLoading)("ng2-tag-input--invalid", ctx.hasErrors())("ng2-tag-input--focused", ctx.isInputFocused());
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx.theme);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", -1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.items)("ngForTrackBy", ctx.trackBy);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("inputText", ctx.inputText)("disabled", ctx.disable)("validators", ctx.validators)("asyncValidators", ctx.asyncValidators)("hidden", ctx.maxItemsReached)("placeholder", ctx.items.length ? ctx.placeholder : ctx.secondaryPlaceholder)("inputClass", ctx.inputClass)("inputId", ctx.inputId)("tabindex", ctx.tabindex);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](5, 25, ctx.isProgressBarVisible$));
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasErrors());
      }
    },
    directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf, TagInputForm, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf, TagComponent],
    pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.AsyncPipe],
    styles: [".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.progress-bar[_ngcontent-%COMP%], .progress-bar[_ngcontent-%COMP%]:before{height:2px;width:100%;margin:0}.progress-bar[_ngcontent-%COMP%]{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar[_ngcontent-%COMP%]:before{background-color:#82c4f8;content:\"\";-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress;animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:.3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#2196f3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly[_ngcontent-%COMP%]{cursor:default}tag.readonly[_ngcontent-%COMP%]:focus, tag[_ngcontent-%COMP%]:focus{outline:0}tag.tag--editing[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.minimal[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.dark[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}[_nghost-%COMP%]{display:block}"],
    data: {
      animation: animations
    }
  });

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "separatorKeys", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "separatorKeyCodes", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "placeholder", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "secondaryPlaceholder", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "maxItems", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "validators", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "asyncValidators", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "onlyFromAutocomplete", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "errorMessages", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "theme", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "onTextChangeDebounce", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "inputId", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "inputClass", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "clearOnBlur", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "hideForm", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "addOnBlur", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "addOnPaste", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "pasteSplitPattern", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "blinkIfDupe", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "removable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "editable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "allowDupes", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "modelAsStrings", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "trimTags", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "inputText", null);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "ripple", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "tabindex", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "disable", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "dragZone", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "onRemoving", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "onAdding", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], TagInputComponent.prototype, "animationDuration", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onAdd", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onRemove", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onSelect", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onFocus", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onBlur", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onTextChange", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onPaste", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onValidationError", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "onTagEdited", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild)(TagInputDropdown)], TagInputComponent.prototype, "dropdown", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef, {
    descendants: false
  })], TagInputComponent.prototype, "templates", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)(TagInputForm)], TagInputComponent.prototype, "inputForm", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren)(TagComponent)], TagInputComponent.prototype, "tags", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], TagInputComponent.prototype, "inputTextChange", void 0);

  (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding)('attr.tabindex')], TagInputComponent.prototype, "tabindexAttr", null);

  return TagInputComponent;
})();
let DeleteIconComponent = /*#__PURE__*/(() => {
  let DeleteIconComponent = class DeleteIconComponent {};

  DeleteIconComponent.ɵfac = function DeleteIconComponent_Factory(t) {
    return new (t || DeleteIconComponent)();
  };

  DeleteIconComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: DeleteIconComponent,
    selectors: [["delete-icon"]],
    decls: 3,
    vars: 0,
    consts: [["height", "16px", "viewBox", "0 0 32 32", "width", "16px"], ["d", "M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z", "fill", "#121313"]],
    template: function DeleteIconComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "svg", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    },
    styles: [".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}delete-icon[_nghost-%COMP%]{width:20px;height:16px;transition:.15s;display:inline-block;text-align:right}delete-icon[_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}delete-icon[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}delete-icon[_nghost-%COMP%]:hover{transform:scale(1.5) translateY(-3px)}.dark[_nghost-%COMP%], .dark   [_nghost-%COMP%]{text-align:right}.dark[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.minimal[_nghost-%COMP%], .minimal   [_nghost-%COMP%]{text-align:right}.minimal[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}.minimal[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.bootstrap[_nghost-%COMP%], .bootstrap   [_nghost-%COMP%]{text-align:right}.bootstrap[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.darktag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .darktag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .darktag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .darktag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.minimaltag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimaltag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimaltag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimaltag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.bootstraptag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstraptag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstraptag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstraptag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap3-info[_nghost-%COMP%], .bootstrap3-info   [_nghost-%COMP%]{height:inherit}.bootstrap3-info[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap3-info   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}"]
  });
  return DeleteIconComponent;
})();
const optionsProvider = new OptionsProvider();
let TagInputModule = /*#__PURE__*/(() => {
  let TagInputModule = class TagInputModule {
    /**
     * @name withDefaults
     * @param options {Options}
     */
    static withDefaults(options) {
      optionsProvider.setOptions(options);
    }

  };

  TagInputModule.ɵfac = function TagInputModule_Factory(t) {
    return new (t || TagInputModule)();
  };

  TagInputModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: TagInputModule
  });
  TagInputModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    providers: [DragProvider, {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.COMPOSITION_BUFFER_MODE,
      useValue: false
    }],
    imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.ReactiveFormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormsModule, ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2DropdownModule]]
  });
  return TagInputModule;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && void 0;
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](TagInputModule, {
    declarations: function () {
      return [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple];
    },
    imports: function () {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.ReactiveFormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_1__.FormsModule, ng2_material_dropdown__WEBPACK_IMPORTED_MODULE_6__.Ng2DropdownModule];
    },
    exports: function () {
      return [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple];
    }
  });
})();
/**
 * Generated bundle index. Do not edit.
 */




/***/ })

}]);
//# sourceMappingURL=node_modules_ngx-chips_fesm2015_ngx-chips_js-_f0731-es2015.3a15ba1917b076f60f33.js.map