{"version":3,"mappings":"0zHAgBA,IAAIA,EAAO,KACX,aACI,OAAOA,EAKX,WAA2BC,GAClBD,IACDA,EAAOC,GAUf,SAkBA,MAAMC,EAAW,IAAIC,iBAAe,qBA+B9BC,QAAN,QACIC,UAAUC,GACN,MAAM,IAAIC,MAAM,oBAGxBH,SAAiBI,UAAO,SAAkCC,GAAK,OAAO,IAAKA,GAAKL,IAChFA,EAAiBM,cAAQC,gCAAmB,CAAEC,QAASC,EAA4BC,MAAOV,EAAkBW,WAAY,aANlHX,MAeN,aACI,SAAOY,sBAASC,GAQpB,MAAMC,EAAuB,IAAIf,iBAAe,4BAM1Cc,QAAN,gBAAsCb,EAClCe,YAAYC,GACRC,QACAC,KAAKF,KAAOA,EACZE,KAAKC,QAITA,QACID,KAAKE,SAAWC,OAAOD,SACvBF,KAAKI,SAAWD,OAAOE,QAE3BC,qBACI,OAAOC,IAASC,YAAYR,KAAKF,MAErCW,WAAWC,GACP,MAAMP,EAASI,IAASI,qBAAqBX,KAAKF,KAAM,UACxDK,SAAOS,iBAAiB,WAAYF,GAAI,GACjC,IAAMP,EAAOU,oBAAoB,WAAYH,GAExDI,aAAaJ,GACT,MAAMP,EAASI,IAASI,qBAAqBX,KAAKF,KAAM,UACxDK,SAAOS,iBAAiB,aAAcF,GAAI,GACnC,IAAMP,EAAOU,oBAAoB,aAAcH,cAGtD,OAAOV,KAAKE,SAASa,oBAGrB,OAAOf,KAAKE,SAASc,wBAGrB,OAAOhB,KAAKE,SAASe,oBAGrB,OAAOjB,KAAKE,SAASgB,oBAGrB,OAAOlB,KAAKE,SAASiB,sBAGrB,OAAOnB,KAAKE,SAASkB,kBAGrB,OAAOpB,KAAKE,SAASmB,kBAEZC,GACTtB,KAAKE,SAASiB,SAAWG,EAE7BC,UAAUC,EAAOC,EAAOC,GAChBC,IACA3B,KAAKI,SAASmB,UAAUC,EAAOC,EAAOC,GAGtC1B,KAAKE,SAASmB,KAAOK,EAG7BE,aAAaJ,EAAOC,EAAOC,GACnBC,IACA3B,KAAKI,SAASwB,aAAaJ,EAAOC,EAAOC,GAGzC1B,KAAKE,SAASmB,KAAOK,EAG7BG,UACI7B,KAAKI,SAASyB,UAElBC,OACI9B,KAAKI,SAAS0B,OAElB/C,UAAUC,EAAmB,GACzBgB,KAAKI,SAAS2B,GAAG/C,GAErBgD,WACI,OAAOhC,KAAKI,SAASoB,OAG7B7B,SAAwBT,UAAO,SAAyCC,GAAK,OAAO,IAAKA,GAAKQ,GAAyBsC,qBAAgBrD,KACvIe,EAAwBP,cAAQC,gCAAmB,CAAEC,QAAS4C,EAA+B1C,MAAOG,EAAyBF,WAAY,aA/EnIE,MA8FN,aACI,QAASQ,OAAOE,QAAQkB,UAE5B,aACI,OAAO,IAAI5B,KAAwBD,sBAASd,IA2BhD,WAAuBuD,EAAOC,GAC1B,GAAoB,GAAhBD,EAAME,OACN,OAAOD,EAEX,GAAkB,GAAdA,EAAIC,OACJ,OAAOF,EAEX,IAAIG,EAAU,EAOd,OANIH,EAAMI,SAAS,MACfD,IAEAF,EAAII,WAAW,MACfF,IAEW,GAAXA,EACOH,EAAQC,EAAIK,UAAU,GAElB,GAAXH,EACOH,EAAQC,EAEZD,EAAQ,IAAMC,EAWzB,WAA4BV,GACxB,MAAMgB,EAAQhB,EAAIgB,MAAM,UAClBC,EAAaD,GAASA,EAAME,OAASlB,EAAIW,OAE/C,OAAOX,EAAImB,MAAM,EADOF,GAAsC,MAAxBjB,EAAIiB,EAAa,GAAa,EAAI,IACjCjB,EAAImB,MAAMF,GASrD,WAA8BG,GAC1B,OAAOA,GAAwB,MAAdA,EAAO,GAAa,IAAMA,EAASA,MA2BlDC,QAAN,QACIhE,UAAUC,GACN,MAAM,IAAIC,MAAM,oBAGxB8D,SAAiB7D,UAAO,SAAkCC,GAAK,OAAO,IAAKA,GAAK4D,IAChFA,EAAiB3D,cAAQC,gCAAmB,CAAEC,QAAS0D,EAAyBxD,MAAOuD,EAAkBtD,WAAY,SAN/GsD,MAWN,WAAiCE,GAE7B,MAAM/C,GAAWR,wBAASd,GAAUsB,SACpC,OAAO,IAAIgD,GAAqBxD,wBAASZ,GAAmBoB,GAAYA,EAASiD,QAAU,IAyB/F,MAAMC,EAAgB,IAAIvE,iBAAe,mBAgCnCqE,QAAN,gBAAmCH,EAC/BlD,YAAYwD,EAAmBtC,GAO3B,GANAhB,QACAC,KAAKqD,kBAAoBA,EACzBrD,KAAKsD,mBAAqB,GACd,MAARvC,IACAA,EAAOf,KAAKqD,kBAAkB/C,sBAEtB,MAARS,EACA,MAAM,IAAI9B,MAAO,+GAErBe,KAAKuD,UAAYxC,EAErByC,cACI,KAAOxD,KAAKsD,mBAAmBjB,QAC3BrC,KAAKsD,mBAAmBG,KAAxBzD,GAGRS,WAAWC,GACPV,KAAKsD,mBAAmBI,KAAK1D,KAAKqD,kBAAkB5C,WAAWC,GAAKV,KAAKqD,kBAAkBvC,aAAaJ,IAE5GF,cACI,OAAOR,KAAKuD,UAEhBI,mBAAmBC,GACf,OAAOC,EAAc7D,KAAKuD,UAAWK,GAEzCE,KAAKC,GAAc,GACf,MAAM5C,EAAWnB,KAAKqD,kBAAkBlC,SAAW6C,EAAqBhE,KAAKqD,kBAAkBjC,QACzFC,EAAOrB,KAAKqD,kBAAkBhC,KACpC,OAAOA,GAAQ0C,EAAe,GAAE5C,IAAWE,IAASF,EAExDI,UAAUC,EAAOC,EAAOC,EAAKuC,GACzB,MAAMC,EAAclE,KAAK2D,mBAAmBjC,EAAMsC,EAAqBC,IACvEjE,KAAKqD,kBAAkB9B,UAAUC,EAAOC,EAAOyC,GAEnDtC,aAAaJ,EAAOC,EAAOC,EAAKuC,GAC5B,MAAMC,EAAclE,KAAK2D,mBAAmBjC,EAAMsC,EAAqBC,IACvEjE,KAAKqD,kBAAkBzB,aAAaJ,EAAOC,EAAOyC,GAEtDrC,UACI7B,KAAKqD,kBAAkBxB,UAE3BC,OACI9B,KAAKqD,kBAAkBvB,OAE3B/C,UAAUC,EAAmB,GACzB,IAAImF,EAAIC,EAC2C,QAAlDA,GAAMD,EAAKnE,KAAKqD,mBAAmBtE,iBAA8B,IAAPqF,GAAyBA,EAAGC,KAAKF,EAAInF,IAGxGkE,SAAqBhE,UAAO,SAAsCC,GAAK,OAAO,IAAKA,GAAK+D,GAAsBjB,qBAAgBnD,GAAmBmD,qBAAgBmB,EAAe,KAChLF,EAAqB9D,WAAsB6C,+BAA0B,CAAEzC,MAAO0D,EAAsB5D,QAAS4D,EAAqBhE,YApD5HgE,MA2FAoB,QAAN,gBAAmCvB,EAC/BlD,YAAYwD,EAAmBE,GAC3BxD,QACAC,KAAKqD,kBAAoBA,EACzBrD,KAAKuD,UAAY,GACjBvD,KAAKsD,mBAAqB,GACT,MAAbC,IACAvD,KAAKuD,UAAYA,GAGzBC,cACI,KAAOxD,KAAKsD,mBAAmBjB,QAC3BrC,KAAKsD,mBAAmBG,KAAxBzD,GAGRS,WAAWC,GACPV,KAAKsD,mBAAmBI,KAAK1D,KAAKqD,kBAAkB5C,WAAWC,GAAKV,KAAKqD,kBAAkBvC,aAAaJ,IAE5GF,cACI,OAAOR,KAAKuD,UAEhBO,KAAKC,GAAc,GAGf,IAAID,EAAO9D,KAAKqD,kBAAkBhC,KAClC,OAAY,MAARyC,IACAA,EAAO,KACJA,EAAKzB,OAAS,EAAIyB,EAAKrB,UAAU,GAAKqB,EAEjDH,mBAAmBC,GACf,MAAMlC,EAAMmC,EAAc7D,KAAKuD,UAAWK,GAC1C,OAAOlC,EAAIW,OAAS,EAAK,IAAMX,EAAOA,EAE1CH,UAAUC,EAAOC,EAAOqC,EAAMG,GAC1B,IAAIvC,EAAM1B,KAAK2D,mBAAmBG,EAAOE,EAAqBC,IAC5C,GAAdvC,EAAIW,SACJX,EAAM1B,KAAKqD,kBAAkBlC,UAEjCnB,KAAKqD,kBAAkB9B,UAAUC,EAAOC,EAAOC,GAEnDE,aAAaJ,EAAOC,EAAOqC,EAAMG,GAC7B,IAAIvC,EAAM1B,KAAK2D,mBAAmBG,EAAOE,EAAqBC,IAC5C,GAAdvC,EAAIW,SACJX,EAAM1B,KAAKqD,kBAAkBlC,UAEjCnB,KAAKqD,kBAAkBzB,aAAaJ,EAAOC,EAAOC,GAEtDG,UACI7B,KAAKqD,kBAAkBxB,UAE3BC,OACI9B,KAAKqD,kBAAkBvB,OAE3B/C,UAAUC,EAAmB,GACzB,IAAImF,EAAIC,EAC2C,QAAlDA,GAAMD,EAAKnE,KAAKqD,mBAAmBtE,iBAA8B,IAAPqF,GAAyBA,EAAGC,KAAKF,EAAInF,IAGxGsF,SAAqBpF,UAAO,SAAsCC,GAAK,OAAO,IAAKA,GAAKmF,GAAsBrC,qBAAgBnD,GAAmBmD,qBAAgBmB,EAAe,KAChLkB,EAAqBlF,WAAsB6C,+BAA0B,CAAEzC,MAAO8E,EAAsBhF,QAASgF,EAAqBpF,YA3D5HoF,MA4GAC,QAAN,QACI1E,YAAY2E,EAAkBvB,GAE1BjD,KAAKyE,SAAW,IAAIC,eAEpB1E,KAAK2E,oBAAsB,GAC3B3E,KAAK4E,kBAAoBJ,EACzB,MAAMK,EAAkB7E,KAAK4E,kBAAkBpE,cAC/CR,KAAKqD,kBAAoBJ,EACzBjD,KAAKuD,UAAYuB,EAAmBC,EAAgBF,IACpD7E,KAAK4E,kBAAkBnE,WAAYuE,IAC/BhF,KAAKyE,SAASQ,KAAK,CACfvD,IAAO1B,KAAK8D,MAAK,GACjBL,KAAO,EACPjC,MAASwD,EAAGxD,MACZ0D,KAAQF,EAAGE,SAavBpB,KAAKC,GAAc,GACf,OAAO/D,KAAKmF,UAAUnF,KAAK4E,kBAAkBd,KAAKC,IAMtD/B,WACI,OAAOhC,KAAKqD,kBAAkBrB,WAWlCoD,qBAAqBtB,EAAMuB,EAAQ,IAC/B,OAAOrF,KAAK8D,QAAU9D,KAAKmF,UAAUrB,EAAOE,EAAqBqB,IASrEF,UAAUzD,GACN,OAAO6C,EAASO,mBAwJxB,SAAwBQ,EAAU5D,GAC9B,OAAO4D,GAAY5D,EAAIc,WAAW8C,GAAY5D,EAAIe,UAAU6C,EAASjD,QAAUX,EADnF,CAxJ0D1B,KAAKuD,UAAWwB,EAAgBrD,KAYtFiC,mBAAmBjC,GACf,OAAIA,GAAkB,MAAXA,EAAI,KACXA,EAAM,IAAMA,GAET1B,KAAK4E,kBAAkBjB,mBAAmBjC,GAYrDK,GAAG+B,EAAMuB,EAAQ,GAAI7D,EAAQ,MACzBxB,KAAK4E,kBAAkBrD,UAAUC,EAAO,GAAIsC,EAAMuB,GAClDrF,KAAKuF,0BAA0BvF,KAAK2D,mBAAmBG,EAAOE,EAAqBqB,IAAS7D,GAUhGI,aAAakC,EAAMuB,EAAQ,GAAI7D,EAAQ,MACnCxB,KAAK4E,kBAAkBhD,aAAaJ,EAAO,GAAIsC,EAAMuB,GACrDrF,KAAKuF,0BAA0BvF,KAAK2D,mBAAmBG,EAAOE,EAAqBqB,IAAS7D,GAKhGK,UACI7B,KAAK4E,kBAAkB/C,UAK3BC,OACI9B,KAAK4E,kBAAkB9C,OAc3B/C,UAAUC,EAAmB,GACzB,IAAImF,EAAIC,EAC2C,QAAlDA,GAAMD,EAAKnE,KAAK4E,mBAAmB7F,iBAA8B,IAAPqF,GAAyBA,EAAGC,KAAKF,EAAInF,GAQpGwG,YAAY9E,GACRV,KAAK2E,oBAAoBjB,KAAKhD,GACzBV,KAAKyF,yBACNzF,KAAKyF,uBAAyBzF,KAAK0F,UAAUC,IACzC3F,KAAKuF,0BAA0BI,EAAEjE,IAAKiE,EAAEnE,UAKpD+D,0BAA0B7D,EAAM,GAAIF,GAChCxB,KAAK2E,oBAAoBiB,QAAQlF,GAAMA,EAAGgB,EAAKF,IAenDkE,UAAUG,EAAQC,EAASC,GACvB,OAAO/F,KAAKyE,SAASiB,UAAU,CAAEM,KAAMH,EAAQI,MAAOH,EAASI,SAAUH,KAGjFxB,SAASrF,UAAO,SAA0BC,GAAK,OAAO,IAAKA,GAAKoF,GAAUtC,qBAAgBc,GAAmBd,qBAAgBnD,KAQ7HyF,EAASP,qBAAuBA,EAUhCO,EAASV,cAAgBA,EAUzBU,EAASO,mBAAqBA,EAC9BP,EAASnF,cAAQC,gCAAmB,CAAEC,QAAS6G,EAAgB3G,MAAO+E,EAAU9E,WAAY,SAlMtF8E,MA+MN,aACI,OAAO,IAAIA,KAAS7E,sBAASqD,MAAmBrD,sBAASZ,IAK7D,WAAyB4C,GACrB,OAAOA,EAAI0E,QAAQ,gBAAiB,IAmBxC,MAAMC,EAAgB,CAClBC,IAAO,MAACC,OAAWA,EAAW,GAC9BC,IAAO,MAACD,OAAWA,EAAW,GAC9BE,IAAO,MAACF,OAAWA,EAAW,GAC9BG,IAAO,MAACH,OAAWA,EAAW,GAC9BI,IAAO,MAACJ,EAAW,MACnBK,IAAO,MAACL,EAAW,KACnBM,IAAO,CAAC,KAAM,KACdC,IAAO,MAACP,EAAW,MACnBQ,IAAO,MAACR,EAAW,KACnBS,IAAO,MAACT,EAAW,UACnBU,IAAO,MAACV,OAAWA,EAAW,GAC9BW,IAAO,MAACX,OAAWA,EAAW,GAC9BY,IAAO,MAACZ,EAAW,KACnBa,IAAO,MAACb,EAAW,KACnBc,IAAO,MAACd,EAAW,MACnBe,IAAO,CAAC,MACRC,IAAO,MAAChB,EAAW,KACnBiB,IAAO,MAACjB,EAAW,KACnBkB,IAAO,MAAClB,EAAW,UAAM,GACzBmB,IAAO,MAACnB,OAAWA,EAAW,GAC9BoB,IAAO,MAACpB,EAAW,KACnBqB,IAAO,CAAC,MAAO,IAAK,GACpBC,IAAO,MAACtB,OAAWA,EAAW,GAC9BuB,IAAO,MAACvB,OAAWA,EAAW,GAC9BwB,IAAO,MAACxB,EAAW,IAAK,GACxByB,IAAO,CAAC,SAAO,QACfC,IAAO,MAAC1B,EAAW,IAAK,GACxB2B,IAAO,MAAC3B,EAAW,SAAK,GACxB4B,IAAO,MAAC5B,EAAW,KACnB6B,IAAO,MAAC7B,EAAW,KACnB8B,IAAO,MAAC9B,EAAW,UAAM,GACzB+B,IAAO,MAAC/B,OAAWA,EAAW,GAC9BgC,IAAO,MAAChC,EAAW,KAAM,GACzBiC,IAAO,MAACjC,EAAW,KACnBkC,IAAO,MAAClC,EAAW,SACnBmC,IAAO,MAACnC,EAAW,SAAK,GACxBoC,IAAO,CAAC,UACRC,IAAO,MAACrC,EAAW,KACnBsC,IAAO,MAACtC,EAAW,QACnBuC,IAAO,CAAC,QACRC,IAAO,MAACxC,EAAW,UACnByC,IAAO,MAACzC,EAAW,QACnB0C,IAAO,MAAC1C,EAAW,KAAM,GACzB2C,IAAO,MAAC3C,EAAW,KACnB4C,IAAO,MAAC5C,EAAW,IAAK,GACxB6C,IAAO,CAAC,MAAO,KACfC,IAAO,MAAC9C,EAAW,KACnB+C,IAAO,MAAC/C,EAAW,MACnBgD,IAAO,MAAChD,EAAW,KAAM,GACzBiD,IAAO,MAACjD,EAAW,KAAM,GACzBkD,IAAO,CAAC,UACRC,IAAO,CAAC,UACRC,IAAO,MAACpD,OAAWA,EAAW,GAC9BqD,IAAO,MAACrD,OAAWA,EAAW,GAC9BsD,IAAO,MAACtD,EAAW,KAAM,GACzBuD,IAAO,MAACvD,OAAWA,EAAW,GAC9BwD,IAAO,MAACxD,EAAW,KACnByD,IAAO,MAACzD,OAAWA,EAAW,GAC9B0D,IAAO,CAAC,YAAK1D,EAAW,GACxB2D,IAAO,MAAC3D,EAAW,UACnB4D,IAAO,MAAC5D,EAAW,KAAM,GACzB6D,IAAO,MAAC7D,EAAW,SAAK,GACxB8D,IAAO,CAAC,cAAK9D,EAAW,GACxB+D,IAAO,MAAC/D,OAAWA,EAAW,GAC9BgE,IAAO,MAAChE,EAAW,KACnBiE,IAAO,MAACjE,EAAW,UACnBkE,IAAO,MAAClE,EAAW,SAAK,GACxBmE,IAAO,MAACnE,EAAW,QAAM,GACzBoE,IAAO,MAACpE,EAAW,MACnBqE,IAAO,MAACrE,EAAW,KACnBsE,IAAO,MAACtE,EAAW,MACnBuE,IAAO,MAACvE,OAAWA,EAAW,GAC9BwE,IAAO,MAACxE,EAAW,MACnByE,IAAO,MAACzE,OAAWA,EAAW,GAC9B0E,IAAO,MAAC1E,EAAW,KAAM,GACzB2E,IAAO,MAAC3E,OAAWA,EAAW,GAC9B4E,IAAO,MAAC5E,EAAW,IAAK,GACxB6E,IAAO,MAAC7E,EAAW,SAAK,GACxB8E,IAAO,MAAC9E,OAAWA,EAAW,GAC9B+E,IAAO,MAAC/E,EAAW,KAAM,GACzBgF,IAAO,CAAC,MAAO,KACfC,IAAO,MAACjF,EAAW,MACnBkF,IAAO,MAAClF,EAAW,KACnBmF,IAAO,MAACnF,EAAW,UACnBoF,IAAO,MAACpF,EAAW,MACnBqF,IAAO,MAACrF,EAAW,KAAM,GACzBsF,IAAO,MAACtF,EAAW,MACnBuF,IAAO,CAAC,MAAO,KACfC,IAAO,MAACxF,OAAWA,EAAW,GAC9ByF,IAAO,MAACzF,EAAW,UACnB0F,IAAO,MAAC1F,EAAW,KAAM,GACzB2F,IAAO,MAAC3F,EAAW,WACnB4F,IAAO,MAAC5F,EAAW,SAAK,GACxB6F,IAAO,MAAC7F,EAAW,OACnB8F,IAAO,MAAC9F,OAAWA,EAAW,GAC9B+F,IAAO,MAAC/F,EAAW,UACnBgG,IAAO,MAAChG,EAAW,WACnBiG,IAAO,MAACjG,EAAW,KAAM,GACzBkG,IAAO,MAAClG,EAAW,KACnBmG,IAAO,MAACnG,EAAW,KAAM,GACzBoG,IAAO,MAACpG,EAAW,KACnBqG,IAAO,MAACrG,EAAW,QACnBsG,IAAO,MAACtG,OAAWA,EAAW,GAC9BuG,IAAO,MAACvG,OAAWA,EAAW,GAC9BwG,IAAO,MAACxG,EAAW,KACnByG,IAAO,MAACzG,EAAW,QACnB0G,IAAO,MAAC1G,OAAWA,EAAW,GAC9B2G,IAAO,MAAC3G,EAAW,MACnB4G,IAAO,MAAC5G,EAAW,OAAK,GACxB6G,IAAO,MAAC7G,EAAW,UACnB8G,IAAO,MAAC9G,OAAWA,EAAW,GAC9B+G,IAAO,MAAC/G,OAAWA,EAAW,GAC9BgH,IAAO,MAAChH,EAAW,MACnBiH,IAAO,MAACjH,OAAWA,EAAW,GAC9BkH,IAAO,MAAClH,EAAW,UACnBmH,IAAO,MAACnH,EAAW,KACnBoH,IAAO,CAAC,MAAO,IAAK,GACpBC,IAAO,MAACrH,OAAWA,EAAW,GAC9BsH,IAAO,MAACtH,EAAW,UACnBuH,IAAO,MAACvH,OAAWA,EAAW,GAC9BwH,IAAO,CAAC,KACRC,IAAO,MAACzH,OAAWA,EAAW,GAC9B0H,IAAO,MAAC1H,EAAW,KACnB2H,IAAO,MAAC3H,OAAWA,EAAW,GAC9B4H,IAAO,MAAC5H,OAAWA,EAAW,GAC9B6H,IAAO,MAAC7H,EAAW,KAAM,GACzB8H,IAAO,CAAC,cAAK9H,EAAW,GACxB+H,IAAO,MAAC/H,OAAWA,EAAW,GAC9BgI,IAAO,CAAC,YAAQhI,EAAW,GAC3BiI,IAAO,CAAC,MAAO,KACfC,IAAO,CAAC,WAAOlI,EAAW,GAC1BmI,IAAO,CAAC,YAAQnI,EAAW,GAC3BoI,IAAO,CAAC,QACRC,IAAO,MAACrI,OAAWA,EAAW,GAC9BsI,IAAO,MAACtI,EAAW,KACnBuI,IAAO,MAACvI,OAAWA,EAAW,GAC9BwI,IAAO,MAACxI,EAAW,MACnByI,IAAO,MAACzI,OAAWA,EAAW,IAiBlC,IAAI0I,EAAiB,OAAjBA,KAAiB,IAECA,EAAkBC,QAAa,GAAK,UACtDD,EAAkBA,EAAkBE,QAAa,GAAK,UACtDF,EAAkBA,EAAkBG,SAAc,GAAK,WACvDH,EAAkBA,EAAkBI,WAAgB,GAAK,aALzDJ,GAAiB,GAgBjBK,EAAM,OAANA,KAAM,IAECA,EAAOC,KAAU,GAAK,OAC7BD,EAAOA,EAAOE,IAAS,GAAK,MAC5BF,EAAOA,EAAOG,IAAS,GAAK,MAC5BH,EAAOA,EAAOI,IAAS,GAAK,MAC5BJ,EAAOA,EAAOK,KAAU,GAAK,OAC7BL,EAAOA,EAAOM,MAAW,GAAK,QAP9BN,GAAM,GAkBNO,EAAS,OAATA,KAAS,IAECA,EAAUC,OAAY,GAAK,SACrCD,EAAUA,EAAUE,WAAgB,GAAK,aAHzCF,GAAS,GAYTG,EAAgB,OAAhBA,KAAgB,IAGCA,EAAiBC,OAAY,GAAK,SAEnDD,EAAiBA,EAAiBE,YAAiB,GAAK,cAExDF,EAAiBA,EAAiBG,KAAU,GAAK,OAEjDH,EAAiBA,EAAiBI,MAAW,GAAK,QATlDJ,GAAgB,GAsBhBK,EAAW,OAAXA,KAAW,IAMCA,EAAYD,MAAW,GAAK,QAKxCC,EAAYA,EAAYC,OAAY,GAAK,SAKzCD,EAAYA,EAAYE,KAAU,GAAK,OAKvCF,EAAYA,EAAYG,KAAU,GAAK,OArBvCH,GAAW,GAgCXI,EAAY,OAAZA,KAAY,IAOCA,EAAavB,QAAa,GAAK,UAM5CuB,EAAaA,EAAaC,MAAW,GAAK,QAK1CD,EAAaA,EAAaE,KAAU,GAAK,OAKzCF,EAAaA,EAAaG,YAAiB,GAAK,cAKhDH,EAAaA,EAAaI,SAAc,GAAK,WAK7CJ,EAAaA,EAAaK,UAAe,GAAK,YAK9CL,EAAaA,EAAaM,YAAiB,GAAK,cAKhDN,EAAaA,EAAaO,uBAA4B,GAAK,yBAK3DP,EAAaA,EAAaQ,SAAc,GAAK,WAK7CR,EAAaA,EAAaS,SAAc,GAAK,WAK7CT,EAAaA,EAAaU,IAAS,IAAM,MAKzCV,EAAaA,EAAaW,cAAmB,IAAM,gBAKnDX,EAAaA,EAAaY,gBAAqB,IAAM,kBAKrDZ,EAAaA,EAAaa,cAAmB,IAAM,gBAzEnDb,GAAY,GAgFZc,EAAO,OAAPA,KAAO,IAECA,EAAQC,OAAY,GAAK,SACjCD,EAAQA,EAAQE,OAAY,GAAK,SACjCF,EAAQA,EAAQG,QAAa,GAAK,UAClCH,EAAQA,EAAQI,UAAe,GAAK,YACpCJ,EAAQA,EAAQK,SAAc,GAAK,WACnCL,EAAQA,EAAQM,OAAY,GAAK,SACjCN,EAAQA,EAAQO,SAAc,GAAK,WARnCP,GAAO,GAmBX,WAAqBQ,GACjB,OAAOC,0BAAgBD,GAAQE,kCAanC,WAA6BF,EAAQG,EAAWC,GAC5C,MAAMC,GAAOJ,0BAAgBD,GAIvBM,EAAOC,GAHI,CACbF,EAAKH,0CAAoCG,EAAKH,+CAEPC,GAC3C,OAAOI,GAAoBD,EAAMF,GAcrC,WAA2BJ,EAAQG,EAAWC,GAC1C,MAAMC,GAAOJ,0BAAgBD,GAEvBQ,EAAOD,GADI,CAACF,EAAKH,oCAA8BG,EAAKH,yCACfC,GAC3C,OAAOI,GAAoBC,EAAMJ,GAcrC,WAA6BJ,EAAQG,EAAWC,GAC5C,MAAMC,GAAOJ,0BAAgBD,GAEvBS,EAASF,GADI,CAACF,EAAKH,sCAAgCG,EAAKH,2CACfC,GAC/C,OAAOI,GAAoBE,EAAQL,GAavC,WAA2BJ,EAAQI,GAG/B,OAAOG,IADUF,EADJJ,wBAAgBD,GACPE,8BACeE,GAazC,WAAiCJ,GAE7B,OAAOK,EADMJ,wBAAgBD,GACjBE,wCAWhB,WAA+BF,GAE3B,OAAOK,EADMJ,wBAAgBD,GACjBE,sCAahB,WAA6BF,EAAQI,GAEjC,OAAOG,MADMN,wBAAgBD,GACGE,oCAA8BE,GAalE,WAA6BJ,EAAQI,GAEjC,OAAOG,MADMN,wBAAgBD,GACGE,oCAA8BE,GAalE,WAAiCJ,EAAQI,GAGrC,OAAOG,IADoBF,EADdJ,wBAAgBD,GACGE,wCACeE,GAYnD,WAA+BJ,EAAQU,GACnC,MAAML,KAAOJ,wBAAgBD,GACvBW,EAAMN,EAAKH,uCAAgCQ,GACjD,QAAmB,IAARC,EAAqB,CAC5B,GAAID,IAAWhC,EAAaY,gBACxB,OAAOe,EAAKH,uCAAgCxB,EAAavB,SAExD,GAAIuD,IAAWhC,EAAaa,cAC7B,OAAOc,EAAKH,uCAAgCxB,EAAaC,OAGjE,OAAOgC,EAqCX,WAA+BX,EAAQ7M,GAEnC,OADa8M,0BAAgBD,GACjBE,uCAAgC/M,GAahD,WAAiC6M,GAE7B,OADaC,0BAAgBD,GACjBE,yCAAoC,KAYpD,WAA+BF,GAE3B,OADaC,0BAAgBD,GACjBE,uCAAkC,KAYlD,WAA+BF,GAC3B,SAAOY,+BAAuBZ,GAgBlC,MAAMa,EAAsBC,4BAC5B,WAAuBT,GACnB,IAAKA,EAAKH,mCACN,MAAM,IAAIhT,MAAO,6CAA4CmT,EAAKH,mIA0B1E,WAAsCF,GAClC,MAAMK,KAAOJ,wBAAgBD,GAC7Be,SAAcV,IACAA,EAAKH,mCAA4B,IAAiC,IACnEc,IAAKC,GACM,iBAATA,EACAC,GAAYD,GAEhB,CAACC,GAAYD,EAAK,IAAKC,GAAYD,EAAK,MAoBvD,WAAkCjB,EAAQG,EAAWC,GACjD,MAAMC,KAAOJ,wBAAgBD,GAC7Be,EAAcV,GACd,MAIMc,EAAaZ,GAJI,CACnBF,EAAKH,mCAA4B,GACjCG,EAAKH,mCAA4B,IAEkBC,IAAc,GACrE,OAAOI,GAAoBY,EAAYf,IAAU,GASrD,WAA4BJ,GAExB,OAAOK,EADMJ,wBAAgBD,GACjBE,wCAehB,YAA6BG,EAAMxP,GAC/B,QAASuQ,EAAIvQ,EAAOuQ,GAAI,EAAIA,IACxB,QAAuB,IAAZf,EAAKe,GACZ,OAAOf,EAAKe,GAGpB,MAAM,IAAIlU,MAAM,0CAKpB,YAAqBmU,GACjB,MAAOC,EAAGC,GAAKF,EAAKG,MAAM,KAC1B,MAAO,CAAEC,OAAQH,EAAGI,SAAUH,GAiBlC,YAA2BI,EAAMC,EAAQ5B,EAAS,MAC9C,MAAM6B,EAlIV,SAA6B7B,GAEzB,OAAOK,EADMJ,wBAAgBD,GACjBE,oCAFhB,CAkIyCF,GAAQ2B,IAASrN,EAAcqN,IAAS,GACvEG,EAAeD,EAAS,GAC9B,MAAe,WAAXD,GAA+C,iBAAjBE,EACvBA,EAEJD,EAAS,IAAmBF,EAcvC,YAAmCA,GAC/B,IAAII,EACJ,MAAMF,EAAWvN,EAAcqN,GAC/B,OAAIE,IACAE,EAASF,EAAS,IAEG,iBAAXE,EAAsBA,EAjBF,EA2BtC,MAAMC,GAAqB,uGAErBC,GAAgB,GAChBC,GAAqB,oNAC3B,IAAIC,GAAS,OAATA,OAAS,IAECA,GAAU9D,MAAW,GAAK,QACpC8D,GAAUA,GAAUC,SAAc,GAAK,WACvCD,GAAUA,GAAU3D,KAAU,GAAK,OACnC2D,GAAUA,GAAUE,SAAc,GAAK,WALvCF,IAAS,GAOTG,GAAQ,OAARA,OAAQ,IAECA,GAASC,SAAc,GAAK,WACrCD,GAASA,GAASE,MAAW,GAAK,QAClCF,GAASA,GAASG,KAAU,GAAK,OACjCH,GAASA,GAASI,MAAW,GAAK,QAClCJ,GAASA,GAASK,QAAa,GAAK,UACpCL,GAASA,GAASM,QAAa,GAAK,UACpCN,GAASA,GAASO,kBAAuB,GAAK,oBAC9CP,GAASA,GAASQ,IAAS,GAAK,MAThCR,IAAQ,GAWRS,GAAe,OAAfA,OAAe,IAECA,GAAgBC,WAAgB,GAAK,aACrDD,GAAgBA,GAAgBE,KAAU,GAAK,OAC/CF,GAAgBA,GAAgBG,OAAY,GAAK,SACjDH,GAAgBA,GAAgBI,KAAU,GAAK,OAL/CJ,IAAe,GA4BnB,YAAoBK,EAAOxB,EAAQ5B,EAAQqD,GACvC,IAAIC,EA4mBR,SAAgBF,GACZ,GAAIG,GAAOH,GACP,OAAOA,EAEX,GAAqB,iBAAVA,IAAuBI,MAAMJ,GACpC,OAAO,IAAIX,KAAKW,GAEpB,GAAqB,iBAAVA,EAAoB,CAE3B,GADAA,EAAQA,EAAMK,OACV,kCAAkCC,KAAKN,GAAQ,CAQ/C,MAAOO,EAAGpC,EAAI,EAAGqC,EAAI,GAAKR,EAAM5B,MAAM,KAAKR,IAAK6C,IAASA,GACzD,OAAOC,GAAWH,EAAGpC,EAAI,EAAGqC,GAEhC,MAAMG,EAAWC,WAAWZ,GAE5B,IAAKI,MAAMJ,EAAQW,GACf,OAAO,IAAItB,KAAKsB,GAEpB,IAAIpT,EACJ,GAAIA,EAAQyS,EAAMzS,MAAMqR,IACpB,OAaZ,SAAyBrR,GACrB,MAAM2S,EAAO,IAAIb,KAAK,GACtB,IAAIwB,EAAS,EACTC,EAAQ,EAEZ,MAAMC,EAAaxT,EAAM,GAAK2S,EAAKc,eAAiBd,EAAKe,YACnDC,EAAa3T,EAAM,GAAK2S,EAAKiB,YAAcjB,EAAKkB,SAElD7T,EAAM,KACNsT,EAASQ,OAAO9T,EAAM,GAAKA,EAAM,KACjCuT,EAAQO,OAAO9T,EAAM,GAAKA,EAAM,MAEpCwT,EAAW7R,KAAKgR,EAAMmB,OAAO9T,EAAM,IAAK8T,OAAO9T,EAAM,IAAM,EAAG8T,OAAO9T,EAAM,KAC3E,MAAM2Q,EAAImD,OAAO9T,EAAM,IAAM,GAAKsT,EAC5B1C,EAAIkD,OAAO9T,EAAM,IAAM,GAAKuT,EAC5BQ,EAAID,OAAO9T,EAAM,IAAM,GAIvBgU,EAAKC,KAAKC,MAA2C,IAArCb,WAAW,MAAQrT,EAAM,IAAM,KACrD2T,SAAWhS,KAAKgR,EAAMhC,EAAGC,EAAGmD,EAAGC,GACxBrB,EArBX,CAbmC3S,GAG/B,MAAM2S,EAAO,IAAIb,KAAKW,GACtB,IAAKG,GAAOD,GACR,MAAM,IAAIpW,MAAO,sBAAqBkW,kBAE1C,OAAOE,EAlCX,CA5mBsBF,GAElBxB,EADoBkD,GAAe9E,EAAQ4B,IACnBA,EACxB,IACIjR,EADAoU,EAAQ,GAEZ,KAAOnD,GAEH,IADAjR,EAAQuR,GAAmB8C,KAAKpD,IAC5BjR,EAQC,CACDoU,EAAMpT,KAAKiQ,GACX,MAVO,CACPmD,EAAQA,EAAME,OAAOtU,EAAMG,MAAM,IACjC,MAAMoU,EAAOH,EAAMrT,MACnB,IAAKwT,EACD,MAEJtD,EAASsD,GAOjB,IAAIC,EAAqB7B,EAAK8B,oBAC1B/B,IACA8B,EAAqBE,GAAiBhC,EAAU8B,GAChD7B,EAmkBR,SAAgCA,EAAMD,EAAUiC,GAC5C,MACMH,EAAqB7B,EAAK8B,oBAEhC,OATJ,SAAwB9B,EAAM5B,GAC1B4B,SAAO,IAAIb,KAAKa,EAAKiC,YAChBC,WAAWlC,EAAKmC,aAAe/D,GAC7B4B,EAHX,CAS0BA,GAHS,GAER+B,GAAiBhC,EAAU8B,GACWA,IAJjE,CAnkBsC7B,EAAMD,IAExC,IAAIqC,EAAO,GACXX,SAAMlR,QAAQuP,IACV,MAAMuC,EA8Td,SAA0B/D,GACtB,GAAIgE,GAAahE,GACb,OAAOgE,GAAahE,GAExB,IAAIiE,EACJ,OAAQjE,OAEC,QACA,SACA,MACDiE,EAAYC,GAAc/C,GAAgBI,KAAMlF,EAAiBE,aACjE,UACC,OACD0H,EAAYC,GAAc/C,GAAgBI,KAAMlF,EAAiBG,MACjE,UACC,QACDyH,EAAYC,GAAc/C,GAAgBI,KAAMlF,EAAiBC,QACjE,UAEC,IACD2H,EAAYE,GAAWzD,GAASC,SAAU,EAAG,GAAG,GAAO,GACvD,UAEC,KACDsD,EAAYE,GAAWzD,GAASC,SAAU,EAAG,GAAG,GAAM,GACtD,UAEC,MACDsD,EAAYE,GAAWzD,GAASC,SAAU,EAAG,GAAG,GAAO,GACvD,UAEC,OACDsD,EAAYE,GAAWzD,GAASC,SAAU,EAAG,GAAG,GAAO,GACvD,UAEC,IACDsD,EAAYG,GAAwB,GACpC,UAGC,KACDH,EAAYG,GAAwB,GAAG,GACvC,UAGC,MACDH,EAAYG,GAAwB,GACpC,UAEC,OACDH,EAAYG,GAAwB,GACpC,UAEC,QACA,IACDH,EAAYE,GAAWzD,GAASE,MAAO,EAAG,GAC1C,UACC,SACA,KACDqD,EAAYE,GAAWzD,GAASE,MAAO,EAAG,GAC1C,UAEC,MACDqD,EAAYC,GAAc/C,GAAgBG,OAAQjF,EAAiBE,aACnE,UACC,OACD0H,EAAYC,GAAc/C,GAAgBG,OAAQjF,EAAiBG,MACnE,UACC,QACDyH,EAAYC,GAAc/C,GAAgBG,OAAQjF,EAAiBC,QACnE,UAEC,MACD2H,EACIC,GAAc/C,GAAgBG,OAAQjF,EAAiBE,YAAaL,EAAUE,YAClF,UACC,OACD6H,EACIC,GAAc/C,GAAgBG,OAAQjF,EAAiBG,KAAMN,EAAUE,YAC3E,UACC,QACD6H,EACIC,GAAc/C,GAAgBG,OAAQjF,EAAiBC,OAAQJ,EAAUE,YAC7E,UAEC,IACD6H,EAAYI,GAAW,GACvB,UACC,KACDJ,EAAYI,GAAW,GACvB,UAEC,IACDJ,EAAYI,GAAW,GAAG,GAC1B,UAEC,IACDJ,EAAYE,GAAWzD,GAASG,KAAM,GACtC,UACC,KACDoD,EAAYE,GAAWzD,GAASG,KAAM,GACtC,UAEC,QACA,KACDoD,EAAYE,GAAWzD,GAASQ,IAAK,GACrC,UACC,MACD+C,EACIC,GAAc/C,GAAgBE,KAAMhF,EAAiBE,YAAaL,EAAUE,YAChF,UACC,OACD6H,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBG,KAAMN,EAAUE,YACjF,UACC,QACD6H,EACIC,GAAc/C,GAAgBE,KAAMhF,EAAiBC,OAAQJ,EAAUE,YAC3E,UACC,SACD6H,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBI,MAAOP,EAAUE,YAClF,UAEC,QACA,SACA,MACD6H,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBE,aACjE,UACC,OACD0H,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBG,MACjE,UACC,QACDyH,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBC,QACjE,UACC,SACD2H,EAAYC,GAAc/C,GAAgBE,KAAMhF,EAAiBI,OACjE,UAEC,QACA,SACA,MACDwH,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBE,aACvE,UACC,OACD0H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBG,MACvE,UACC,QACDyH,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBC,QACvE,UAEC,QACA,SACA,MACD2H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBE,YAAaL,EAAUE,YAAY,GAC1G,UACC,OACD6H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBG,KAAMN,EAAUE,YAAY,GACnG,UACC,QACD6H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBC,OAAQJ,EAAUE,YAAY,GACrG,UAEC,QACA,SACA,MACD6H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBE,YAAaL,EAAUC,QAAQ,GACtG,UACC,OACD8H,EACIC,GAAc/C,GAAgBC,WAAY/E,EAAiBG,KAAMN,EAAUC,QAAQ,GACvF,UACC,QACD8H,EAAYC,GAAc/C,GAAgBC,WAAY/E,EAAiBC,OAAQJ,EAAUC,QAAQ,GACjG,UAEC,IACD8H,EAAYE,GAAWzD,GAASI,MAAO,GAAG,IAC1C,UACC,KACDmD,EAAYE,GAAWzD,GAASI,MAAO,GAAG,IAC1C,UAEC,IACDmD,EAAYE,GAAWzD,GAASI,MAAO,GACvC,UAEC,KACDmD,EAAYE,GAAWzD,GAASI,MAAO,GACvC,UAEC,IACDmD,EAAYE,GAAWzD,GAASK,QAAS,GACzC,UACC,KACDkD,EAAYE,GAAWzD,GAASK,QAAS,GACzC,UAEC,IACDkD,EAAYE,GAAWzD,GAASM,QAAS,GACzC,UACC,KACDiD,EAAYE,GAAWzD,GAASM,QAAS,GACzC,UAEC,IACDiD,EAAYE,GAAWzD,GAASO,kBAAmB,GACnD,UACC,KACDgD,EAAYE,GAAWzD,GAASO,kBAAmB,GACnD,UACC,MACDgD,EAAYE,GAAWzD,GAASO,kBAAmB,GACnD,UAEC,QACA,SACA,MACDgD,EAAYK,GAAe/D,GAAU9D,OACrC,UAEC,QACDwH,EAAYK,GAAe/D,GAAUE,UACrC,UAEC,QACA,SACA,UAEA,QACA,SACA,MACDwD,EAAYK,GAAe/D,GAAUC,UACrC,UAEC,WACA,WAEA,OACDyD,EAAYK,GAAe/D,GAAU3D,MACrC,cAEA,OAAO,KAEfoH,UAAahE,GAAUiE,EAChBA,EAnPX,CA9T+CzC,GACvCsC,GAAQC,EACJA,EAAcrC,EAAMtD,EAAQmF,GAClB,OAAV/B,EAAmB,IAAOA,EAAM/O,QAAQ,WAAY,IAAIA,QAAQ,MAAO,OAExEqR,EAYX,YAAoBS,EAAMC,EAAO9C,GAK7B,MAAM+C,EAAU,IAAI5D,KAAK,GAMzB4D,SAAQhC,YAAY8B,EAAMC,EAAO9C,GAIjC+C,EAAQ7B,SAAS,EAAG,EAAG,GAChB6B,EAEX,YAAwBrG,EAAQ4B,GAC5B,MAAM0E,EAAWC,EAAYvG,GAE7B,GADAiC,GAAcqE,GAAYrE,GAAcqE,IAAa,GACjDrE,GAAcqE,GAAU1E,GACxB,OAAOK,GAAcqE,GAAU1E,GAEnC,IAAI4E,EAAc,GAClB,OAAQ5E,OACC,YACD4E,EAAcC,EAAoBzG,EAAQ1B,EAAYD,OACtD,UACC,aACDmI,EAAcC,EAAoBzG,EAAQ1B,EAAYC,QACtD,UACC,WACDiI,EAAcC,EAAoBzG,EAAQ1B,EAAYE,MACtD,UACC,WACDgI,EAAcC,EAAoBzG,EAAQ1B,EAAYG,MACtD,UACC,YACD+H,EAAcE,EAAoB1G,EAAQ1B,EAAYD,OACtD,UACC,aACDmI,EAAcE,EAAoB1G,EAAQ1B,EAAYC,QACtD,UACC,WACDiI,EAAcE,EAAoB1G,EAAQ1B,EAAYE,MACtD,UACC,WACDgI,EAAcE,EAAoB1G,EAAQ1B,EAAYG,MACtD,UACC,QACD,MAAMkI,EAAY7B,GAAe9E,EAAQ,aACnC4G,EAAY9B,GAAe9E,EAAQ,aACzCwG,EAAcK,GAAeC,EAAwB9G,EAAQ1B,EAAYD,OAAQ,CAACsI,EAAWC,IAC7F,UACC,SACD,MAAMG,EAAajC,GAAe9E,EAAQ,cACpCgH,EAAalC,GAAe9E,EAAQ,cAC1CwG,EAAcK,GAAeC,EAAwB9G,EAAQ1B,EAAYC,QAAS,CAACwI,EAAYC,IAC/F,UACC,OACD,MAAMC,EAAWnC,GAAe9E,EAAQ,YAClCkH,EAAWpC,GAAe9E,EAAQ,YACxCwG,EACIK,GAAeC,EAAwB9G,EAAQ1B,EAAYE,MAAO,CAACyI,EAAUC,IACjF,UACC,OACD,MAAMC,EAAWrC,GAAe9E,EAAQ,YAClCoH,EAAWtC,GAAe9E,EAAQ,YACxCwG,EACIK,GAAeC,EAAwB9G,EAAQ1B,EAAYG,MAAO,CAAC0I,EAAUC,IAGzF,OAAIZ,IACAvE,GAAcqE,GAAU1E,GAAU4E,GAE/BA,EAEX,YAAwBa,EAAKC,GACzB,OAAIA,IACAD,EAAMA,EAAIhT,QAAQ,cAAe,SAAU1D,EAAO4W,GAC9C,OAAsB,MAAdD,GAAsBC,KAAOD,EAAcA,EAAWC,GAAO5W,KAGtE0W,EAEX,YAAmBG,EAAKzF,EAAQ0F,EAAY,IAAKhE,EAAMiE,GACnD,IAAIC,EAAM,IACNH,EAAM,GAAME,GAAWF,GAAO,KAC1BE,EACAF,EAAa,EAANA,GAGPA,GAAOA,EACPG,EAAMF,IAGd,IAAIG,EAASC,OAAOL,GACpB,KAAOI,EAAOtX,OAASyR,GACnB6F,EAAS,IAAMA,EAEnB,OAAInE,IACAmE,EAASA,EAAOE,OAAOF,EAAOtX,OAASyR,IAEpC4F,EAAMC,EASjB,YAAoBG,EAAMC,EAAMC,EAAS,EAAGxE,GAAO,EAAOiE,GAAU,GAChE,OAAO,SAAUpE,EAAMtD,GACnB,IAAIkF,EAgBZ,SAAqBA,EAAM5B,GACvB,OAAQ4B,QACC5C,GAASC,SACV,OAAOe,EAAK4E,mBACX5F,GAASE,MACV,OAAOc,EAAK6E,gBACX7F,GAASG,KACV,OAAOa,EAAK8E,eACX9F,GAASI,MACV,OAAOY,EAAK+E,gBACX/F,GAASK,QACV,OAAOW,EAAKmC,kBACXnD,GAASM,QACV,OAAOU,EAAKgF,kBACXhG,GAASO,kBACV,OAAOS,EAAKiF,uBACXjG,GAASQ,IACV,OAAOQ,EAAKkF,iBAEZ,MAAM,IAAItb,MAAO,2BAA0BgY,QAnBvD,CAhB+B6C,EAAMzE,GAI7B,IAHI2E,EAAS,GAAK/C,GAAQ+C,KACtB/C,GAAQ+C,GAERF,IAASzF,GAASI,MACL,IAATwC,IAAyB,KAAX+C,IACd/C,EAAO,YAGN6C,IAASzF,GAASO,kBACvB,OAnBZ,SAAiC4F,EAAc1G,GAE3C,OAAO2G,GADiBD,EAAc,GACzBX,OAAO,EAAG/F,GAF3B,CAmB2CmD,EAAM8C,GAEzC,MAAMW,EAAcC,EAAsB5I,EAAQtB,EAAaK,WAC/D,OAAO8J,GAAU3D,EAAM8C,EAAMW,EAAalF,EAAMiE,IA4BxD,YAAuBK,EAAM3H,EAAO0I,EAAOhL,EAAUC,OAAQgL,GAAW,GACpE,OAAO,SAAUzF,EAAMtD,GACnB,OAMR,SAA4BsD,EAAMtD,EAAQ+H,EAAM3H,EAAO0I,EAAMC,GACzD,OAAQhB,QACChF,GAAgBG,OACjB,OAAO8F,EAAoBhJ,EAAQ8I,EAAM1I,GAAOkD,EAAK6E,iBACpDpF,GAAgBE,KACjB,OAAOgG,EAAkBjJ,EAAQ8I,EAAM1I,GAAOkD,EAAKkF,eAClDzF,GAAgBC,WACjB,MAAMkG,EAAe5F,EAAK+E,WACpBc,EAAiB7F,EAAKmC,aAC5B,GAAIsD,EAAU,CACV,MAAMK,EAAQC,EAA6BrJ,GACrCmB,EAAamI,EAAyBtJ,EAAQ8I,EAAM1I,GACpDvP,EAAQuY,EAAMG,UAAUtI,IAC1B,GAAIuI,MAAMC,QAAQxI,GAAO,CAErB,MAAOyI,EAAMC,GAAM1I,EACb2I,EAAYV,GAAgBQ,EAAKjI,OAAS0H,GAAkBO,EAAKhI,QACjEmI,EAAYX,EAAeS,EAAGlI,OAC/ByH,IAAiBS,EAAGlI,OAAS0H,EAAiBQ,EAAGjI,QAWtD,GAAIgI,EAAKjI,MAAQkI,EAAGlI,OAChB,GAAImI,GAAaC,EACb,OAAO,UAGND,GAAaC,EAClB,OAAO,UAIP5I,EAAKQ,QAAUyH,GAAgBjI,EAAKS,UAAYyH,EAChD,OAAO,EAGf,OAAO,IAEX,IAAc,IAAVtY,EACA,OAAOsQ,EAAWtQ,GAI1B,OAAOiZ,EAAoB9J,EAAQ8I,EAAM1I,GAAO8I,EAAe,GAAK,EAAI,QACvEnG,GAAgBI,KACjB,OAAO4G,EAAkB/J,EAAQI,GAAOkD,EAAK4E,eAAiB,EAAI,EAAI,WAOtE,MAAM,IAAIhb,MAAO,+BADE6a,MA1D/B,CANkCzE,EAAMtD,EAAQ+H,EAAM3H,EAAO0I,EAAMC,IAyEnE,YAAwB3I,GACpB,OAAO,SAAUkD,EAAMtD,EAAQiI,GAC3B,MAAM+B,GAAO,EAAK/B,EACZR,EAAYmB,EAAsB5I,EAAQtB,EAAaK,WACvD0C,EAAQuI,EAAO,EAAIpF,KAAKC,MAAMmF,EAAO,IAAMpF,KAAKqF,KAAKD,EAAO,IAClE,OAAQ5J,QACC+B,GAAU9D,MACX,OAAS2L,GAAQ,EAAK,IAAM,IAAMnB,GAAUpH,EAAO,EAAGgG,GAClDoB,GAAUjE,KAAKsF,IAAIF,EAAO,IAAK,EAAGvC,QACrCtF,GAAUC,SACX,MAAO,OAAU4H,GAAQ,EAAK,IAAM,IAAMnB,GAAUpH,EAAO,EAAGgG,QAC7DtF,GAAU3D,KACX,MAAO,OAAUwL,GAAQ,EAAK,IAAM,IAAMnB,GAAUpH,EAAO,EAAGgG,GAAa,IACvEoB,GAAUjE,KAAKsF,IAAIF,EAAO,IAAK,EAAGvC,QACrCtF,GAAUE,SACX,OAAe,IAAX4F,EACO,KAGE+B,GAAQ,EAAK,IAAM,IAAMnB,GAAUpH,EAAO,EAAGgG,GAAa,IAC/DoB,GAAUjE,KAAKsF,IAAIF,EAAO,IAAK,EAAGvC,WAG1C,MAAM,IAAIva,MAAO,uBAAsBkT,QAUvD,YAA6B+J,GACzB,OAAOrG,GAAWqG,EAASjC,cAAeiC,EAAShC,WAAYgC,EAAS/B,WAN3D,EAMmF+B,EAAS3B,WAE7G,YAAoBR,EAAMoC,GAAa,GACnC,OAAO,SAAU9G,EAAMtD,GACnB,IAAIqK,EACJ,GAAID,EAAY,CACZ,MAAME,EAA4B,IAAI7H,KAAKa,EAAK4E,cAAe5E,EAAK6E,WAAY,GAAGK,SAAW,EACxF+B,EAAQjH,EAAK8E,UACnBiC,EAAS,EAAIzF,KAAKC,OAAO0F,EAAQD,GAA6B,OAE7D,CACD,MAAME,EAAYC,GAAoBnH,GAGhCoH,EAnBlB,SAAgCvE,GAC5B,MAAMwE,EAAiB7G,GAAWqC,EAHtB,EAGqC,GAAGqC,SACpD,OAAO1E,GAAWqC,EAAM,EAAG,GAAMwE,GAHpB,IAG6DC,IAAgBD,GAF9F,CAmBsDH,EAAUtC,eAC9C2C,EAAOL,EAAUjF,UAAYmF,EAAWnF,UAC9C8E,EAAS,EAAIzF,KAAKkG,MAAMD,EAAO,QAEnC,OAAOhC,GAAUwB,EAAQrC,EAAMY,EAAsB5I,EAAQtB,EAAaK,aAMlF,YAAiCiJ,EAAMvE,GAAO,GAC1C,OAAO,SAAUH,EAAMtD,GAGnB,OAAO6I,GADmB2B,GADYlH,GACF4E,cACAF,EAAMY,EAAsB5I,EAAQtB,EAAaK,WAAY0E,IAGzG,MAAMmC,GAAe,GA0PrB,YAA0BvC,EAAU0H,GAGhC1H,EAAWA,EAAShP,QAAQ,KAAM,IAClC,MAAM2W,EAA0BvI,KAAKwI,MAAM,yBAA2B5H,GAAY,IAClF,OAAOG,MAAMwH,GAA2BD,EAAWC,EAwFvD,YAAgB5H,GACZ,OAAOA,aAAiBX,OAASe,MAAMJ,EAAM8H,WAUjD,MAAMC,GAAuB,8BAGvBC,GAAY,IASlB,YAAoChI,EAAOiI,EAASrL,EAAQsL,EAAaC,EAAeC,EAAYC,GAAY,GAC5G,IAAIC,EAAgB,GAChBC,GAAS,EACb,GAAKC,SAASxI,GAGT,CACD,IAAIyI,EAgPZ,SAAqBrE,GACjB,IACkBzF,EAAQ+J,EACtB1K,EAAG2K,EAAGC,EAFNC,EAASrH,KAAKsF,IAAI1C,GAAO,GACzB0E,EAAW,EAmBf,KAhBKJ,EAAaG,EAAOE,QAtQT,OAsQiC,IAC7CF,EAASA,EAAO5X,QAvQJ,IAuQyB,MAGpC+M,EAAI6K,EAAO5c,OAAO,OAAS,GAExByc,EAAa,IACbA,EAAa1K,GACjB0K,IAAeG,EAAOnb,MAAMsQ,EAAI,GAChC6K,EAASA,EAAOvb,UAAU,EAAG0Q,IAExB0K,EAAa,IAElBA,EAAaG,EAAO3b,QAGnB8Q,EAAI,EAAG6K,EAAOG,OAAOhL,KAAOgK,GAAWhK,KAE5C,GAAIA,KAAO4K,EAAQC,EAAO3b,QAEtByR,EAAS,CAAC,GACV+J,EAAa,MAEZ,CAGD,IADAE,IACOC,EAAOG,OAAOJ,KAAWZ,IAC5BY,IAKJ,IAHAF,GAAc1K,EACdW,EAAS,GAEJgK,EAAI,EAAG3K,GAAK4K,EAAO5K,IAAK2K,IACzBhK,EAAOgK,GAAKtH,OAAOwH,EAAOG,OAAOhL,IAIzC,OAAI0K,EA5SW,KA6SX/J,EAASA,EAAOsK,OAAO,EAAGC,IAC1BJ,EAAWJ,EAAa,EACxBA,EAAa,GAEV,CAAE/J,SAAQmK,WAAUJ,cA/C/B,CAhPuC1I,GAC3BqI,IACAI,EAqNZ,SAAmBA,GAEf,GAA+B,IAA3BA,EAAa9J,OAAO,GACpB,OAAO8J,EAGX,MAAMU,EAAcV,EAAa9J,OAAOzR,OAASub,EAAaC,WAC9D,OAAID,EAAaK,SACbL,EAAaK,UAAY,GAGL,IAAhBK,EACAV,EAAa9J,OAAOpQ,KAAK,EAAG,GAEP,IAAhB4a,GACLV,EAAa9J,OAAOpQ,KAAK,GAE7Bka,EAAaC,YAAc,GAExBD,EAnBX,CArNqCA,IAE7B,IAAIW,EAASnB,EAAQmB,OACjBC,EAAcpB,EAAQqB,QACtBC,EAActB,EAAQuB,QAC1B,GAAIpB,EAAY,CACZ,MAAMzG,EAAQyG,EAAW7a,MAAMwa,IAC/B,GAAc,OAAVpG,EACA,MAAM,IAAI7X,MAAO,GAAEse,+BAEvB,MAAMqB,EAAa9H,EAAM,GACnB+H,EAAkB/H,EAAM,GACxBgI,EAAkBhI,EAAM,GACZ,MAAd8H,IACAL,EAASQ,GAAkBH,IAER,MAAnBC,IACAL,EAAcO,GAAkBF,IAEb,MAAnBC,EACAJ,EAAcK,GAAkBD,GAER,MAAnBD,GAA2BL,EAAcE,IAC9CA,EAAcF,IA4Q9B,SAAqBZ,EAAca,EAASE,GACxC,GAAIF,EAAUE,EACV,MAAM,IAAI1f,MAAO,gDAA+Cwf,kCAAwCE,OAE5G,IAAI7K,EAAS8J,EAAa9J,OACtBwK,EAAcxK,EAAOzR,OAASub,EAAaC,WAC/C,MAAMmB,EAAerI,KAAKsI,IAAItI,KAAKuI,IAAIT,EAASH,GAAcK,GAE9D,IAAIQ,EAAUH,EAAepB,EAAaC,WACtCuB,EAAQtL,EAAOqL,GACnB,GAAIA,EAAU,EAAG,CAEbrL,EAAOsK,OAAOzH,KAAKuI,IAAItB,EAAaC,WAAYsB,IAEhD,QAASrB,EAAIqB,EAASrB,EAAIhK,EAAOzR,OAAQyb,IACrChK,EAAOgK,GAAK,MAGf,CAEDQ,EAAc3H,KAAKuI,IAAI,EAAGZ,GAC1BV,EAAaC,WAAa,EAC1B/J,EAAOzR,OAASsU,KAAKuI,IAAI,EAAGC,EAAUH,EAAe,GACrDlL,EAAO,GAAK,EACZ,QAASX,EAAI,EAAGA,EAAIgM,EAAShM,IACzBW,EAAOX,GAAK,EAEpB,GAAIiM,GAAS,EACT,GAAID,EAAU,EAAI,EAAG,CACjB,QAASE,EAAI,EAAGA,EAAIF,EAASE,IACzBvL,EAAOwL,QAAQ,GACf1B,EAAaC,aAEjB/J,EAAOwL,QAAQ,GACf1B,EAAaC,kBAGb/J,EAAOqL,EAAU,KAIzB,KAAOb,EAAc3H,KAAKuI,IAAI,EAAGF,GAAeV,IAC5CxK,EAAOpQ,KAAK,GAChB,IAAI6b,EAAqC,IAAjBP,EAGxB,MAAMQ,EAASf,EAAUb,EAAaC,WAEhC4B,EAAQ3L,EAAO4L,YAAY,SAAUD,EAAO9J,EAAGxC,EAAGW,GACpD6B,OACA7B,EAAOX,IADPwC,GAAQ8J,GACQ,GAAK9J,EAAIA,EAAI,GACzB4J,IAEkB,IAAdzL,EAAOX,IAAYA,GAAKqM,EACxB1L,EAAOrQ,MAGP8b,GAAoB,GAGrB5J,GAAK,GAAK,EAAI,GACtB,GACC8J,IACA3L,EAAOwL,QAAQG,GACf7B,EAAaC,cAhErB,CAzQoBD,EAAcY,EAAaE,GACvC,IAAI5K,EAAS8J,EAAa9J,OACtB+J,EAAaD,EAAaC,WAC9B,MAAMI,EAAWL,EAAaK,SAC9B,IAAI0B,EAAW,GAGf,IAFAjC,EAAS5J,EAAO8L,MAAMjK,IAAMA,GAErBkI,EAAaU,EAAQV,IACxB/J,EAAOwL,QAAQ,GAGnB,KAAOzB,EAAa,EAAGA,IACnB/J,EAAOwL,QAAQ,GAGfzB,EAAa,EACb8B,EAAW7L,EAAOsK,OAAOP,EAAY/J,EAAOzR,SAG5Csd,EAAW7L,EACXA,EAAS,CAAC,IAGd,MAAM+L,EAAS,GAIf,IAHI/L,EAAOzR,QAAU+a,EAAQ0C,QACzBD,EAAOP,QAAQxL,EAAOsK,QAAQhB,EAAQ0C,OAAQhM,EAAOzR,QAAQ0d,KAAK,KAE/DjM,EAAOzR,OAAS+a,EAAQ4C,OAC3BH,EAAOP,QAAQxL,EAAOsK,QAAQhB,EAAQ4C,MAAOlM,EAAOzR,QAAQ0d,KAAK,KAEjEjM,EAAOzR,QACPwd,EAAOP,QAAQxL,EAAOiM,KAAK,KAE/BtC,EAAgBoC,EAAOE,KAAKpF,EAAsB5I,EAAQsL,IAEtDsC,EAAStd,SACTob,GAAiB9C,EAAsB5I,EAAQuL,GAAiBqC,EAASI,KAAK,KAE9E9B,IACAR,GAAiB9C,EAAsB5I,EAAQtB,EAAaM,aAAe,IAAMkN,QAtErFR,EAAgB9C,EAAsB5I,EAAQtB,EAAaS,UAyE/D,OACIuM,EADAtI,EAAQ,IAAMuI,EACEN,EAAQ6C,OAASxC,EAAgBL,EAAQ8C,OAGzC9C,EAAQ+C,OAAS1C,EAAgBL,EAAQgD,OAEtD3C,EA2BX,YAAwBtI,EAAOpD,EAAQ6B,EAAUyM,EAAc9C,GAC3D,MACMH,EAAUkD,GADDC,EAAsBxO,EAAQ9C,EAAkBG,UACrBuL,EAAsB5I,EAAQtB,EAAaK,YACrFsM,SAAQqB,QAAU+B,GAA0BH,GAC5CjD,EAAQuB,QAAUvB,EAAQqB,QAEnB/L,GADgCyC,EAAOiI,EAASrL,EAAQtB,EAAaa,cAAeb,EAAaY,gBAAiBkM,GAEpHnX,QA1Ha,OA0HUwN,GAEvBxN,QA5Ha,OA4HU,IAKvBoP,OAqBT,YAAuBL,EAAOpD,EAAQwL,GAIlC,OAAO7K,GADgCyC,EADvBmL,GADDC,EAAsBxO,EAAQ9C,EAAkBE,SACrBwL,EAAsB5I,EAAQtB,EAAaK,YAC9BiB,EAAQtB,EAAaC,MAAOD,EAAavB,QAASqO,GAAY,GAC1GnX,QAAQ,IAAIqa,OAzJN,IAyJ2B,KAAM9F,EAAsB5I,EAAQtB,EAAaG,cAmBjG,YAAsBuE,EAAOpD,EAAQwL,GAGjC,OAAOmD,GAA2BvL,EADlBmL,GADDC,EAAsBxO,EAAQ9C,EAAkBC,SACrByL,EAAsB5I,EAAQtB,EAAaK,YACnCiB,EAAQtB,EAAaC,MAAOD,EAAavB,QAASqO,GAExG,YAA2B5J,EAAQ6F,EAAY,KAC3C,MAAMmH,EAAI,CACNpC,OAAQ,EACRE,QAAS,EACTE,QAAS,EACTwB,OAAQ,GACRC,OAAQ,GACRH,OAAQ,GACRC,OAAQ,GACRF,MAAO,EACPF,OAAQ,GAENc,EAAejN,EAAOJ,MAjMZ,KAkMVsN,EAAWD,EAAa,GACxBE,EAAWF,EAAa,GACxBG,GAAkD,IAAlCF,EAAS3C,QAtMf,KAuMZ2C,EAAStN,MAvMG,KAwMZ,CACIsN,EAASpe,UAAU,EAAGoe,EAASG,YAAY7D,IAAa,GACxD0D,EAASpe,UAAUoe,EAASG,YAAY7D,IAAa,IACtD8D,EAAUF,EAAc,GAAIG,EAAWH,EAAc,IAAM,GAClEJ,EAAER,OAASc,EAAQpH,OAAO,EAAGoH,EAAQ/C,QAxMtB,MAyMf,QAAS/K,EAAI,EAAGA,EAAI+N,EAAS7e,OAAQ8Q,IAAK,CACtC,MAAMgO,EAAKD,EAAS/C,OAAOhL,GACvBgO,IAAOhE,GACPwD,EAAElC,QAAUkC,EAAEhC,QAAUxL,EAAI,EA5MrB,MA8MNiO,EACDT,EAAEhC,QAAUxL,EAAI,EAGhBwN,EAAEP,QAAUe,EAGpB,MAAMtB,EAASoB,EAAQ1N,MAtNT,KAyNd,GAFAoN,EAAEX,MAAQH,EAAO,GAAKA,EAAO,GAAGxd,OAAS,EACzCse,EAAEb,OAAUD,EAAO,IAAMA,EAAO,IAAOA,EAAO,IAAMA,EAAO,IAAIxd,OAAS,EACpEye,EAAU,CACV,MAAMO,EAAWR,EAASxe,OAASse,EAAER,OAAO9d,OAASse,EAAEP,OAAO/d,OAAQif,EAAMR,EAAS5C,QAzN1E,KA0NXyC,EAAEV,OAASa,EAASjH,OAAO,EAAGyH,GAAKlb,QAAQ,KAAM,IACjDua,EAAET,OAASY,EAASjH,OAAOyH,EAAMD,GAAUjb,QAAQ,KAAM,SAGzDua,EAAEV,OAASzG,EAAYmH,EAAER,OACzBQ,EAAET,OAASS,EAAEP,OAEjB,OAAOO,EAoJX,YAA2BlJ,GACvB,MAAM2E,EAASmF,SAAS9J,GACxB,GAAIlC,MAAM6G,GACN,MAAM,IAAInd,MAAM,wCAA0CwY,GAE9D,OAAO2E,EAaX,UAOA,YAA2BjH,EAAOqM,EAAOC,EAAgB1P,GACrD,IAAIuH,EAAO,IAAGnE,IAKd,GAJIqM,EAAMtD,QAAQ5E,IAAO,IAGzBA,EAAMmI,EAAeC,kBAAkBvM,EAAOpD,GAC1CyP,EAAMtD,QAAQ5E,IAAO,GACrB,OAAOA,EAEX,GAAIkI,EAAMtD,QAAQ,UAAW,EACzB,MAAO,QAEX,MAAM,IAAIjf,MAAO,sCAAqCkW,UAOpDwM,SAAN,gBAAmCC,GAC/B/hB,YAAYkS,GACRhS,QACAC,KAAK+R,OAASA,EAElB2P,kBAAkBvM,EAAOpD,GAErB,OADea,EAAoBb,GAAU/R,KAAK+R,OAAnCa,CAA2CuC,SAEjD7F,EAAOC,KACR,MAAO,YACND,EAAOE,IACR,MAAO,WACNF,EAAOG,IACR,MAAO,WACNH,EAAOI,IACR,MAAO,WACNJ,EAAOK,KACR,MAAO,eAEP,MAAO,UAIvBgS,SAAqBziB,UAAO,SAAsCC,GAAK,OAAO,IAAKA,GAAKwiB,GAAsB1f,qBAAgB4f,eAC9HF,EAAqBviB,WAAsB6C,+BAA0B,CAAEzC,MAAOmiB,EAAsBriB,QAASqiB,EAAqBziB,YAxB5HyiB,MAkDN,YAA4BvP,EAAMiG,EAAUyJ,GACxC,OAAOC,8BAAoB3P,EAAMiG,EAAUyJ,GAU/C,YAA0BE,EAAWlI,GACjCA,EAAOmI,mBAAmBnI,GAC1B,UAAWoI,KAAUF,EAAUzO,MAAM,KAAM,CACvC,MAAM4O,EAAUD,EAAOhE,QAAQ,MACxBkE,EAAYC,IAA0B,GAAXF,EAAgB,CAACD,EAAQ,IAAM,CAACA,EAAOrf,MAAM,EAAGsf,GAAUD,EAAOrf,MAAMsf,EAAU,IACnH,GAAIC,EAAW5M,SAAWsE,EACtB,OAAOwI,mBAAmBD,GAGlC,OAAO,SAsCLE,SAAN,QACI1iB,YAAY2iB,EAAkBC,EAAkBC,EAAOC,GACnD3iB,KAAKwiB,iBAAmBA,EACxBxiB,KAAKyiB,iBAAmBA,EACxBziB,KAAK0iB,MAAQA,EACb1iB,KAAK2iB,UAAYA,EACjB3iB,KAAK4iB,gBAAkB,KACvB5iB,KAAK6iB,gBAAkB,KACvB7iB,KAAK8iB,gBAAkB,GACvB9iB,KAAK+iB,UAAY,eAEX5N,GACNnV,KAAKgjB,eAAehjB,KAAK8iB,iBACzB9iB,KAAK8iB,gBAAmC,iBAAV3N,EAAqBA,EAAM5B,MAAM,OAAS,GACxEvT,KAAKijB,cAAcjjB,KAAK8iB,iBACxB9iB,KAAKijB,cAAcjjB,KAAK+iB,uBAEhB5N,GACRnV,KAAKgjB,eAAehjB,KAAK+iB,WACzB/iB,KAAKijB,cAAcjjB,KAAK8iB,iBACxB9iB,KAAK4iB,gBAAkB,KACvB5iB,KAAK6iB,gBAAkB,KACvB7iB,KAAK+iB,UAA6B,iBAAV5N,EAAqBA,EAAM5B,MAAM,OAAS4B,EAC9DnV,KAAK+iB,aACDG,8BAAoBljB,KAAK+iB,WACzB/iB,KAAK4iB,gBAAkB5iB,KAAKwiB,iBAAiBW,KAAKnjB,KAAK+iB,WAAWK,SAGlEpjB,KAAK6iB,gBAAkB7iB,KAAKyiB,iBAAiBU,KAAKnjB,KAAK+iB,WAAWK,UAI9EC,YACI,GAAIrjB,KAAK4iB,gBAAiB,CACtB,MAAMU,EAAkBtjB,KAAK4iB,gBAAgBhG,KAAK5c,KAAK+iB,WACnDO,GACAtjB,KAAKujB,sBAAsBD,WAG1BtjB,KAAK6iB,gBAAiB,CAC3B,MAAMW,EAAkBxjB,KAAK6iB,gBAAgBjG,KAAK5c,KAAK+iB,WACnDS,GACAxjB,KAAKyjB,sBAAsBD,IAIvCC,sBAAsBC,GAClBA,EAAQC,iBAAkBC,GAAW5jB,KAAK6jB,aAAaD,EAAOtK,IAAKsK,EAAOE,eAC1EJ,EAAQK,mBAAoBH,GAAW5jB,KAAK6jB,aAAaD,EAAOtK,IAAKsK,EAAOE,eAC5EJ,EAAQM,mBAAoBJ,IACpBA,EAAOK,eACPjkB,KAAK6jB,aAAaD,EAAOtK,KAAK,KAI1CiK,sBAAsBG,GAClBA,EAAQC,iBAAkBC,IACtB,GAA2B,iBAAhBA,EAAOM,KAId,MAAM,IAAIjlB,MAAO,kEAAgEklB,qBAAWP,EAAOM,SAHnGlkB,KAAK6jB,aAAaD,EAAOM,MAAM,KAMvCR,EAAQM,mBAAoBJ,GAAW5jB,KAAK6jB,aAAaD,EAAOM,MAAM,IAU1EjB,cAAcmB,GACNA,IACI7I,MAAMC,QAAQ4I,IAAgBA,aAAuBC,IACrDD,EAAYxe,QAAS0e,GAAUtkB,KAAK6jB,aAAaS,GAAO,IAGxDC,OAAOC,KAAKJ,GAAaxe,QAAQ0e,GAAStkB,KAAK6jB,aAAaS,IAASF,EAAYE,MAQ7FtB,eAAeoB,GACPA,IACI7I,MAAMC,QAAQ4I,IAAgBA,aAAuBC,IACrDD,EAAYxe,QAAS0e,GAAUtkB,KAAK6jB,aAAaS,GAAO,IAGxDC,OAAOC,KAAKJ,GAAaxe,QAAQ0e,GAAStkB,KAAK6jB,aAAaS,GAAO,KAI/ET,aAAaS,EAAOG,IAChBH,EAAQA,EAAM9O,SAEV8O,EAAM/Q,MAAM,QAAQ3N,QAAQ0e,IACpBG,EACAzkB,KAAK2iB,UAAU+B,SAAS1kB,KAAK0iB,MAAMiC,cAAeL,GAGlDtkB,KAAK2iB,UAAUiC,YAAY5kB,KAAK0iB,MAAMiC,cAAeL,MAMzE/B,SAAQrjB,UAAO,SAAyBC,GAAK,OAAO,IAAKA,GAAKojB,GAAStgB,8BAAyBA,mBAAyBA,8BAAyBA,mBAAyBA,8BAAyBA,cAAoBA,8BAAyBA,eACjPsgB,EAAQsC,UAAqB5iB,8BAAyB,CAAEiD,KAAMqd,EAASuC,UAAW,CAAC,CAAC,GAAI,UAAW,KAAMC,OAAQ,CAAET,MAAO,CAAC,QAAS,SAAUU,QAAS,aAjHjJzC,MAqMA0C,SAAN,QACIplB,YAAYqlB,GACRllB,KAAKklB,kBAAoBA,EACzBllB,KAAKmlB,cAAgB,KACrBnlB,KAAKolB,WAAa,KAEtBC,YAAY3B,GAGR,GAFA1jB,KAAKklB,kBAAkBI,QACvBtlB,KAAKmlB,cAAgB,KACjBnlB,KAAKulB,kBAAmB,CACxB,MAAMC,EAAaxlB,KAAKylB,2BAA6BzlB,KAAKklB,kBAAkBQ,eAC5E,GAAIhC,EAAQiC,iCAGR,GAFI3lB,KAAKolB,YACLplB,KAAKolB,WAAWQ,UAChB5lB,KAAK2lB,iCAAkC,CACvC,MAAME,EAAeL,EAAWM,IAAIC,eACpC/lB,KAAKolB,WAAaplB,KAAK2lB,iCAAiCvC,OAAOyC,EAAaG,eAG5EhmB,KAAKolB,WAAa,KAK1B,MAAMa,GAF2BjmB,KAAKolB,WAAaplB,KAAKolB,WAAWc,yBAC/DV,EAAWM,IAAIK,6BAC+BC,wBAAwBpmB,KAAKulB,mBAC/EvlB,KAAKmlB,cAAgBnlB,KAAKklB,kBAAkBmB,gBAAgBJ,EAAkBjmB,KAAKklB,kBAAkB7iB,OAAQmjB,EAAYxlB,KAAKsmB,2BAGtI9iB,cACQxD,KAAKolB,YACLplB,KAAKolB,WAAWQ,WAG5BX,SAAkB/lB,UAAO,SAAmCC,GAAK,OAAO,IAAKA,GAAK8lB,GAAmBhjB,8BAAyBA,sBAC9HgjB,EAAkBJ,UAAqB5iB,8BAAyB,CAAEiD,KAAM+f,EAAmBH,UAAW,CAAC,CAAC,GAAI,oBAAqB,KAAMC,OAAQ,CAAEQ,kBAAmB,oBAAqBE,0BAA2B,4BAA6Ba,yBAA0B,2BAA4BX,iCAAkC,oCAAsCY,SAAU,CAACtkB,oCAlCpXgjB,MAmEN,SACIplB,YAAY2mB,EAAWC,EAAS7jB,EAAO8jB,GACnC1mB,KAAKwmB,UAAYA,EACjBxmB,KAAKymB,QAAUA,EACfzmB,KAAK4C,MAAQA,EACb5C,KAAK0mB,MAAQA,cAGb,OAAsB,IAAf1mB,KAAK4C,MAAU+jB,WAGtB,OAAO3mB,KAAK4C,QAAU5C,KAAK0mB,MAAQ,aAGnC,OAAO1mB,KAAK4C,MAAQ,GAAM,YAG1B,OAAQ5C,KAAK4mB,UAqGfC,SAAN,QACIhnB,YAAYinB,EAAgBC,EAAWC,GACnChnB,KAAK8mB,eAAiBA,EACtB9mB,KAAK+mB,UAAYA,EACjB/mB,KAAKgnB,SAAWA,EAChBhnB,KAAKinB,SAAW,KAChBjnB,KAAKknB,eAAgB,EACrBlnB,KAAKmnB,QAAU,iBAMPV,GACRzmB,KAAKinB,SAAWR,EAChBzmB,KAAKknB,eAAgB,mBAoBRxmB,GAQbV,KAAKonB,WAAa1mB,qBAGlB,OAAOV,KAAKonB,6BAMEjS,GAIVA,IACAnV,KAAK+mB,UAAY5R,GAMzBkO,YACI,GAAIrjB,KAAKknB,cAAe,CACpBlnB,KAAKknB,eAAgB,EAErB,MAAM/R,EAAQnV,KAAKinB,SACnB,IAAKjnB,KAAKmnB,SAAWhS,EACjB,IACInV,KAAKmnB,QAAUnnB,KAAKgnB,SAAS7D,KAAKhO,GAAOiO,OAAOpjB,KAAKqnB,oBAElDljB,GACH,MAAM,IAAIlF,MAAO,2CAA0CkW,eAsF/E,SAAqBjQ,GACjB,OAAOA,EAAK4U,aAAkB5U,EADlC,CAtF8GiQ,kEAItG,GAAInV,KAAKmnB,QAAS,CACd,MAAMzD,EAAU1jB,KAAKmnB,QAAQvK,KAAK5c,KAAKinB,UACnCvD,GACA1jB,KAAKsnB,cAAc5D,IAG/B4D,cAAc5D,GACV,MAAM6D,EAAe,GACrB7D,EAAQ8D,iBAAiB,CAACtD,EAAMuD,EAAuBC,KACnD,GAA0B,MAAtBxD,EAAKyD,cAAuB,CAI5B,MAAMC,EAAO5nB,KAAK8mB,eAAee,mBAAmB7nB,KAAK+mB,UAAW,IAAIe,GAAe,KAAM9nB,KAAKinB,UAAU,GAAI,GAAsB,OAAjBS,OAAwBnhB,EAAYmhB,GACnJK,EAAQ,IAAIC,GAAgB9D,EAAM0D,GACxCL,EAAa7jB,KAAKqkB,WAEG,MAAhBL,EACL1nB,KAAK8mB,eAAemB,OAAiC,OAA1BR,OAAiClhB,EAAYkhB,WAEzC,OAA1BA,EAAgC,CACrC,MAAMG,EAAO5nB,KAAK8mB,eAAehB,IAAI2B,GACrCznB,KAAK8mB,eAAeoB,KAAKN,EAAMF,GAC/B,MAAMK,EAAQ,IAAIC,GAAgB9D,EAAM0D,GACxCL,EAAa7jB,KAAKqkB,MAG1B,QAAS5U,EAAI,EAAGA,EAAIoU,EAAallB,OAAQ8Q,IACrCnT,KAAKmoB,eAAeZ,EAAapU,GAAGyU,KAAML,EAAapU,GAAGyQ,QAE9D,QAASzQ,EAAI,EAAGiV,EAAOpoB,KAAK8mB,eAAezkB,OAAQ8Q,EAAIiV,EAAMjV,IAAK,CAC9D,MAAMkV,EAAUroB,KAAK8mB,eAAehB,IAAI3S,GACxCkV,EAAQC,QAAQ1lB,MAAQuQ,EACxBkV,EAAQC,QAAQ5B,MAAQ0B,EACxBC,EAAQC,QAAQ7B,QAAUzmB,KAAKinB,SAEnCvD,EAAQ6E,sBAAuB3E,IACX5jB,KAAK8mB,eAAehB,IAAIlC,EAAO8D,cACvCY,QAAQ9B,UAAY5C,EAAOM,OAG3CiE,eAAeP,EAAMhE,GACjBgE,EAAKU,QAAQ9B,UAAY5C,EAAOM,mCAQNsE,EAAKC,GAC/B,OAAO,GAGf5B,SAAQ3nB,UAAO,SAAyBC,GAAK,OAAO,IAAKA,GAAK0nB,GAAS5kB,8BAAyBA,oBAA0BA,8BAAyBA,eAAqBA,8BAAyBA,qBACjM4kB,EAAQhC,UAAqB5iB,8BAAyB,CAAEiD,KAAM2hB,EAAS/B,UAAW,CAAC,CAAC,GAAI,QAAS,GAAI,UAAW,KAAMC,OAAQ,CAAE0B,QAAS,UAAWY,aAAc,eAAgBqB,cAAe,mBApI3L7B,MAyJN,SACIhnB,YAAY+jB,EAAQgE,GAChB5nB,KAAK4jB,OAASA,EACd5jB,KAAK4nB,KAAOA,OAyJde,SAAN,QACI9oB,YAAYinB,EAAgB8B,GACxB5oB,KAAK8mB,eAAiBA,EACtB9mB,KAAK6oB,SAAW,IAAIC,GACpB9oB,KAAK+oB,iBAAmB,KACxB/oB,KAAKgpB,iBAAmB,KACxBhpB,KAAKipB,aAAe,KACpBjpB,KAAKkpB,aAAe,KACpBlpB,KAAK+oB,iBAAmBH,WAKnBO,GACLnpB,KAAK6oB,SAASrC,UAAYxmB,KAAK6oB,SAASO,KAAOD,EAC/CnpB,KAAKqpB,2BAKIT,GACTU,GAAe,WAAYV,GAC3B5oB,KAAK+oB,iBAAmBH,EACxB5oB,KAAKipB,aAAe,KACpBjpB,KAAKqpB,2BAKIT,GACTU,GAAe,WAAYV,GAC3B5oB,KAAKgpB,iBAAmBJ,EACxB5oB,KAAKkpB,aAAe,KACpBlpB,KAAKqpB,cAETA,cACQrpB,KAAK6oB,SAASrC,UACTxmB,KAAKipB,eACNjpB,KAAK8mB,eAAexB,QACpBtlB,KAAKkpB,aAAe,KAChBlpB,KAAK+oB,mBACL/oB,KAAKipB,aACDjpB,KAAK8mB,eAAee,mBAAmB7nB,KAAK+oB,iBAAkB/oB,KAAK6oB,YAK1E7oB,KAAKkpB,eACNlpB,KAAK8mB,eAAexB,QACpBtlB,KAAKipB,aAAe,KAChBjpB,KAAKgpB,mBACLhpB,KAAKkpB,aACDlpB,KAAK8mB,eAAee,mBAAmB7nB,KAAKgpB,iBAAkBhpB,KAAK6oB,0CAWzDL,EAAKC,GAC/B,OAAO,GAGfE,SAAKzpB,UAAO,SAAsBC,GAAK,OAAO,IAAKA,GAAKwpB,GAAM1mB,8BAAyBA,oBAA0BA,8BAAyBA,iBAC1I0mB,EAAK9D,UAAqB5iB,8BAAyB,CAAEiD,KAAMyjB,EAAM7D,UAAW,CAAC,CAAC,GAAI,OAAQ,KAAMC,OAAQ,CAAEqE,KAAM,OAAQG,SAAU,WAAYC,SAAU,cApElJb,MA2FN,SACI9oB,cACIG,KAAKwmB,UAAY,KACjBxmB,KAAKopB,KAAO,MAGpB,YAAwBK,EAAUb,GAE9B,GADgCA,IAAeA,EAAYf,mBAEvD,MAAM,IAAI5oB,MAAO,GAAEwqB,6CAAiDtF,mBAAWyE,QAWvF,SACI/oB,YAAYqlB,EAAmBwE,GAC3B1pB,KAAKklB,kBAAoBA,EACzBllB,KAAK0pB,aAAeA,EACpB1pB,KAAK2pB,UAAW,EAEpBvG,SACIpjB,KAAK2pB,UAAW,EAChB3pB,KAAKklB,kBAAkB2C,mBAAmB7nB,KAAK0pB,cAEnD9D,UACI5lB,KAAK2pB,UAAW,EAChB3pB,KAAKklB,kBAAkBI,QAE3BsE,aAAaC,GACLA,IAAY7pB,KAAK2pB,SACjB3pB,KAAKojB,UAECyG,GAAW7pB,KAAK2pB,UACtB3pB,KAAK4lB,eAsEXkE,SAAN,QACIjqB,cACIG,KAAK+pB,cAAe,EACpB/pB,KAAKgqB,WAAa,EAClBhqB,KAAKiqB,oBAAsB,EAC3BjqB,KAAKkqB,mBAAoB,eAEhBC,GACTnqB,KAAKoqB,UAAYD,EACO,IAApBnqB,KAAKgqB,YACLhqB,KAAKqqB,qBAAoB,GAIjCC,WACI,OAAOtqB,KAAKgqB,aAGhBO,YAAY3C,GACH5nB,KAAKwqB,gBACNxqB,KAAKwqB,cAAgB,IAEzBxqB,KAAKwqB,cAAc9mB,KAAKkkB,GAG5B6C,WAAWtV,GACP,MAAMuV,EAAUvV,GAASnV,KAAKoqB,UAC9B,YAAKF,kBAAoBlqB,KAAKkqB,mBAAqBQ,EACnD1qB,KAAKiqB,sBACDjqB,KAAKiqB,sBAAwBjqB,KAAKgqB,aAClChqB,KAAKqqB,qBAAqBrqB,KAAKkqB,mBAC/BlqB,KAAKiqB,oBAAsB,EAC3BjqB,KAAKkqB,mBAAoB,GAEtBQ,EAEXL,oBAAoBM,GAChB,GAAI3qB,KAAKwqB,eAAiBG,IAAe3qB,KAAK+pB,aAAc,CACxD/pB,KAAK+pB,aAAeY,EACpB,QAASxX,EAAI,EAAGA,EAAInT,KAAKwqB,cAAcnoB,OAAQ8Q,IACvBnT,KAAKwqB,cAAcrX,GAC3ByW,aAAae,KAKzCb,SAAS5qB,UAAO,SAA0BC,GAAK,OAAO,IAAKA,GAAK2qB,IAChEA,EAASjF,UAAqB5iB,8BAAyB,CAAEiD,KAAM4kB,EAAUhF,UAAW,CAAC,CAAC,GAAI,WAAY,KAAMC,OAAQ,CAAE6F,SAAU,cA/C1Hd,MA0FAe,SAAN,QACIhrB,YAAYirB,EAAelC,EAAagC,GACpC5qB,KAAK4qB,SAAWA,EAIhBA,EAASN,WACTtqB,KAAK+qB,MAAQ,IAAIC,GAAWF,EAAelC,GAK/CvF,YACIrjB,KAAK+qB,MAAMnB,aAAa5pB,KAAK4qB,SAASH,WAAWzqB,KAAKirB,gBAG9DJ,SAAa3rB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAK0rB,GAAc5oB,8BAAyBA,oBAA0BA,8BAAyBA,eAAqBA,8BAAyB6nB,GAAU,KAC1Ne,EAAahG,UAAqB5iB,8BAAyB,CAAEiD,KAAM2lB,EAAc/F,UAAW,CAAC,CAAC,GAAI,eAAgB,KAAMC,OAAQ,CAAEkG,aAAc,kBAjB1IJ,MAkDAK,SAAN,QACIrrB,YAAYirB,EAAelC,EAAagC,GAIpCA,EAASL,YAAY,IAAIS,GAAWF,EAAelC,KAG3DsC,SAAgBhsB,UAAO,SAAiCC,GAAK,OAAO,IAAKA,GAAK+rB,GAAiBjpB,8BAAyBA,oBAA0BA,8BAAyBA,eAAqBA,8BAAyB6nB,GAAU,KACnOoB,EAAgBrG,UAAqB5iB,8BAAyB,CAAEiD,KAAMgmB,EAAiBpG,UAAW,CAAC,CAAC,GAAI,kBAAmB,OATrHoG,MAmEAC,SAAN,QACItrB,YAAYurB,GACRprB,KAAKorB,cAAgBA,EACrBprB,KAAKqrB,WAAa,gBAETlW,GACTnV,KAAKsrB,aAAenW,EACpBnV,KAAKqpB,cAETkC,QAAQpW,EAAOqW,GACXxrB,KAAKqrB,WAAWlW,GAASqW,EAE7BnC,cACIrpB,KAAKyrB,cACL,MAAMjK,EAAQ+C,OAAOC,KAAKxkB,KAAKqrB,YACzB/R,EAAMoI,GAAkB1hB,KAAKsrB,aAAc9J,EAAOxhB,KAAKorB,eAC7DprB,KAAK0rB,cAAc1rB,KAAKqrB,WAAW/R,IAEvCmS,cACQzrB,KAAK2rB,aACL3rB,KAAK2rB,YAAY/F,UAEzB8F,cAAc9D,GACNA,IACA5nB,KAAK2rB,YAAc/D,EACnB5nB,KAAK2rB,YAAYvI,WAI7B+H,SAASjsB,UAAO,SAA0BC,GAAK,OAAO,IAAKA,GAAKgsB,GAAUlpB,8BAAyB2f,MACnGuJ,EAAStG,UAAqB5iB,8BAAyB,CAAEiD,KAAMimB,EAAUrG,UAAW,CAAC,CAAC,GAAI,WAAY,KAAMC,OAAQ,CAAE6G,SAAU,cA9B1HT,MA+DAU,SAAN,QACIhsB,YAAYsV,EAAO2W,EAAUhB,EAAec,GACxC5rB,KAAKmV,MAAQA,EACb,MAAM4W,GAAaxW,MAAMiB,OAAOrB,IAChCyW,EAASL,QAAQQ,EAAa,IAAG5W,IAAUA,EAAO,IAAI6V,GAAWF,EAAegB,KAGxFD,SAAa3sB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAK0sB,GAAc5pB,8BAAyB,gBAAiBA,8BAAyBA,eAAqBA,8BAAyBA,oBAA0BA,8BAAyBkpB,GAAU,KACpQU,EAAahH,UAAqB5iB,8BAAyB,CAAEiD,KAAM2mB,EAAc/G,UAAW,CAAC,CAAC,GAAI,eAAgB,OAR5G+G,MAoEAG,SAAN,QACInsB,YAAY6iB,EAAOsE,EAAUrE,GACzB3iB,KAAK0iB,MAAQA,EACb1iB,KAAKgnB,SAAWA,EAChBhnB,KAAK2iB,UAAYA,EACjB3iB,KAAKisB,SAAW,KAChBjsB,KAAKmnB,QAAU,iBAEP+E,GACRlsB,KAAKisB,SAAWC,GACXlsB,KAAKmnB,SAAW+E,IACjBlsB,KAAKmnB,QAAUnnB,KAAKgnB,SAAS7D,KAAK+I,GAAQ9I,UAGlDC,YACI,GAAIrjB,KAAKmnB,QAAS,CACd,MAAMzD,EAAU1jB,KAAKmnB,QAAQvK,KAAK5c,KAAKisB,UACnCvI,GACA1jB,KAAKsnB,cAAc5D,IAI/ByI,UAAUC,EAAajX,GACnB,MAAO2E,EAAMuS,GAAQD,EAAY7Y,MAAM,KAE1B,OADb4B,EAAiB,MAATA,GAAiBkX,EAAQ,GAAElX,IAAQkX,IAASlX,GAEhDnV,KAAK2iB,UAAU2J,SAAStsB,KAAK0iB,MAAMiC,cAAe7K,EAAM3E,GAGxDnV,KAAK2iB,UAAU4J,YAAYvsB,KAAK0iB,MAAMiC,cAAe7K,GAG7DwN,cAAc5D,GACVA,EAAQM,mBAAoBJ,GAAW5jB,KAAKmsB,UAAUvI,EAAOtK,IAAK,OAClEoK,EAAQC,iBAAkBC,GAAW5jB,KAAKmsB,UAAUvI,EAAOtK,IAAKsK,EAAOE,eACvEJ,EAAQK,mBAAoBH,GAAW5jB,KAAKmsB,UAAUvI,EAAOtK,IAAKsK,EAAOE,gBAGjFkI,SAAQ9sB,UAAO,SAAyBC,GAAK,OAAO,IAAKA,GAAK6sB,GAAS/pB,8BAAyBA,cAAoBA,8BAAyBA,mBAAyBA,8BAAyBA,eAC/L+pB,EAAQnH,UAAqB5iB,8BAAyB,CAAEiD,KAAM8mB,EAASlH,UAAW,CAAC,CAAC,GAAI,UAAW,KAAMC,OAAQ,CAAEyH,QAAS,aAvCtHR,MAuFAS,SAAN,QACI5sB,YAAYqlB,GACRllB,KAAKklB,kBAAoBA,EACzBllB,KAAK0sB,SAAW,KAOhB1sB,KAAK2sB,wBAA0B,KAI/B3sB,KAAK4sB,iBAAmB,KAE5BvH,YAAY3B,GACR,GAAIA,EAAQkJ,iBAAqB,CAC7B,MAAMC,EAAmB7sB,KAAKklB,kBAC1BllB,KAAK0sB,UACLG,EAAiB5E,OAAO4E,EAAiB3O,QAAQle,KAAK0sB,WAE1D1sB,KAAK0sB,SAAW1sB,KAAK4sB,iBACjBC,EAAiBhF,mBAAmB7nB,KAAK4sB,iBAAkB5sB,KAAK2sB,yBAChE,UAEC3sB,KAAK0sB,UAAYhJ,EAAQiJ,yBAA8B3sB,KAAK2sB,0BACjE3sB,KAAK0sB,SAASpE,QAAUtoB,KAAK2sB,0BAIzCF,SAAiBvtB,UAAO,SAAkCC,GAAK,OAAO,IAAKA,GAAKstB,GAAkBxqB,8BAAyBA,sBAC3HwqB,EAAiB5H,UAAqB5iB,8BAAyB,CAAEiD,KAAMunB,EAAkB3H,UAAW,CAAC,CAAC,GAAI,mBAAoB,KAAMC,OAAQ,CAAE4H,wBAAyB,0BAA2BC,iBAAkB,oBAAsBrG,SAAU,CAACtkB,oCAhC/OwqB,MA4DN,MAAMK,GAAoB,CACtBvK,GACA0C,GACA4B,GACA8B,GACA8D,GACAT,GACAlC,GACAe,GACAK,GACAC,GACAU,IAUJ,YAAkC3mB,EAAMiQ,GACpC,OAAOlW,MAAO,yBAAwBkW,mBAAoBgP,mBAAWjf,OAUzE,SACI6nB,mBAAmBC,EAAOC,GACtB,OAAOD,EAAMtnB,UAAU,CACnBM,KAAMinB,EACNhnB,MAAQinB,IACJ,MAAMA,KAIlBC,QAAQC,GACJA,EAAaC,cAEjBC,UAAUF,GACNA,EAAaC,eAGrB,SACIN,mBAAmBC,EAAOC,GACtB,OAAOD,EAAMO,KAAKN,EAAmBC,IACjC,MAAMA,IAGdC,QAAQC,IACRE,UAAUF,KAEd,MAAMI,GAAmB,IAAIC,GACvBC,GAAwB,IAAIC,OA4B5BC,SAAN,QACI/tB,YAAYguB,GACR7tB,KAAK6tB,KAAOA,EACZ7tB,KAAK8tB,aAAe,KACpB9tB,KAAK+tB,cAAgB,KACrB/tB,KAAKguB,KAAO,KACZhuB,KAAKiuB,UAAY,KAErBzqB,cACQxD,KAAK+tB,eACL/tB,KAAKkuB,WAGbC,UAAUC,GACN,OAAKpuB,KAAKguB,KAMNI,IAAQpuB,KAAKguB,MACbhuB,KAAKkuB,WACEluB,KAAKmuB,UAAUC,IAEnBpuB,KAAK8tB,cATJM,GACApuB,KAAKquB,WAAWD,GAEbpuB,KAAK8tB,cAQpBO,WAAWD,GACPpuB,KAAKguB,KAAOI,EACZpuB,KAAKiuB,UAAYjuB,KAAKsuB,gBAAgBF,GACtCpuB,KAAK+tB,cAAgB/tB,KAAKiuB,UAAUlB,mBAAmBqB,EAAMjZ,GAAUnV,KAAKuuB,mBAAmBH,EAAKjZ,IAExGmZ,gBAAgBF,GACZ,MAAII,mBAAWJ,GACX,OAAOZ,GAEX,MAAIiB,wBAAgBL,GAChB,OAAOV,GAEX,MAAMgB,GAAyBd,EAAWQ,GAE9CF,WACIluB,KAAKiuB,UAAUd,QAAQntB,KAAK+tB,eAC5B/tB,KAAK8tB,aAAe,KACpB9tB,KAAK+tB,cAAgB,KACrB/tB,KAAKguB,KAAO,KAEhBO,mBAAmBvB,EAAO7X,GAClB6X,IAAUhtB,KAAKguB,OACfhuB,KAAK8tB,aAAe3Y,EACpBnV,KAAK6tB,KAAKc,iBAItBf,SAAU1uB,UAAO,SAA2BC,GAAK,OAAO,IAAKA,GAAKyuB,GAAW3rB,8BAAyBA,oBAA0B,MAChI2rB,EAAUgB,WAAsB3sB,yBAAoB,CAAE6X,KAAM,QAAS5U,KAAM0oB,EAAWiB,MAAM,IAtDtFjB,MAqFAkB,SAAN,QACIX,UAAUhZ,GACN,GAAa,MAATA,EACA,OAAO,KACX,GAAqB,iBAAVA,EACP,MAAMuZ,GAAyBI,EAAe3Z,GAElD,OAAOA,EAAM4Z,eAGrBD,SAAc5vB,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAK2vB,IAC1EA,EAAcF,WAAsB3sB,yBAAoB,CAAE6X,KAAM,YAAa5U,KAAM4pB,EAAeD,MAAM,IAXlGC,MAwBN,MAAME,GAAmB,85NAkBnBC,SAAN,QACId,UAAUhZ,GACN,GAAa,MAATA,EACA,OAAO,KACX,GAAqB,iBAAVA,EACP,MAAMuZ,GAAyBO,EAAe9Z,GAElD,OAAOA,EAAM/O,QAAQ4oB,GAAmBE,GAAOA,EAAI,GAAGC,cAAgBD,EAAIrV,OAAO,GAAGkV,gBAG5FE,SAAc/vB,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAK8vB,IAC1EA,EAAcL,WAAsB3sB,yBAAoB,CAAE6X,KAAM,YAAa5U,KAAM+pB,EAAeJ,MAAM,IAXlGI,MAwBAG,SAAN,QACIjB,UAAUhZ,GACN,GAAa,MAATA,EACA,OAAO,KACX,GAAqB,iBAAVA,EACP,MAAMuZ,GAAyBU,EAAeja,GAElD,OAAOA,EAAMga,eAGrBC,SAAclwB,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAKiwB,IAC1EA,EAAcR,WAAsB3sB,yBAAoB,CAAE6X,KAAM,YAAa5U,KAAMkqB,EAAeP,MAAM,IAXlGO,MAkLAC,SAAN,QACIxvB,YAAYkS,GACR/R,KAAK+R,OAASA,EAElBoc,UAAUhZ,EAAOxB,EAAS,aAAcyB,EAAUrD,GAC9C,GAAa,MAAToD,GAA2B,KAAVA,GAAgBA,GAAUA,EAC3C,OAAO,KACX,IACI,OAAOma,GAAWna,EAAOxB,EAAQ5B,GAAU/R,KAAK+R,OAAQqD,SAErDnP,GACH,MAAMyoB,GAAyBW,EAAUppB,EAAMspB,WAI3DF,SAASnwB,UAAO,SAA0BC,GAAK,OAAO,IAAKA,GAAKkwB,GAAUptB,8BAAyB4f,YAAW,MAC9GwN,EAAST,WAAsB3sB,yBAAoB,CAAE6X,KAAM,OAAQ5U,KAAMmqB,EAAUR,MAAM,IAhBnFQ,MAmCN,MAAMG,GAAwB,SAexBC,SAAN,QACI5vB,YAAYurB,GACRprB,KAAKorB,cAAgBA,EASzB+C,UAAUhZ,EAAOua,EAAW3d,GACxB,GAAa,MAAToD,EACA,MAAO,GACX,GAAyB,iBAAdua,GAAwC,OAAdA,EACjC,MAAMhB,GAAyBe,EAAgBC,GAGnD,OAAOA,EADKhO,GAAkBvM,EAAOoP,OAAOC,KAAKkL,GAAY1vB,KAAKorB,cAAerZ,IAC3D3L,QAAQopB,GAAuBra,EAAMwa,aAGnEF,SAAevwB,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAKswB,GAAgBxtB,8BAAyB2f,GAAgB,MACrI6N,EAAeb,WAAsB3sB,yBAAoB,CAAE6X,KAAM,aAAc5U,KAAMuqB,EAAgBZ,MAAM,IAtBrGY,MAuDAG,SAAN,QAMIzB,UAAUhZ,EAAO0a,GACb,GAAa,MAAT1a,EACA,MAAO,GACX,GAAuB,iBAAZ0a,GAAyC,iBAAV1a,EACtC,MAAMuZ,GAAyBkB,EAAgBC,GAEnD,OAAIA,EAAQC,eAAe3a,GAChB0a,EAAQ1a,GAEf0a,EAAQC,eAAe,SAChBD,EAAQE,MAEZ,IAGfH,SAAe1wB,UAAO,SAAgCC,GAAK,OAAO,IAAKA,GAAKywB,IAC5EA,EAAehB,WAAsB3sB,yBAAoB,CAAE6X,KAAM,aAAc5U,KAAM0qB,EAAgBf,MAAM,IAtBrGe,MAkDAI,SAAN,QAII7B,UAAUhZ,GACN,OAAO8a,KAAKC,UAAU/a,EAAO,KAAM,IAG3C6a,SAAS9wB,UAAO,SAA0BC,GAAK,OAAO,IAAKA,GAAK6wB,IAChEA,EAASpB,WAAsB3sB,yBAAoB,CAAE6X,KAAM,OAAQ5U,KAAM8qB,EAAUnB,MAAM,IATnFmB,MA6CAG,SAAN,QACItwB,YAAYuwB,GACRpwB,KAAKowB,QAAUA,EACfpwB,KAAKqwB,UAAY,GAErBlC,UAAUmC,EAAOC,EAAYC,IACzB,IAAKF,KAAYA,aAAiBG,MAAyB,iBAAVH,EAC7C,OAAO,KAENtwB,KAAK0wB,SAEN1wB,KAAK0wB,OAAS1wB,KAAKowB,QAAQjN,KAAKmN,GAAOlN,UAE3C,MAAMuN,EAAgB3wB,KAAK0wB,OAAO9T,KAAK0T,GACvC,OAAIK,IACA3wB,KAAKqwB,UAAY,GACjBM,EAAcC,YAAaC,IACvB7wB,KAAKqwB,UAAU3sB,KAxC/B,SAA0B4V,EAAKnE,GAC3B,MAAO,CAAEmE,IAAKA,EAAKnE,MAAOA,GAD9B,CAwCqD0b,EAAEvX,IAAKuX,EAAE/M,iBAElD9jB,KAAKqwB,UAAUS,KAAKP,IAEjBvwB,KAAKqwB,WAGpBF,SAAajxB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAKgxB,GAAcluB,8BAAyBA,kBAAwB,MACvIkuB,EAAavB,WAAsB3sB,yBAAoB,CAAE6X,KAAM,WAAY5U,KAAMirB,EAActB,MAAM,IAzB/FsB,MAiCN,YAA2BY,EAAWC,GAClC,MAAMC,EAAIF,EAAUzX,IACd4X,EAAIF,EAAU1X,IAEpB,GAAI2X,IAAMC,EACN,OAAO,EAEX,QAAU3qB,IAAN0qB,EACA,OAAO,EACX,QAAU1qB,IAAN2qB,EACA,OAAO,EAEX,GAAU,OAAND,EACA,OAAO,EACX,GAAU,OAANC,EACA,OAAO,EACX,GAAgB,iBAALD,GAA6B,iBAALC,EAC/B,OAAOD,EAAIC,GAAI,EAAK,EAExB,GAAgB,iBAALD,GAA6B,iBAALC,EAC/B,OAAOD,EAAIC,EAEf,GAAgB,kBAALD,GAA8B,kBAALC,EAChC,OAAOD,EAAIC,GAAI,EAAK,EAGxB,MAAMC,EAAUvX,OAAOqX,GACjBG,EAAUxX,OAAOsX,GACvB,OAAOC,GAAWC,EAAU,EAAID,EAAUC,GAAU,EAAK,MAyEvDC,SAAN,QACIxxB,YAAYyxB,GACRtxB,KAAKsxB,QAAUA,EASnBnD,UAAUhZ,EAAOoI,EAAYxL,GACzB,IAAKwf,GAAQpc,GACT,OAAO,KACXpD,EAASA,GAAU/R,KAAKsxB,QACxB,IAEI,OAAOE,GADKC,GAAYtc,GACCpD,EAAQwL,SAE9BtX,GACH,MAAMyoB,GAAyB2C,EAAaprB,EAAMspB,WAI9D8B,SAAYnyB,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAKkyB,GAAapvB,8BAAyB4f,YAAW,MACvHwP,EAAYzC,WAAsB3sB,yBAAoB,CAAE6X,KAAM,SAAU5U,KAAMmsB,EAAaxC,MAAM,IAzB3FwC,MAwDAK,SAAN,QACI7xB,YAAYyxB,GACRtxB,KAAKsxB,QAAUA,EAkBnBnD,UAAUhZ,EAAOoI,EAAYxL,GACzB,IAAKwf,GAAQpc,GACT,OAAO,KACXpD,EAASA,GAAU/R,KAAKsxB,QACxB,IAEI,OAAOK,GADKF,GAAYtc,GACEpD,EAAQwL,SAE/BtX,GACH,MAAMyoB,GAAyBgD,EAAazrB,EAAMspB,WAI9DmC,SAAYxyB,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAKuyB,GAAazvB,8BAAyB4f,YAAW,MACvH6P,EAAY9C,WAAsB3sB,yBAAoB,CAAE6X,KAAM,UAAW5U,KAAMwsB,EAAa7C,MAAM,IAlC5F6C,MAqFAE,SAAN,QACI/xB,YAAYyxB,EAASO,EAAuB,OACxC7xB,KAAKsxB,QAAUA,EACftxB,KAAK6xB,qBAAuBA,EAmChC1D,UAAUhZ,EAAOkL,EAAergB,KAAK6xB,qBAAsBC,EAAU,SAAUvU,EAAYxL,GACvF,IAAKwf,GAAQpc,GACT,OAAO,KACXpD,EAASA,GAAU/R,KAAKsxB,QACD,kBAAZQ,IAIPA,EAAUA,EAAU,SAAW,QAEnC,IAAIle,EAAWyM,GAAgBrgB,KAAK6xB,qBACpB,SAAZC,IAEIle,EADY,WAAZke,GAAoC,kBAAZA,EACbC,GAAkBne,EAAsB,WAAZke,EAAuB,OAAS,SAAU/f,GAGtE+f,GAGnB,IAEI,OAAOE,GADKP,GAAYtc,GACGpD,EAAQ6B,EAAUyM,EAAc9C,SAExDtX,GACH,MAAMyoB,GAAyBkD,EAAc3rB,EAAMspB,WAI/DqC,SAAa1yB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAKyyB,GAAc3vB,8BAAyB4f,YAAW,IAAK5f,8BAAyBgwB,wBAAuB,MAC/KL,EAAahD,WAAsB3sB,yBAAoB,CAAE6X,KAAM,WAAY5U,KAAM0sB,EAAc/C,MAAM,IAnE/F+C,MAkFN,YAAiBzc,GACb,QAAkB,MAATA,GAA2B,KAAVA,GAAgBA,GAAUA,GAKxD,YAAqBA,GAEjB,GAAqB,iBAAVA,IAAuBI,MAAMiB,OAAOrB,GAASY,WAAWZ,IAC/D,OAAOqB,OAAOrB,GAElB,GAAqB,iBAAVA,EACP,MAAM,IAAIlW,MAAO,GAAEkW,qBAEvB,OAAOA,MA6CL+c,SAAN,QACI/D,UAAUhZ,EAAOhT,EAAOC,GACpB,GAAa,MAAT+S,EACA,OAAO,KACX,IAAKnV,KAAKmyB,SAAShd,GACf,MAAMuZ,GAAyBwD,EAAW/c,GAE9C,OAAOA,EAAMtS,MAAMV,EAAOC,GAE9B+vB,SAAS/D,GACL,MAAsB,iBAARA,GAAoB7S,MAAMC,QAAQ4S,IAGxD8D,SAAUhzB,UAAO,SAA2BC,GAAK,OAAO,IAAKA,GAAK+yB,IAClEA,EAAUtD,WAAsB3sB,yBAAoB,CAAE6X,KAAM,QAAS5U,KAAMgtB,EAAWrD,MAAM,IAdtFqD,MA8BN,MAAME,GAAe,CACjBxE,GACAwB,GACAN,GACAkB,GACAkC,GACAb,GACAK,GACAzC,GACA2C,GACAvC,GACAI,GACAG,GACAO,QAyBEkC,SAAN,SAEAA,SAAanzB,UAAO,SAA8BC,GAAK,OAAO,IAAKA,GAAKkzB,IACxEA,EAAaC,UAAqBrwB,6BAAwB,CAAEiD,KAAMmtB,IAClEA,EAAaE,UAAqBtwB,6BAAwB,CAAEuwB,UAAW,CAC/D,CAAEC,QAAS7Q,GAAgB8Q,SAAU/Q,OALvC0Q,MA0BN,MAAMM,GAAsB,UACtBC,GAAqB,SACrBC,GAAyB,mBACzBC,GAAwB,kBAK9B,YAA2BC,GACvB,OAAOA,IAAeJ,GAM1B,YAA0BI,GACtB,OAAOA,IAAeH,GAM1B,YAA6BG,GACzB,OAAOA,IAAeF,GAM1B,YAA4BE,GACxB,OAAOA,IAAeD,GAa1B,MAAME,GAAU,IAAIC,UAAQ,cActBC,SAAN,SAKAA,SAAiB9zB,cAAQC,gCAAmB,CACxCG,MAAO0zB,EACPzzB,WAAY,OACZH,QAAS,IAAM,IAAI6zB,IAAwBzzB,wBAASd,GAAWuB,UAR7D+yB,MAaN,SACIrzB,YAAYuzB,EAAUjzB,GAClBH,KAAKozB,SAAWA,EAChBpzB,KAAKG,OAASA,EACdH,KAAKga,OAAS,IAAM,CAAC,EAAG,GAQ5BqZ,UAAUrZ,GAEFha,KAAKga,OADLuB,MAAMC,QAAQxB,GACA,IAAMA,EAGNA,EAOtBsZ,oBACI,OAAItzB,KAAKuzB,oBACE,CAACvzB,KAAKG,OAAOqzB,YAAaxzB,KAAKG,OAAOszB,aAGtC,CAAC,EAAG,GAOnBC,iBAAiBC,GACT3zB,KAAKuzB,qBACLvzB,KAAKG,OAAOyzB,SAASD,EAAS,GAAIA,EAAS,IAcnDE,eAAeC,GACX,IAAK9zB,KAAKuzB,oBACN,OAKJ,MAAMQ,EAmFd,SAAgCX,EAAUU,GACtC,MAAME,EAAiBZ,EAASa,eAAeH,IAAWV,EAASc,kBAAkBJ,GAAQ,GAC7F,GAAIE,EACA,OAAOA,EAIX,GAAyC,mBAA9BZ,EAASe,kBAAmCf,EAASgB,OAC3DhB,EAASgB,KAAKC,kBAAoBjB,EAASgB,KAAKE,cAAe,CAChE,MAAMC,EAAanB,EAASe,iBAAiBf,EAASgB,KAAMI,WAAWC,cACvE,IAAIC,EAAcH,EAAWG,YAC7B,KAAOA,GAAa,CAChB,MAAMC,EAAaD,EAAYC,WAC/B,GAAIA,EAAY,CAGZ,MAAMvY,EAASuY,EAAWV,eAAeH,IAAWa,EAAWC,cAAe,UAASd,OACvF,GAAI1X,EACA,OAAOA,EAGfsY,EAAcH,EAAWM,YAGjC,OAAO,KAxBX,CAnFkD70B,KAAKozB,SAAUU,GACrDC,IACA/zB,KAAK80B,gBAAgBf,GAGrB/zB,KAAK+0B,aAAahB,IAM1BiB,4BAA4BC,GACxB,GAAIj1B,KAAKk1B,2BAA4B,CACjC,MAAM70B,EAAUL,KAAKG,OAAOE,QACxBA,GAAWA,EAAQ40B,oBACnB50B,EAAQ40B,kBAAoBA,IAUxCH,gBAAgBK,GACZ,MAAMC,EAAOD,EAAGE,wBACVC,EAAOF,EAAKE,KAAOt1B,KAAKG,OAAOqzB,YAC/B+B,EAAMH,EAAKG,IAAMv1B,KAAKG,OAAOszB,YAC7BzZ,EAASha,KAAKga,SACpBha,KAAKG,OAAOyzB,SAAS0B,EAAOtb,EAAO,GAAIub,EAAMvb,EAAO,IAYxD+a,aAAaS,GACTA,SAAYC,QACLz1B,KAAKozB,SAASsC,gBAAkBF,EAU3CN,2BACI,IACI,IAAKl1B,KAAKuzB,oBACN,OAAO,EAGX,MAAMoC,EAA8BC,GAA6B51B,KAAKG,OAAOE,UACzEu1B,GAA6BrR,OAAOsR,eAAe71B,KAAKG,OAAOE,UAGnE,SAASs1B,IACFA,EAA4BG,WAAYH,EAA4BI,WAExE5xB,GACH,OAAO,GAGfovB,oBACI,IACI,QAASvzB,KAAKG,UAAYH,KAAKG,OAAOyzB,UAAY,gBAAiB5zB,KAAKG,aAErEgE,GACH,OAAO,IAInB,YAAsCiqB,GAClC,OAAO7J,OAAOyR,yBAAyB5H,EAAK,qBA+BhD,SAIIiF,UAAUrZ,IAIVsZ,oBACI,MAAO,CAAC,EAAG,GAKfI,iBAAiBC,IAIjBE,eAAeoC,IAIfjB,4BAA4BC,KAehC","names":["_DOM","adapter","DOCUMENT","InjectionToken","PlatformLocation","historyGo","relativePosition","Error","ɵfac","t","ɵprov","ɵɵdefineInjectable","factory","useBrowserPlatformLocation","token","providedIn","ɵɵinject","BrowserPlatformLocation","LOCATION_INITIALIZED","constructor","_doc","super","this","_init","location","window","_history","history","getBaseHrefFromDOM","getDOM","getBaseHref","onPopState","fn","getGlobalEventTarget","addEventListener","removeEventListener","onHashChange","href","protocol","hostname","port","pathname","search","hash","newPath","pushState","state","title","url","supportsState","replaceState","forward","back","go","getState","ɵngcc0","createBrowserPlatformLocation","start","end","length","slashes","endsWith","startsWith","substring","match","pathEndIdx","index","slice","params","LocationStrategy","provideLocationStrategy","platformLocation","PathLocationStrategy","origin","APP_BASE_HREF","_platformLocation","_removeListenerFns","_baseHref","ngOnDestroy","pop","push","prepareExternalUrl","internal","joinWithSlash","path","includeHash","normalizeQueryParams","queryParams","externalUrl","_a","_b","call","HashLocationStrategy","Location","platformStrategy","_subject","EventEmitter","_urlChangeListeners","_platformStrategy","browserBaseHref","stripTrailingSlash","_stripIndexHtml","ev","emit","type","normalize","isCurrentPathEqualTo","query","baseHref","_notifyUrlChangeListeners","onUrlChange","_urlChangeSubscription","subscribe","v","forEach","onNext","onThrow","onReturn","next","error","complete","createLocation","replace","CURRENCIES_EN","ADP","undefined","AFN","ALL","AMD","AOA","ARS","AUD","BAM","BBD","BDT","BHD","BIF","BMD","BND","BOB","BRL","BSD","BWP","BYN","BYR","BZD","CAD","CHF","CLF","CLP","CNY","COP","CRC","CUC","CUP","CZK","DJF","DKK","DOP","EGP","ESP","EUR","FJD","FKP","GBP","GEL","GIP","GNF","GTQ","GYD","HKD","HNL","HRK","HUF","IDR","ILS","INR","IQD","IRR","ISK","ITL","JMD","JOD","JPY","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LTL","LUF","LVL","LYD","MGA","MGF","MMK","MNT","MRO","MUR","MXN","MYR","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PHP","PKR","PLN","PYG","RON","RSD","RUB","RUR","RWF","SBD","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SYP","THB","TMM","TND","TOP","TRL","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYI","UYU","UYW","UZS","VEF","VND","VUV","XAF","XCD","XOF","XPF","XXX","YER","ZAR","ZMK","ZMW","ZWD","NumberFormatStyle","Decimal","Percent","Currency","Scientific","Plural","Zero","One","Two","Few","Many","Other","FormStyle","Format","Standalone","TranslationWidth","Narrow","Abbreviated","Wide","Short","FormatWidth","Medium","Long","Full","NumberSymbol","Group","List","PercentSign","PlusSign","MinusSign","Exponential","SuperscriptingExponent","PerMille","Infinity","NaN","TimeSeparator","CurrencyDecimal","CurrencyGroup","WeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","locale","ɵfindLocaleData","ɵLocaleDataIndex","formStyle","width","data","amPm","getLastDefinedValue","days","months","symbol","res","ɵgetLocaleCurrencyCode","getLocalePluralCase","ɵgetLocalePluralCase","checkFullData","map","rule","extractTime","dayPeriods","i","time","h","m","split","hours","minutes","code","format","currency","symbolNarrow","digits","ISO8601_DATE_REGEX","NAMED_FORMATS","DATE_FORMATS_SPLIT","ZoneWidth","ShortGMT","Extended","DateType","FullYear","Month","Date","Hours","Minutes","Seconds","FractionalSeconds","Day","TranslationType","DayPeriods","Days","Months","Eras","value","timezone","date","isDate","isNaN","trim","test","y","d","val","createDate","parsedNb","parseFloat","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","Number","s","ms","Math","floor","getNamedFormat","parts","exec","concat","part","dateTimezoneOffset","getTimezoneOffset","timezoneToOffset","reverse","getTime","setMinutes","getMinutes","text","dateFormatter","DATE_FORMATS","formatter","dateStrGetter","dateGetter","weekNumberingYearGetter","weekGetter","timeZoneGetter","year","month","newDate","localeId","getLocaleId","formatValue","getLocaleDateFormat","getLocaleTimeFormat","shortTime","shortDate","formatDateTime","getLocaleDateTimeFormat","mediumTime","mediumDate","longTime","longDate","fullTime","fullDate","str","opt_values","key","num","minusSign","negWrap","neg","strNum","String","substr","name","size","offset","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","getDay","milliseconds","strMs","localeMinus","getLocaleNumberSymbol","padNumber","form","extended","getLocaleMonthNames","getLocaleDayNames","currentHours","currentMinutes","rules","getLocaleExtraDayPeriodRules","getLocaleExtraDayPeriods","findIndex","Array","isArray","from","to","afterFrom","beforeTo","getLocaleDayPeriods","getLocaleEraNames","zone","ceil","abs","datetime","monthBased","result","nbDaysBefore1stDayOfMonth","today","thisThurs","getThursdayThisWeek","firstThurs","firstDayOfYear","THURSDAY","diff","round","fallback","requestedTimezoneOffset","parse","valueOf","NUMBER_FORMAT_REGEXP","ZERO_CHAR","pattern","groupSymbol","decimalSymbol","digitsInfo","isPercent","formattedText","isZero","isFinite","parsedNumber","integerLen","j","zeros","numStr","exponent","indexOf","charAt","splice","MAX_DIGITS","fractionLen","minInt","minFraction","minFrac","maxFraction","maxFrac","minIntPart","minFractionPart","maxFractionPart","parseIntAutoRadix","fractionSize","min","max","roundAt","digit","k","unshift","dropTrailingZeros","minLen","carry","reduceRight","decimals","every","groups","lgSize","join","gSize","negPre","negSuf","posPre","posSuf","currencyCode","parseNumberFormat","getLocaleNumberFormat","getNumberOfCurrencyDigits","RegExp","formatNumberToLocaleString","p","patternParts","positive","negative","positiveParts","lastIndexOf","integer","fraction","ch","D","trunkLen","pos","parseInt","cases","ngLocalization","getPluralCategory","NgLocaleLocalization","NgLocalization","LOCALE_ID","extraData","ɵregisterLocaleData","cookieStr","encodeURIComponent","cookie","eqIndex","cookieName","cookieValue","decodeURIComponent","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_iterableDiffer","_keyValueDiffer","_initialClasses","_rawClass","_removeClasses","_applyClasses","ɵisListLikeIterable","find","create","ngDoCheck","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","changes","forEachAddedItem","record","_toggleClass","currentValue","forEachChangedItem","forEachRemovedItem","previousValue","item","ɵstringify","rawClassVal","Set","klass","Object","keys","enabled","addClass","nativeElement","removeClass","ɵdir","selectors","inputs","ngClass","NgComponentOutlet","_viewContainerRef","_componentRef","_moduleRef","ngOnChanges","clear","ngComponentOutlet","elInjector","ngComponentOutletInjector","parentInjector","ngComponentOutletNgModuleFactory","destroy","parentModule","get","NgModuleRef","injector","componentFactory","componentFactoryResolver","ComponentFactoryResolver","resolveComponentFactory","createComponent","ngComponentOutletContent","features","$implicit","ngForOf","count","last","even","NgForOf","_viewContainer","_template","_differs","_ngForOf","_ngForOfDirty","_differ","_trackByFn","ngForTrackBy","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","view","createEmbeddedView","NgForOfContext","tuple","RecordViewTuple","remove","move","_perViewChange","ilen","viewRef","context","forEachIdentityChange","dir","ctx","ngForTemplate","NgIf","templateRef","_context","NgIfContext","_thenTemplateRef","_elseTemplateRef","_thenViewRef","_elseViewRef","condition","ngIf","_updateView","assertTemplate","ngIfThen","ngIfElse","property","_templateRef","_created","enforceState","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","newValue","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","_defaultViews","_matchCase","matched","useDefault","ngSwitch","NgSwitchCase","viewContainer","_view","SwitchView","ngSwitchCase","NgSwitchDefault","NgPlural","_localization","_caseViews","_switchValue","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","template","isANumber","NgStyle","_ngStyle","values","_setStyle","nameAndUnit","unit","setStyle","removeStyle","ngStyle","NgTemplateOutlet","_viewRef","ngTemplateOutletContext","ngTemplateOutlet","viewContainerRef","COMMON_DIRECTIVES","createSubscription","async","updateLatestValue","e","dispose","subscription","unsubscribe","onDestroy","then","_promiseStrategy","PromiseStrategy","_subscribableStrategy","SubscribableStrategy","AsyncPipe","_ref","_latestValue","_subscription","_obj","_strategy","_dispose","transform","obj","_subscribe","_selectStrategy","_updateLatestValue","ɵisPromise","ɵisSubscribable","invalidPipeArgumentError","markForCheck","ɵpipe","pure","LowerCasePipe","toLowerCase","unicodeWordMatch","TitleCasePipe","txt","toUpperCase","UpperCasePipe","DatePipe","formatDate","message","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","toString","I18nSelectPipe","mapping","hasOwnProperty","other","JsonPipe","JSON","stringify","KeyValuePipe","differs","keyValues","input","compareFn","defaultComparator","Map","differ","differChanges","forEachItem","r","sort","keyValueA","keyValueB","a","b","aString","bString","DecimalPipe","_locale","isValue","formatNumber","strToNumber","PercentPipe","formatPercent","CurrencyPipe","_defaultCurrencyCode","display","getCurrencySymbol","formatCurrency","DEFAULT_CURRENCY_CODE","SlicePipe","supports","COMMON_PIPES","CommonModule","ɵmod","ɵinj","providers","provide","useClass","PLATFORM_BROWSER_ID","PLATFORM_SERVER_ID","PLATFORM_WORKER_APP_ID","PLATFORM_WORKER_UI_ID","platformId","VERSION","Version","ViewportScroller","BrowserViewportScroller","document","setOffset","getScrollPosition","supportsScrolling","pageXOffset","pageYOffset","scrollToPosition","position","scrollTo","scrollToAnchor","target","elSelected","documentResult","getElementById","getElementsByName","createTreeWalker","body","createShadowRoot","attachShadow","treeWalker","NodeFilter","SHOW_ELEMENT","currentNode","shadowRoot","querySelector","nextNode","scrollToElement","attemptFocus","setHistoryScrollRestoration","scrollRestoration","supportScrollRestoration","el","rect","getBoundingClientRect","left","top","focusTarget","focus","activeElement","scrollRestorationDescriptor","getScrollRestorationProperty","getPrototypeOf","writable","set","getOwnPropertyDescriptor","anchor"],"sources":["webpack:///node_modules/@angular/common/fesm2015/common.js"],"sourcesContent":["/**\r\n * @license Angular v12.1.0\r\n * (c) 2010-2021 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\nimport { InjectionToken, ɵɵdefineInjectable, Injectable, ɵɵinject, Inject, Optional, EventEmitter, ɵfindLocaleData, ɵLocaleDataIndex, ɵgetLocaleCurrencyCode, ɵgetLocalePluralCase, LOCALE_ID, ɵregisterLocaleData, ɵisListLikeIterable, ɵstringify, Directive, IterableDiffers, KeyValueDiffers, ElementRef, Renderer2, Input, NgModuleRef, ComponentFactoryResolver, ViewContainerRef, TemplateRef, Host, ɵRuntimeError, Attribute, ɵisPromise, ɵisSubscribable, Pipe, ChangeDetectorRef, DEFAULT_CURRENCY_CODE, NgModule, Version } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nlet _DOM = null;\r\nfunction getDOM() {\r\n    return _DOM;\r\n}\r\nfunction setDOM(adapter) {\r\n    _DOM = adapter;\r\n}\r\nfunction setRootDomAdapter(adapter) {\r\n    if (!_DOM) {\r\n        _DOM = adapter;\r\n    }\r\n}\r\n/* tslint:disable:requireParameterType */\r\n/**\r\n * Provides DOM operations in an environment-agnostic way.\r\n *\r\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\r\n * can introduce XSS risks.\r\n */\r\nclass DomAdapter {\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\r\n *\r\n * Note: Document might not be available in the Application Context when Application and Rendering\r\n * Contexts are not the same (e.g. when running the application in a Web Worker).\r\n *\r\n * @publicApi\r\n */\r\nconst DOCUMENT = new InjectionToken('DocumentToken');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * This class should not be used directly by an application developer. Instead, use\r\n * {@link Location}.\r\n *\r\n * `PlatformLocation` encapsulates all calls to DOM APIs, which allows the Router to be\r\n * platform-agnostic.\r\n * This means that we can have different implementation of `PlatformLocation` for the different\r\n * platforms that Angular supports. For example, `@angular/platform-browser` provides an\r\n * implementation specific to the browser environment, while `@angular/platform-server` provides\r\n * one suitable for use with server-side rendering.\r\n *\r\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\r\n * when they need to interact with the DOM APIs like pushState, popState, etc.\r\n *\r\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\r\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\r\n * Router} /\r\n * {@link Location} / {@link LocationStrategy} and DOM APIs flow through the `PlatformLocation`\r\n * class, they are all platform-agnostic.\r\n *\r\n * @publicApi\r\n */\r\nclass PlatformLocation {\r\n    historyGo(relativePosition) {\r\n        throw new Error('Not implemented');\r\n    }\r\n}\r\nPlatformLocation.ɵfac = function PlatformLocation_Factory(t) { return new (t || PlatformLocation)(); };\r\nPlatformLocation.ɵprov = ɵɵdefineInjectable({ factory: useBrowserPlatformLocation, token: PlatformLocation, providedIn: \"platform\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformLocation, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'platform',\r\n                // See #23917\r\n                useFactory: useBrowserPlatformLocation\r\n            }]\r\n    }], null, null); })();\r\nfunction useBrowserPlatformLocation() {\r\n    return ɵɵinject(BrowserPlatformLocation);\r\n}\r\n/**\r\n * @description\r\n * Indicates when a location is initialized.\r\n *\r\n * @publicApi\r\n */\r\nconst LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\r\n/**\r\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\r\n * This class should not be used directly by an application developer. Instead, use\r\n * {@link Location}.\r\n */\r\nclass BrowserPlatformLocation extends PlatformLocation {\r\n    constructor(_doc) {\r\n        super();\r\n        this._doc = _doc;\r\n        this._init();\r\n    }\r\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\r\n    /** @internal */\r\n    _init() {\r\n        this.location = window.location;\r\n        this._history = window.history;\r\n    }\r\n    getBaseHrefFromDOM() {\r\n        return getDOM().getBaseHref(this._doc);\r\n    }\r\n    onPopState(fn) {\r\n        const window = getDOM().getGlobalEventTarget(this._doc, 'window');\r\n        window.addEventListener('popstate', fn, false);\r\n        return () => window.removeEventListener('popstate', fn);\r\n    }\r\n    onHashChange(fn) {\r\n        const window = getDOM().getGlobalEventTarget(this._doc, 'window');\r\n        window.addEventListener('hashchange', fn, false);\r\n        return () => window.removeEventListener('hashchange', fn);\r\n    }\r\n    get href() {\r\n        return this.location.href;\r\n    }\r\n    get protocol() {\r\n        return this.location.protocol;\r\n    }\r\n    get hostname() {\r\n        return this.location.hostname;\r\n    }\r\n    get port() {\r\n        return this.location.port;\r\n    }\r\n    get pathname() {\r\n        return this.location.pathname;\r\n    }\r\n    get search() {\r\n        return this.location.search;\r\n    }\r\n    get hash() {\r\n        return this.location.hash;\r\n    }\r\n    set pathname(newPath) {\r\n        this.location.pathname = newPath;\r\n    }\r\n    pushState(state, title, url) {\r\n        if (supportsState()) {\r\n            this._history.pushState(state, title, url);\r\n        }\r\n        else {\r\n            this.location.hash = url;\r\n        }\r\n    }\r\n    replaceState(state, title, url) {\r\n        if (supportsState()) {\r\n            this._history.replaceState(state, title, url);\r\n        }\r\n        else {\r\n            this.location.hash = url;\r\n        }\r\n    }\r\n    forward() {\r\n        this._history.forward();\r\n    }\r\n    back() {\r\n        this._history.back();\r\n    }\r\n    historyGo(relativePosition = 0) {\r\n        this._history.go(relativePosition);\r\n    }\r\n    getState() {\r\n        return this._history.state;\r\n    }\r\n}\r\nBrowserPlatformLocation.ɵfac = function BrowserPlatformLocation_Factory(t) { return new (t || BrowserPlatformLocation)(ɵngcc0.ɵɵinject(DOCUMENT)); };\r\nBrowserPlatformLocation.ɵprov = ɵɵdefineInjectable({ factory: createBrowserPlatformLocation, token: BrowserPlatformLocation, providedIn: \"platform\" });\r\nBrowserPlatformLocation.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserPlatformLocation, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'platform',\r\n                // See #23917\r\n                useFactory: createBrowserPlatformLocation\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\nfunction supportsState() {\r\n    return !!window.history.pushState;\r\n}\r\nfunction createBrowserPlatformLocation() {\r\n    return new BrowserPlatformLocation(ɵɵinject(DOCUMENT));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Joins two parts of a URL with a slash if needed.\r\n *\r\n * @param start  URL string\r\n * @param end    URL string\r\n *\r\n *\r\n * @returns The joined URL string.\r\n */\r\nfunction joinWithSlash(start, end) {\r\n    if (start.length == 0) {\r\n        return end;\r\n    }\r\n    if (end.length == 0) {\r\n        return start;\r\n    }\r\n    let slashes = 0;\r\n    if (start.endsWith('/')) {\r\n        slashes++;\r\n    }\r\n    if (end.startsWith('/')) {\r\n        slashes++;\r\n    }\r\n    if (slashes == 2) {\r\n        return start + end.substring(1);\r\n    }\r\n    if (slashes == 1) {\r\n        return start + end;\r\n    }\r\n    return start + '/' + end;\r\n}\r\n/**\r\n * Removes a trailing slash from a URL string if needed.\r\n * Looks for the first occurrence of either `#`, `?`, or the end of the\r\n * line as `/` characters and removes the trailing slash if one exists.\r\n *\r\n * @param url URL string.\r\n *\r\n * @returns The URL string, modified if needed.\r\n */\r\nfunction stripTrailingSlash(url) {\r\n    const match = url.match(/#|\\?|$/);\r\n    const pathEndIdx = match && match.index || url.length;\r\n    const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\r\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\r\n}\r\n/**\r\n * Normalizes URL parameters by prepending with `?` if needed.\r\n *\r\n * @param  params String of URL parameters.\r\n *\r\n * @returns The normalized URL parameters string.\r\n */\r\nfunction normalizeQueryParams(params) {\r\n    return params && params[0] !== '?' ? '?' + params : params;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Enables the `Location` service to read route state from the browser's URL.\r\n * Angular provides two strategies:\r\n * `HashLocationStrategy` and `PathLocationStrategy`.\r\n *\r\n * Applications should use the `Router` or `Location` services to\r\n * interact with application route state.\r\n *\r\n * For instance, `HashLocationStrategy` produces URLs like\r\n * <code class=\"no-auto-link\">http://example.com#/foo</code>,\r\n * and `PathLocationStrategy` produces\r\n * <code class=\"no-auto-link\">http://example.com/foo</code> as an equivalent URL.\r\n *\r\n * See these two classes for more.\r\n *\r\n * @publicApi\r\n */\r\nclass LocationStrategy {\r\n    historyGo(relativePosition) {\r\n        throw new Error('Not implemented');\r\n    }\r\n}\r\nLocationStrategy.ɵfac = function LocationStrategy_Factory(t) { return new (t || LocationStrategy)(); };\r\nLocationStrategy.ɵprov = ɵɵdefineInjectable({ factory: provideLocationStrategy, token: LocationStrategy, providedIn: \"root\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocationStrategy, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root', useFactory: provideLocationStrategy }]\r\n    }], null, null); })();\r\nfunction provideLocationStrategy(platformLocation) {\r\n    // See #23917\r\n    const location = ɵɵinject(DOCUMENT).location;\r\n    return new PathLocationStrategy(ɵɵinject(PlatformLocation), location && location.origin || '');\r\n}\r\n/**\r\n * A predefined [DI token](guide/glossary#di-token) for the base href\r\n * to be used with the `PathLocationStrategy`.\r\n * The base href is the URL prefix that should be preserved when generating\r\n * and recognizing URLs.\r\n *\r\n * @usageNotes\r\n *\r\n * The following example shows how to use this token to configure the root app injector\r\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\r\n *\r\n * ```typescript\r\n * import {Component, NgModule} from '@angular/core';\r\n * import {APP_BASE_HREF} from '@angular/common';\r\n *\r\n * @NgModule({\r\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\r\n * })\r\n * class AppModule {}\r\n * ```\r\n *\r\n * @publicApi\r\n */\r\nconst APP_BASE_HREF = new InjectionToken('appBaseHref');\r\n/**\r\n * @description\r\n * A {@link LocationStrategy} used to configure the {@link Location} service to\r\n * represent its state in the\r\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\r\n * browser's URL.\r\n *\r\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\r\n * or add a `<base href>` element to the document.\r\n *\r\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app/'` and call\r\n * `location.go('/foo')`, the browser's URL will become\r\n * `example.com/my/app/foo`. To ensure all relative URIs resolve correctly,\r\n * the `<base href>` and/or `APP_BASE_HREF` should end with a `/`.\r\n *\r\n * Similarly, if you add `<base href='/my/app/'/>` to the document and call\r\n * `location.go('/foo')`, the browser's URL will become\r\n * `example.com/my/app/foo`.\r\n *\r\n * Note that when using `PathLocationStrategy`, neither the query nor\r\n * the fragment in the `<base href>` will be preserved, as outlined\r\n * by the [RFC](https://tools.ietf.org/html/rfc3986#section-5.2.2).\r\n *\r\n * @usageNotes\r\n *\r\n * ### Example\r\n *\r\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\r\n *\r\n * @publicApi\r\n */\r\nclass PathLocationStrategy extends LocationStrategy {\r\n    constructor(_platformLocation, href) {\r\n        super();\r\n        this._platformLocation = _platformLocation;\r\n        this._removeListenerFns = [];\r\n        if (href == null) {\r\n            href = this._platformLocation.getBaseHrefFromDOM();\r\n        }\r\n        if (href == null) {\r\n            throw new Error(`No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\r\n        }\r\n        this._baseHref = href;\r\n    }\r\n    ngOnDestroy() {\r\n        while (this._removeListenerFns.length) {\r\n            this._removeListenerFns.pop()();\r\n        }\r\n    }\r\n    onPopState(fn) {\r\n        this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\r\n    }\r\n    getBaseHref() {\r\n        return this._baseHref;\r\n    }\r\n    prepareExternalUrl(internal) {\r\n        return joinWithSlash(this._baseHref, internal);\r\n    }\r\n    path(includeHash = false) {\r\n        const pathname = this._platformLocation.pathname + normalizeQueryParams(this._platformLocation.search);\r\n        const hash = this._platformLocation.hash;\r\n        return hash && includeHash ? `${pathname}${hash}` : pathname;\r\n    }\r\n    pushState(state, title, url, queryParams) {\r\n        const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\r\n        this._platformLocation.pushState(state, title, externalUrl);\r\n    }\r\n    replaceState(state, title, url, queryParams) {\r\n        const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\r\n        this._platformLocation.replaceState(state, title, externalUrl);\r\n    }\r\n    forward() {\r\n        this._platformLocation.forward();\r\n    }\r\n    back() {\r\n        this._platformLocation.back();\r\n    }\r\n    historyGo(relativePosition = 0) {\r\n        var _a, _b;\r\n        (_b = (_a = this._platformLocation).historyGo) === null || _b === void 0 ? void 0 : _b.call(_a, relativePosition);\r\n    }\r\n}\r\nPathLocationStrategy.ɵfac = function PathLocationStrategy_Factory(t) { return new (t || PathLocationStrategy)(ɵngcc0.ɵɵinject(PlatformLocation), ɵngcc0.ɵɵinject(APP_BASE_HREF, 8)); };\r\nPathLocationStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PathLocationStrategy, factory: PathLocationStrategy.ɵfac });\r\nPathLocationStrategy.ctorParameters = () => [\r\n    { type: PlatformLocation },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PathLocationStrategy, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: PlatformLocation }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [APP_BASE_HREF]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @description\r\n * A {@link LocationStrategy} used to configure the {@link Location} service to\r\n * represent its state in the\r\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\r\n * of the browser's URL.\r\n *\r\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\r\n * `example.com#/foo`.\r\n *\r\n * @usageNotes\r\n *\r\n * ### Example\r\n *\r\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\r\n *\r\n * @publicApi\r\n */\r\nclass HashLocationStrategy extends LocationStrategy {\r\n    constructor(_platformLocation, _baseHref) {\r\n        super();\r\n        this._platformLocation = _platformLocation;\r\n        this._baseHref = '';\r\n        this._removeListenerFns = [];\r\n        if (_baseHref != null) {\r\n            this._baseHref = _baseHref;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        while (this._removeListenerFns.length) {\r\n            this._removeListenerFns.pop()();\r\n        }\r\n    }\r\n    onPopState(fn) {\r\n        this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\r\n    }\r\n    getBaseHref() {\r\n        return this._baseHref;\r\n    }\r\n    path(includeHash = false) {\r\n        // the hash value is always prefixed with a `#`\r\n        // and if it is empty then it will stay empty\r\n        let path = this._platformLocation.hash;\r\n        if (path == null)\r\n            path = '#';\r\n        return path.length > 0 ? path.substring(1) : path;\r\n    }\r\n    prepareExternalUrl(internal) {\r\n        const url = joinWithSlash(this._baseHref, internal);\r\n        return url.length > 0 ? ('#' + url) : url;\r\n    }\r\n    pushState(state, title, path, queryParams) {\r\n        let url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));\r\n        if (url.length == 0) {\r\n            url = this._platformLocation.pathname;\r\n        }\r\n        this._platformLocation.pushState(state, title, url);\r\n    }\r\n    replaceState(state, title, path, queryParams) {\r\n        let url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));\r\n        if (url.length == 0) {\r\n            url = this._platformLocation.pathname;\r\n        }\r\n        this._platformLocation.replaceState(state, title, url);\r\n    }\r\n    forward() {\r\n        this._platformLocation.forward();\r\n    }\r\n    back() {\r\n        this._platformLocation.back();\r\n    }\r\n    historyGo(relativePosition = 0) {\r\n        var _a, _b;\r\n        (_b = (_a = this._platformLocation).historyGo) === null || _b === void 0 ? void 0 : _b.call(_a, relativePosition);\r\n    }\r\n}\r\nHashLocationStrategy.ɵfac = function HashLocationStrategy_Factory(t) { return new (t || HashLocationStrategy)(ɵngcc0.ɵɵinject(PlatformLocation), ɵngcc0.ɵɵinject(APP_BASE_HREF, 8)); };\r\nHashLocationStrategy.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HashLocationStrategy, factory: HashLocationStrategy.ɵfac });\r\nHashLocationStrategy.ctorParameters = () => [\r\n    { type: PlatformLocation },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HashLocationStrategy, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: PlatformLocation }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [APP_BASE_HREF]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @description\r\n *\r\n * A service that applications can use to interact with a browser's URL.\r\n *\r\n * Depending on the `LocationStrategy` used, `Location` persists\r\n * to the URL's path or the URL's hash segment.\r\n *\r\n * @usageNotes\r\n *\r\n * It's better to use the `Router.navigate()` service to trigger route changes. Use\r\n * `Location` only if you need to interact with or create normalized URLs outside of\r\n * routing.\r\n *\r\n * `Location` is responsible for normalizing the URL against the application's base href.\r\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\r\n * trailing slash:\r\n * - `/my/app/user/123` is normalized\r\n * - `my/app/user/123` **is not** normalized\r\n * - `/my/app/user/123/` **is not** normalized\r\n *\r\n * ### Example\r\n *\r\n * <code-example path='common/location/ts/path_location_component.ts'\r\n * region='LocationComponent'></code-example>\r\n *\r\n * @publicApi\r\n */\r\nclass Location {\r\n    constructor(platformStrategy, platformLocation) {\r\n        /** @internal */\r\n        this._subject = new EventEmitter();\r\n        /** @internal */\r\n        this._urlChangeListeners = [];\r\n        this._platformStrategy = platformStrategy;\r\n        const browserBaseHref = this._platformStrategy.getBaseHref();\r\n        this._platformLocation = platformLocation;\r\n        this._baseHref = stripTrailingSlash(_stripIndexHtml(browserBaseHref));\r\n        this._platformStrategy.onPopState((ev) => {\r\n            this._subject.emit({\r\n                'url': this.path(true),\r\n                'pop': true,\r\n                'state': ev.state,\r\n                'type': ev.type,\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Normalizes the URL path for this location.\r\n     *\r\n     * @param includeHash True to include an anchor fragment in the path.\r\n     *\r\n     * @returns The normalized URL path.\r\n     */\r\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\r\n    // removed.\r\n    path(includeHash = false) {\r\n        return this.normalize(this._platformStrategy.path(includeHash));\r\n    }\r\n    /**\r\n     * Reports the current state of the location history.\r\n     * @returns The current value of the `history.state` object.\r\n     */\r\n    getState() {\r\n        return this._platformLocation.getState();\r\n    }\r\n    /**\r\n     * Normalizes the given path and compares to the current normalized path.\r\n     *\r\n     * @param path The given URL path.\r\n     * @param query Query parameters.\r\n     *\r\n     * @returns True if the given URL path is equal to the current normalized path, false\r\n     * otherwise.\r\n     */\r\n    isCurrentPathEqualTo(path, query = '') {\r\n        return this.path() == this.normalize(path + normalizeQueryParams(query));\r\n    }\r\n    /**\r\n     * Normalizes a URL path by stripping any trailing slashes.\r\n     *\r\n     * @param url String representing a URL.\r\n     *\r\n     * @returns The normalized URL string.\r\n     */\r\n    normalize(url) {\r\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\r\n    }\r\n    /**\r\n     * Normalizes an external URL path.\r\n     * If the given URL doesn't begin with a leading slash (`'/'`), adds one\r\n     * before normalizing. Adds a hash if `HashLocationStrategy` is\r\n     * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\r\n     *\r\n     * @param url String representing a URL.\r\n     *\r\n     * @returns  A normalized platform-specific URL.\r\n     */\r\n    prepareExternalUrl(url) {\r\n        if (url && url[0] !== '/') {\r\n            url = '/' + url;\r\n        }\r\n        return this._platformStrategy.prepareExternalUrl(url);\r\n    }\r\n    // TODO: rename this method to pushState\r\n    /**\r\n     * Changes the browser's URL to a normalized version of a given URL, and pushes a\r\n     * new item onto the platform's history.\r\n     *\r\n     * @param path  URL path to normalize.\r\n     * @param query Query parameters.\r\n     * @param state Location history state.\r\n     *\r\n     */\r\n    go(path, query = '', state = null) {\r\n        this._platformStrategy.pushState(state, '', path, query);\r\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\r\n    }\r\n    /**\r\n     * Changes the browser's URL to a normalized version of the given URL, and replaces\r\n     * the top item on the platform's history stack.\r\n     *\r\n     * @param path  URL path to normalize.\r\n     * @param query Query parameters.\r\n     * @param state Location history state.\r\n     */\r\n    replaceState(path, query = '', state = null) {\r\n        this._platformStrategy.replaceState(state, '', path, query);\r\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\r\n    }\r\n    /**\r\n     * Navigates forward in the platform's history.\r\n     */\r\n    forward() {\r\n        this._platformStrategy.forward();\r\n    }\r\n    /**\r\n     * Navigates back in the platform's history.\r\n     */\r\n    back() {\r\n        this._platformStrategy.back();\r\n    }\r\n    /**\r\n     * Navigate to a specific page from session history, identified by its relative position to the\r\n     * current page.\r\n     *\r\n     * @param relativePosition  Position of the target page in the history relative to the current\r\n     *     page.\r\n     * A negative value moves backwards, a positive value moves forwards, e.g. `location.historyGo(2)`\r\n     * moves forward two pages and `location.historyGo(-2)` moves back two pages. When we try to go\r\n     * beyond what's stored in the history session, we stay in the current page. Same behaviour occurs\r\n     * when `relativePosition` equals 0.\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/History_API#Moving_to_a_specific_point_in_history\r\n     */\r\n    historyGo(relativePosition = 0) {\r\n        var _a, _b;\r\n        (_b = (_a = this._platformStrategy).historyGo) === null || _b === void 0 ? void 0 : _b.call(_a, relativePosition);\r\n    }\r\n    /**\r\n     * Registers a URL change listener. Use to catch updates performed by the Angular\r\n     * framework that are not detectible through \"popstate\" or \"hashchange\" events.\r\n     *\r\n     * @param fn The change handler function, which take a URL and a location history state.\r\n     */\r\n    onUrlChange(fn) {\r\n        this._urlChangeListeners.push(fn);\r\n        if (!this._urlChangeSubscription) {\r\n            this._urlChangeSubscription = this.subscribe(v => {\r\n                this._notifyUrlChangeListeners(v.url, v.state);\r\n            });\r\n        }\r\n    }\r\n    /** @internal */\r\n    _notifyUrlChangeListeners(url = '', state) {\r\n        this._urlChangeListeners.forEach(fn => fn(url, state));\r\n    }\r\n    /**\r\n     * Subscribes to the platform's `popState` events.\r\n     *\r\n     * Note: `Location.go()` does not trigger the `popState` event in the browser. Use\r\n     * `Location.onUrlChange()` to subscribe to URL changes instead.\r\n     *\r\n     * @param value Event that is triggered when the state history changes.\r\n     * @param exception The exception to throw.\r\n     *\r\n     * @see [onpopstate](https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate)\r\n     *\r\n     * @returns Subscribed events.\r\n     */\r\n    subscribe(onNext, onThrow, onReturn) {\r\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\r\n    }\r\n}\r\nLocation.ɵfac = function Location_Factory(t) { return new (t || Location)(ɵngcc0.ɵɵinject(LocationStrategy), ɵngcc0.ɵɵinject(PlatformLocation)); };\r\n/**\r\n * Normalizes URL parameters by prepending with `?` if needed.\r\n *\r\n * @param  params String of URL parameters.\r\n *\r\n * @returns The normalized URL parameters string.\r\n */\r\nLocation.normalizeQueryParams = normalizeQueryParams;\r\n/**\r\n * Joins two parts of a URL with a slash if needed.\r\n *\r\n * @param start  URL string\r\n * @param end    URL string\r\n *\r\n *\r\n * @returns The joined URL string.\r\n */\r\nLocation.joinWithSlash = joinWithSlash;\r\n/**\r\n * Removes a trailing slash from a URL string if needed.\r\n * Looks for the first occurrence of either `#`, `?`, or the end of the\r\n * line as `/` characters and removes the trailing slash if one exists.\r\n *\r\n * @param url URL string.\r\n *\r\n * @returns The URL string, modified if needed.\r\n */\r\nLocation.stripTrailingSlash = stripTrailingSlash;\r\nLocation.ɵprov = ɵɵdefineInjectable({ factory: createLocation, token: Location, providedIn: \"root\" });\r\nLocation.ctorParameters = () => [\r\n    { type: LocationStrategy },\r\n    { type: PlatformLocation }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Location, [{\r\n        type: Injectable,\r\n        args: [{\r\n                providedIn: 'root',\r\n                // See #23917\r\n                useFactory: createLocation\r\n            }]\r\n    }], function () { return [{ type: LocationStrategy }, { type: PlatformLocation }]; }, null); })();\r\nfunction createLocation() {\r\n    return new Location(ɵɵinject(LocationStrategy), ɵɵinject(PlatformLocation));\r\n}\r\nfunction _stripBaseHref(baseHref, url) {\r\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\r\n}\r\nfunction _stripIndexHtml(url) {\r\n    return url.replace(/\\/index.html$/, '');\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** @internal */\r\nconst CURRENCIES_EN = {\r\n    'ADP': [undefined, undefined, 0],\r\n    'AFN': [undefined, undefined, 0],\r\n    'ALL': [undefined, undefined, 0],\r\n    'AMD': [undefined, undefined, 2],\r\n    'AOA': [undefined, 'Kz'],\r\n    'ARS': [undefined, '$'],\r\n    'AUD': ['A$', '$'],\r\n    'BAM': [undefined, 'KM'],\r\n    'BBD': [undefined, '$'],\r\n    'BDT': [undefined, '৳'],\r\n    'BHD': [undefined, undefined, 3],\r\n    'BIF': [undefined, undefined, 0],\r\n    'BMD': [undefined, '$'],\r\n    'BND': [undefined, '$'],\r\n    'BOB': [undefined, 'Bs'],\r\n    'BRL': ['R$'],\r\n    'BSD': [undefined, '$'],\r\n    'BWP': [undefined, 'P'],\r\n    'BYN': [undefined, 'р.', 2],\r\n    'BYR': [undefined, undefined, 0],\r\n    'BZD': [undefined, '$'],\r\n    'CAD': ['CA$', '$', 2],\r\n    'CHF': [undefined, undefined, 2],\r\n    'CLF': [undefined, undefined, 4],\r\n    'CLP': [undefined, '$', 0],\r\n    'CNY': ['CN¥', '¥'],\r\n    'COP': [undefined, '$', 2],\r\n    'CRC': [undefined, '₡', 2],\r\n    'CUC': [undefined, '$'],\r\n    'CUP': [undefined, '$'],\r\n    'CZK': [undefined, 'Kč', 2],\r\n    'DJF': [undefined, undefined, 0],\r\n    'DKK': [undefined, 'kr', 2],\r\n    'DOP': [undefined, '$'],\r\n    'EGP': [undefined, 'E£'],\r\n    'ESP': [undefined, '₧', 0],\r\n    'EUR': ['€'],\r\n    'FJD': [undefined, '$'],\r\n    'FKP': [undefined, '£'],\r\n    'GBP': ['£'],\r\n    'GEL': [undefined, '₾'],\r\n    'GIP': [undefined, '£'],\r\n    'GNF': [undefined, 'FG', 0],\r\n    'GTQ': [undefined, 'Q'],\r\n    'GYD': [undefined, '$', 2],\r\n    'HKD': ['HK$', '$'],\r\n    'HNL': [undefined, 'L'],\r\n    'HRK': [undefined, 'kn'],\r\n    'HUF': [undefined, 'Ft', 2],\r\n    'IDR': [undefined, 'Rp', 2],\r\n    'ILS': ['₪'],\r\n    'INR': ['₹'],\r\n    'IQD': [undefined, undefined, 0],\r\n    'IRR': [undefined, undefined, 0],\r\n    'ISK': [undefined, 'kr', 0],\r\n    'ITL': [undefined, undefined, 0],\r\n    'JMD': [undefined, '$'],\r\n    'JOD': [undefined, undefined, 3],\r\n    'JPY': ['¥', undefined, 0],\r\n    'KHR': [undefined, '៛'],\r\n    'KMF': [undefined, 'CF', 0],\r\n    'KPW': [undefined, '₩', 0],\r\n    'KRW': ['₩', undefined, 0],\r\n    'KWD': [undefined, undefined, 3],\r\n    'KYD': [undefined, '$'],\r\n    'KZT': [undefined, '₸'],\r\n    'LAK': [undefined, '₭', 0],\r\n    'LBP': [undefined, 'L£', 0],\r\n    'LKR': [undefined, 'Rs'],\r\n    'LRD': [undefined, '$'],\r\n    'LTL': [undefined, 'Lt'],\r\n    'LUF': [undefined, undefined, 0],\r\n    'LVL': [undefined, 'Ls'],\r\n    'LYD': [undefined, undefined, 3],\r\n    'MGA': [undefined, 'Ar', 0],\r\n    'MGF': [undefined, undefined, 0],\r\n    'MMK': [undefined, 'K', 0],\r\n    'MNT': [undefined, '₮', 2],\r\n    'MRO': [undefined, undefined, 0],\r\n    'MUR': [undefined, 'Rs', 2],\r\n    'MXN': ['MX$', '$'],\r\n    'MYR': [undefined, 'RM'],\r\n    'NAD': [undefined, '$'],\r\n    'NGN': [undefined, '₦'],\r\n    'NIO': [undefined, 'C$'],\r\n    'NOK': [undefined, 'kr', 2],\r\n    'NPR': [undefined, 'Rs'],\r\n    'NZD': ['NZ$', '$'],\r\n    'OMR': [undefined, undefined, 3],\r\n    'PHP': [undefined, '₱'],\r\n    'PKR': [undefined, 'Rs', 2],\r\n    'PLN': [undefined, 'zł'],\r\n    'PYG': [undefined, '₲', 0],\r\n    'RON': [undefined, 'lei'],\r\n    'RSD': [undefined, undefined, 0],\r\n    'RUB': [undefined, '₽'],\r\n    'RUR': [undefined, 'р.'],\r\n    'RWF': [undefined, 'RF', 0],\r\n    'SBD': [undefined, '$'],\r\n    'SEK': [undefined, 'kr', 2],\r\n    'SGD': [undefined, '$'],\r\n    'SHP': [undefined, '£'],\r\n    'SLL': [undefined, undefined, 0],\r\n    'SOS': [undefined, undefined, 0],\r\n    'SRD': [undefined, '$'],\r\n    'SSP': [undefined, '£'],\r\n    'STD': [undefined, undefined, 0],\r\n    'STN': [undefined, 'Db'],\r\n    'SYP': [undefined, '£', 0],\r\n    'THB': [undefined, '฿'],\r\n    'TMM': [undefined, undefined, 0],\r\n    'TND': [undefined, undefined, 3],\r\n    'TOP': [undefined, 'T$'],\r\n    'TRL': [undefined, undefined, 0],\r\n    'TRY': [undefined, '₺'],\r\n    'TTD': [undefined, '$'],\r\n    'TWD': ['NT$', '$', 2],\r\n    'TZS': [undefined, undefined, 2],\r\n    'UAH': [undefined, '₴'],\r\n    'UGX': [undefined, undefined, 0],\r\n    'USD': ['$'],\r\n    'UYI': [undefined, undefined, 0],\r\n    'UYU': [undefined, '$'],\r\n    'UYW': [undefined, undefined, 4],\r\n    'UZS': [undefined, undefined, 2],\r\n    'VEF': [undefined, 'Bs', 2],\r\n    'VND': ['₫', undefined, 0],\r\n    'VUV': [undefined, undefined, 0],\r\n    'XAF': ['FCFA', undefined, 0],\r\n    'XCD': ['EC$', '$'],\r\n    'XOF': ['CFA', undefined, 0],\r\n    'XPF': ['CFPF', undefined, 0],\r\n    'XXX': ['¤'],\r\n    'YER': [undefined, undefined, 0],\r\n    'ZAR': [undefined, 'R'],\r\n    'ZMK': [undefined, undefined, 0],\r\n    'ZMW': [undefined, 'ZK'],\r\n    'ZWD': [undefined, undefined, 0]\r\n};\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Format styles that can be used to represent numbers.\r\n * @see `getLocaleNumberFormat()`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nvar NumberFormatStyle;\r\n(function (NumberFormatStyle) {\r\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\r\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\r\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\r\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\r\n})(NumberFormatStyle || (NumberFormatStyle = {}));\r\n/**\r\n * Plurality cases used for translating plurals to different languages.\r\n *\r\n * @see `NgPlural`\r\n * @see `NgPluralCase`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nvar Plural;\r\n(function (Plural) {\r\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\r\n    Plural[Plural[\"One\"] = 1] = \"One\";\r\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\r\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\r\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\r\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\r\n})(Plural || (Plural = {}));\r\n/**\r\n * Context-dependant translation forms for strings.\r\n * Typically the standalone version is for the nominative form of the word,\r\n * and the format version is used for the genitive case.\r\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles)\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nvar FormStyle;\r\n(function (FormStyle) {\r\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\r\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\r\n})(FormStyle || (FormStyle = {}));\r\n/**\r\n * String widths available for translations.\r\n * The specific character widths are locale-specific.\r\n * Examples are given for the word \"Sunday\" in English.\r\n *\r\n * @publicApi\r\n */\r\nvar TranslationWidth;\r\n(function (TranslationWidth) {\r\n    /** 1 character for `en-US`. For example: 'S' */\r\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\r\n    /** 3 characters for `en-US`. For example: 'Sun' */\r\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\r\n    /** Full length for `en-US`. For example: \"Sunday\" */\r\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\r\n    /** 2 characters for `en-US`, For example: \"Su\" */\r\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\r\n})(TranslationWidth || (TranslationWidth = {}));\r\n/**\r\n * String widths available for date-time formats.\r\n * The specific character widths are locale-specific.\r\n * Examples are given for `en-US`.\r\n *\r\n * @see `getLocaleDateFormat()`\r\n * @see `getLocaleTimeFormat()`\r\n * @see `getLocaleDateTimeFormat()`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n * @publicApi\r\n */\r\nvar FormatWidth;\r\n(function (FormatWidth) {\r\n    /**\r\n     * For `en-US`, 'M/d/yy, h:mm a'`\r\n     * (Example: `6/15/15, 9:03 AM`)\r\n     */\r\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\r\n    /**\r\n     * For `en-US`, `'MMM d, y, h:mm:ss a'`\r\n     * (Example: `Jun 15, 2015, 9:03:01 AM`)\r\n     */\r\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\r\n    /**\r\n     * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\r\n     * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\r\n     */\r\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\r\n    /**\r\n     * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\r\n     * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\r\n     */\r\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\r\n})(FormatWidth || (FormatWidth = {}));\r\n/**\r\n * Symbols that can be used to replace placeholders in number patterns.\r\n * Examples are based on `en-US` values.\r\n *\r\n * @see `getLocaleNumberSymbol()`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nvar NumberSymbol;\r\n(function (NumberSymbol) {\r\n    /**\r\n     * Decimal separator.\r\n     * For `en-US`, the dot character.\r\n     * Example: 2,345`.`67\r\n     */\r\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\r\n    /**\r\n     * Grouping separator, typically for thousands.\r\n     * For `en-US`, the comma character.\r\n     * Example: 2`,`345.67\r\n     */\r\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\r\n    /**\r\n     * List-item separator.\r\n     * Example: \"one, two, and three\"\r\n     */\r\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\r\n    /**\r\n     * Sign for percentage (out of 100).\r\n     * Example: 23.4%\r\n     */\r\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\r\n    /**\r\n     * Sign for positive numbers.\r\n     * Example: +23\r\n     */\r\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\r\n    /**\r\n     * Sign for negative numbers.\r\n     * Example: -23\r\n     */\r\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\r\n    /**\r\n     * Computer notation for exponential value (n times a power of 10).\r\n     * Example: 1.2E3\r\n     */\r\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\r\n    /**\r\n     * Human-readable format of exponential.\r\n     * Example: 1.2x103\r\n     */\r\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\r\n    /**\r\n     * Sign for permille (out of 1000).\r\n     * Example: 23.4‰\r\n     */\r\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\r\n    /**\r\n     * Infinity, can be used with plus and minus.\r\n     * Example: ∞, +∞, -∞\r\n     */\r\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\r\n    /**\r\n     * Not a number.\r\n     * Example: NaN\r\n     */\r\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\r\n    /**\r\n     * Symbol used between time units.\r\n     * Example: 10:52\r\n     */\r\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\r\n    /**\r\n     * Decimal separator for currency values (fallback to `Decimal`).\r\n     * Example: $2,345.67\r\n     */\r\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\r\n    /**\r\n     * Group separator for currency values (fallback to `Group`).\r\n     * Example: $2,345.67\r\n     */\r\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\r\n})(NumberSymbol || (NumberSymbol = {}));\r\n/**\r\n * The value for each day of the week, based on the `en-US` locale\r\n *\r\n * @publicApi\r\n */\r\nvar WeekDay;\r\n(function (WeekDay) {\r\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\r\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\r\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\r\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\r\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\r\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\r\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\r\n})(WeekDay || (WeekDay = {}));\r\n/**\r\n * Retrieves the locale ID from the currently loaded locale.\r\n * The loaded locale could be, for example, a global one rather than a regional one.\r\n * @param locale A locale code, such as `fr-FR`.\r\n * @returns The locale code. For example, `fr`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleId(locale) {\r\n    return ɵfindLocaleData(locale)[ɵLocaleDataIndex.LocaleId];\r\n}\r\n/**\r\n * Retrieves day period strings for the given locale.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param formStyle The required grammatical form.\r\n * @param width The required character width.\r\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleDayPeriods(locale, formStyle, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const amPmData = [\r\n        data[ɵLocaleDataIndex.DayPeriodsFormat], data[ɵLocaleDataIndex.DayPeriodsStandalone]\r\n    ];\r\n    const amPm = getLastDefinedValue(amPmData, formStyle);\r\n    return getLastDefinedValue(amPm, width);\r\n}\r\n/**\r\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param formStyle The required grammatical form.\r\n * @param width The required character width.\r\n * @returns An array of localized name strings.\r\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleDayNames(locale, formStyle, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const daysData = [data[ɵLocaleDataIndex.DaysFormat], data[ɵLocaleDataIndex.DaysStandalone]];\r\n    const days = getLastDefinedValue(daysData, formStyle);\r\n    return getLastDefinedValue(days, width);\r\n}\r\n/**\r\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param formStyle The required grammatical form.\r\n * @param width The required character width.\r\n * @returns An array of localized name strings.\r\n * For example,  `[January, February, ...]` for `en-US`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleMonthNames(locale, formStyle, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const monthsData = [data[ɵLocaleDataIndex.MonthsFormat], data[ɵLocaleDataIndex.MonthsStandalone]];\r\n    const months = getLastDefinedValue(monthsData, formStyle);\r\n    return getLastDefinedValue(months, width);\r\n}\r\n/**\r\n * Retrieves Gregorian-calendar eras for the given locale.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param width The required character width.\r\n\r\n * @returns An array of localized era strings.\r\n * For example, `[AD, BC]` for `en-US`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleEraNames(locale, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const erasData = data[ɵLocaleDataIndex.Eras];\r\n    return getLastDefinedValue(erasData, width);\r\n}\r\n/**\r\n * Retrieves the first day of the week for the given locale.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns A day index number, using the 0-based week-day index for `en-US`\r\n * (Sunday = 0, Monday = 1, ...).\r\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleFirstDayOfWeek(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.FirstDayOfWeek];\r\n}\r\n/**\r\n * Range of week days that are considered the week-end for the given locale.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns The range of day values, `[startDay, endDay]`.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleWeekEndRange(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.WeekendRange];\r\n}\r\n/**\r\n * Retrieves a localized date-value formating string.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param width The format type.\r\n * @returns The localized formating string.\r\n * @see `FormatWidth`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleDateFormat(locale, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return getLastDefinedValue(data[ɵLocaleDataIndex.DateFormat], width);\r\n}\r\n/**\r\n * Retrieves a localized time-value formatting string.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param width The format type.\r\n * @returns The localized formatting string.\r\n * @see `FormatWidth`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n\r\n * @publicApi\r\n */\r\nfunction getLocaleTimeFormat(locale, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return getLastDefinedValue(data[ɵLocaleDataIndex.TimeFormat], width);\r\n}\r\n/**\r\n * Retrieves a localized date-time formatting string.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param width The format type.\r\n * @returns The localized formatting string.\r\n * @see `FormatWidth`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleDateTimeFormat(locale, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const dateTimeFormatData = data[ɵLocaleDataIndex.DateTimeFormat];\r\n    return getLastDefinedValue(dateTimeFormatData, width);\r\n}\r\n/**\r\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\r\n * @param locale The locale code.\r\n * @param symbol The symbol to localize.\r\n * @returns The character for the localized symbol.\r\n * @see `NumberSymbol`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleNumberSymbol(locale, symbol) {\r\n    const data = ɵfindLocaleData(locale);\r\n    const res = data[ɵLocaleDataIndex.NumberSymbols][symbol];\r\n    if (typeof res === 'undefined') {\r\n        if (symbol === NumberSymbol.CurrencyDecimal) {\r\n            return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\r\n        }\r\n        else if (symbol === NumberSymbol.CurrencyGroup) {\r\n            return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Group];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Retrieves a number format for a given locale.\r\n *\r\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\r\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\r\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\r\n *\r\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\r\n * that stand for the decimal separator, and so on, and are NOT real characters.\r\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\r\n * your language the decimal point is written with a comma. The symbols should be replaced by the\r\n * local equivalents, using the appropriate `NumberSymbol` for your language.\r\n *\r\n * Here are the special characters used in number patterns:\r\n *\r\n * | Symbol | Meaning |\r\n * |--------|---------|\r\n * | . | Replaced automatically by the character used for the decimal point. |\r\n * | , | Replaced by the \"grouping\" (thousands) separator. |\r\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\r\n * | # | Replaced by a digit (or nothing if there aren't enough). |\r\n * | ¤ | Replaced by a currency symbol, such as $ or USD. |\r\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\r\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\r\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\r\n * @returns The localized format string.\r\n * @see `NumberFormatStyle`\r\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleNumberFormat(locale, type) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.NumberFormats][type];\r\n}\r\n/**\r\n * Retrieves the symbol used to represent the currency for the main country\r\n * corresponding to a given locale. For example, '$' for `en-US`.\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns The localized symbol character,\r\n * or `null` if the main country cannot be determined.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleCurrencySymbol(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.CurrencySymbol] || null;\r\n}\r\n/**\r\n * Retrieves the name of the currency for the main country corresponding\r\n * to a given locale. For example, 'US Dollar' for `en-US`.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns The currency name,\r\n * or `null` if the main country cannot be determined.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleCurrencyName(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.CurrencyName] || null;\r\n}\r\n/**\r\n * Retrieves the default currency code for the given locale.\r\n *\r\n * The default is defined as the first currency which is still in use.\r\n *\r\n * @param locale The code of the locale whose currency code we want.\r\n * @returns The code of the default currency for the given locale.\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleCurrencyCode(locale) {\r\n    return ɵgetLocaleCurrencyCode(locale);\r\n}\r\n/**\r\n * Retrieves the currency values for a given locale.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns The currency values.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n */\r\nfunction getLocaleCurrencies(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.Currencies];\r\n}\r\n/**\r\n * @alias core/ɵgetLocalePluralCase\r\n * @publicApi\r\n */\r\nconst getLocalePluralCase = ɵgetLocalePluralCase;\r\nfunction checkFullData(data) {\r\n    if (!data[ɵLocaleDataIndex.ExtraData]) {\r\n        throw new Error(`Missing extra locale data for the locale \"${data[ɵLocaleDataIndex\r\n            .LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\r\n    }\r\n}\r\n/**\r\n * Retrieves locale-specific rules used to determine which day period to use\r\n * when more than one period is defined for a locale.\r\n *\r\n * There is a rule for each defined day period. The\r\n * first rule is applied to the first day period and so on.\r\n * Fall back to AM/PM when no rules are available.\r\n *\r\n * A rule can specify a period as time range, or as a single time value.\r\n *\r\n * This functionality is only available when you have loaded the full locale data.\r\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\r\n * or null if no periods are available.\r\n *\r\n * @see `getLocaleExtraDayPeriods()`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleExtraDayPeriodRules(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    checkFullData(data);\r\n    const rules = data[ɵLocaleDataIndex.ExtraData][2 /* ExtraDayPeriodsRules */] || [];\r\n    return rules.map((rule) => {\r\n        if (typeof rule === 'string') {\r\n            return extractTime(rule);\r\n        }\r\n        return [extractTime(rule[0]), extractTime(rule[1])];\r\n    });\r\n}\r\n/**\r\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\r\n * in different languages.\r\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\r\n *\r\n * This functionality is only available when you have loaded the full locale data.\r\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\r\n *\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param formStyle The required grammatical form.\r\n * @param width The required character width.\r\n * @returns The translated day-period strings.\r\n * @see `getLocaleExtraDayPeriodRules()`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\r\n    const data = ɵfindLocaleData(locale);\r\n    checkFullData(data);\r\n    const dayPeriodsData = [\r\n        data[ɵLocaleDataIndex.ExtraData][0 /* ExtraDayPeriodFormats */],\r\n        data[ɵLocaleDataIndex.ExtraData][1 /* ExtraDayPeriodStandalone */]\r\n    ];\r\n    const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\r\n    return getLastDefinedValue(dayPeriods, width) || [];\r\n}\r\n/**\r\n * Retrieves the writing direction of a specified locale\r\n * @param locale A locale code for the locale format rules to use.\r\n * @publicApi\r\n * @returns 'rtl' or 'ltr'\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n */\r\nfunction getLocaleDirection(locale) {\r\n    const data = ɵfindLocaleData(locale);\r\n    return data[ɵLocaleDataIndex.Directionality];\r\n}\r\n/**\r\n * Retrieves the first value that is defined in an array, going backwards from an index position.\r\n *\r\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\r\n * add the first value to the locale data arrays, and add other values only if they are different.\r\n *\r\n * @param data The data array to retrieve from.\r\n * @param index A 0-based index into the array to start from.\r\n * @returns The value immediately before the given index position.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getLastDefinedValue(data, index) {\r\n    for (let i = index; i > -1; i--) {\r\n        if (typeof data[i] !== 'undefined') {\r\n            return data[i];\r\n        }\r\n    }\r\n    throw new Error('Locale data API: locale data undefined');\r\n}\r\n/**\r\n * Extracts the hours and minutes from a string like \"15:45\"\r\n */\r\nfunction extractTime(time) {\r\n    const [h, m] = time.split(':');\r\n    return { hours: +h, minutes: +m };\r\n}\r\n/**\r\n * Retrieves the currency symbol for a given currency code.\r\n *\r\n * For example, for the default `en-US` locale, the code `USD` can\r\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\r\n *\r\n * @param code The currency code.\r\n * @param format The format, `wide` or `narrow`.\r\n * @param locale A locale code for the locale format rules to use.\r\n *\r\n * @returns The symbol, or the currency code if no symbol is available.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getCurrencySymbol(code, format, locale = 'en') {\r\n    const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\r\n    const symbolNarrow = currency[1 /* SymbolNarrow */];\r\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\r\n        return symbolNarrow;\r\n    }\r\n    return currency[0 /* Symbol */] || code;\r\n}\r\n// Most currencies have cents, that's why the default is 2\r\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\r\n/**\r\n * Reports the number of decimal digits for a given currency.\r\n * The value depends upon the presence of cents in that particular currency.\r\n *\r\n * @param code The currency code.\r\n * @returns The number of decimal digits, typically 0 or 2.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction getNumberOfCurrencyDigits(code) {\r\n    let digits;\r\n    const currency = CURRENCIES_EN[code];\r\n    if (currency) {\r\n        digits = currency[2 /* NbOfDigits */];\r\n    }\r\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\r\n//    1        2       3         4          5          6          7          8  9     10      11\r\nconst NAMED_FORMATS = {};\r\nconst DATE_FORMATS_SPLIT = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\r\nvar ZoneWidth;\r\n(function (ZoneWidth) {\r\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\r\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\r\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\r\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\r\n})(ZoneWidth || (ZoneWidth = {}));\r\nvar DateType;\r\n(function (DateType) {\r\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\r\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\r\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\r\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\r\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\r\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\r\n    DateType[DateType[\"FractionalSeconds\"] = 6] = \"FractionalSeconds\";\r\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\r\n})(DateType || (DateType = {}));\r\nvar TranslationType;\r\n(function (TranslationType) {\r\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\r\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\r\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\r\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\r\n})(TranslationType || (TranslationType = {}));\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a date according to locale rules.\r\n *\r\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\r\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\r\n * @param format The date-time components to include. See `DatePipe` for details.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),\r\n * or a standard UTC/GMT or continental US time zone abbreviation.\r\n * If not specified, uses host system settings.\r\n *\r\n * @returns The formatted date string.\r\n *\r\n * @see `DatePipe`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction formatDate(value, format, locale, timezone) {\r\n    let date = toDate(value);\r\n    const namedFormat = getNamedFormat(locale, format);\r\n    format = namedFormat || format;\r\n    let parts = [];\r\n    let match;\r\n    while (format) {\r\n        match = DATE_FORMATS_SPLIT.exec(format);\r\n        if (match) {\r\n            parts = parts.concat(match.slice(1));\r\n            const part = parts.pop();\r\n            if (!part) {\r\n                break;\r\n            }\r\n            format = part;\r\n        }\r\n        else {\r\n            parts.push(format);\r\n            break;\r\n        }\r\n    }\r\n    let dateTimezoneOffset = date.getTimezoneOffset();\r\n    if (timezone) {\r\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\r\n        date = convertTimezoneToLocal(date, timezone, true);\r\n    }\r\n    let text = '';\r\n    parts.forEach(value => {\r\n        const dateFormatter = getDateFormatter(value);\r\n        text += dateFormatter ?\r\n            dateFormatter(date, locale, dateTimezoneOffset) :\r\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\r\n    });\r\n    return text;\r\n}\r\n/**\r\n * Create a new Date object with the given date value, and the time set to midnight.\r\n *\r\n * We cannot use `new Date(year, month, date)` because it maps years between 0 and 99 to 1900-1999.\r\n * See: https://github.com/angular/angular/issues/40377\r\n *\r\n * Note that this function returns a Date object whose time is midnight in the current locale's\r\n * timezone. In the future we might want to change this to be midnight in UTC, but this would be a\r\n * considerable breaking change.\r\n */\r\nfunction createDate(year, month, date) {\r\n    // The `newDate` is set to midnight (UTC) on January 1st 1970.\r\n    // - In PST this will be December 31st 1969 at 4pm.\r\n    // - In GMT this will be January 1st 1970 at 1am.\r\n    // Note that they even have different years, dates and months!\r\n    const newDate = new Date(0);\r\n    // `setFullYear()` allows years like 0001 to be set correctly. This function does not\r\n    // change the internal time of the date.\r\n    // Consider calling `setFullYear(2019, 8, 20)` (September 20, 2019).\r\n    // - In PST this will now be September 20, 2019 at 4pm\r\n    // - In GMT this will now be September 20, 2019 at 1am\r\n    newDate.setFullYear(year, month, date);\r\n    // We want the final date to be at local midnight, so we reset the time.\r\n    // - In PST this will now be September 20, 2019 at 12am\r\n    // - In GMT this will now be September 20, 2019 at 12am\r\n    newDate.setHours(0, 0, 0);\r\n    return newDate;\r\n}\r\nfunction getNamedFormat(locale, format) {\r\n    const localeId = getLocaleId(locale);\r\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\r\n    if (NAMED_FORMATS[localeId][format]) {\r\n        return NAMED_FORMATS[localeId][format];\r\n    }\r\n    let formatValue = '';\r\n    switch (format) {\r\n        case 'shortDate':\r\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\r\n            break;\r\n        case 'mediumDate':\r\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\r\n            break;\r\n        case 'longDate':\r\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\r\n            break;\r\n        case 'fullDate':\r\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\r\n            break;\r\n        case 'shortTime':\r\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\r\n            break;\r\n        case 'mediumTime':\r\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\r\n            break;\r\n        case 'longTime':\r\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\r\n            break;\r\n        case 'fullTime':\r\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\r\n            break;\r\n        case 'short':\r\n            const shortTime = getNamedFormat(locale, 'shortTime');\r\n            const shortDate = getNamedFormat(locale, 'shortDate');\r\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\r\n            break;\r\n        case 'medium':\r\n            const mediumTime = getNamedFormat(locale, 'mediumTime');\r\n            const mediumDate = getNamedFormat(locale, 'mediumDate');\r\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\r\n            break;\r\n        case 'long':\r\n            const longTime = getNamedFormat(locale, 'longTime');\r\n            const longDate = getNamedFormat(locale, 'longDate');\r\n            formatValue =\r\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\r\n            break;\r\n        case 'full':\r\n            const fullTime = getNamedFormat(locale, 'fullTime');\r\n            const fullDate = getNamedFormat(locale, 'fullDate');\r\n            formatValue =\r\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\r\n            break;\r\n    }\r\n    if (formatValue) {\r\n        NAMED_FORMATS[localeId][format] = formatValue;\r\n    }\r\n    return formatValue;\r\n}\r\nfunction formatDateTime(str, opt_values) {\r\n    if (opt_values) {\r\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\r\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\r\n        });\r\n    }\r\n    return str;\r\n}\r\nfunction padNumber(num, digits, minusSign = '-', trim, negWrap) {\r\n    let neg = '';\r\n    if (num < 0 || (negWrap && num <= 0)) {\r\n        if (negWrap) {\r\n            num = -num + 1;\r\n        }\r\n        else {\r\n            num = -num;\r\n            neg = minusSign;\r\n        }\r\n    }\r\n    let strNum = String(num);\r\n    while (strNum.length < digits) {\r\n        strNum = '0' + strNum;\r\n    }\r\n    if (trim) {\r\n        strNum = strNum.substr(strNum.length - digits);\r\n    }\r\n    return neg + strNum;\r\n}\r\nfunction formatFractionalSeconds(milliseconds, digits) {\r\n    const strMs = padNumber(milliseconds, 3);\r\n    return strMs.substr(0, digits);\r\n}\r\n/**\r\n * Returns a date formatter that transforms a date into its locale digit representation\r\n */\r\nfunction dateGetter(name, size, offset = 0, trim = false, negWrap = false) {\r\n    return function (date, locale) {\r\n        let part = getDatePart(name, date);\r\n        if (offset > 0 || part > -offset) {\r\n            part += offset;\r\n        }\r\n        if (name === DateType.Hours) {\r\n            if (part === 0 && offset === -12) {\r\n                part = 12;\r\n            }\r\n        }\r\n        else if (name === DateType.FractionalSeconds) {\r\n            return formatFractionalSeconds(part, size);\r\n        }\r\n        const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\r\n        return padNumber(part, size, localeMinus, trim, negWrap);\r\n    };\r\n}\r\nfunction getDatePart(part, date) {\r\n    switch (part) {\r\n        case DateType.FullYear:\r\n            return date.getFullYear();\r\n        case DateType.Month:\r\n            return date.getMonth();\r\n        case DateType.Date:\r\n            return date.getDate();\r\n        case DateType.Hours:\r\n            return date.getHours();\r\n        case DateType.Minutes:\r\n            return date.getMinutes();\r\n        case DateType.Seconds:\r\n            return date.getSeconds();\r\n        case DateType.FractionalSeconds:\r\n            return date.getMilliseconds();\r\n        case DateType.Day:\r\n            return date.getDay();\r\n        default:\r\n            throw new Error(`Unknown DateType value \"${part}\".`);\r\n    }\r\n}\r\n/**\r\n * Returns a date formatter that transforms a date into its locale string representation\r\n */\r\nfunction dateStrGetter(name, width, form = FormStyle.Format, extended = false) {\r\n    return function (date, locale) {\r\n        return getDateTranslation(date, locale, name, width, form, extended);\r\n    };\r\n}\r\n/**\r\n * Returns the locale translation of a date for a given form, type and width\r\n */\r\nfunction getDateTranslation(date, locale, name, width, form, extended) {\r\n    switch (name) {\r\n        case TranslationType.Months:\r\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\r\n        case TranslationType.Days:\r\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\r\n        case TranslationType.DayPeriods:\r\n            const currentHours = date.getHours();\r\n            const currentMinutes = date.getMinutes();\r\n            if (extended) {\r\n                const rules = getLocaleExtraDayPeriodRules(locale);\r\n                const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\r\n                const index = rules.findIndex(rule => {\r\n                    if (Array.isArray(rule)) {\r\n                        // morning, afternoon, evening, night\r\n                        const [from, to] = rule;\r\n                        const afterFrom = currentHours >= from.hours && currentMinutes >= from.minutes;\r\n                        const beforeTo = (currentHours < to.hours ||\r\n                            (currentHours === to.hours && currentMinutes < to.minutes));\r\n                        // We must account for normal rules that span a period during the day (e.g. 6am-9am)\r\n                        // where `from` is less (earlier) than `to`. But also rules that span midnight (e.g.\r\n                        // 10pm - 5am) where `from` is greater (later!) than `to`.\r\n                        //\r\n                        // In the first case the current time must be BOTH after `from` AND before `to`\r\n                        // (e.g. 8am is after 6am AND before 10am).\r\n                        //\r\n                        // In the second case the current time must be EITHER after `from` OR before `to`\r\n                        // (e.g. 4am is before 5am but not after 10pm; and 11pm is not before 5am but it is\r\n                        // after 10pm).\r\n                        if (from.hours < to.hours) {\r\n                            if (afterFrom && beforeTo) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        else if (afterFrom || beforeTo) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else { // noon or midnight\r\n                        if (rule.hours === currentHours && rule.minutes === currentMinutes) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n                if (index !== -1) {\r\n                    return dayPeriods[index];\r\n                }\r\n            }\r\n            // if no rules for the day periods, we use am/pm by default\r\n            return getLocaleDayPeriods(locale, form, width)[currentHours < 12 ? 0 : 1];\r\n        case TranslationType.Eras:\r\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\r\n        default:\r\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\r\n            // However Closure Compiler does not understand that and reports an error in typed mode.\r\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\r\n            // makes sure tsc still checks this code is unreachable.\r\n            const unexpected = name;\r\n            throw new Error(`unexpected translation type ${unexpected}`);\r\n    }\r\n}\r\n/**\r\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\r\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\r\n * extended = +04:30)\r\n */\r\nfunction timeZoneGetter(width) {\r\n    return function (date, locale, offset) {\r\n        const zone = -1 * offset;\r\n        const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\r\n        const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\r\n        switch (width) {\r\n            case ZoneWidth.Short:\r\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\r\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\r\n            case ZoneWidth.ShortGMT:\r\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\r\n            case ZoneWidth.Long:\r\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\r\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\r\n            case ZoneWidth.Extended:\r\n                if (offset === 0) {\r\n                    return 'Z';\r\n                }\r\n                else {\r\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\r\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\r\n                }\r\n            default:\r\n                throw new Error(`Unknown zone width \"${width}\"`);\r\n        }\r\n    };\r\n}\r\nconst JANUARY = 0;\r\nconst THURSDAY = 4;\r\nfunction getFirstThursdayOfYear(year) {\r\n    const firstDayOfYear = createDate(year, JANUARY, 1).getDay();\r\n    return createDate(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\r\n}\r\nfunction getThursdayThisWeek(datetime) {\r\n    return createDate(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\r\n}\r\nfunction weekGetter(size, monthBased = false) {\r\n    return function (date, locale) {\r\n        let result;\r\n        if (monthBased) {\r\n            const nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\r\n            const today = date.getDate();\r\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\r\n        }\r\n        else {\r\n            const thisThurs = getThursdayThisWeek(date);\r\n            // Some days of a year are part of next year according to ISO 8601.\r\n            // Compute the firstThurs from the year of this week's Thursday\r\n            const firstThurs = getFirstThursdayOfYear(thisThurs.getFullYear());\r\n            const diff = thisThurs.getTime() - firstThurs.getTime();\r\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\r\n        }\r\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\r\n    };\r\n}\r\n/**\r\n * Returns a date formatter that provides the week-numbering year for the input date.\r\n */\r\nfunction weekNumberingYearGetter(size, trim = false) {\r\n    return function (date, locale) {\r\n        const thisThurs = getThursdayThisWeek(date);\r\n        const weekNumberingYear = thisThurs.getFullYear();\r\n        return padNumber(weekNumberingYear, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim);\r\n    };\r\n}\r\nconst DATE_FORMATS = {};\r\n// Based on CLDR formats:\r\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\r\n// See also explanations: http://cldr.unicode.org/translation/date-time\r\n// TODO(ocombe): support all missing cldr formats: U, Q, D, F, e, j, J, C, A, v, V, X, x\r\nfunction getDateFormatter(format) {\r\n    if (DATE_FORMATS[format]) {\r\n        return DATE_FORMATS[format];\r\n    }\r\n    let formatter;\r\n    switch (format) {\r\n        // Era name (AD/BC)\r\n        case 'G':\r\n        case 'GG':\r\n        case 'GGG':\r\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\r\n            break;\r\n        case 'GGGG':\r\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\r\n            break;\r\n        case 'GGGGG':\r\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\r\n            break;\r\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\r\n        case 'y':\r\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\r\n            break;\r\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\r\n        case 'yy':\r\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\r\n            break;\r\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\r\n        case 'yyy':\r\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\r\n            break;\r\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\r\n        case 'yyyy':\r\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\r\n            break;\r\n        // 1 digit representation of the week-numbering year, e.g. (AD 1 => 1, AD 199 => 199)\r\n        case 'Y':\r\n            formatter = weekNumberingYearGetter(1);\r\n            break;\r\n        // 2 digit representation of the week-numbering year, padded (00-99). (e.g. AD 2001 => 01, AD\r\n        // 2010 => 10)\r\n        case 'YY':\r\n            formatter = weekNumberingYearGetter(2, true);\r\n            break;\r\n        // 3 digit representation of the week-numbering year, padded (000-999). (e.g. AD 1 => 001, AD\r\n        // 2010 => 2010)\r\n        case 'YYY':\r\n            formatter = weekNumberingYearGetter(3);\r\n            break;\r\n        // 4 digit representation of the week-numbering year (e.g. AD 1 => 0001, AD 2010 => 2010)\r\n        case 'YYYY':\r\n            formatter = weekNumberingYearGetter(4);\r\n            break;\r\n        // Month of the year (1-12), numeric\r\n        case 'M':\r\n        case 'L':\r\n            formatter = dateGetter(DateType.Month, 1, 1);\r\n            break;\r\n        case 'MM':\r\n        case 'LL':\r\n            formatter = dateGetter(DateType.Month, 2, 1);\r\n            break;\r\n        // Month of the year (January, ...), string, format\r\n        case 'MMM':\r\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\r\n            break;\r\n        case 'MMMM':\r\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\r\n            break;\r\n        case 'MMMMM':\r\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\r\n            break;\r\n        // Month of the year (January, ...), string, standalone\r\n        case 'LLL':\r\n            formatter =\r\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\r\n            break;\r\n        case 'LLLL':\r\n            formatter =\r\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\r\n            break;\r\n        case 'LLLLL':\r\n            formatter =\r\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\r\n            break;\r\n        // Week of the year (1, ... 52)\r\n        case 'w':\r\n            formatter = weekGetter(1);\r\n            break;\r\n        case 'ww':\r\n            formatter = weekGetter(2);\r\n            break;\r\n        // Week of the month (1, ...)\r\n        case 'W':\r\n            formatter = weekGetter(1, true);\r\n            break;\r\n        // Day of the month (1-31)\r\n        case 'd':\r\n            formatter = dateGetter(DateType.Date, 1);\r\n            break;\r\n        case 'dd':\r\n            formatter = dateGetter(DateType.Date, 2);\r\n            break;\r\n        // Day of the Week StandAlone (1, 1, Mon, Monday, M, Mo)\r\n        case 'c':\r\n        case 'cc':\r\n            formatter = dateGetter(DateType.Day, 1);\r\n            break;\r\n        case 'ccc':\r\n            formatter =\r\n                dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated, FormStyle.Standalone);\r\n            break;\r\n        case 'cccc':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide, FormStyle.Standalone);\r\n            break;\r\n        case 'ccccc':\r\n            formatter =\r\n                dateStrGetter(TranslationType.Days, TranslationWidth.Narrow, FormStyle.Standalone);\r\n            break;\r\n        case 'cccccc':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short, FormStyle.Standalone);\r\n            break;\r\n        // Day of the Week\r\n        case 'E':\r\n        case 'EE':\r\n        case 'EEE':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\r\n            break;\r\n        case 'EEEE':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\r\n            break;\r\n        case 'EEEEE':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\r\n            break;\r\n        case 'EEEEEE':\r\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\r\n            break;\r\n        // Generic period of the day (am-pm)\r\n        case 'a':\r\n        case 'aa':\r\n        case 'aaa':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\r\n            break;\r\n        case 'aaaa':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\r\n            break;\r\n        case 'aaaaa':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\r\n            break;\r\n        // Extended period of the day (midnight, at night, ...), standalone\r\n        case 'b':\r\n        case 'bb':\r\n        case 'bbb':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\r\n            break;\r\n        case 'bbbb':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\r\n            break;\r\n        case 'bbbbb':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\r\n            break;\r\n        // Extended period of the day (midnight, night, ...), standalone\r\n        case 'B':\r\n        case 'BB':\r\n        case 'BBB':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\r\n            break;\r\n        case 'BBBB':\r\n            formatter =\r\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\r\n            break;\r\n        case 'BBBBB':\r\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\r\n            break;\r\n        // Hour in AM/PM, (1-12)\r\n        case 'h':\r\n            formatter = dateGetter(DateType.Hours, 1, -12);\r\n            break;\r\n        case 'hh':\r\n            formatter = dateGetter(DateType.Hours, 2, -12);\r\n            break;\r\n        // Hour of the day (0-23)\r\n        case 'H':\r\n            formatter = dateGetter(DateType.Hours, 1);\r\n            break;\r\n        // Hour in day, padded (00-23)\r\n        case 'HH':\r\n            formatter = dateGetter(DateType.Hours, 2);\r\n            break;\r\n        // Minute of the hour (0-59)\r\n        case 'm':\r\n            formatter = dateGetter(DateType.Minutes, 1);\r\n            break;\r\n        case 'mm':\r\n            formatter = dateGetter(DateType.Minutes, 2);\r\n            break;\r\n        // Second of the minute (0-59)\r\n        case 's':\r\n            formatter = dateGetter(DateType.Seconds, 1);\r\n            break;\r\n        case 'ss':\r\n            formatter = dateGetter(DateType.Seconds, 2);\r\n            break;\r\n        // Fractional second\r\n        case 'S':\r\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\r\n            break;\r\n        case 'SS':\r\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\r\n            break;\r\n        case 'SSS':\r\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\r\n            break;\r\n        // Timezone ISO8601 short format (-0430)\r\n        case 'Z':\r\n        case 'ZZ':\r\n        case 'ZZZ':\r\n            formatter = timeZoneGetter(ZoneWidth.Short);\r\n            break;\r\n        // Timezone ISO8601 extended format (-04:30)\r\n        case 'ZZZZZ':\r\n            formatter = timeZoneGetter(ZoneWidth.Extended);\r\n            break;\r\n        // Timezone GMT short format (GMT+4)\r\n        case 'O':\r\n        case 'OO':\r\n        case 'OOO':\r\n        // Should be location, but fallback to format O instead because we don't have the data yet\r\n        case 'z':\r\n        case 'zz':\r\n        case 'zzz':\r\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\r\n            break;\r\n        // Timezone GMT long format (GMT+0430)\r\n        case 'OOOO':\r\n        case 'ZZZZ':\r\n        // Should be location, but fallback to format O instead because we don't have the data yet\r\n        case 'zzzz':\r\n            formatter = timeZoneGetter(ZoneWidth.Long);\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n    DATE_FORMATS[format] = formatter;\r\n    return formatter;\r\n}\r\nfunction timezoneToOffset(timezone, fallback) {\r\n    // Support: IE 11 only, Edge 13-15+\r\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\r\n    timezone = timezone.replace(/:/g, '');\r\n    const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\r\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\r\n}\r\nfunction addDateMinutes(date, minutes) {\r\n    date = new Date(date.getTime());\r\n    date.setMinutes(date.getMinutes() + minutes);\r\n    return date;\r\n}\r\nfunction convertTimezoneToLocal(date, timezone, reverse) {\r\n    const reverseValue = reverse ? -1 : 1;\r\n    const dateTimezoneOffset = date.getTimezoneOffset();\r\n    const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\r\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\r\n}\r\n/**\r\n * Converts a value to date.\r\n *\r\n * Supported input formats:\r\n * - `Date`\r\n * - number: timestamp\r\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\r\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\r\n *   Note: ISO strings without time return a date without timeoffset.\r\n *\r\n * Throws if unable to convert to a date.\r\n */\r\nfunction toDate(value) {\r\n    if (isDate(value)) {\r\n        return value;\r\n    }\r\n    if (typeof value === 'number' && !isNaN(value)) {\r\n        return new Date(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n        value = value.trim();\r\n        if (/^(\\d{4}(-\\d{1,2}(-\\d{1,2})?)?)$/.test(value)) {\r\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\r\n            before Date creation to avoid time offset and errors in the new Date.\r\n            If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\r\n            date, some browsers (e.g. IE 9) will throw an invalid Date error.\r\n            If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\r\n            is applied.\r\n            Note: ISO months are 0 for January, 1 for February, ... */\r\n            const [y, m = 1, d = 1] = value.split('-').map((val) => +val);\r\n            return createDate(y, m - 1, d);\r\n        }\r\n        const parsedNb = parseFloat(value);\r\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\r\n        if (!isNaN(value - parsedNb)) {\r\n            return new Date(parsedNb);\r\n        }\r\n        let match;\r\n        if (match = value.match(ISO8601_DATE_REGEX)) {\r\n            return isoStringToDate(match);\r\n        }\r\n    }\r\n    const date = new Date(value);\r\n    if (!isDate(date)) {\r\n        throw new Error(`Unable to convert \"${value}\" into a date`);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * Converts a date in ISO8601 to a Date.\r\n * Used instead of `Date.parse` because of browser discrepancies.\r\n */\r\nfunction isoStringToDate(match) {\r\n    const date = new Date(0);\r\n    let tzHour = 0;\r\n    let tzMin = 0;\r\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\r\n    const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\r\n    const timeSetter = match[8] ? date.setUTCHours : date.setHours;\r\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\r\n    if (match[9]) {\r\n        tzHour = Number(match[9] + match[10]);\r\n        tzMin = Number(match[9] + match[11]);\r\n    }\r\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\r\n    const h = Number(match[4] || 0) - tzHour;\r\n    const m = Number(match[5] || 0) - tzMin;\r\n    const s = Number(match[6] || 0);\r\n    // The ECMAScript specification (https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.11)\r\n    // defines that `DateTime` milliseconds should always be rounded down, so that `999.9ms`\r\n    // becomes `999ms`.\r\n    const ms = Math.floor(parseFloat('0.' + (match[7] || 0)) * 1000);\r\n    timeSetter.call(date, h, m, s, ms);\r\n    return date;\r\n}\r\nfunction isDate(value) {\r\n    return value instanceof Date && !isNaN(value.valueOf());\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\r\nconst MAX_DIGITS = 22;\r\nconst DECIMAL_SEP = '.';\r\nconst ZERO_CHAR = '0';\r\nconst PATTERN_SEP = ';';\r\nconst GROUP_SEP = ',';\r\nconst DIGIT_CHAR = '#';\r\nconst CURRENCY_CHAR = '¤';\r\nconst PERCENT_CHAR = '%';\r\n/**\r\n * Transforms a number to a locale string based on a style and a format.\r\n */\r\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent = false) {\r\n    let formattedText = '';\r\n    let isZero = false;\r\n    if (!isFinite(value)) {\r\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\r\n    }\r\n    else {\r\n        let parsedNumber = parseNumber(value);\r\n        if (isPercent) {\r\n            parsedNumber = toPercent(parsedNumber);\r\n        }\r\n        let minInt = pattern.minInt;\r\n        let minFraction = pattern.minFrac;\r\n        let maxFraction = pattern.maxFrac;\r\n        if (digitsInfo) {\r\n            const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\r\n            if (parts === null) {\r\n                throw new Error(`${digitsInfo} is not a valid digit info`);\r\n            }\r\n            const minIntPart = parts[1];\r\n            const minFractionPart = parts[3];\r\n            const maxFractionPart = parts[5];\r\n            if (minIntPart != null) {\r\n                minInt = parseIntAutoRadix(minIntPart);\r\n            }\r\n            if (minFractionPart != null) {\r\n                minFraction = parseIntAutoRadix(minFractionPart);\r\n            }\r\n            if (maxFractionPart != null) {\r\n                maxFraction = parseIntAutoRadix(maxFractionPart);\r\n            }\r\n            else if (minFractionPart != null && minFraction > maxFraction) {\r\n                maxFraction = minFraction;\r\n            }\r\n        }\r\n        roundNumber(parsedNumber, minFraction, maxFraction);\r\n        let digits = parsedNumber.digits;\r\n        let integerLen = parsedNumber.integerLen;\r\n        const exponent = parsedNumber.exponent;\r\n        let decimals = [];\r\n        isZero = digits.every(d => !d);\r\n        // pad zeros for small numbers\r\n        for (; integerLen < minInt; integerLen++) {\r\n            digits.unshift(0);\r\n        }\r\n        // pad zeros for small numbers\r\n        for (; integerLen < 0; integerLen++) {\r\n            digits.unshift(0);\r\n        }\r\n        // extract decimals digits\r\n        if (integerLen > 0) {\r\n            decimals = digits.splice(integerLen, digits.length);\r\n        }\r\n        else {\r\n            decimals = digits;\r\n            digits = [0];\r\n        }\r\n        // format the integer digits with grouping separators\r\n        const groups = [];\r\n        if (digits.length >= pattern.lgSize) {\r\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\r\n        }\r\n        while (digits.length > pattern.gSize) {\r\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\r\n        }\r\n        if (digits.length) {\r\n            groups.unshift(digits.join(''));\r\n        }\r\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\r\n        // append the decimal digits\r\n        if (decimals.length) {\r\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\r\n        }\r\n        if (exponent) {\r\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\r\n        }\r\n    }\r\n    if (value < 0 && !isZero) {\r\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\r\n    }\r\n    else {\r\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\r\n    }\r\n    return formattedText;\r\n}\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a number as currency using locale rules.\r\n *\r\n * @param value The number to format.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param currency A string containing the currency symbol or its name,\r\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\r\n * of the function.\r\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\r\n * currency code, such as `USD` for the US dollar and `EUR` for the euro.\r\n * Used to determine the number of digits in the decimal part.\r\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\r\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\r\n *\r\n * @returns The formatted currency value.\r\n *\r\n * @see `formatNumber()`\r\n * @see `DecimalPipe`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\r\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\r\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\r\n    pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\r\n    pattern.maxFrac = pattern.minFrac;\r\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\r\n    return res\r\n        .replace(CURRENCY_CHAR, currency)\r\n        // if we have 2 time the currency character, the second one is ignored\r\n        .replace(CURRENCY_CHAR, '')\r\n        // If there is a spacing between currency character and the value and\r\n        // the currency character is supressed by passing an empty string, the\r\n        // spacing character would remain as part of the string. Then we\r\n        // should remove it.\r\n        .trim();\r\n}\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a number as a percentage according to locale rules.\r\n *\r\n * @param value The number to format.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\r\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\r\n *\r\n * @returns The formatted percentage value.\r\n *\r\n * @see `formatNumber()`\r\n * @see `DecimalPipe`\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n * @publicApi\r\n *\r\n */\r\nfunction formatPercent(value, locale, digitsInfo) {\r\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\r\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\r\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\r\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\r\n}\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a number as text, with group sizing, separator, and other\r\n * parameters based on the locale.\r\n *\r\n * @param value The number to format.\r\n * @param locale A locale code for the locale format rules to use.\r\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\r\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\r\n *\r\n * @returns The formatted text string.\r\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\r\n *\r\n * @publicApi\r\n */\r\nfunction formatNumber(value, locale, digitsInfo) {\r\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\r\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\r\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\r\n}\r\nfunction parseNumberFormat(format, minusSign = '-') {\r\n    const p = {\r\n        minInt: 1,\r\n        minFrac: 0,\r\n        maxFrac: 0,\r\n        posPre: '',\r\n        posSuf: '',\r\n        negPre: '',\r\n        negSuf: '',\r\n        gSize: 0,\r\n        lgSize: 0\r\n    };\r\n    const patternParts = format.split(PATTERN_SEP);\r\n    const positive = patternParts[0];\r\n    const negative = patternParts[1];\r\n    const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\r\n        positive.split(DECIMAL_SEP) :\r\n        [\r\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\r\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\r\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\r\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\r\n    for (let i = 0; i < fraction.length; i++) {\r\n        const ch = fraction.charAt(i);\r\n        if (ch === ZERO_CHAR) {\r\n            p.minFrac = p.maxFrac = i + 1;\r\n        }\r\n        else if (ch === DIGIT_CHAR) {\r\n            p.maxFrac = i + 1;\r\n        }\r\n        else {\r\n            p.posSuf += ch;\r\n        }\r\n    }\r\n    const groups = integer.split(GROUP_SEP);\r\n    p.gSize = groups[1] ? groups[1].length : 0;\r\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\r\n    if (negative) {\r\n        const trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\r\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\r\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\r\n    }\r\n    else {\r\n        p.negPre = minusSign + p.posPre;\r\n        p.negSuf = p.posSuf;\r\n    }\r\n    return p;\r\n}\r\n// Transforms a parsed number into a percentage by multiplying it by 100\r\nfunction toPercent(parsedNumber) {\r\n    // if the number is 0, don't do anything\r\n    if (parsedNumber.digits[0] === 0) {\r\n        return parsedNumber;\r\n    }\r\n    // Getting the current number of decimals\r\n    const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\r\n    if (parsedNumber.exponent) {\r\n        parsedNumber.exponent += 2;\r\n    }\r\n    else {\r\n        if (fractionLen === 0) {\r\n            parsedNumber.digits.push(0, 0);\r\n        }\r\n        else if (fractionLen === 1) {\r\n            parsedNumber.digits.push(0);\r\n        }\r\n        parsedNumber.integerLen += 2;\r\n    }\r\n    return parsedNumber;\r\n}\r\n/**\r\n * Parses a number.\r\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\r\n */\r\nfunction parseNumber(num) {\r\n    let numStr = Math.abs(num) + '';\r\n    let exponent = 0, digits, integerLen;\r\n    let i, j, zeros;\r\n    // Decimal point?\r\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\r\n        numStr = numStr.replace(DECIMAL_SEP, '');\r\n    }\r\n    // Exponential form?\r\n    if ((i = numStr.search(/e/i)) > 0) {\r\n        // Work out the exponent.\r\n        if (integerLen < 0)\r\n            integerLen = i;\r\n        integerLen += +numStr.slice(i + 1);\r\n        numStr = numStr.substring(0, i);\r\n    }\r\n    else if (integerLen < 0) {\r\n        // There was no decimal point or exponent so it is an integer.\r\n        integerLen = numStr.length;\r\n    }\r\n    // Count the number of leading zeros.\r\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\r\n    }\r\n    if (i === (zeros = numStr.length)) {\r\n        // The digits are all zero.\r\n        digits = [0];\r\n        integerLen = 1;\r\n    }\r\n    else {\r\n        // Count the number of trailing zeros\r\n        zeros--;\r\n        while (numStr.charAt(zeros) === ZERO_CHAR)\r\n            zeros--;\r\n        // Trailing zeros are insignificant so ignore them\r\n        integerLen -= i;\r\n        digits = [];\r\n        // Convert string to array of digits without leading/trailing zeros.\r\n        for (j = 0; i <= zeros; i++, j++) {\r\n            digits[j] = Number(numStr.charAt(i));\r\n        }\r\n    }\r\n    // If the number overflows the maximum allowed digits then use an exponent.\r\n    if (integerLen > MAX_DIGITS) {\r\n        digits = digits.splice(0, MAX_DIGITS - 1);\r\n        exponent = integerLen - 1;\r\n        integerLen = 1;\r\n    }\r\n    return { digits, exponent, integerLen };\r\n}\r\n/**\r\n * Round the parsed number to the specified number of decimal places\r\n * This function changes the parsedNumber in-place\r\n */\r\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\r\n    if (minFrac > maxFrac) {\r\n        throw new Error(`The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\r\n    }\r\n    let digits = parsedNumber.digits;\r\n    let fractionLen = digits.length - parsedNumber.integerLen;\r\n    const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\r\n    // The index of the digit to where rounding is to occur\r\n    let roundAt = fractionSize + parsedNumber.integerLen;\r\n    let digit = digits[roundAt];\r\n    if (roundAt > 0) {\r\n        // Drop fractional digits beyond `roundAt`\r\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\r\n        // Set non-fractional digits beyond `roundAt` to 0\r\n        for (let j = roundAt; j < digits.length; j++) {\r\n            digits[j] = 0;\r\n        }\r\n    }\r\n    else {\r\n        // We rounded to zero so reset the parsedNumber\r\n        fractionLen = Math.max(0, fractionLen);\r\n        parsedNumber.integerLen = 1;\r\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\r\n        digits[0] = 0;\r\n        for (let i = 1; i < roundAt; i++)\r\n            digits[i] = 0;\r\n    }\r\n    if (digit >= 5) {\r\n        if (roundAt - 1 < 0) {\r\n            for (let k = 0; k > roundAt; k--) {\r\n                digits.unshift(0);\r\n                parsedNumber.integerLen++;\r\n            }\r\n            digits.unshift(1);\r\n            parsedNumber.integerLen++;\r\n        }\r\n        else {\r\n            digits[roundAt - 1]++;\r\n        }\r\n    }\r\n    // Pad out with zeros to get the required fraction length\r\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\r\n        digits.push(0);\r\n    let dropTrailingZeros = fractionSize !== 0;\r\n    // Minimal length = nb of decimals required + current nb of integers\r\n    // Any number besides that is optional and can be removed if it's a trailing 0\r\n    const minLen = minFrac + parsedNumber.integerLen;\r\n    // Do any carrying, e.g. a digit was rounded up to 10\r\n    const carry = digits.reduceRight(function (carry, d, i, digits) {\r\n        d = d + carry;\r\n        digits[i] = d < 10 ? d : d - 10; // d % 10\r\n        if (dropTrailingZeros) {\r\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\r\n            if (digits[i] === 0 && i >= minLen) {\r\n                digits.pop();\r\n            }\r\n            else {\r\n                dropTrailingZeros = false;\r\n            }\r\n        }\r\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\r\n    }, 0);\r\n    if (carry) {\r\n        digits.unshift(carry);\r\n        parsedNumber.integerLen++;\r\n    }\r\n}\r\nfunction parseIntAutoRadix(text) {\r\n    const result = parseInt(text);\r\n    if (isNaN(result)) {\r\n        throw new Error('Invalid integer literal when parsing ' + text);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @publicApi\r\n */\r\nclass NgLocalization {\r\n}\r\n/**\r\n * Returns the plural category for a given value.\r\n * - \"=value\" when the case exists,\r\n * - the plural category otherwise\r\n */\r\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\r\n    let key = `=${value}`;\r\n    if (cases.indexOf(key) > -1) {\r\n        return key;\r\n    }\r\n    key = ngLocalization.getPluralCategory(value, locale);\r\n    if (cases.indexOf(key) > -1) {\r\n        return key;\r\n    }\r\n    if (cases.indexOf('other') > -1) {\r\n        return 'other';\r\n    }\r\n    throw new Error(`No plural message found for value \"${value}\"`);\r\n}\r\n/**\r\n * Returns the plural case based on the locale\r\n *\r\n * @publicApi\r\n */\r\nclass NgLocaleLocalization extends NgLocalization {\r\n    constructor(locale) {\r\n        super();\r\n        this.locale = locale;\r\n    }\r\n    getPluralCategory(value, locale) {\r\n        const plural = getLocalePluralCase(locale || this.locale)(value);\r\n        switch (plural) {\r\n            case Plural.Zero:\r\n                return 'zero';\r\n            case Plural.One:\r\n                return 'one';\r\n            case Plural.Two:\r\n                return 'two';\r\n            case Plural.Few:\r\n                return 'few';\r\n            case Plural.Many:\r\n                return 'many';\r\n            default:\r\n                return 'other';\r\n        }\r\n    }\r\n}\r\nNgLocaleLocalization.ɵfac = function NgLocaleLocalization_Factory(t) { return new (t || NgLocaleLocalization)(ɵngcc0.ɵɵinject(LOCALE_ID)); };\r\nNgLocaleLocalization.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NgLocaleLocalization, factory: NgLocaleLocalization.ɵfac });\r\nNgLocaleLocalization.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgLocaleLocalization, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Inject,\r\n                args: [LOCALE_ID]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Register global data to be used internally by Angular. See the\r\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\r\n *\r\n * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\r\n *\r\n * @publicApi\r\n */\r\nfunction registerLocaleData(data, localeId, extraData) {\r\n    return ɵregisterLocaleData(data, localeId, extraData);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction parseCookieValue(cookieStr, name) {\r\n    name = encodeURIComponent(name);\r\n    for (const cookie of cookieStr.split(';')) {\r\n        const eqIndex = cookie.indexOf('=');\r\n        const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\r\n        if (cookieName.trim() === name) {\r\n            return decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @usageNotes\r\n * ```\r\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\r\n *\r\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\r\n *\r\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\r\n *\r\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\r\n *\r\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\r\n * ```\r\n *\r\n * @description\r\n *\r\n * Adds and removes CSS classes on an HTML element.\r\n *\r\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\r\n * - `string` - the CSS classes listed in the string (space delimited) are added,\r\n * - `Array` - the CSS classes declared as Array elements are added,\r\n * - `Object` - keys are CSS classes that get added when the expression given in the value\r\n *              evaluates to a truthy value, otherwise they are removed.\r\n *\r\n * @publicApi\r\n */\r\nclass NgClass {\r\n    constructor(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\r\n        this._iterableDiffers = _iterableDiffers;\r\n        this._keyValueDiffers = _keyValueDiffers;\r\n        this._ngEl = _ngEl;\r\n        this._renderer = _renderer;\r\n        this._iterableDiffer = null;\r\n        this._keyValueDiffer = null;\r\n        this._initialClasses = [];\r\n        this._rawClass = null;\r\n    }\r\n    set klass(value) {\r\n        this._removeClasses(this._initialClasses);\r\n        this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\r\n        this._applyClasses(this._initialClasses);\r\n        this._applyClasses(this._rawClass);\r\n    }\r\n    set ngClass(value) {\r\n        this._removeClasses(this._rawClass);\r\n        this._applyClasses(this._initialClasses);\r\n        this._iterableDiffer = null;\r\n        this._keyValueDiffer = null;\r\n        this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\r\n        if (this._rawClass) {\r\n            if (ɵisListLikeIterable(this._rawClass)) {\r\n                this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\r\n            }\r\n            else {\r\n                this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\r\n            }\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this._iterableDiffer) {\r\n            const iterableChanges = this._iterableDiffer.diff(this._rawClass);\r\n            if (iterableChanges) {\r\n                this._applyIterableChanges(iterableChanges);\r\n            }\r\n        }\r\n        else if (this._keyValueDiffer) {\r\n            const keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\r\n            if (keyValueChanges) {\r\n                this._applyKeyValueChanges(keyValueChanges);\r\n            }\r\n        }\r\n    }\r\n    _applyKeyValueChanges(changes) {\r\n        changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\r\n        changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\r\n        changes.forEachRemovedItem((record) => {\r\n            if (record.previousValue) {\r\n                this._toggleClass(record.key, false);\r\n            }\r\n        });\r\n    }\r\n    _applyIterableChanges(changes) {\r\n        changes.forEachAddedItem((record) => {\r\n            if (typeof record.item === 'string') {\r\n                this._toggleClass(record.item, true);\r\n            }\r\n            else {\r\n                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${ɵstringify(record.item)}`);\r\n            }\r\n        });\r\n        changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\r\n    }\r\n    /**\r\n     * Applies a collection of CSS classes to the DOM element.\r\n     *\r\n     * For argument of type Set and Array CSS class names contained in those collections are always\r\n     * added.\r\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\r\n     * for truthy and removed for falsy).\r\n     */\r\n    _applyClasses(rawClassVal) {\r\n        if (rawClassVal) {\r\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\r\n                rawClassVal.forEach((klass) => this._toggleClass(klass, true));\r\n            }\r\n            else {\r\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, !!rawClassVal[klass]));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\r\n     * purposes.\r\n     */\r\n    _removeClasses(rawClassVal) {\r\n        if (rawClassVal) {\r\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\r\n                rawClassVal.forEach((klass) => this._toggleClass(klass, false));\r\n            }\r\n            else {\r\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, false));\r\n            }\r\n        }\r\n    }\r\n    _toggleClass(klass, enabled) {\r\n        klass = klass.trim();\r\n        if (klass) {\r\n            klass.split(/\\s+/g).forEach(klass => {\r\n                if (enabled) {\r\n                    this._renderer.addClass(this._ngEl.nativeElement, klass);\r\n                }\r\n                else {\r\n                    this._renderer.removeClass(this._ngEl.nativeElement, klass);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nNgClass.ɵfac = function NgClass_Factory(t) { return new (t || NgClass)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\r\nNgClass.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgClass, selectors: [[\"\", \"ngClass\", \"\"]], inputs: { klass: [\"class\", \"klass\"], ngClass: \"ngClass\" } });\r\nNgClass.ctorParameters = () => [\r\n    { type: IterableDiffers },\r\n    { type: KeyValueDiffers },\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNgClass.propDecorators = {\r\n    klass: [{ type: Input, args: ['class',] }],\r\n    ngClass: [{ type: Input, args: ['ngClass',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgClass, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngClass]' }]\r\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { klass: [{\r\n            type: Input,\r\n            args: ['class']\r\n        }], ngClass: [{\r\n            type: Input,\r\n            args: ['ngClass']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\r\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\r\n *\r\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\r\n * any existing component will get destroyed.\r\n *\r\n * @usageNotes\r\n *\r\n * ### Fine tune control\r\n *\r\n * You can control the component creation process by using the following optional attributes:\r\n *\r\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\r\n * the Component. Defaults to the injector of the current view container.\r\n *\r\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\r\n * section of the component, if exists.\r\n *\r\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\r\n * module, then load a component from that module.\r\n *\r\n * ### Syntax\r\n *\r\n * Simple\r\n * ```\r\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\r\n * ```\r\n *\r\n * Customized injector/content\r\n * ```\r\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\r\n *                                   injector: injectorExpression;\r\n *                                   content: contentNodesExpression;\">\r\n * </ng-container>\r\n * ```\r\n *\r\n * Customized ngModuleFactory\r\n * ```\r\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\r\n *                                   ngModuleFactory: moduleFactory;\">\r\n * </ng-container>\r\n * ```\r\n *\r\n * ### A simple example\r\n *\r\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\r\n *\r\n * A more complete example with additional options:\r\n *\r\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\r\n *\r\n * @publicApi\r\n * @ngModule CommonModule\r\n */\r\nclass NgComponentOutlet {\r\n    constructor(_viewContainerRef) {\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._componentRef = null;\r\n        this._moduleRef = null;\r\n    }\r\n    ngOnChanges(changes) {\r\n        this._viewContainerRef.clear();\r\n        this._componentRef = null;\r\n        if (this.ngComponentOutlet) {\r\n            const elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\r\n            if (changes['ngComponentOutletNgModuleFactory']) {\r\n                if (this._moduleRef)\r\n                    this._moduleRef.destroy();\r\n                if (this.ngComponentOutletNgModuleFactory) {\r\n                    const parentModule = elInjector.get(NgModuleRef);\r\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\r\n                }\r\n                else {\r\n                    this._moduleRef = null;\r\n                }\r\n            }\r\n            const componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\r\n                elInjector.get(ComponentFactoryResolver);\r\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\r\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._moduleRef)\r\n            this._moduleRef.destroy();\r\n    }\r\n}\r\nNgComponentOutlet.ɵfac = function NgComponentOutlet_Factory(t) { return new (t || NgComponentOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nNgComponentOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgComponentOutlet, selectors: [[\"\", \"ngComponentOutlet\", \"\"]], inputs: { ngComponentOutlet: \"ngComponentOutlet\", ngComponentOutletInjector: \"ngComponentOutletInjector\", ngComponentOutletContent: \"ngComponentOutletContent\", ngComponentOutletNgModuleFactory: \"ngComponentOutletNgModuleFactory\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nNgComponentOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\nNgComponentOutlet.propDecorators = {\r\n    ngComponentOutlet: [{ type: Input }],\r\n    ngComponentOutletInjector: [{ type: Input }],\r\n    ngComponentOutletContent: [{ type: Input }],\r\n    ngComponentOutletNgModuleFactory: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgComponentOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngComponentOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { ngComponentOutlet: [{\r\n            type: Input\r\n        }], ngComponentOutletInjector: [{\r\n            type: Input\r\n        }], ngComponentOutletContent: [{\r\n            type: Input\r\n        }], ngComponentOutletNgModuleFactory: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @publicApi\r\n */\r\nclass NgForOfContext {\r\n    constructor($implicit, ngForOf, index, count) {\r\n        this.$implicit = $implicit;\r\n        this.ngForOf = ngForOf;\r\n        this.index = index;\r\n        this.count = count;\r\n    }\r\n    get first() {\r\n        return this.index === 0;\r\n    }\r\n    get last() {\r\n        return this.index === this.count - 1;\r\n    }\r\n    get even() {\r\n        return this.index % 2 === 0;\r\n    }\r\n    get odd() {\r\n        return !this.even;\r\n    }\r\n}\r\n/**\r\n * A [structural directive](guide/structural-directives) that renders\r\n * a template for each item in a collection.\r\n * The directive is placed on an element, which becomes the parent\r\n * of the cloned templates.\r\n *\r\n * The `ngForOf` directive is generally used in the\r\n * [shorthand form](guide/structural-directives#asterisk) `*ngFor`.\r\n * In this form, the template to be rendered for each iteration is the content\r\n * of an anchor element containing the directive.\r\n *\r\n * The following example shows the shorthand syntax with some options,\r\n * contained in an `<li>` element.\r\n *\r\n * ```\r\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\r\n * ```\r\n *\r\n * The shorthand form expands into a long form that uses the `ngForOf` selector\r\n * on an `<ng-template>` element.\r\n * The content of the `<ng-template>` element is the `<li>` element that held the\r\n * short-form directive.\r\n *\r\n * Here is the expanded version of the short-form example.\r\n *\r\n * ```\r\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\r\n *   <li>...</li>\r\n * </ng-template>\r\n * ```\r\n *\r\n * Angular automatically expands the shorthand syntax as it compiles the template.\r\n * The context for each embedded view is logically merged to the current component\r\n * context according to its lexical position.\r\n *\r\n * When using the shorthand syntax, Angular allows only [one structural directive\r\n * on an element](guide/built-in-directives#one-per-element).\r\n * If you want to iterate conditionally, for example,\r\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\r\n * For futher discussion, see\r\n * [Structural Directives](guide/built-in-directives#one-per-element).\r\n *\r\n * @usageNotes\r\n *\r\n * ### Local variables\r\n *\r\n * `NgForOf` provides exported values that can be aliased to local variables.\r\n * For example:\r\n *\r\n *  ```\r\n * <li *ngFor=\"let user of users; index as i; first as isFirst\">\r\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\r\n * </li>\r\n * ```\r\n *\r\n * The following exported values can be aliased to local variables:\r\n *\r\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\r\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\r\n * more complex then a property access, for example when using the async pipe (`userStreams |\r\n * async`).\r\n * - `index: number`: The index of the current item in the iterable.\r\n * - `count: number`: The length of the iterable.\r\n * - `first: boolean`: True when the item is the first item in the iterable.\r\n * - `last: boolean`: True when the item is the last item in the iterable.\r\n * - `even: boolean`: True when the item has an even index in the iterable.\r\n * - `odd: boolean`: True when the item has an odd index in the iterable.\r\n *\r\n * ### Change propagation\r\n *\r\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\r\n *\r\n * * When an item is added, a new instance of the template is added to the DOM.\r\n * * When an item is removed, its template instance is removed from the DOM.\r\n * * When items are reordered, their respective templates are reordered in the DOM.\r\n *\r\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\r\n * those changes in the DOM. This has important implications for animations and any stateful\r\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\r\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\r\n * such as user input.\r\n * For more on animations, see [Transitions and Triggers](guide/transition-and-triggers).\r\n *\r\n * The identities of elements in the iterator can change while the data does not.\r\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\r\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\r\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\r\n * elements were deleted and all new elements inserted).\r\n *\r\n * To avoid this expensive operation, you can customize the default tracking algorithm.\r\n * by supplying the `trackBy` option to `NgForOf`.\r\n * `trackBy` takes a function that has two arguments: `index` and `item`.\r\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\r\n *\r\n * @see [Structural Directives](guide/structural-directives)\r\n * @ngModule CommonModule\r\n * @publicApi\r\n */\r\nclass NgForOf {\r\n    constructor(_viewContainer, _template, _differs) {\r\n        this._viewContainer = _viewContainer;\r\n        this._template = _template;\r\n        this._differs = _differs;\r\n        this._ngForOf = null;\r\n        this._ngForOfDirty = true;\r\n        this._differ = null;\r\n    }\r\n    /**\r\n     * The value of the iterable expression, which can be used as a\r\n     * [template input variable](guide/structural-directives#shorthand).\r\n     */\r\n    set ngForOf(ngForOf) {\r\n        this._ngForOf = ngForOf;\r\n        this._ngForOfDirty = true;\r\n    }\r\n    /**\r\n     * Specifies a custom `TrackByFunction` to compute the identity of items in an iterable.\r\n     *\r\n     * If a custom `TrackByFunction` is not provided, `NgForOf` will use the item's [object\r\n     * identity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is)\r\n     * as the key.\r\n     *\r\n     * `NgForOf` uses the computed key to associate items in an iterable with DOM elements\r\n     * it produces for these items.\r\n     *\r\n     * A custom `TrackByFunction` is useful to provide good user experience in cases when items in an\r\n     * iterable rendered using `NgForOf` have a natural identifier (for example, custom ID or a\r\n     * primary key), and this iterable could be updated with new object instances that still\r\n     * represent the same underlying entity (for example, when data is re-fetched from the server,\r\n     * and the iterable is recreated and re-rendered, but most of the data is still the same).\r\n     *\r\n     * @see `TrackByFunction`\r\n     */\r\n    set ngForTrackBy(fn) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\r\n            // TODO(vicb): use a log service once there is a public one available\r\n            if (console && console.warn) {\r\n                console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\r\n                    `See https://angular.io/api/common/NgForOf#change-propagation for more information.`);\r\n            }\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    get ngForTrackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    /**\r\n     * A reference to the template that is stamped out for each item in the iterable.\r\n     * @see [template reference variable](guide/template-reference-variables)\r\n     */\r\n    set ngForTemplate(value) {\r\n        // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\r\n        // The current type is too restrictive; a template that just uses index, for example,\r\n        // should be acceptable.\r\n        if (value) {\r\n            this._template = value;\r\n        }\r\n    }\r\n    /**\r\n     * Applies the changes when needed.\r\n     */\r\n    ngDoCheck() {\r\n        if (this._ngForOfDirty) {\r\n            this._ngForOfDirty = false;\r\n            // React on ngForOf changes only once all inputs have been initialized\r\n            const value = this._ngForOf;\r\n            if (!this._differ && value) {\r\n                try {\r\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\r\n                }\r\n                catch (_a) {\r\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeName(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\r\n                }\r\n            }\r\n        }\r\n        if (this._differ) {\r\n            const changes = this._differ.diff(this._ngForOf);\r\n            if (changes)\r\n                this._applyChanges(changes);\r\n        }\r\n    }\r\n    _applyChanges(changes) {\r\n        const insertTuples = [];\r\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\r\n            if (item.previousIndex == null) {\r\n                // NgForOf is never \"null\" or \"undefined\" here because the differ detected\r\n                // that a new item needs to be inserted from the iterable. This implies that\r\n                // there is an iterable value for \"_ngForOf\".\r\n                const view = this._viewContainer.createEmbeddedView(this._template, new NgForOfContext(null, this._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);\r\n                const tuple = new RecordViewTuple(item, view);\r\n                insertTuples.push(tuple);\r\n            }\r\n            else if (currentIndex == null) {\r\n                this._viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);\r\n            }\r\n            else if (adjustedPreviousIndex !== null) {\r\n                const view = this._viewContainer.get(adjustedPreviousIndex);\r\n                this._viewContainer.move(view, currentIndex);\r\n                const tuple = new RecordViewTuple(item, view);\r\n                insertTuples.push(tuple);\r\n            }\r\n        });\r\n        for (let i = 0; i < insertTuples.length; i++) {\r\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\r\n        }\r\n        for (let i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\r\n            const viewRef = this._viewContainer.get(i);\r\n            viewRef.context.index = i;\r\n            viewRef.context.count = ilen;\r\n            viewRef.context.ngForOf = this._ngForOf;\r\n        }\r\n        changes.forEachIdentityChange((record) => {\r\n            const viewRef = this._viewContainer.get(record.currentIndex);\r\n            viewRef.context.$implicit = record.item;\r\n        });\r\n    }\r\n    _perViewChange(view, record) {\r\n        view.context.$implicit = record.item;\r\n    }\r\n    /**\r\n     * Asserts the correct type of the context for the template that `NgForOf` will render.\r\n     *\r\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\r\n     * `NgForOf` structural directive renders its template with a specific context type.\r\n     */\r\n    static ngTemplateContextGuard(dir, ctx) {\r\n        return true;\r\n    }\r\n}\r\nNgForOf.ɵfac = function NgForOf_Factory(t) { return new (t || NgForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\r\nNgForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgForOf, selectors: [[\"\", \"ngFor\", \"\", \"ngForOf\", \"\"]], inputs: { ngForOf: \"ngForOf\", ngForTrackBy: \"ngForTrackBy\", ngForTemplate: \"ngForTemplate\" } });\r\nNgForOf.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers }\r\n];\r\nNgForOf.propDecorators = {\r\n    ngForOf: [{ type: Input }],\r\n    ngForTrackBy: [{ type: Input }],\r\n    ngForTemplate: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgForOf, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngFor][ngForOf]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, { ngForOf: [{\r\n            type: Input\r\n        }], ngForTrackBy: [{\r\n            type: Input\r\n        }], ngForTemplate: [{\r\n            type: Input\r\n        }] }); })();\r\nclass RecordViewTuple {\r\n    constructor(record, view) {\r\n        this.record = record;\r\n        this.view = view;\r\n    }\r\n}\r\nfunction getTypeName(type) {\r\n    return type['name'] || typeof type;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A structural directive that conditionally includes a template based on the value of\r\n * an expression coerced to Boolean.\r\n * When the expression evaluates to true, Angular renders the template\r\n * provided in a `then` clause, and when  false or null,\r\n * Angular renders the template provided in an optional `else` clause. The default\r\n * template for the `else` clause is blank.\r\n *\r\n * A [shorthand form](guide/structural-directives#asterisk) of the directive,\r\n * `*ngIf=\"condition\"`, is generally used, provided\r\n * as an attribute of the anchor element for the inserted template.\r\n * Angular expands this into a more explicit version, in which the anchor element\r\n * is contained in an `<ng-template>` element.\r\n *\r\n * Simple form with shorthand syntax:\r\n *\r\n * ```\r\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\r\n * ```\r\n *\r\n * Simple form with expanded syntax:\r\n *\r\n * ```\r\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\r\n * true.</div></ng-template>\r\n * ```\r\n *\r\n * Form with an \"else\" block:\r\n *\r\n * ```\r\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\r\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\r\n * ```\r\n *\r\n * Shorthand form with \"then\" and \"else\" blocks:\r\n *\r\n * ```\r\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\r\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\r\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\r\n * ```\r\n *\r\n * Form with storing the value locally:\r\n *\r\n * ```\r\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\r\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\r\n * ```\r\n *\r\n * @usageNotes\r\n *\r\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\r\n * as seen in the following  example.\r\n * The default `else` template is blank.\r\n *\r\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\r\n *\r\n * ### Showing an alternative template using `else`\r\n *\r\n * To display a template when `expression` evaluates to false, use an `else` template\r\n * binding as shown in the following example.\r\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\r\n * The template can be defined anywhere in the component view, but is typically placed right after\r\n * `ngIf` for readability.\r\n *\r\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\r\n *\r\n * ### Using an external `then` template\r\n *\r\n * In the previous example, the then-clause template is specified inline, as the content of the\r\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\r\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\r\n * change which template to use at runtime, as shown in the following example.\r\n *\r\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\r\n *\r\n * ### Storing a conditional result in a variable\r\n *\r\n * You might want to show a set of properties from the same object. If you are waiting\r\n * for asynchronous data, the object can be undefined.\r\n * In this case, you can use `ngIf` and store the result of the condition in a local\r\n * variable as shown in the following example.\r\n *\r\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\r\n *\r\n * This code uses only one `AsyncPipe`, so only one subscription is created.\r\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\r\n * You can then bind the local `user` repeatedly.\r\n *\r\n * The conditional displays the data only if `userStream` returns a value,\r\n * so you don't need to use the\r\n * safe-navigation-operator (`?.`)\r\n * to guard against null values when accessing properties.\r\n * You can display an alternative template while waiting for the data.\r\n *\r\n * ### Shorthand syntax\r\n *\r\n * The shorthand syntax `*ngIf` expands into two separate template specifications\r\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\r\n * that is meant to show a loading page while waiting for data to be loaded.\r\n *\r\n * ```\r\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\r\n *  ...\r\n * </div>\r\n *\r\n * <ng-template #loading>\r\n *  <div>Loading...</div>\r\n * </ng-template>\r\n * ```\r\n *\r\n * You can see that the \"else\" clause references the `<ng-template>`\r\n * with the `#loading` label, and the template for the \"then\" clause\r\n * is provided as the content of the anchor element.\r\n *\r\n * However, when Angular expands the shorthand syntax, it creates\r\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\r\n * The anchor element containing the template for the \"then\" clause becomes\r\n * the content of this unlabeled `<ng-template>` tag.\r\n *\r\n * ```\r\n * <ng-template [ngIf]=\"heroes\" [ngIfElse]=\"loading\">\r\n *  <div class=\"hero-list\">\r\n *   ...\r\n *  </div>\r\n * </ng-template>\r\n *\r\n * <ng-template #loading>\r\n *  <div>Loading...</div>\r\n * </ng-template>\r\n * ```\r\n *\r\n * The presence of the implicit template object has implications for the nesting of\r\n * structural directives. For more on this subject, see\r\n * [Structural Directives](https://angular.io/guide/built-in-directives#one-per-element).\r\n *\r\n * @ngModule CommonModule\r\n * @publicApi\r\n */\r\nclass NgIf {\r\n    constructor(_viewContainer, templateRef) {\r\n        this._viewContainer = _viewContainer;\r\n        this._context = new NgIfContext();\r\n        this._thenTemplateRef = null;\r\n        this._elseTemplateRef = null;\r\n        this._thenViewRef = null;\r\n        this._elseViewRef = null;\r\n        this._thenTemplateRef = templateRef;\r\n    }\r\n    /**\r\n     * The Boolean expression to evaluate as the condition for showing a template.\r\n     */\r\n    set ngIf(condition) {\r\n        this._context.$implicit = this._context.ngIf = condition;\r\n        this._updateView();\r\n    }\r\n    /**\r\n     * A template to show if the condition expression evaluates to true.\r\n     */\r\n    set ngIfThen(templateRef) {\r\n        assertTemplate('ngIfThen', templateRef);\r\n        this._thenTemplateRef = templateRef;\r\n        this._thenViewRef = null; // clear previous view if any.\r\n        this._updateView();\r\n    }\r\n    /**\r\n     * A template to show if the condition expression evaluates to false.\r\n     */\r\n    set ngIfElse(templateRef) {\r\n        assertTemplate('ngIfElse', templateRef);\r\n        this._elseTemplateRef = templateRef;\r\n        this._elseViewRef = null; // clear previous view if any.\r\n        this._updateView();\r\n    }\r\n    _updateView() {\r\n        if (this._context.$implicit) {\r\n            if (!this._thenViewRef) {\r\n                this._viewContainer.clear();\r\n                this._elseViewRef = null;\r\n                if (this._thenTemplateRef) {\r\n                    this._thenViewRef =\r\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (!this._elseViewRef) {\r\n                this._viewContainer.clear();\r\n                this._thenViewRef = null;\r\n                if (this._elseTemplateRef) {\r\n                    this._elseViewRef =\r\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Asserts the correct type of the context for the template that `NgIf` will render.\r\n     *\r\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\r\n     * `NgIf` structural directive renders its template with a specific context type.\r\n     */\r\n    static ngTemplateContextGuard(dir, ctx) {\r\n        return true;\r\n    }\r\n}\r\nNgIf.ɵfac = function NgIf_Factory(t) { return new (t || NgIf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nNgIf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgIf, selectors: [[\"\", \"ngIf\", \"\"]], inputs: { ngIf: \"ngIf\", ngIfThen: \"ngIfThen\", ngIfElse: \"ngIfElse\" } });\r\nNgIf.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef }\r\n];\r\nNgIf.propDecorators = {\r\n    ngIf: [{ type: Input }],\r\n    ngIfThen: [{ type: Input }],\r\n    ngIfElse: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgIf, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngIf]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, { ngIf: [{\r\n            type: Input\r\n        }], ngIfThen: [{\r\n            type: Input\r\n        }], ngIfElse: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * @publicApi\r\n */\r\nclass NgIfContext {\r\n    constructor() {\r\n        this.$implicit = null;\r\n        this.ngIf = null;\r\n    }\r\n}\r\nfunction assertTemplate(property, templateRef) {\r\n    const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\r\n    if (!isTemplateRefOrNull) {\r\n        throw new Error(`${property} must be a TemplateRef, but received '${ɵstringify(templateRef)}'.`);\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass SwitchView {\r\n    constructor(_viewContainerRef, _templateRef) {\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n        this._created = false;\r\n    }\r\n    create() {\r\n        this._created = true;\r\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n    }\r\n    destroy() {\r\n        this._created = false;\r\n        this._viewContainerRef.clear();\r\n    }\r\n    enforceState(created) {\r\n        if (created && !this._created) {\r\n            this.create();\r\n        }\r\n        else if (!created && this._created) {\r\n            this.destroy();\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @description\r\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\r\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\r\n * - Every view that matches is rendered.\r\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\r\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\r\n * or `ngSwitchDefault` directive are preserved at the location.\r\n *\r\n * @usageNotes\r\n * Define a container element for the directive, and specify the switch expression\r\n * to match against as an attribute:\r\n *\r\n * ```\r\n * <container-element [ngSwitch]=\"switch_expression\">\r\n * ```\r\n *\r\n * Within the container, `*ngSwitchCase` statements specify the match expressions\r\n * as attributes. Include `*ngSwitchDefault` as the final case.\r\n *\r\n * ```\r\n * <container-element [ngSwitch]=\"switch_expression\">\r\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\r\n * ...\r\n *    <some-element *ngSwitchDefault>...</some-element>\r\n * </container-element>\r\n * ```\r\n *\r\n * ### Usage Examples\r\n *\r\n * The following example shows how to use more than one case to display the same view:\r\n *\r\n * ```\r\n * <container-element [ngSwitch]=\"switch_expression\">\r\n *   <!-- the same view can be shown in more than one case -->\r\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\r\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\r\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\r\n *   <!--default case when there are no matches -->\r\n *   <some-element *ngSwitchDefault>...</some-element>\r\n * </container-element>\r\n * ```\r\n *\r\n * The following example shows how cases can be nested:\r\n * ```\r\n * <container-element [ngSwitch]=\"switch_expression\">\r\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\r\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\r\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\r\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\r\n *         <!-- use a ng-container to group multiple root nodes -->\r\n *         <inner-element></inner-element>\r\n *         <inner-other-element></inner-other-element>\r\n *       </ng-container>\r\n *       <some-element *ngSwitchDefault>...</some-element>\r\n *     </container-element>\r\n * ```\r\n *\r\n * @publicApi\r\n * @see `NgSwitchCase`\r\n * @see `NgSwitchDefault`\r\n * @see [Structural Directives](guide/structural-directives)\r\n *\r\n */\r\nclass NgSwitch {\r\n    constructor() {\r\n        this._defaultUsed = false;\r\n        this._caseCount = 0;\r\n        this._lastCaseCheckIndex = 0;\r\n        this._lastCasesMatched = false;\r\n    }\r\n    set ngSwitch(newValue) {\r\n        this._ngSwitch = newValue;\r\n        if (this._caseCount === 0) {\r\n            this._updateDefaultCases(true);\r\n        }\r\n    }\r\n    /** @internal */\r\n    _addCase() {\r\n        return this._caseCount++;\r\n    }\r\n    /** @internal */\r\n    _addDefault(view) {\r\n        if (!this._defaultViews) {\r\n            this._defaultViews = [];\r\n        }\r\n        this._defaultViews.push(view);\r\n    }\r\n    /** @internal */\r\n    _matchCase(value) {\r\n        const matched = value == this._ngSwitch;\r\n        this._lastCasesMatched = this._lastCasesMatched || matched;\r\n        this._lastCaseCheckIndex++;\r\n        if (this._lastCaseCheckIndex === this._caseCount) {\r\n            this._updateDefaultCases(!this._lastCasesMatched);\r\n            this._lastCaseCheckIndex = 0;\r\n            this._lastCasesMatched = false;\r\n        }\r\n        return matched;\r\n    }\r\n    _updateDefaultCases(useDefault) {\r\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\r\n            this._defaultUsed = useDefault;\r\n            for (let i = 0; i < this._defaultViews.length; i++) {\r\n                const defaultView = this._defaultViews[i];\r\n                defaultView.enforceState(useDefault);\r\n            }\r\n        }\r\n    }\r\n}\r\nNgSwitch.ɵfac = function NgSwitch_Factory(t) { return new (t || NgSwitch)(); };\r\nNgSwitch.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgSwitch, selectors: [[\"\", \"ngSwitch\", \"\"]], inputs: { ngSwitch: \"ngSwitch\" } });\r\nNgSwitch.propDecorators = {\r\n    ngSwitch: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgSwitch, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngSwitch]' }]\r\n    }], function () { return []; }, { ngSwitch: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @description\r\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\r\n * When the expressions match, the given `NgSwitchCase` template is rendered.\r\n * If multiple match expressions match the switch expression value, all of them are displayed.\r\n *\r\n * @usageNotes\r\n *\r\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\r\n * as attributes. Include `*ngSwitchDefault` as the final case.\r\n *\r\n * ```\r\n * <container-element [ngSwitch]=\"switch_expression\">\r\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\r\n *   ...\r\n *   <some-element *ngSwitchDefault>...</some-element>\r\n * </container-element>\r\n * ```\r\n *\r\n * Each switch-case statement contains an in-line HTML template or template reference\r\n * that defines the subtree to be selected if the value of the match expression\r\n * matches the value of the switch expression.\r\n *\r\n * Unlike JavaScript, which uses strict equality, Angular uses loose equality.\r\n * This means that the empty string, `\"\"` matches 0.\r\n *\r\n * @publicApi\r\n * @see `NgSwitch`\r\n * @see `NgSwitchDefault`\r\n *\r\n */\r\nclass NgSwitchCase {\r\n    constructor(viewContainer, templateRef, ngSwitch) {\r\n        this.ngSwitch = ngSwitch;\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\r\n            throwNgSwitchProviderNotFoundError('ngSwitchCase', 'NgSwitchCase');\r\n        }\r\n        ngSwitch._addCase();\r\n        this._view = new SwitchView(viewContainer, templateRef);\r\n    }\r\n    /**\r\n     * Performs case matching. For internal use only.\r\n     */\r\n    ngDoCheck() {\r\n        this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));\r\n    }\r\n}\r\nNgSwitchCase.ɵfac = function NgSwitchCase_Factory(t) { return new (t || NgSwitchCase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(NgSwitch, 9)); };\r\nNgSwitchCase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgSwitchCase, selectors: [[\"\", \"ngSwitchCase\", \"\"]], inputs: { ngSwitchCase: \"ngSwitchCase\" } });\r\nNgSwitchCase.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: NgSwitch, decorators: [{ type: Optional }, { type: Host }] }\r\n];\r\nNgSwitchCase.propDecorators = {\r\n    ngSwitchCase: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgSwitchCase, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngSwitchCase]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: NgSwitch, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Host\r\n            }] }]; }, { ngSwitchCase: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @description\r\n *\r\n * Creates a view that is rendered when no `NgSwitchCase` expressions\r\n * match the `NgSwitch` expression.\r\n * This statement should be the final case in an `NgSwitch`.\r\n *\r\n * @publicApi\r\n * @see `NgSwitch`\r\n * @see `NgSwitchCase`\r\n *\r\n */\r\nclass NgSwitchDefault {\r\n    constructor(viewContainer, templateRef, ngSwitch) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\r\n            throwNgSwitchProviderNotFoundError('ngSwitchDefault', 'NgSwitchDefault');\r\n        }\r\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\r\n    }\r\n}\r\nNgSwitchDefault.ɵfac = function NgSwitchDefault_Factory(t) { return new (t || NgSwitchDefault)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(NgSwitch, 9)); };\r\nNgSwitchDefault.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgSwitchDefault, selectors: [[\"\", \"ngSwitchDefault\", \"\"]] });\r\nNgSwitchDefault.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: NgSwitch, decorators: [{ type: Optional }, { type: Host }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgSwitchDefault, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngSwitchDefault]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: NgSwitch, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Host\r\n            }] }]; }, null); })();\r\nfunction throwNgSwitchProviderNotFoundError(attrName, directiveName) {\r\n    throw new ɵRuntimeError(\"305\" /* TEMPLATE_STRUCTURE_ERROR */, `An element with the \"${attrName}\" attribute ` +\r\n        `(matching the \"${directiveName}\" directive) must be located inside an element with the \"ngSwitch\" attribute ` +\r\n        `(matching \"NgSwitch\" directive)`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @usageNotes\r\n * ```\r\n * <some-element [ngPlural]=\"value\">\r\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\r\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\r\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\r\n * </some-element>\r\n * ```\r\n *\r\n * @description\r\n *\r\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\r\n *\r\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\r\n * that match the switch expression's pluralization category.\r\n *\r\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\r\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\r\n * expression:\r\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\r\n *   matches the switch expression exactly,\r\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\r\n *   value matches aren't found and the value maps to its category for the defined locale.\r\n *\r\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\r\n *\r\n * @publicApi\r\n */\r\nclass NgPlural {\r\n    constructor(_localization) {\r\n        this._localization = _localization;\r\n        this._caseViews = {};\r\n    }\r\n    set ngPlural(value) {\r\n        this._switchValue = value;\r\n        this._updateView();\r\n    }\r\n    addCase(value, switchView) {\r\n        this._caseViews[value] = switchView;\r\n    }\r\n    _updateView() {\r\n        this._clearViews();\r\n        const cases = Object.keys(this._caseViews);\r\n        const key = getPluralCategory(this._switchValue, cases, this._localization);\r\n        this._activateView(this._caseViews[key]);\r\n    }\r\n    _clearViews() {\r\n        if (this._activeView)\r\n            this._activeView.destroy();\r\n    }\r\n    _activateView(view) {\r\n        if (view) {\r\n            this._activeView = view;\r\n            this._activeView.create();\r\n        }\r\n    }\r\n}\r\nNgPlural.ɵfac = function NgPlural_Factory(t) { return new (t || NgPlural)(ɵngcc0.ɵɵdirectiveInject(NgLocalization)); };\r\nNgPlural.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgPlural, selectors: [[\"\", \"ngPlural\", \"\"]], inputs: { ngPlural: \"ngPlural\" } });\r\nNgPlural.ctorParameters = () => [\r\n    { type: NgLocalization }\r\n];\r\nNgPlural.propDecorators = {\r\n    ngPlural: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgPlural, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngPlural]' }]\r\n    }], function () { return [{ type: NgLocalization }]; }, { ngPlural: [{\r\n            type: Input\r\n        }] }); })();\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @description\r\n *\r\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\r\n * given expression matches the plural expression according to CLDR rules.\r\n *\r\n * @usageNotes\r\n * ```\r\n * <some-element [ngPlural]=\"value\">\r\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\r\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\r\n * </some-element>\r\n *```\r\n *\r\n * See {@link NgPlural} for more details and example.\r\n *\r\n * @publicApi\r\n */\r\nclass NgPluralCase {\r\n    constructor(value, template, viewContainer, ngPlural) {\r\n        this.value = value;\r\n        const isANumber = !isNaN(Number(value));\r\n        ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\r\n    }\r\n}\r\nNgPluralCase.ɵfac = function NgPluralCase_Factory(t) { return new (t || NgPluralCase)(ɵngcc0.ɵɵinjectAttribute('ngPluralCase'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgPlural, 1)); };\r\nNgPluralCase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgPluralCase, selectors: [[\"\", \"ngPluralCase\", \"\"]] });\r\nNgPluralCase.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Attribute, args: ['ngPluralCase',] }] },\r\n    { type: TemplateRef },\r\n    { type: ViewContainerRef },\r\n    { type: NgPlural, decorators: [{ type: Host }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgPluralCase, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngPluralCase]' }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['ngPluralCase']\r\n            }] }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: NgPlural, decorators: [{\r\n                type: Host\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @usageNotes\r\n *\r\n * Set the font of the containing element to the result of an expression.\r\n *\r\n * ```\r\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\r\n * ```\r\n *\r\n * Set the width of the containing element to a pixel value returned by an expression.\r\n *\r\n * ```\r\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\r\n * ```\r\n *\r\n * Set a collection of style values using an expression that returns key-value pairs.\r\n *\r\n * ```\r\n * <some-element [ngStyle]=\"objExp\">...</some-element>\r\n * ```\r\n *\r\n * @description\r\n *\r\n * An attribute directive that updates styles for the containing HTML element.\r\n * Sets one or more style properties, specified as colon-separated key-value pairs.\r\n * The key is a style name, with an optional `.<unit>` suffix\r\n * (such as 'top.px', 'font-style.em').\r\n * The value is an expression to be evaluated.\r\n * The resulting non-null value, expressed in the given unit,\r\n * is assigned to the given style property.\r\n * If the result of evaluation is null, the corresponding style is removed.\r\n *\r\n * @publicApi\r\n */\r\nclass NgStyle {\r\n    constructor(_ngEl, _differs, _renderer) {\r\n        this._ngEl = _ngEl;\r\n        this._differs = _differs;\r\n        this._renderer = _renderer;\r\n        this._ngStyle = null;\r\n        this._differ = null;\r\n    }\r\n    set ngStyle(values) {\r\n        this._ngStyle = values;\r\n        if (!this._differ && values) {\r\n            this._differ = this._differs.find(values).create();\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this._differ) {\r\n            const changes = this._differ.diff(this._ngStyle);\r\n            if (changes) {\r\n                this._applyChanges(changes);\r\n            }\r\n        }\r\n    }\r\n    _setStyle(nameAndUnit, value) {\r\n        const [name, unit] = nameAndUnit.split('.');\r\n        value = value != null && unit ? `${value}${unit}` : value;\r\n        if (value != null) {\r\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\r\n        }\r\n        else {\r\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\r\n        }\r\n    }\r\n    _applyChanges(changes) {\r\n        changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\r\n        changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\r\n        changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\r\n    }\r\n}\r\nNgStyle.ɵfac = function NgStyle_Factory(t) { return new (t || NgStyle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\r\nNgStyle.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgStyle, selectors: [[\"\", \"ngStyle\", \"\"]], inputs: { ngStyle: \"ngStyle\" } });\r\nNgStyle.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: KeyValueDiffers },\r\n    { type: Renderer2 }\r\n];\r\nNgStyle.propDecorators = {\r\n    ngStyle: [{ type: Input, args: ['ngStyle',] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgStyle, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngStyle]' }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.Renderer2 }]; }, { ngStyle: [{\r\n            type: Input,\r\n            args: ['ngStyle']\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n *\r\n * @description\r\n *\r\n * Inserts an embedded view from a prepared `TemplateRef`.\r\n *\r\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\r\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\r\n * by the local template `let` declarations.\r\n *\r\n * @usageNotes\r\n * ```\r\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\r\n * ```\r\n *\r\n * Using the key `$implicit` in the context object will set its value as default.\r\n *\r\n * ### Example\r\n *\r\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\r\n *\r\n * @publicApi\r\n */\r\nclass NgTemplateOutlet {\r\n    constructor(_viewContainerRef) {\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._viewRef = null;\r\n        /**\r\n         * A context object to attach to the {@link EmbeddedViewRef}. This should be an\r\n         * object, the object's keys will be available for binding by the local template `let`\r\n         * declarations.\r\n         * Using the key `$implicit` in the context object will set its value as default.\r\n         */\r\n        this.ngTemplateOutletContext = null;\r\n        /**\r\n         * A string defining the template reference and optionally the context object for the template.\r\n         */\r\n        this.ngTemplateOutlet = null;\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['ngTemplateOutlet']) {\r\n            const viewContainerRef = this._viewContainerRef;\r\n            if (this._viewRef) {\r\n                viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\r\n            }\r\n            this._viewRef = this.ngTemplateOutlet ?\r\n                viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext) :\r\n                null;\r\n        }\r\n        else if (this._viewRef && changes['ngTemplateOutletContext'] && this.ngTemplateOutletContext) {\r\n            this._viewRef.context = this.ngTemplateOutletContext;\r\n        }\r\n    }\r\n}\r\nNgTemplateOutlet.ɵfac = function NgTemplateOutlet_Factory(t) { return new (t || NgTemplateOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nNgTemplateOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgTemplateOutlet, selectors: [[\"\", \"ngTemplateOutlet\", \"\"]], inputs: { ngTemplateOutletContext: \"ngTemplateOutletContext\", ngTemplateOutlet: \"ngTemplateOutlet\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nNgTemplateOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\nNgTemplateOutlet.propDecorators = {\r\n    ngTemplateOutletContext: [{ type: Input }],\r\n    ngTemplateOutlet: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgTemplateOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[ngTemplateOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { ngTemplateOutletContext: [{\r\n            type: Input\r\n        }], ngTemplateOutlet: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A collection of Angular directives that are likely to be used in each and every Angular\r\n * application.\r\n */\r\nconst COMMON_DIRECTIVES = [\r\n    NgClass,\r\n    NgComponentOutlet,\r\n    NgForOf,\r\n    NgIf,\r\n    NgTemplateOutlet,\r\n    NgStyle,\r\n    NgSwitch,\r\n    NgSwitchCase,\r\n    NgSwitchDefault,\r\n    NgPlural,\r\n    NgPluralCase,\r\n];\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction invalidPipeArgumentError(type, value) {\r\n    return Error(`InvalidPipeArgument: '${value}' for pipe '${ɵstringify(type)}'`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass SubscribableStrategy {\r\n    createSubscription(async, updateLatestValue) {\r\n        return async.subscribe({\r\n            next: updateLatestValue,\r\n            error: (e) => {\r\n                throw e;\r\n            }\r\n        });\r\n    }\r\n    dispose(subscription) {\r\n        subscription.unsubscribe();\r\n    }\r\n    onDestroy(subscription) {\r\n        subscription.unsubscribe();\r\n    }\r\n}\r\nclass PromiseStrategy {\r\n    createSubscription(async, updateLatestValue) {\r\n        return async.then(updateLatestValue, e => {\r\n            throw e;\r\n        });\r\n    }\r\n    dispose(subscription) { }\r\n    onDestroy(subscription) { }\r\n}\r\nconst _promiseStrategy = new PromiseStrategy();\r\nconst _subscribableStrategy = new SubscribableStrategy();\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Unwraps a value from an asynchronous primitive.\r\n *\r\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\r\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\r\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\r\n * potential memory leaks.\r\n *\r\n * @usageNotes\r\n *\r\n * ### Examples\r\n *\r\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\r\n * promise.\r\n *\r\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\r\n *\r\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\r\n * to the view. The Observable continuously updates the view with the current time.\r\n *\r\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\r\n *\r\n * @publicApi\r\n */\r\nclass AsyncPipe {\r\n    constructor(_ref) {\r\n        this._ref = _ref;\r\n        this._latestValue = null;\r\n        this._subscription = null;\r\n        this._obj = null;\r\n        this._strategy = null;\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._subscription) {\r\n            this._dispose();\r\n        }\r\n    }\r\n    transform(obj) {\r\n        if (!this._obj) {\r\n            if (obj) {\r\n                this._subscribe(obj);\r\n            }\r\n            return this._latestValue;\r\n        }\r\n        if (obj !== this._obj) {\r\n            this._dispose();\r\n            return this.transform(obj);\r\n        }\r\n        return this._latestValue;\r\n    }\r\n    _subscribe(obj) {\r\n        this._obj = obj;\r\n        this._strategy = this._selectStrategy(obj);\r\n        this._subscription = this._strategy.createSubscription(obj, (value) => this._updateLatestValue(obj, value));\r\n    }\r\n    _selectStrategy(obj) {\r\n        if (ɵisPromise(obj)) {\r\n            return _promiseStrategy;\r\n        }\r\n        if (ɵisSubscribable(obj)) {\r\n            return _subscribableStrategy;\r\n        }\r\n        throw invalidPipeArgumentError(AsyncPipe, obj);\r\n    }\r\n    _dispose() {\r\n        this._strategy.dispose(this._subscription);\r\n        this._latestValue = null;\r\n        this._subscription = null;\r\n        this._obj = null;\r\n    }\r\n    _updateLatestValue(async, value) {\r\n        if (async === this._obj) {\r\n            this._latestValue = value;\r\n            this._ref.markForCheck();\r\n        }\r\n    }\r\n}\r\nAsyncPipe.ɵfac = function AsyncPipe_Factory(t) { return new (t || AsyncPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef, 16)); };\r\nAsyncPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"async\", type: AsyncPipe, pure: false });\r\nAsyncPipe.ctorParameters = () => [\r\n    { type: ChangeDetectorRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AsyncPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'async', pure: false }]\r\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Transforms text to all lower case.\r\n *\r\n * @see `UpperCasePipe`\r\n * @see `TitleCasePipe`\r\n * @usageNotes\r\n *\r\n * The following example defines a view that allows the user to enter\r\n * text, and then uses the pipe to convert the input text to all lower case.\r\n *\r\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\r\n *\r\n * @ngModule CommonModule\r\n * @publicApi\r\n */\r\nclass LowerCasePipe {\r\n    transform(value) {\r\n        if (value == null)\r\n            return null;\r\n        if (typeof value !== 'string') {\r\n            throw invalidPipeArgumentError(LowerCasePipe, value);\r\n        }\r\n        return value.toLowerCase();\r\n    }\r\n}\r\nLowerCasePipe.ɵfac = function LowerCasePipe_Factory(t) { return new (t || LowerCasePipe)(); };\r\nLowerCasePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"lowercase\", type: LowerCasePipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LowerCasePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'lowercase' }]\r\n    }], null, null); })();\r\n//\r\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\r\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\r\n// (https://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\r\n// transpilation of this functionality down to ES5 without external tool, the only solution is\r\n// to use already transpiled form. Example can be found here -\r\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\r\n//\r\nconst unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\r\n/**\r\n * Transforms text to title case.\r\n * Capitalizes the first letter of each word and transforms the\r\n * rest of the word to lower case.\r\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\r\n *\r\n * @see `LowerCasePipe`\r\n * @see `UpperCasePipe`\r\n *\r\n * @usageNotes\r\n * The following example shows the result of transforming various strings into title case.\r\n *\r\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\r\n *\r\n * @ngModule CommonModule\r\n * @publicApi\r\n */\r\nclass TitleCasePipe {\r\n    transform(value) {\r\n        if (value == null)\r\n            return null;\r\n        if (typeof value !== 'string') {\r\n            throw invalidPipeArgumentError(TitleCasePipe, value);\r\n        }\r\n        return value.replace(unicodeWordMatch, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()));\r\n    }\r\n}\r\nTitleCasePipe.ɵfac = function TitleCasePipe_Factory(t) { return new (t || TitleCasePipe)(); };\r\nTitleCasePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"titlecase\", type: TitleCasePipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TitleCasePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'titlecase' }]\r\n    }], null, null); })();\r\n/**\r\n * Transforms text to all upper case.\r\n * @see `LowerCasePipe`\r\n * @see `TitleCasePipe`\r\n *\r\n * @ngModule CommonModule\r\n * @publicApi\r\n */\r\nclass UpperCasePipe {\r\n    transform(value) {\r\n        if (value == null)\r\n            return null;\r\n        if (typeof value !== 'string') {\r\n            throw invalidPipeArgumentError(UpperCasePipe, value);\r\n        }\r\n        return value.toUpperCase();\r\n    }\r\n}\r\nUpperCasePipe.ɵfac = function UpperCasePipe_Factory(t) { return new (t || UpperCasePipe)(); };\r\nUpperCasePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"uppercase\", type: UpperCasePipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UpperCasePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'uppercase' }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// clang-format off\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a date value according to locale rules.\r\n *\r\n * `DatePipe` is executed only when it detects a pure change to the input value.\r\n * A pure change is either a change to a primitive input value\r\n * (such as `String`, `Number`, `Boolean`, or `Symbol`),\r\n * or a changed object reference (such as `Date`, `Array`, `Function`, or `Object`).\r\n *\r\n * Note that mutating a `Date` object does not cause the pipe to be rendered again.\r\n * To ensure that the pipe is executed, you must create a new `Date` object.\r\n *\r\n * Only the `en-US` locale data comes with Angular. To localize dates\r\n * in another language, you must import the corresponding locale data.\r\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\r\n *\r\n * @see `formatDate()`\r\n *\r\n *\r\n * @usageNotes\r\n *\r\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\r\n * reformat the date on every change-detection cycle, treat the date as an immutable object\r\n * and change the reference when the pipe needs to run again.\r\n *\r\n * ### Pre-defined format options\r\n *\r\n * | Option        | Equivalent to                       | Examples (given in `en-US` locale)              |\r\n * |---------------|-------------------------------------|-------------------------------------------------|\r\n * | `'short'`     | `'M/d/yy, h:mm a'`                  | `6/15/15, 9:03 AM`                              |\r\n * | `'medium'`    | `'MMM d, y, h:mm:ss a'`             | `Jun 15, 2015, 9:03:01 AM`                      |\r\n * | `'long'`      | `'MMMM d, y, h:mm:ss a z'`          | `June 15, 2015 at 9:03:01 AM GMT+1`             |\r\n * | `'full'`      | `'EEEE, MMMM d, y, h:mm:ss a zzzz'` | `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00` |\r\n * | `'shortDate'` | `'M/d/yy'`                          | `6/15/15`                                       |\r\n * | `'mediumDate'`| `'MMM d, y'`                        | `Jun 15, 2015`                                  |\r\n * | `'longDate'`  | `'MMMM d, y'`                       | `June 15, 2015`                                 |\r\n * | `'fullDate'`  | `'EEEE, MMMM d, y'`                 | `Monday, June 15, 2015`                         |\r\n * | `'shortTime'` | `'h:mm a'`                          | `9:03 AM`                                       |\r\n * | `'mediumTime'`| `'h:mm:ss a'`                       | `9:03:01 AM`                                    |\r\n * | `'longTime'`  | `'h:mm:ss a z'`                     | `9:03:01 AM GMT+1`                              |\r\n * | `'fullTime'`  | `'h:mm:ss a zzzz'`                  | `9:03:01 AM GMT+01:00`                          |\r\n *\r\n * ### Custom format options\r\n *\r\n * You can construct a format string using symbols to specify the components\r\n * of a date-time value, as described in the following table.\r\n * Format details depend on the locale.\r\n * Fields marked with (*) are only available in the extra data set for the given locale.\r\n *\r\n *  | Field type          | Format      | Description                                                   | Example Value                                              |\r\n *  |-------------------- |-------------|---------------------------------------------------------------|------------------------------------------------------------|\r\n *  | Era                 | G, GG & GGG | Abbreviated                                                   | AD                                                         |\r\n *  |                     | GGGG        | Wide                                                          | Anno Domini                                                |\r\n *  |                     | GGGGG       | Narrow                                                        | A                                                          |\r\n *  | Year                | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\r\n *  |                     | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\r\n *  |                     | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\r\n *  |                     | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\r\n *  | Week-numbering year | Y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\r\n *  |                     | YY          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\r\n *  |                     | YYY         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\r\n *  |                     | YYYY        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\r\n *  | Month               | M           | Numeric: 1 digit                                              | 9, 12                                                      |\r\n *  |                     | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\r\n *  |                     | MMM         | Abbreviated                                                   | Sep                                                        |\r\n *  |                     | MMMM        | Wide                                                          | September                                                  |\r\n *  |                     | MMMMM       | Narrow                                                        | S                                                          |\r\n *  | Month standalone    | L           | Numeric: 1 digit                                              | 9, 12                                                      |\r\n *  |                     | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\r\n *  |                     | LLL         | Abbreviated                                                   | Sep                                                        |\r\n *  |                     | LLLL        | Wide                                                          | September                                                  |\r\n *  |                     | LLLLL       | Narrow                                                        | S                                                          |\r\n *  | Week of year        | w           | Numeric: minimum digits                                       | 1... 53                                                    |\r\n *  |                     | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\r\n *  | Week of month       | W           | Numeric: 1 digit                                              | 1... 5                                                     |\r\n *  | Day of month        | d           | Numeric: minimum digits                                       | 1                                                          |\r\n *  |                     | dd          | Numeric: 2 digits + zero padded                               | 01                                                         |\r\n *  | Week day            | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\r\n *  |                     | EEEE        | Wide                                                          | Tuesday                                                    |\r\n *  |                     | EEEEE       | Narrow                                                        | T                                                          |\r\n *  |                     | EEEEEE      | Short                                                         | Tu                                                         |\r\n *  | Week day standalone | c, cc       | Numeric: 1 digit                                              | 2                                                          |\r\n *  |                     | ccc         | Abbreviated                                                   | Tue                                                        |\r\n *  |                     | cccc        | Wide                                                          | Tuesday                                                    |\r\n *  |                     | ccccc       | Narrow                                                        | T                                                          |\r\n *  |                     | cccccc      | Short                                                         | Tu                                                         |\r\n *  | Period              | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\r\n *  |                     | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\r\n *  |                     | aaaaa       | Narrow                                                        | a/p                                                        |\r\n *  | Period*             | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\r\n *  |                     | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\r\n *  |                     | BBBBB       | Narrow                                                        | md                                                         |\r\n *  | Period standalone*  | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\r\n *  |                     | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\r\n *  |                     | bbbbb       | Narrow                                                        | md                                                         |\r\n *  | Hour 1-12           | h           | Numeric: minimum digits                                       | 1, 12                                                      |\r\n *  |                     | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\r\n *  | Hour 0-23           | H           | Numeric: minimum digits                                       | 0, 23                                                      |\r\n *  |                     | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\r\n *  | Minute              | m           | Numeric: minimum digits                                       | 8, 59                                                      |\r\n *  |                     | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\r\n *  | Second              | s           | Numeric: minimum digits                                       | 0... 59                                                    |\r\n *  |                     | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\r\n *  | Fractional seconds  | S           | Numeric: 1 digit                                              | 0... 9                                                     |\r\n *  |                     | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\r\n *  |                     | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\r\n *  | Zone                | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\r\n *  |                     | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\r\n *  |                     | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\r\n *  |                     | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\r\n *  |                     | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\r\n *  |                     | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\r\n *  |                     | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\r\n *\r\n *\r\n * ### Format examples\r\n *\r\n * These examples transform a date into various formats,\r\n * assuming that `dateObj` is a JavaScript `Date` object for\r\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\r\n * given in the local time for the `en-US` locale.\r\n *\r\n * ```\r\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\r\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\r\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\r\n * {{ dateObj | date:'mm:ss' }}       // output is '43:11'\r\n * ```\r\n *\r\n * ### Usage example\r\n *\r\n * The following component uses a date pipe to display the current date in different formats.\r\n *\r\n * ```\r\n * @Component({\r\n *  selector: 'date-pipe',\r\n *  template: `<div>\r\n *    <p>Today is {{today | date}}</p>\r\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\r\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\r\n *  </div>`\r\n * })\r\n * // Get the current date and time as a date-time value.\r\n * export class DatePipeComponent {\r\n *   today: number = Date.now();\r\n * }\r\n * ```\r\n *\r\n * @publicApi\r\n */\r\n// clang-format on\r\nclass DatePipe {\r\n    constructor(locale) {\r\n        this.locale = locale;\r\n    }\r\n    transform(value, format = 'mediumDate', timezone, locale) {\r\n        if (value == null || value === '' || value !== value)\r\n            return null;\r\n        try {\r\n            return formatDate(value, format, locale || this.locale, timezone);\r\n        }\r\n        catch (error) {\r\n            throw invalidPipeArgumentError(DatePipe, error.message);\r\n        }\r\n    }\r\n}\r\nDatePipe.ɵfac = function DatePipe_Factory(t) { return new (t || DatePipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID, 16)); };\r\nDatePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"date\", type: DatePipe, pure: true });\r\nDatePipe.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'date', pure: true }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Inject,\r\n                args: [LOCALE_ID]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst _INTERPOLATION_REGEXP = /#/g;\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Maps a value to a string that pluralizes the value according to locale rules.\r\n *\r\n * @usageNotes\r\n *\r\n * ### Example\r\n *\r\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\r\n *\r\n * @publicApi\r\n */\r\nclass I18nPluralPipe {\r\n    constructor(_localization) {\r\n        this._localization = _localization;\r\n    }\r\n    /**\r\n     * @param value the number to be formatted\r\n     * @param pluralMap an object that mimics the ICU format, see\r\n     * http://userguide.icu-project.org/formatparse/messages.\r\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\r\n     * default).\r\n     */\r\n    transform(value, pluralMap, locale) {\r\n        if (value == null)\r\n            return '';\r\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\r\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\r\n        }\r\n        const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\r\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\r\n    }\r\n}\r\nI18nPluralPipe.ɵfac = function I18nPluralPipe_Factory(t) { return new (t || I18nPluralPipe)(ɵngcc0.ɵɵdirectiveInject(NgLocalization, 16)); };\r\nI18nPluralPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"i18nPlural\", type: I18nPluralPipe, pure: true });\r\nI18nPluralPipe.ctorParameters = () => [\r\n    { type: NgLocalization }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(I18nPluralPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'i18nPlural', pure: true }]\r\n    }], function () { return [{ type: NgLocalization }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Generic selector that displays the string that matches the current value.\r\n *\r\n * If none of the keys of the `mapping` match the `value`, then the content\r\n * of the `other` key is returned when present, otherwise an empty string is returned.\r\n *\r\n * @usageNotes\r\n *\r\n * ### Example\r\n *\r\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\r\n *\r\n * @publicApi\r\n */\r\nclass I18nSelectPipe {\r\n    /**\r\n     * @param value a string to be internationalized.\r\n     * @param mapping an object that indicates the text that should be displayed\r\n     * for different values of the provided `value`.\r\n     */\r\n    transform(value, mapping) {\r\n        if (value == null)\r\n            return '';\r\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\r\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\r\n        }\r\n        if (mapping.hasOwnProperty(value)) {\r\n            return mapping[value];\r\n        }\r\n        if (mapping.hasOwnProperty('other')) {\r\n            return mapping['other'];\r\n        }\r\n        return '';\r\n    }\r\n}\r\nI18nSelectPipe.ɵfac = function I18nSelectPipe_Factory(t) { return new (t || I18nSelectPipe)(); };\r\nI18nSelectPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"i18nSelect\", type: I18nSelectPipe, pure: true });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(I18nSelectPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'i18nSelect', pure: true }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Converts a value into its JSON-format representation.  Useful for debugging.\r\n *\r\n * @usageNotes\r\n *\r\n * The following component uses a JSON pipe to convert an object\r\n * to JSON format, and displays the string in both formats for comparison.\r\n *\r\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\r\n *\r\n * @publicApi\r\n */\r\nclass JsonPipe {\r\n    /**\r\n     * @param value A value of any type to convert into a JSON-format string.\r\n     */\r\n    transform(value) {\r\n        return JSON.stringify(value, null, 2);\r\n    }\r\n}\r\nJsonPipe.ɵfac = function JsonPipe_Factory(t) { return new (t || JsonPipe)(); };\r\nJsonPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"json\", type: JsonPipe, pure: false });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JsonPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'json', pure: false }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction makeKeyValuePair(key, value) {\r\n    return { key: key, value: value };\r\n}\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Transforms Object or Map into an array of key value pairs.\r\n *\r\n * The output array will be ordered by keys.\r\n * By default the comparator will be by Unicode point value.\r\n * You can optionally pass a compareFn if your keys are complex types.\r\n *\r\n * @usageNotes\r\n * ### Examples\r\n *\r\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\r\n * keyvalue pipe.\r\n *\r\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\r\n *\r\n * @publicApi\r\n */\r\nclass KeyValuePipe {\r\n    constructor(differs) {\r\n        this.differs = differs;\r\n        this.keyValues = [];\r\n    }\r\n    transform(input, compareFn = defaultComparator) {\r\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\r\n            return null;\r\n        }\r\n        if (!this.differ) {\r\n            // make a differ for whatever type we've been passed in\r\n            this.differ = this.differs.find(input).create();\r\n        }\r\n        const differChanges = this.differ.diff(input);\r\n        if (differChanges) {\r\n            this.keyValues = [];\r\n            differChanges.forEachItem((r) => {\r\n                this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\r\n            });\r\n            this.keyValues.sort(compareFn);\r\n        }\r\n        return this.keyValues;\r\n    }\r\n}\r\nKeyValuePipe.ɵfac = function KeyValuePipe_Factory(t) { return new (t || KeyValuePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers, 16)); };\r\nKeyValuePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"keyvalue\", type: KeyValuePipe, pure: false });\r\nKeyValuePipe.ctorParameters = () => [\r\n    { type: KeyValueDiffers }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyValuePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'keyvalue', pure: false }]\r\n    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }]; }, null); })();\r\nfunction defaultComparator(keyValueA, keyValueB) {\r\n    const a = keyValueA.key;\r\n    const b = keyValueB.key;\r\n    // if same exit with 0;\r\n    if (a === b)\r\n        return 0;\r\n    // make sure that undefined are at the end of the sort.\r\n    if (a === undefined)\r\n        return 1;\r\n    if (b === undefined)\r\n        return -1;\r\n    // make sure that nulls are at the end of the sort.\r\n    if (a === null)\r\n        return 1;\r\n    if (b === null)\r\n        return -1;\r\n    if (typeof a == 'string' && typeof b == 'string') {\r\n        return a < b ? -1 : 1;\r\n    }\r\n    if (typeof a == 'number' && typeof b == 'number') {\r\n        return a - b;\r\n    }\r\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\r\n        return a < b ? -1 : 1;\r\n    }\r\n    // `a` and `b` are of different types. Compare their string values.\r\n    const aString = String(a);\r\n    const bString = String(b);\r\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Formats a value according to digit options and locale rules.\r\n * Locale determines group sizing and separator,\r\n * decimal point character, and other locale-specific configurations.\r\n *\r\n * @see `formatNumber()`\r\n *\r\n * @usageNotes\r\n *\r\n * ### digitsInfo\r\n *\r\n * The value's decimal representation is specified by the `digitsInfo`\r\n * parameter, written in the following format:<br>\r\n *\r\n * ```\r\n * {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}\r\n * ```\r\n *\r\n *  - `minIntegerDigits`:\r\n * The minimum number of integer digits before the decimal point.\r\n * Default is 1.\r\n *\r\n * - `minFractionDigits`:\r\n * The minimum number of digits after the decimal point.\r\n * Default is 0.\r\n *\r\n *  - `maxFractionDigits`:\r\n * The maximum number of digits after the decimal point.\r\n * Default is 3.\r\n *\r\n * If the formatted value is truncated it will be rounded using the \"to-nearest\" method:\r\n *\r\n * ```\r\n * {{3.6 | number: '1.0-0'}}\r\n * <!--will output '4'-->\r\n *\r\n * {{-3.6 | number:'1.0-0'}}\r\n * <!--will output '-4'-->\r\n * ```\r\n *\r\n * ### locale\r\n *\r\n * `locale` will format a value according to locale rules.\r\n * Locale determines group sizing and separator,\r\n * decimal point character, and other locale-specific configurations.\r\n *\r\n * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\r\n *\r\n * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\r\n *\r\n * ### Example\r\n *\r\n * The following code shows how the pipe transforms values\r\n * according to various format specifications,\r\n * where the caller's default locale is `en-US`.\r\n *\r\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\r\n *\r\n * @publicApi\r\n */\r\nclass DecimalPipe {\r\n    constructor(_locale) {\r\n        this._locale = _locale;\r\n    }\r\n    /**\r\n     * @param value The value to be formatted.\r\n     * @param digitsInfo Sets digit and decimal representation.\r\n     * [See more](#digitsinfo).\r\n     * @param locale Specifies what locale format rules to use.\r\n     * [See more](#locale).\r\n     */\r\n    transform(value, digitsInfo, locale) {\r\n        if (!isValue(value))\r\n            return null;\r\n        locale = locale || this._locale;\r\n        try {\r\n            const num = strToNumber(value);\r\n            return formatNumber(num, locale, digitsInfo);\r\n        }\r\n        catch (error) {\r\n            throw invalidPipeArgumentError(DecimalPipe, error.message);\r\n        }\r\n    }\r\n}\r\nDecimalPipe.ɵfac = function DecimalPipe_Factory(t) { return new (t || DecimalPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID, 16)); };\r\nDecimalPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"number\", type: DecimalPipe, pure: true });\r\nDecimalPipe.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DecimalPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'number' }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Inject,\r\n                args: [LOCALE_ID]\r\n            }] }]; }, null); })();\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Transforms a number to a percentage\r\n * string, formatted according to locale rules that determine group sizing and\r\n * separator, decimal-point character, and other locale-specific\r\n * configurations.\r\n *\r\n * @see `formatPercent()`\r\n *\r\n * @usageNotes\r\n * The following code shows how the pipe transforms numbers\r\n * into text strings, according to various format specifications,\r\n * where the caller's default locale is `en-US`.\r\n *\r\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\r\n *\r\n * @publicApi\r\n */\r\nclass PercentPipe {\r\n    constructor(_locale) {\r\n        this._locale = _locale;\r\n    }\r\n    /**\r\n     *\r\n     * @param value The number to be formatted as a percentage.\r\n     * @param digitsInfo Decimal representation options, specified by a string\r\n     * in the following format:<br>\r\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\r\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\r\n     * Default is `1`.\r\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\r\n     * Default is `0`.\r\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\r\n     * Default is `0`.\r\n     * @param locale A locale code for the locale format rules to use.\r\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\r\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\r\n     */\r\n    transform(value, digitsInfo, locale) {\r\n        if (!isValue(value))\r\n            return null;\r\n        locale = locale || this._locale;\r\n        try {\r\n            const num = strToNumber(value);\r\n            return formatPercent(num, locale, digitsInfo);\r\n        }\r\n        catch (error) {\r\n            throw invalidPipeArgumentError(PercentPipe, error.message);\r\n        }\r\n    }\r\n}\r\nPercentPipe.ɵfac = function PercentPipe_Factory(t) { return new (t || PercentPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID, 16)); };\r\nPercentPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"percent\", type: PercentPipe, pure: true });\r\nPercentPipe.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PercentPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'percent' }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Inject,\r\n                args: [LOCALE_ID]\r\n            }] }]; }, null); })();\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Transforms a number to a currency string, formatted according to locale rules\r\n * that determine group sizing and separator, decimal-point character,\r\n * and other locale-specific configurations.\r\n *\r\n * {@a currency-code-deprecation}\r\n * <div class=\"alert is-helpful\">\r\n *\r\n * **Deprecation notice:**\r\n *\r\n * The default currency code is currently always `USD` but this is deprecated from v9.\r\n *\r\n * **In v11 the default currency code will be taken from the current locale identified by\r\n * the `LOCALE_ID` token. See the [i18n guide](guide/i18n#setting-up-the-locale-of-your-app) for\r\n * more information.**\r\n *\r\n * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\r\n * your application `NgModule`:\r\n *\r\n * ```ts\r\n * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\r\n * ```\r\n *\r\n * </div>\r\n *\r\n * @see `getCurrencySymbol()`\r\n * @see `formatCurrency()`\r\n *\r\n * @usageNotes\r\n * The following code shows how the pipe transforms numbers\r\n * into text strings, according to various format specifications,\r\n * where the caller's default locale is `en-US`.\r\n *\r\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\r\n *\r\n * @publicApi\r\n */\r\nclass CurrencyPipe {\r\n    constructor(_locale, _defaultCurrencyCode = 'USD') {\r\n        this._locale = _locale;\r\n        this._defaultCurrencyCode = _defaultCurrencyCode;\r\n    }\r\n    /**\r\n     *\r\n     * @param value The number to be formatted as currency.\r\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\r\n     * such as `USD` for the US dollar and `EUR` for the euro. The default currency code can be\r\n     * configured using the `DEFAULT_CURRENCY_CODE` injection token.\r\n     * @param display The format for the currency indicator. One of the following:\r\n     *   - `code`: Show the code (such as `USD`).\r\n     *   - `symbol`(default): Show the symbol (such as `$`).\r\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\r\n     * currency.\r\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\r\n     * locale has no narrow symbol, uses the standard symbol for the locale.\r\n     *   - String: Use the given string value instead of a code or a symbol.\r\n     * For example, an empty string will suppress the currency & symbol.\r\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\r\n     *\r\n     * @param digitsInfo Decimal representation options, specified by a string\r\n     * in the following format:<br>\r\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\r\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\r\n     * Default is `1`.\r\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\r\n     * Default is `2`.\r\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\r\n     * Default is `2`.\r\n     * If not provided, the number will be formatted with the proper amount of digits,\r\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\r\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\r\n     * @param locale A locale code for the locale format rules to use.\r\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\r\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\r\n     */\r\n    transform(value, currencyCode = this._defaultCurrencyCode, display = 'symbol', digitsInfo, locale) {\r\n        if (!isValue(value))\r\n            return null;\r\n        locale = locale || this._locale;\r\n        if (typeof display === 'boolean') {\r\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) && console && console.warn) {\r\n                console.warn(`Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\r\n            }\r\n            display = display ? 'symbol' : 'code';\r\n        }\r\n        let currency = currencyCode || this._defaultCurrencyCode;\r\n        if (display !== 'code') {\r\n            if (display === 'symbol' || display === 'symbol-narrow') {\r\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\r\n            }\r\n            else {\r\n                currency = display;\r\n            }\r\n        }\r\n        try {\r\n            const num = strToNumber(value);\r\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\r\n        }\r\n        catch (error) {\r\n            throw invalidPipeArgumentError(CurrencyPipe, error.message);\r\n        }\r\n    }\r\n}\r\nCurrencyPipe.ɵfac = function CurrencyPipe_Factory(t) { return new (t || CurrencyPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID, 16), ɵngcc0.ɵɵdirectiveInject(DEFAULT_CURRENCY_CODE, 16)); };\r\nCurrencyPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"currency\", type: CurrencyPipe, pure: true });\r\nCurrencyPipe.ctorParameters = () => [\r\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\r\n    { type: String, decorators: [{ type: Inject, args: [DEFAULT_CURRENCY_CODE,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CurrencyPipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'currency' }]\r\n    }], function () { return [{ type: String, decorators: [{\r\n                type: Inject,\r\n                args: [LOCALE_ID]\r\n            }] }, { type: String, decorators: [{\r\n                type: Inject,\r\n                args: [DEFAULT_CURRENCY_CODE]\r\n            }] }]; }, null); })();\r\nfunction isValue(value) {\r\n    return !(value == null || value === '' || value !== value);\r\n}\r\n/**\r\n * Transforms a string into a number (if needed).\r\n */\r\nfunction strToNumber(value) {\r\n    // Convert strings to numbers\r\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\r\n        return Number(value);\r\n    }\r\n    if (typeof value !== 'number') {\r\n        throw new Error(`${value} is not a number`);\r\n    }\r\n    return value;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @ngModule CommonModule\r\n * @description\r\n *\r\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\r\n *\r\n * @usageNotes\r\n *\r\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\r\n * and `String.prototype.slice()`.\r\n *\r\n * When operating on an `Array`, the returned `Array` is always a copy even when all\r\n * the elements are being returned.\r\n *\r\n * When operating on a blank value, the pipe returns the blank value.\r\n *\r\n * ### List Example\r\n *\r\n * This `ngFor` example:\r\n *\r\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\r\n *\r\n * produces the following:\r\n *\r\n * ```html\r\n * <li>b</li>\r\n * <li>c</li>\r\n * ```\r\n *\r\n * ### String Examples\r\n *\r\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\r\n *\r\n * @publicApi\r\n */\r\nclass SlicePipe {\r\n    transform(value, start, end) {\r\n        if (value == null)\r\n            return null;\r\n        if (!this.supports(value)) {\r\n            throw invalidPipeArgumentError(SlicePipe, value);\r\n        }\r\n        return value.slice(start, end);\r\n    }\r\n    supports(obj) {\r\n        return typeof obj === 'string' || Array.isArray(obj);\r\n    }\r\n}\r\nSlicePipe.ɵfac = function SlicePipe_Factory(t) { return new (t || SlicePipe)(); };\r\nSlicePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"slice\", type: SlicePipe, pure: false });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SlicePipe, [{\r\n        type: Pipe,\r\n        args: [{ name: 'slice', pure: false }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A collection of Angular pipes that are likely to be used in each and every application.\r\n */\r\nconst COMMON_PIPES = [\r\n    AsyncPipe,\r\n    UpperCasePipe,\r\n    LowerCasePipe,\r\n    JsonPipe,\r\n    SlicePipe,\r\n    DecimalPipe,\r\n    PercentPipe,\r\n    TitleCasePipe,\r\n    CurrencyPipe,\r\n    DatePipe,\r\n    I18nPluralPipe,\r\n    I18nSelectPipe,\r\n    KeyValuePipe,\r\n];\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Note: This does not contain the location providers,\r\n// as they need some platform specific implementations to work.\r\n/**\r\n * Exports all the basic Angular directives and pipes,\r\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\r\n * Re-exported by `BrowserModule`, which is included automatically in the root\r\n * `AppModule` when you create a new app with the CLI `new` command.\r\n *\r\n * * The `providers` options configure the NgModule's injector to provide\r\n * localization dependencies to members.\r\n * * The `exports` options make the declared directives and pipes available for import\r\n * by other NgModules.\r\n *\r\n * @publicApi\r\n */\r\nclass CommonModule {\r\n}\r\nCommonModule.ɵfac = function CommonModule_Factory(t) { return new (t || CommonModule)(); };\r\nCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CommonModule });\r\nCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\r\n        { provide: NgLocalization, useClass: NgLocaleLocalization },\r\n    ] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CommonModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\r\n                exports: [COMMON_DIRECTIVES, COMMON_PIPES],\r\n                providers: [\r\n                    { provide: NgLocalization, useClass: NgLocaleLocalization },\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CommonModule, { declarations: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe], exports: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst PLATFORM_BROWSER_ID = 'browser';\r\nconst PLATFORM_SERVER_ID = 'server';\r\nconst PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\r\nconst PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\r\n/**\r\n * Returns whether a platform id represents a browser platform.\r\n * @publicApi\r\n */\r\nfunction isPlatformBrowser(platformId) {\r\n    return platformId === PLATFORM_BROWSER_ID;\r\n}\r\n/**\r\n * Returns whether a platform id represents a server platform.\r\n * @publicApi\r\n */\r\nfunction isPlatformServer(platformId) {\r\n    return platformId === PLATFORM_SERVER_ID;\r\n}\r\n/**\r\n * Returns whether a platform id represents a web worker app platform.\r\n * @publicApi\r\n */\r\nfunction isPlatformWorkerApp(platformId) {\r\n    return platformId === PLATFORM_WORKER_APP_ID;\r\n}\r\n/**\r\n * Returns whether a platform id represents a web worker UI platform.\r\n * @publicApi\r\n */\r\nfunction isPlatformWorkerUi(platformId) {\r\n    return platformId === PLATFORM_WORKER_UI_ID;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @publicApi\r\n */\r\nconst VERSION = new Version('12.1.0');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\r\n *\r\n * @publicApi\r\n */\r\nclass ViewportScroller {\r\n}\r\n// De-sugared tree-shakable injection\r\n// See #23917\r\n/** @nocollapse */\r\nViewportScroller.ɵprov = ɵɵdefineInjectable({\r\n    token: ViewportScroller,\r\n    providedIn: 'root',\r\n    factory: () => new BrowserViewportScroller(ɵɵinject(DOCUMENT), window)\r\n});\r\n/**\r\n * Manages the scroll position for a browser window.\r\n */\r\nclass BrowserViewportScroller {\r\n    constructor(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.offset = () => [0, 0];\r\n    }\r\n    /**\r\n     * Configures the top offset used when scrolling to an anchor.\r\n     * @param offset A position in screen coordinates (a tuple with x and y values)\r\n     * or a function that returns the top offset position.\r\n     *\r\n     */\r\n    setOffset(offset) {\r\n        if (Array.isArray(offset)) {\r\n            this.offset = () => offset;\r\n        }\r\n        else {\r\n            this.offset = offset;\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves the current scroll position.\r\n     * @returns The position in screen coordinates.\r\n     */\r\n    getScrollPosition() {\r\n        if (this.supportsScrolling()) {\r\n            return [this.window.pageXOffset, this.window.pageYOffset];\r\n        }\r\n        else {\r\n            return [0, 0];\r\n        }\r\n    }\r\n    /**\r\n     * Sets the scroll position.\r\n     * @param position The new position in screen coordinates.\r\n     */\r\n    scrollToPosition(position) {\r\n        if (this.supportsScrolling()) {\r\n            this.window.scrollTo(position[0], position[1]);\r\n        }\r\n    }\r\n    /**\r\n     * Scrolls to an element and attempts to focus the element.\r\n     *\r\n     * Note that the function name here is misleading in that the target string may be an ID for a\r\n     * non-anchor element.\r\n     *\r\n     * @param target The ID of an element or name of the anchor.\r\n     *\r\n     * @see https://html.spec.whatwg.org/#the-indicated-part-of-the-document\r\n     * @see https://html.spec.whatwg.org/#scroll-to-fragid\r\n     */\r\n    scrollToAnchor(target) {\r\n        if (!this.supportsScrolling()) {\r\n            return;\r\n        }\r\n        // TODO(atscott): The correct behavior for `getElementsByName` would be to also verify that the\r\n        // element is an anchor. However, this could be considered a breaking change and should be\r\n        // done in a major version.\r\n        const elSelected = findAnchorFromDocument(this.document, target);\r\n        if (elSelected) {\r\n            this.scrollToElement(elSelected);\r\n            // After scrolling to the element, the spec dictates that we follow the focus steps for the\r\n            // target. Rather than following the robust steps, simply attempt focus.\r\n            this.attemptFocus(elSelected);\r\n        }\r\n    }\r\n    /**\r\n     * Disables automatic scroll restoration provided by the browser.\r\n     */\r\n    setHistoryScrollRestoration(scrollRestoration) {\r\n        if (this.supportScrollRestoration()) {\r\n            const history = this.window.history;\r\n            if (history && history.scrollRestoration) {\r\n                history.scrollRestoration = scrollRestoration;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Scrolls to an element using the native offset and the specified offset set on this scroller.\r\n     *\r\n     * The offset can be used when we know that there is a floating header and scrolling naively to an\r\n     * element (ex: `scrollIntoView`) leaves the element hidden behind the floating header.\r\n     */\r\n    scrollToElement(el) {\r\n        const rect = el.getBoundingClientRect();\r\n        const left = rect.left + this.window.pageXOffset;\r\n        const top = rect.top + this.window.pageYOffset;\r\n        const offset = this.offset();\r\n        this.window.scrollTo(left - offset[0], top - offset[1]);\r\n    }\r\n    /**\r\n     * Calls `focus` on the `focusTarget` and returns `true` if the element was focused successfully.\r\n     *\r\n     * If `false`, further steps may be necessary to determine a valid substitute to be focused\r\n     * instead.\r\n     *\r\n     * @see https://html.spec.whatwg.org/#get-the-focusable-area\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOrForeignElement/focus\r\n     * @see https://html.spec.whatwg.org/#focusable-area\r\n     */\r\n    attemptFocus(focusTarget) {\r\n        focusTarget.focus();\r\n        return this.document.activeElement === focusTarget;\r\n    }\r\n    /**\r\n     * We only support scroll restoration when we can get a hold of window.\r\n     * This means that we do not support this behavior when running in a web worker.\r\n     *\r\n     * Lifting this restriction right now would require more changes in the dom adapter.\r\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\r\n     * battle-tested.\r\n     */\r\n    supportScrollRestoration() {\r\n        try {\r\n            if (!this.supportsScrolling()) {\r\n                return false;\r\n            }\r\n            // The `scrollRestoration` property could be on the `history` instance or its prototype.\r\n            const scrollRestorationDescriptor = getScrollRestorationProperty(this.window.history) ||\r\n                getScrollRestorationProperty(Object.getPrototypeOf(this.window.history));\r\n            // We can write to the `scrollRestoration` property if it is a writable data field or it has a\r\n            // setter function.\r\n            return !!scrollRestorationDescriptor &&\r\n                !!(scrollRestorationDescriptor.writable || scrollRestorationDescriptor.set);\r\n        }\r\n        catch (_a) {\r\n            return false;\r\n        }\r\n    }\r\n    supportsScrolling() {\r\n        try {\r\n            return !!this.window && !!this.window.scrollTo && 'pageXOffset' in this.window;\r\n        }\r\n        catch (_a) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nfunction getScrollRestorationProperty(obj) {\r\n    return Object.getOwnPropertyDescriptor(obj, 'scrollRestoration');\r\n}\r\nfunction findAnchorFromDocument(document, target) {\r\n    const documentResult = document.getElementById(target) || document.getElementsByName(target)[0];\r\n    if (documentResult) {\r\n        return documentResult;\r\n    }\r\n    // `getElementById` and `getElementsByName` won't pierce through the shadow DOM so we\r\n    // have to traverse the DOM manually and do the lookup through the shadow roots.\r\n    if (typeof document.createTreeWalker === 'function' && document.body &&\r\n        (document.body.createShadowRoot || document.body.attachShadow)) {\r\n        const treeWalker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT);\r\n        let currentNode = treeWalker.currentNode;\r\n        while (currentNode) {\r\n            const shadowRoot = currentNode.shadowRoot;\r\n            if (shadowRoot) {\r\n                // Note that `ShadowRoot` doesn't support `getElementsByName`\r\n                // so we have to fall back to `querySelector`.\r\n                const result = shadowRoot.getElementById(target) || shadowRoot.querySelector(`[name=\"${target}\"]`);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            currentNode = treeWalker.nextNode();\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Provides an empty implementation of the viewport scroller.\r\n */\r\nclass NullViewportScroller {\r\n    /**\r\n     * Empty implementation\r\n     */\r\n    setOffset(offset) { }\r\n    /**\r\n     * Empty implementation\r\n     */\r\n    getScrollPosition() {\r\n        return [0, 0];\r\n    }\r\n    /**\r\n     * Empty implementation\r\n     */\r\n    scrollToPosition(position) { }\r\n    /**\r\n     * Empty implementation\r\n     */\r\n    scrollToAnchor(anchor) { }\r\n    /**\r\n     * Empty implementation\r\n     */\r\n    setHistoryScrollRestoration(scrollRestoration) { }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A wrapper around the `XMLHttpRequest` constructor.\r\n *\r\n * @publicApi\r\n */\r\nclass XhrFactory {\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// This file only reexports content of the `src` folder. Keep it that way.\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { APP_BASE_HREF, AsyncPipe, CommonModule, CurrencyPipe, DOCUMENT, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LOCATION_INITIALIZED, Location, LocationStrategy, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PathLocationStrategy, PercentPipe, PlatformLocation, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, VERSION, ViewportScroller, WeekDay, XhrFactory, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, registerLocaleData, BrowserPlatformLocation as ɵBrowserPlatformLocation, DomAdapter as ɵDomAdapter, NullViewportScroller as ɵNullViewportScroller, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, useBrowserPlatformLocation as ɵangular_packages_common_common_a, createBrowserPlatformLocation as ɵangular_packages_common_common_b, createLocation as ɵangular_packages_common_common_c, provideLocationStrategy as ɵangular_packages_common_common_d, COMMON_DIRECTIVES as ɵangular_packages_common_common_e, COMMON_PIPES as ɵangular_packages_common_common_f, getDOM as ɵgetDOM, parseCookieValue as ɵparseCookieValue, setRootDomAdapter as ɵsetRootDomAdapter };\r\n\r\n"]}