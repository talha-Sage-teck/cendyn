{"version":3,"file":"node_modules_angular_cdk_fesm2015_table_js-_50fc0-es2015.900aeae437c73ab3c14e.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/bidi.js","./node_modules/@angular/cdk/fesm2015/coercion.js","./node_modules/@angular/cdk/fesm2015/collections.js","./node_modules/@angular/cdk/fesm2015/platform.js","./node_modules/@angular/cdk/fesm2015/scrolling.js","./node_modules/@angular/cdk/fesm2015/table.js"],"sourcesContent":["import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n *\r\n * This token is defined in a separate file from Directionality as a workaround for\r\n * https://github.com/angular/angular/issues/22559\r\n *\r\n * @docs-private\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\r\n    providedIn: 'root',\r\n    factory: DIR_DOCUMENT_FACTORY,\r\n});\r\n/** @docs-private */\r\nfunction DIR_DOCUMENT_FACTORY() {\r\n    return inject(DOCUMENT);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\nclass Directionality {\r\n    constructor(_document) {\r\n        /** The current 'ltr' or 'rtl' value. */\r\n        this.value = 'ltr';\r\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\r\n        this.change = new EventEmitter();\r\n        if (_document) {\r\n            // TODO: handle 'auto' value -\r\n            // We still need to account for dir=\"auto\".\r\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n            const bodyDir = _document.body ? _document.body.dir : null;\r\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n            const value = bodyDir || htmlDir;\r\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.change.complete();\r\n    }\r\n}\r\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\r\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\r\nDirectionality.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Directionality, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DIR_DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Directive to listen for changes of direction of part of the DOM.\r\n *\r\n * Provides itself as Directionality such that descendant directives only need to ever inject\r\n * Directionality to get the closest direction.\r\n */\r\nclass Dir {\r\n    constructor() {\r\n        /** Normalized direction that accounts for invalid/unsupported values. */\r\n        this._dir = 'ltr';\r\n        /** Whether the `value` has been set to its initial value. */\r\n        this._isInitialized = false;\r\n        /** Event emitted when the direction changes. */\r\n        this.change = new EventEmitter();\r\n    }\r\n    /** @docs-private */\r\n    get dir() { return this._dir; }\r\n    set dir(value) {\r\n        const old = this._dir;\r\n        const normalizedValue = value ? value.toLowerCase() : value;\r\n        this._rawDir = value;\r\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\r\n        if (old !== this._dir && this._isInitialized) {\r\n            this.change.emit(this._dir);\r\n        }\r\n    }\r\n    /** Current layout direction of the element. */\r\n    get value() { return this.dir; }\r\n    /** Initialize once default value has been set. */\r\n    ngAfterContentInit() {\r\n        this._isInitialized = true;\r\n    }\r\n    ngOnDestroy() {\r\n        this.change.complete();\r\n    }\r\n}\r\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\r\nDir.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\r\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\r\nDir.propDecorators = {\r\n    change: [{ type: Output, args: ['dirChange',] }],\r\n    dir: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Dir, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[dir]',\r\n                providers: [{ provide: Directionality, useExisting: Dir }],\r\n                host: { '[attr.dir]': '_rawDir' },\r\n                exportAs: 'dir'\r\n            }]\r\n    }], function () { return []; }, { change: [{\r\n            type: Output,\r\n            args: ['dirChange']\r\n        }], dir: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass BidiModule {\r\n}\r\nBidiModule.ɵfac = function BidiModule_Factory(t) { return new (t || BidiModule)(); };\r\nBidiModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\r\nBidiModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BidiModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [Dir],\r\n                declarations: [Dir]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\r\n\r\n","import { ElementRef } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a data-bound value (typically a string) to a boolean. */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue = 0) {\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n/**\r\n * Whether the provided value is considered a number.\r\n * @docs-private\r\n */\r\nfunction _isNumberValue(value) {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nfunction coerceArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Coerces a value to a CSS pixel value. */\r\nfunction coerceCssPixelValue(value) {\r\n    if (value == null) {\r\n        return '';\r\n    }\r\n    return typeof value === 'string' ? value : `${value}px`;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces an ElementRef or an Element into an element.\r\n * Useful for APIs that can accept either a ref or the native element itself.\r\n */\r\nfunction coerceElement(elementOrRef) {\r\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Coerces a value to an array of trimmed non-empty strings.\r\n * Any input that is not an array, `null` or `undefined` will be turned into a string\r\n * via `toString()` and subsequently split with the given separator.\r\n * `null` and `undefined` will result in an empty array.\r\n * This results in the following outcomes:\r\n * - `null` -&gt; `[]`\r\n * - `[null]` -&gt; `[\"null\"]`\r\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\r\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\r\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\r\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\r\n *\r\n * Useful for defining CSS classes or table columns.\r\n * @param value the value to coerce into an array of strings\r\n * @param separator split-separator if value isn't an array\r\n */\r\nfunction coerceStringArray(value, separator = /\\s+/) {\r\n    const result = [];\r\n    if (value != null) {\r\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\r\n        for (const sourceValue of sourceValues) {\r\n            const trimmedString = `${sourceValue}`.trim();\r\n            if (trimmedString) {\r\n                result.push(trimmedString);\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\r\n\n","import { isObservable, of, Subject } from 'rxjs';\r\nimport { ɵɵdefineInjectable, Injectable, InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass DataSource {\r\n}\r\n/** Checks whether an object is a data source. */\r\nfunction isDataSource(value) {\r\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\r\n    // be checked as an `instanceof DataSource` since people could create their own sources\r\n    // that match the interface, but don't extend DataSource.\r\n    return value && typeof value.connect === 'function';\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** DataSource wrapper for a native array. */\r\nclass ArrayDataSource extends DataSource {\r\n    constructor(_data) {\r\n        super();\r\n        this._data = _data;\r\n    }\r\n    connect() {\r\n        return isObservable(this._data) ? this._data : of(this._data);\r\n    }\r\n    disconnect() { }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A repeater that destroys views when they are removed from a\r\n * {@link ViewContainerRef}. When new items are inserted into the container,\r\n * the repeater will always construct a new embedded view for each item.\r\n *\r\n * @template T The type for the embedded view's $implicit property.\r\n * @template R The type for the item in each IterableDiffer change record.\r\n * @template C The type for the context passed to each embedded view.\r\n */\r\nclass _DisposeViewRepeaterStrategy {\r\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\r\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\r\n            let view;\r\n            let operation;\r\n            if (record.previousIndex == null) {\r\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\r\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\r\n                operation = 1 /* INSERTED */;\r\n            }\r\n            else if (currentIndex == null) {\r\n                viewContainerRef.remove(adjustedPreviousIndex);\r\n                operation = 3 /* REMOVED */;\r\n            }\r\n            else {\r\n                view = viewContainerRef.get(adjustedPreviousIndex);\r\n                viewContainerRef.move(view, currentIndex);\r\n                operation = 2 /* MOVED */;\r\n            }\r\n            if (itemViewChanged) {\r\n                itemViewChanged({\r\n                    context: view === null || view === void 0 ? void 0 : view.context,\r\n                    operation,\r\n                    record,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    detach() {\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A repeater that caches views when they are removed from a\r\n * {@link ViewContainerRef}. When new items are inserted into the container,\r\n * the repeater will reuse one of the cached views instead of creating a new\r\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\r\n * inserts.\r\n *\r\n * @template T The type for the embedded view's $implicit property.\r\n * @template R The type for the item in each IterableDiffer change record.\r\n * @template C The type for the context passed to each embedded view.\r\n */\r\nclass _RecycleViewRepeaterStrategy {\r\n    constructor() {\r\n        /**\r\n         * The size of the cache used to store unused views.\r\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\r\n         */\r\n        this.viewCacheSize = 20;\r\n        /**\r\n         * View cache that stores embedded view instances that have been previously stamped out,\r\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\r\n         * creating brand new ones.\r\n         *\r\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\r\n         */\r\n        this._viewCache = [];\r\n    }\r\n    /** Apply changes to the DOM. */\r\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\r\n        // Rearrange the views to put them in the right location.\r\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\r\n            let view;\r\n            let operation;\r\n            if (record.previousIndex == null) { // Item added.\r\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\r\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\r\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\r\n            }\r\n            else if (currentIndex == null) { // Item removed.\r\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\r\n                operation = 3 /* REMOVED */;\r\n            }\r\n            else { // Item moved.\r\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\r\n                operation = 2 /* MOVED */;\r\n            }\r\n            if (itemViewChanged) {\r\n                itemViewChanged({\r\n                    context: view === null || view === void 0 ? void 0 : view.context,\r\n                    operation,\r\n                    record,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    detach() {\r\n        for (const view of this._viewCache) {\r\n            view.destroy();\r\n        }\r\n        this._viewCache = [];\r\n    }\r\n    /**\r\n     * Inserts a view for a new item, either from the cache or by creating a new\r\n     * one. Returns `undefined` if the item was inserted into a cached view.\r\n     */\r\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\r\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\r\n        if (cachedView) {\r\n            cachedView.context.$implicit = value;\r\n            return undefined;\r\n        }\r\n        const viewArgs = viewArgsFactory();\r\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\r\n    }\r\n    /** Detaches the view at the given index and inserts into the view cache. */\r\n    _detachAndCacheView(index, viewContainerRef) {\r\n        const detachedView = viewContainerRef.detach(index);\r\n        this._maybeCacheView(detachedView, viewContainerRef);\r\n    }\r\n    /** Moves view at the previous index to the current index. */\r\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\r\n        const view = viewContainerRef.get(adjustedPreviousIndex);\r\n        viewContainerRef.move(view, currentIndex);\r\n        view.context.$implicit = value;\r\n        return view;\r\n    }\r\n    /**\r\n     * Cache the given detached view. If the cache is full, the view will be\r\n     * destroyed.\r\n     */\r\n    _maybeCacheView(view, viewContainerRef) {\r\n        if (this._viewCache.length < this.viewCacheSize) {\r\n            this._viewCache.push(view);\r\n        }\r\n        else {\r\n            const index = viewContainerRef.indexOf(view);\r\n            // The host component could remove views from the container outside of\r\n            // the view repeater. It's unlikely this will occur, but just in case,\r\n            // destroy the view on its own, otherwise destroy it through the\r\n            // container to ensure that all the references are removed.\r\n            if (index === -1) {\r\n                view.destroy();\r\n            }\r\n            else {\r\n                viewContainerRef.remove(index);\r\n            }\r\n        }\r\n    }\r\n    /** Inserts a recycled view from the cache at the given index. */\r\n    _insertViewFromCache(index, viewContainerRef) {\r\n        const cachedView = this._viewCache.pop();\r\n        if (cachedView) {\r\n            viewContainerRef.insert(cachedView, index);\r\n        }\r\n        return cachedView || null;\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Class to be used to power selecting one or more options from a list.\r\n */\r\nclass SelectionModel {\r\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\r\n        this._multiple = _multiple;\r\n        this._emitChanges = _emitChanges;\r\n        /** Currently-selected values. */\r\n        this._selection = new Set();\r\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\r\n        this._deselectedToEmit = [];\r\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\r\n        this._selectedToEmit = [];\r\n        /** Event emitted when the value has changed. */\r\n        this.changed = new Subject();\r\n        if (initiallySelectedValues && initiallySelectedValues.length) {\r\n            if (_multiple) {\r\n                initiallySelectedValues.forEach(value => this._markSelected(value));\r\n            }\r\n            else {\r\n                this._markSelected(initiallySelectedValues[0]);\r\n            }\r\n            // Clear the array in order to avoid firing the change event for preselected values.\r\n            this._selectedToEmit.length = 0;\r\n        }\r\n    }\r\n    /** Selected values. */\r\n    get selected() {\r\n        if (!this._selected) {\r\n            this._selected = Array.from(this._selection.values());\r\n        }\r\n        return this._selected;\r\n    }\r\n    /**\r\n     * Selects a value or an array of values.\r\n     */\r\n    select(...values) {\r\n        this._verifyValueAssignment(values);\r\n        values.forEach(value => this._markSelected(value));\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Deselects a value or an array of values.\r\n     */\r\n    deselect(...values) {\r\n        this._verifyValueAssignment(values);\r\n        values.forEach(value => this._unmarkSelected(value));\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Toggles a value between selected and deselected.\r\n     */\r\n    toggle(value) {\r\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\r\n    }\r\n    /**\r\n     * Clears all of the selected values.\r\n     */\r\n    clear() {\r\n        this._unmarkAll();\r\n        this._emitChangeEvent();\r\n    }\r\n    /**\r\n     * Determines whether a value is selected.\r\n     */\r\n    isSelected(value) {\r\n        return this._selection.has(value);\r\n    }\r\n    /**\r\n     * Determines whether the model does not have a value.\r\n     */\r\n    isEmpty() {\r\n        return this._selection.size === 0;\r\n    }\r\n    /**\r\n     * Determines whether the model has a value.\r\n     */\r\n    hasValue() {\r\n        return !this.isEmpty();\r\n    }\r\n    /**\r\n     * Sorts the selected values based on a predicate function.\r\n     */\r\n    sort(predicate) {\r\n        if (this._multiple && this.selected) {\r\n            this._selected.sort(predicate);\r\n        }\r\n    }\r\n    /**\r\n     * Gets whether multiple values can be selected.\r\n     */\r\n    isMultipleSelection() {\r\n        return this._multiple;\r\n    }\r\n    /** Emits a change event and clears the records of selected and deselected values. */\r\n    _emitChangeEvent() {\r\n        // Clear the selected values so they can be re-cached.\r\n        this._selected = null;\r\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\r\n            this.changed.next({\r\n                source: this,\r\n                added: this._selectedToEmit,\r\n                removed: this._deselectedToEmit\r\n            });\r\n            this._deselectedToEmit = [];\r\n            this._selectedToEmit = [];\r\n        }\r\n    }\r\n    /** Selects a value. */\r\n    _markSelected(value) {\r\n        if (!this.isSelected(value)) {\r\n            if (!this._multiple) {\r\n                this._unmarkAll();\r\n            }\r\n            this._selection.add(value);\r\n            if (this._emitChanges) {\r\n                this._selectedToEmit.push(value);\r\n            }\r\n        }\r\n    }\r\n    /** Deselects a value. */\r\n    _unmarkSelected(value) {\r\n        if (this.isSelected(value)) {\r\n            this._selection.delete(value);\r\n            if (this._emitChanges) {\r\n                this._deselectedToEmit.push(value);\r\n            }\r\n        }\r\n    }\r\n    /** Clears out the selected values. */\r\n    _unmarkAll() {\r\n        if (!this.isEmpty()) {\r\n            this._selection.forEach(value => this._unmarkSelected(value));\r\n        }\r\n    }\r\n    /**\r\n     * Verifies the value assignment and throws an error if the specified value array is\r\n     * including multiple values while the selection model is not supporting multiple values.\r\n     */\r\n    _verifyValueAssignment(values) {\r\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getMultipleValuesInSingleSelectionError();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns an error that reports that multiple values are passed into a selection model\r\n * with a single value.\r\n * @docs-private\r\n */\r\nfunction getMultipleValuesInSingleSelectionError() {\r\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Class to coordinate unique selection based on name.\r\n * Intended to be consumed as an Angular service.\r\n * This service is needed because native radio change events are only fired on the item currently\r\n * being selected, and we still need to uncheck the previous selection.\r\n *\r\n * This service does not *store* any IDs and names because they may change at any time, so it is\r\n * less error-prone if they are simply passed through when the events occur.\r\n */\r\nclass UniqueSelectionDispatcher {\r\n    constructor() {\r\n        this._listeners = [];\r\n    }\r\n    /**\r\n     * Notify other items that selection for the given name has been set.\r\n     * @param id ID of the item.\r\n     * @param name Name of the item.\r\n     */\r\n    notify(id, name) {\r\n        for (let listener of this._listeners) {\r\n            listener(id, name);\r\n        }\r\n    }\r\n    /**\r\n     * Listen for future changes to item selection.\r\n     * @return Function used to deregister listener\r\n     */\r\n    listen(listener) {\r\n        this._listeners.push(listener);\r\n        return () => {\r\n            this._listeners = this._listeners.filter((registered) => {\r\n                return listener !== registered;\r\n            });\r\n        };\r\n    }\r\n    ngOnDestroy() {\r\n        this._listeners = [];\r\n    }\r\n}\r\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\r\nUniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return []; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\r\n * @docs-private\r\n */\r\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\r\n\r\n","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nimport * as ɵngcc0 from '@angular/core';\r\nlet hasV8BreakIterator;\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\r\n}\r\ncatch (_a) {\r\n    hasV8BreakIterator = false;\r\n}\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\nclass Platform {\r\n    constructor(_platformId) {\r\n        this._platformId = _platformId;\r\n        // We want to use the Angular platform check because if the Document is shimmed\r\n        // without the navigator, the following checks will fail. This is preferred because\r\n        // sometimes the Document may be shimmed without the user's knowledge or intention\r\n        /** Whether the Angular application is being rendered in the browser. */\r\n        this.isBrowser = this._platformId ?\r\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\r\n        /** Whether the current browser is Microsoft Edge. */\r\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n        /** Whether the current rendering engine is Microsoft Trident. */\r\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\r\n        /** Whether the current rendering engine is Blink. */\r\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\r\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\r\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\r\n        // ensure that Webkit runs standalone and is not used as another engine's base.\r\n        /** Whether the current rendering engine is WebKit. */\r\n        this.WEBKIT = this.isBrowser &&\r\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n        /** Whether the current platform is Apple iOS. */\r\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n            !('MSStream' in window);\r\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\r\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\r\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\r\n        // instead of having an unstable check for Gecko.\r\n        /** Whether the current browser is Firefox. */\r\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n        /** Whether the current platform is Android. */\r\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\r\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\r\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\r\n        // Safari browser should also use Webkit as its layout engine.\r\n        /** Whether the current browser is Safari. */\r\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n    }\r\n}\r\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\r\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\r\nPlatform.ctorParameters = () => [\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Platform, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: Object, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass PlatformModule {\r\n}\r\nPlatformModule.ɵfac = function PlatformModule_Factory(t) { return new (t || PlatformModule)(); };\r\nPlatformModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\r\nPlatformModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\r\n        type: NgModule,\r\n        args: [{}]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result Set of input types support by the current browser. */\r\nlet supportedInputTypes;\r\n/** Types of `<input>` that *might* be supported. */\r\nconst candidateInputTypes = [\r\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\r\n    // first changing it to something else:\r\n    // The specified value \"\" does not conform to the required format.\r\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\r\n    'color',\r\n    'button',\r\n    'checkbox',\r\n    'date',\r\n    'datetime-local',\r\n    'email',\r\n    'file',\r\n    'hidden',\r\n    'image',\r\n    'month',\r\n    'number',\r\n    'password',\r\n    'radio',\r\n    'range',\r\n    'reset',\r\n    'search',\r\n    'submit',\r\n    'tel',\r\n    'text',\r\n    'time',\r\n    'url',\r\n    'week',\r\n];\r\n/** @returns The input types supported by this browser. */\r\nfunction getSupportedInputTypes() {\r\n    // Result is cached.\r\n    if (supportedInputTypes) {\r\n        return supportedInputTypes;\r\n    }\r\n    // We can't check if an input type is not supported until we're on the browser, so say that\r\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n    // just a helper function and can't inject it.\r\n    if (typeof document !== 'object' || !document) {\r\n        supportedInputTypes = new Set(candidateInputTypes);\r\n        return supportedInputTypes;\r\n    }\r\n    let featureTestInput = document.createElement('input');\r\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\r\n        featureTestInput.setAttribute('type', value);\r\n        return featureTestInput.type === value;\r\n    }));\r\n    return supportedInputTypes;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result of whether the user's browser supports passive event listeners. */\r\nlet supportsPassiveEvents;\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n */\r\nfunction supportsPassiveEventListeners() {\r\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n        try {\r\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                get: () => supportsPassiveEvents = true\r\n            }));\r\n        }\r\n        finally {\r\n            supportsPassiveEvents = supportsPassiveEvents || false;\r\n        }\r\n    }\r\n    return supportsPassiveEvents;\r\n}\r\n/**\r\n * Normalizes an `AddEventListener` object to something that can be passed\r\n * to `addEventListener` on any browser, no matter whether it supports the\r\n * `options` parameter.\r\n * @param options Object to be normalized.\r\n */\r\nfunction normalizePassiveListenerOptions(options) {\r\n    return supportsPassiveEventListeners() ? options : !!options.capture;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\r\nlet rtlScrollAxisType;\r\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\r\nlet scrollBehaviorSupported;\r\n/** Check whether the browser supports scroll behaviors. */\r\nfunction supportsScrollBehavior() {\r\n    if (scrollBehaviorSupported == null) {\r\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\r\n        // some projects stub out the global `document` during SSR which can throw us off.\r\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\r\n            scrollBehaviorSupported = false;\r\n            return scrollBehaviorSupported;\r\n        }\r\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\r\n        if ('scrollBehavior' in document.documentElement.style) {\r\n            scrollBehaviorSupported = true;\r\n        }\r\n        else {\r\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\r\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\r\n            const scrollToFunction = Element.prototype.scrollTo;\r\n            if (scrollToFunction) {\r\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\r\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\r\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\r\n                // polyfilled functions as supporting scroll behavior.\r\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\r\n            }\r\n            else {\r\n                scrollBehaviorSupported = false;\r\n            }\r\n        }\r\n    }\r\n    return scrollBehaviorSupported;\r\n}\r\n/**\r\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\r\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\r\n */\r\nfunction getRtlScrollAxisType() {\r\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\r\n    if (typeof document !== 'object' || !document) {\r\n        return 0 /* NORMAL */;\r\n    }\r\n    if (rtlScrollAxisType == null) {\r\n        // Create a 1px wide scrolling container and a 2px wide content element.\r\n        const scrollContainer = document.createElement('div');\r\n        const containerStyle = scrollContainer.style;\r\n        scrollContainer.dir = 'rtl';\r\n        containerStyle.width = '1px';\r\n        containerStyle.overflow = 'auto';\r\n        containerStyle.visibility = 'hidden';\r\n        containerStyle.pointerEvents = 'none';\r\n        containerStyle.position = 'absolute';\r\n        const content = document.createElement('div');\r\n        const contentStyle = content.style;\r\n        contentStyle.width = '2px';\r\n        contentStyle.height = '1px';\r\n        scrollContainer.appendChild(content);\r\n        document.body.appendChild(scrollContainer);\r\n        rtlScrollAxisType = 0 /* NORMAL */;\r\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\r\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\r\n        // dealing with one of the other two types of browsers.\r\n        if (scrollContainer.scrollLeft === 0) {\r\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\r\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\r\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\r\n            // return 0 when we read it again.\r\n            scrollContainer.scrollLeft = 1;\r\n            rtlScrollAxisType =\r\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\r\n        }\r\n        scrollContainer.parentNode.removeChild(scrollContainer);\r\n    }\r\n    return rtlScrollAxisType;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nlet shadowDomIsSupported;\r\n/** Checks whether the user's browser support Shadow DOM. */\r\nfunction _supportsShadowDom() {\r\n    if (shadowDomIsSupported == null) {\r\n        const head = typeof document !== 'undefined' ? document.head : null;\r\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\r\n    }\r\n    return shadowDomIsSupported;\r\n}\r\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\r\nfunction _getShadowRoot(element) {\r\n    if (_supportsShadowDom()) {\r\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\r\n        // Note that this should be caught by `_supportsShadowDom`, but some\r\n        // teams have been able to hit this code path on unsupported browsers.\r\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\r\n            return rootNode;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\r\n\r\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\r\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\r\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\r\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\r\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\r\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the virtual scrolling strategy. */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/platform';\r\nimport * as ɵngcc2 from '@angular/cdk/bidi';\r\nimport * as ɵngcc3 from '@angular/cdk/collections';\r\n\r\nconst _c0 = [\"contentWrapper\"];\r\nconst _c1 = [\"*\"];\r\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Virtual scrolling strategy for lists with items of known fixed size. */\r\nclass FixedSizeVirtualScrollStrategy {\r\n    /**\r\n     * @param itemSize The size of the items in the virtually scrolling list.\r\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\r\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\r\n     */\r\n    constructor(itemSize, minBufferPx, maxBufferPx) {\r\n        this._scrolledIndexChange = new Subject();\r\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\r\n        /** The attached viewport. */\r\n        this._viewport = null;\r\n        this._itemSize = itemSize;\r\n        this._minBufferPx = minBufferPx;\r\n        this._maxBufferPx = maxBufferPx;\r\n    }\r\n    /**\r\n     * Attaches this scroll strategy to a viewport.\r\n     * @param viewport The viewport to attach this strategy to.\r\n     */\r\n    attach(viewport) {\r\n        this._viewport = viewport;\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** Detaches this scroll strategy from the currently attached viewport. */\r\n    detach() {\r\n        this._scrolledIndexChange.complete();\r\n        this._viewport = null;\r\n    }\r\n    /**\r\n     * Update the item size and buffer size.\r\n     * @param itemSize The size of the items in the virtually scrolling list.\r\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\r\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\r\n     */\r\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\r\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\r\n        }\r\n        this._itemSize = itemSize;\r\n        this._minBufferPx = minBufferPx;\r\n        this._maxBufferPx = maxBufferPx;\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onContentScrolled() {\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onDataLengthChanged() {\r\n        this._updateTotalContentSize();\r\n        this._updateRenderedRange();\r\n    }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onContentRendered() { }\r\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\r\n    onRenderedOffsetChanged() { }\r\n    /**\r\n     * Scroll to the offset for the given index.\r\n     * @param index The index of the element to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling.\r\n     */\r\n    scrollToIndex(index, behavior) {\r\n        if (this._viewport) {\r\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\r\n        }\r\n    }\r\n    /** Update the viewport's total content size. */\r\n    _updateTotalContentSize() {\r\n        if (!this._viewport) {\r\n            return;\r\n        }\r\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\r\n    }\r\n    /** Update the viewport's rendered range. */\r\n    _updateRenderedRange() {\r\n        if (!this._viewport) {\r\n            return;\r\n        }\r\n        const renderedRange = this._viewport.getRenderedRange();\r\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\r\n        const viewportSize = this._viewport.getViewportSize();\r\n        const dataLength = this._viewport.getDataLength();\r\n        let scrollOffset = this._viewport.measureScrollOffset();\r\n        // Prevent NaN as result when dividing by zero.\r\n        let firstVisibleIndex = (this._itemSize > 0) ? scrollOffset / this._itemSize : 0;\r\n        // If user scrolls to the bottom of the list and data changes to a smaller list\r\n        if (newRange.end > dataLength) {\r\n            // We have to recalculate the first visible index based on new data length and viewport size.\r\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\r\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\r\n            // If first visible index changed we must update scroll offset to handle start/end buffers\r\n            // Current range must also be adjusted to cover the new position (bottom of new list).\r\n            if (firstVisibleIndex != newVisibleIndex) {\r\n                firstVisibleIndex = newVisibleIndex;\r\n                scrollOffset = newVisibleIndex * this._itemSize;\r\n                newRange.start = Math.floor(firstVisibleIndex);\r\n            }\r\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\r\n        }\r\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\r\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\r\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\r\n            newRange.start = Math.max(0, newRange.start - expandStart);\r\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\r\n        }\r\n        else {\r\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\r\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\r\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\r\n                if (expandEnd > 0) {\r\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\r\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\r\n                }\r\n            }\r\n        }\r\n        this._viewport.setRenderedRange(newRange);\r\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\r\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\r\n    }\r\n}\r\n/**\r\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\r\n * `FixedSizeVirtualScrollStrategy` from the given directive.\r\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\r\n *     `FixedSizeVirtualScrollStrategy` from.\r\n */\r\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\r\n    return fixedSizeDir._scrollStrategy;\r\n}\r\n/** A virtual scroll strategy that supports fixed-size items. */\r\nclass CdkFixedSizeVirtualScroll {\r\n    constructor() {\r\n        this._itemSize = 20;\r\n        this._minBufferPx = 100;\r\n        this._maxBufferPx = 200;\r\n        /** The scroll strategy used by this directive. */\r\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\r\n    }\r\n    /** The size of the items in the list (in pixels). */\r\n    get itemSize() { return this._itemSize; }\r\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\r\n    /**\r\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\r\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\r\n     */\r\n    get minBufferPx() { return this._minBufferPx; }\r\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\r\n    /**\r\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\r\n     */\r\n    get maxBufferPx() { return this._maxBufferPx; }\r\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\r\n    ngOnChanges() {\r\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\r\n    }\r\n}\r\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\r\nCdkFixedSizeVirtualScroll.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\r\n                provide: VIRTUAL_SCROLL_STRATEGY,\r\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\r\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\r\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFixedSizeVirtualScroll.propDecorators = {\r\n    itemSize: [{ type: Input }],\r\n    minBufferPx: [{ type: Input }],\r\n    maxBufferPx: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\r\n                providers: [{\r\n                        provide: VIRTUAL_SCROLL_STRATEGY,\r\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\r\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\r\n                    }]\r\n            }]\r\n    }], function () { return []; }, { itemSize: [{\r\n            type: Input\r\n        }], minBufferPx: [{\r\n            type: Input\r\n        }], maxBufferPx: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Time in ms to throttle the scrolling events by default. */\r\nconst DEFAULT_SCROLL_TIME = 20;\r\n/**\r\n * Service contained all registered Scrollable references and emits an event when any one of the\r\n * Scrollable references emit a scrolled event.\r\n */\r\nclass ScrollDispatcher {\r\n    constructor(_ngZone, _platform, document) {\r\n        this._ngZone = _ngZone;\r\n        this._platform = _platform;\r\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\r\n        this._scrolled = new Subject();\r\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\r\n        this._globalSubscription = null;\r\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\r\n        this._scrolledCount = 0;\r\n        /**\r\n         * Map of all the scrollable references that are registered with the service and their\r\n         * scroll event subscriptions.\r\n         */\r\n        this.scrollContainers = new Map();\r\n        this._document = document;\r\n    }\r\n    /**\r\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\r\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\r\n     * @param scrollable Scrollable instance to be registered.\r\n     */\r\n    register(scrollable) {\r\n        if (!this.scrollContainers.has(scrollable)) {\r\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\r\n                .subscribe(() => this._scrolled.next(scrollable)));\r\n        }\r\n    }\r\n    /**\r\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\r\n     * @param scrollable Scrollable instance to be deregistered.\r\n     */\r\n    deregister(scrollable) {\r\n        const scrollableReference = this.scrollContainers.get(scrollable);\r\n        if (scrollableReference) {\r\n            scrollableReference.unsubscribe();\r\n            this.scrollContainers.delete(scrollable);\r\n        }\r\n    }\r\n    /**\r\n     * Returns an observable that emits an event whenever any of the registered Scrollable\r\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\r\n     * to override the default \"throttle\" time.\r\n     *\r\n     * **Note:** in order to avoid hitting change detection for every scroll event,\r\n     * all of the events emitted from this stream will be run outside the Angular zone.\r\n     * If you need to update any data bindings as a result of a scroll event, you have\r\n     * to run the callback using `NgZone.run`.\r\n     */\r\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\r\n        if (!this._platform.isBrowser) {\r\n            return of();\r\n        }\r\n        return new Observable((observer) => {\r\n            if (!this._globalSubscription) {\r\n                this._addGlobalListener();\r\n            }\r\n            // In the case of a 0ms delay, use an observable without auditTime\r\n            // since it does add a perceptible delay in processing overhead.\r\n            const subscription = auditTimeInMs > 0 ?\r\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\r\n                this._scrolled.subscribe(observer);\r\n            this._scrolledCount++;\r\n            return () => {\r\n                subscription.unsubscribe();\r\n                this._scrolledCount--;\r\n                if (!this._scrolledCount) {\r\n                    this._removeGlobalListener();\r\n                }\r\n            };\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._removeGlobalListener();\r\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\r\n        this._scrolled.complete();\r\n    }\r\n    /**\r\n     * Returns an observable that emits whenever any of the\r\n     * scrollable ancestors of an element are scrolled.\r\n     * @param elementOrElementRef Element whose ancestors to listen for.\r\n     * @param auditTimeInMs Time to throttle the scroll events.\r\n     */\r\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\r\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\r\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\r\n            return !target || ancestors.indexOf(target) > -1;\r\n        }));\r\n    }\r\n    /** Returns all registered Scrollables that contain the provided element. */\r\n    getAncestorScrollContainers(elementOrElementRef) {\r\n        const scrollingContainers = [];\r\n        this.scrollContainers.forEach((_subscription, scrollable) => {\r\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\r\n                scrollingContainers.push(scrollable);\r\n            }\r\n        });\r\n        return scrollingContainers;\r\n    }\r\n    /** Use defaultView of injected document if available or fallback to global window reference */\r\n    _getWindow() {\r\n        return this._document.defaultView || window;\r\n    }\r\n    /** Returns true if the element is contained within the provided Scrollable. */\r\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\r\n        let element = coerceElement(elementOrElementRef);\r\n        let scrollableElement = scrollable.getElementRef().nativeElement;\r\n        // Traverse through the element parents until we reach null, checking if any of the elements\r\n        // are the scrollable's element.\r\n        do {\r\n            if (element == scrollableElement) {\r\n                return true;\r\n            }\r\n        } while (element = element.parentElement);\r\n        return false;\r\n    }\r\n    /** Sets up the global scroll listeners. */\r\n    _addGlobalListener() {\r\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\r\n            const window = this._getWindow();\r\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\r\n        });\r\n    }\r\n    /** Cleans up the global scroll listener. */\r\n    _removeGlobalListener() {\r\n        if (this._globalSubscription) {\r\n            this._globalSubscription.unsubscribe();\r\n            this._globalSubscription = null;\r\n        }\r\n    }\r\n}\r\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\r\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\r\nScrollDispatcher.ctorParameters = () => [\r\n    { type: NgZone },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Sends an event when the directive's element is scrolled. Registers itself with the\r\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\r\n * can be listened to through the service.\r\n */\r\nclass CdkScrollable {\r\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\r\n        this.elementRef = elementRef;\r\n        this.scrollDispatcher = scrollDispatcher;\r\n        this.ngZone = ngZone;\r\n        this.dir = dir;\r\n        this._destroyed = new Subject();\r\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\r\n            .subscribe(observer)));\r\n    }\r\n    ngOnInit() {\r\n        this.scrollDispatcher.register(this);\r\n    }\r\n    ngOnDestroy() {\r\n        this.scrollDispatcher.deregister(this);\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /** Returns observable that emits when a scroll event is fired on the host element. */\r\n    elementScrolled() {\r\n        return this._elementScrolled;\r\n    }\r\n    /** Gets the ElementRef for the viewport. */\r\n    getElementRef() {\r\n        return this.elementRef;\r\n    }\r\n    /**\r\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\r\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\r\n     * left and right always refer to the left and right side of the scrolling container irrespective\r\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n     * in an RTL context.\r\n     * @param options specified the offsets to scroll to.\r\n     */\r\n    scrollTo(options) {\r\n        const el = this.elementRef.nativeElement;\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        // Rewrite start & end offsets as right or left offsets.\r\n        if (options.left == null) {\r\n            options.left = isRtl ? options.end : options.start;\r\n        }\r\n        if (options.right == null) {\r\n            options.right = isRtl ? options.start : options.end;\r\n        }\r\n        // Rewrite the bottom offset as a top offset.\r\n        if (options.bottom != null) {\r\n            options.top =\r\n                el.scrollHeight - el.clientHeight - options.bottom;\r\n        }\r\n        // Rewrite the right offset as a left offset.\r\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\r\n            if (options.left != null) {\r\n                options.right =\r\n                    el.scrollWidth - el.clientWidth - options.left;\r\n            }\r\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\r\n                options.left = options.right;\r\n            }\r\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\r\n                options.left = options.right ? -options.right : options.right;\r\n            }\r\n        }\r\n        else {\r\n            if (options.right != null) {\r\n                options.left =\r\n                    el.scrollWidth - el.clientWidth - options.right;\r\n            }\r\n        }\r\n        this._applyScrollToOptions(options);\r\n    }\r\n    _applyScrollToOptions(options) {\r\n        const el = this.elementRef.nativeElement;\r\n        if (supportsScrollBehavior()) {\r\n            el.scrollTo(options);\r\n        }\r\n        else {\r\n            if (options.top != null) {\r\n                el.scrollTop = options.top;\r\n            }\r\n            if (options.left != null) {\r\n                el.scrollLeft = options.left;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\r\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\r\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\r\n     * left and right always refer to the left and right side of the scrolling container irrespective\r\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\r\n     * in an RTL context.\r\n     * @param from The edge to measure from.\r\n     */\r\n    measureScrollOffset(from) {\r\n        const LEFT = 'left';\r\n        const RIGHT = 'right';\r\n        const el = this.elementRef.nativeElement;\r\n        if (from == 'top') {\r\n            return el.scrollTop;\r\n        }\r\n        if (from == 'bottom') {\r\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\r\n        }\r\n        // Rewrite start & end as left or right offsets.\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        if (from == 'start') {\r\n            from = isRtl ? RIGHT : LEFT;\r\n        }\r\n        else if (from == 'end') {\r\n            from = isRtl ? LEFT : RIGHT;\r\n        }\r\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\r\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\r\n            // 0 when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\r\n            }\r\n            else {\r\n                return el.scrollLeft;\r\n            }\r\n        }\r\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\r\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\r\n            // 0 when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\r\n            }\r\n            else {\r\n                return -el.scrollLeft;\r\n            }\r\n        }\r\n        else {\r\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\r\n            // (scrollWidth - clientWidth) when scrolled all the way right.\r\n            if (from == LEFT) {\r\n                return el.scrollLeft;\r\n            }\r\n            else {\r\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\r\nCdkScrollable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\r\nCdkScrollable.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ScrollDispatcher },\r\n    { type: NgZone },\r\n    { type: Directionality, decorators: [{ type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdk-scrollable], [cdkScrollable]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Time in ms to throttle the resize events by default. */\r\nconst DEFAULT_RESIZE_TIME = 20;\r\n/**\r\n * Simple utility for getting the bounds of the browser viewport.\r\n * @docs-private\r\n */\r\nclass ViewportRuler {\r\n    constructor(_platform, ngZone, document) {\r\n        this._platform = _platform;\r\n        /** Stream of viewport change events. */\r\n        this._change = new Subject();\r\n        /** Event listener that will be used to handle the viewport change events. */\r\n        this._changeListener = (event) => {\r\n            this._change.next(event);\r\n        };\r\n        this._document = document;\r\n        ngZone.runOutsideAngular(() => {\r\n            if (_platform.isBrowser) {\r\n                const window = this._getWindow();\r\n                // Note that bind the events ourselves, rather than going through something like RxJS's\r\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\r\n                window.addEventListener('resize', this._changeListener);\r\n                window.addEventListener('orientationchange', this._changeListener);\r\n            }\r\n            // We don't need to keep track of the subscription,\r\n            // because we complete the `change` stream on destroy.\r\n            this.change().subscribe(() => this._updateViewportSize());\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._platform.isBrowser) {\r\n            const window = this._getWindow();\r\n            window.removeEventListener('resize', this._changeListener);\r\n            window.removeEventListener('orientationchange', this._changeListener);\r\n        }\r\n        this._change.complete();\r\n    }\r\n    /** Returns the viewport's width and height. */\r\n    getViewportSize() {\r\n        if (!this._viewportSize) {\r\n            this._updateViewportSize();\r\n        }\r\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\r\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\r\n        if (!this._platform.isBrowser) {\r\n            this._viewportSize = null;\r\n        }\r\n        return output;\r\n    }\r\n    /** Gets a ClientRect for the viewport's bounds. */\r\n    getViewportRect() {\r\n        // Use the document element's bounding rect rather than the window scroll properties\r\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\r\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\r\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\r\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\r\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\r\n        // We use the documentElement instead of the body because, by default (without a css reset)\r\n        // browsers typically give the document body an 8px margin, which is not included in\r\n        // getBoundingClientRect().\r\n        const scrollPosition = this.getViewportScrollPosition();\r\n        const { width, height } = this.getViewportSize();\r\n        return {\r\n            top: scrollPosition.top,\r\n            left: scrollPosition.left,\r\n            bottom: scrollPosition.top + height,\r\n            right: scrollPosition.left + width,\r\n            height,\r\n            width,\r\n        };\r\n    }\r\n    /** Gets the (top, left) scroll position of the viewport. */\r\n    getViewportScrollPosition() {\r\n        // While we can get a reference to the fake document\r\n        // during SSR, it doesn't have getBoundingClientRect.\r\n        if (!this._platform.isBrowser) {\r\n            return { top: 0, left: 0 };\r\n        }\r\n        // The top-left-corner of the viewport is determined by the scroll position of the document\r\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\r\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\r\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\r\n        // `document.documentElement` works consistently, where the `top` and `left` values will\r\n        // equal negative the scroll position.\r\n        const document = this._document;\r\n        const window = this._getWindow();\r\n        const documentElement = document.documentElement;\r\n        const documentRect = documentElement.getBoundingClientRect();\r\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\r\n            documentElement.scrollTop || 0;\r\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\r\n            documentElement.scrollLeft || 0;\r\n        return { top, left };\r\n    }\r\n    /**\r\n     * Returns a stream that emits whenever the size of the viewport changes.\r\n     * @param throttleTime Time in milliseconds to throttle the stream.\r\n     */\r\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\r\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\r\n    }\r\n    /** Use defaultView of injected document if available or fallback to global window reference */\r\n    _getWindow() {\r\n        return this._document.defaultView || window;\r\n    }\r\n    /** Updates the cached viewport size. */\r\n    _updateViewportSize() {\r\n        const window = this._getWindow();\r\n        this._viewportSize = this._platform.isBrowser ?\r\n            { width: window.innerWidth, height: window.innerHeight } :\r\n            { width: 0, height: 0 };\r\n    }\r\n}\r\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\r\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\r\nViewportRuler.ctorParameters = () => [\r\n    { type: Platform },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\r\n        type: Injectable,\r\n        args: [{ providedIn: 'root' }]\r\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Checks if the given ranges are equal. */\r\nfunction rangesEqual(r1, r2) {\r\n    return r1.start == r2.start && r1.end == r2.end;\r\n}\r\n/**\r\n * Scheduler to be used for scroll events. Needs to fall back to\r\n * something that doesn't rely on requestAnimationFrame on environments\r\n * that don't support it (e.g. server-side rendering).\r\n */\r\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\r\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\r\nclass CdkVirtualScrollViewport extends CdkScrollable {\r\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\r\n        super(elementRef, scrollDispatcher, ngZone, dir);\r\n        this.elementRef = elementRef;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._scrollStrategy = _scrollStrategy;\r\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\r\n        this._detachedSubject = new Subject();\r\n        /** Emits when the rendered range changes. */\r\n        this._renderedRangeSubject = new Subject();\r\n        this._orientation = 'vertical';\r\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\r\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\r\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\r\n        // performance.\r\n        /** Emits when the index of the first element visible in the viewport changes. */\r\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\r\n        /** A stream that emits whenever the rendered range changes. */\r\n        this.renderedRangeStream = this._renderedRangeSubject;\r\n        /**\r\n         * The total size of all content (in pixels), including content that is not currently rendered.\r\n         */\r\n        this._totalContentSize = 0;\r\n        /** A string representing the `style.width` property value to be used for the spacer element. */\r\n        this._totalContentWidth = '';\r\n        /** A string representing the `style.height` property value to be used for the spacer element. */\r\n        this._totalContentHeight = '';\r\n        /** The currently rendered range of indices. */\r\n        this._renderedRange = { start: 0, end: 0 };\r\n        /** The length of the data bound to this viewport (in number of items). */\r\n        this._dataLength = 0;\r\n        /** The size of the viewport (in pixels). */\r\n        this._viewportSize = 0;\r\n        /** The last rendered content offset that was set. */\r\n        this._renderedContentOffset = 0;\r\n        /**\r\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\r\n         * be rewritten as an offset to the start of the content).\r\n         */\r\n        this._renderedContentOffsetNeedsRewrite = false;\r\n        /** Whether there is a pending change detection cycle. */\r\n        this._isChangeDetectionPending = false;\r\n        /** A list of functions to run after the next change detection cycle. */\r\n        this._runAfterChangeDetection = [];\r\n        /** Subscription to changes in the viewport size. */\r\n        this._viewportChanges = Subscription.EMPTY;\r\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\r\n        }\r\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\r\n            this.checkViewportSize();\r\n        });\r\n    }\r\n    /** The direction the viewport scrolls. */\r\n    get orientation() {\r\n        return this._orientation;\r\n    }\r\n    set orientation(orientation) {\r\n        if (this._orientation !== orientation) {\r\n            this._orientation = orientation;\r\n            this._calculateSpacerSize();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\r\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\r\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\r\n        // ourselves instead.\r\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\r\n            this._measureViewportSize();\r\n            this._scrollStrategy.attach(this);\r\n            this.elementScrolled()\r\n                .pipe(\r\n            // Start off with a fake scroll event so we properly detect our initial position.\r\n            startWith(null), \r\n            // Collect multiple events into one until the next animation frame. This way if\r\n            // there are multiple scroll events in the same frame we only need to recheck\r\n            // our layout once.\r\n            auditTime(0, SCROLL_SCHEDULER))\r\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\r\n            this._markChangeDetectionNeeded();\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.detach();\r\n        this._scrollStrategy.detach();\r\n        // Complete all subjects\r\n        this._renderedRangeSubject.complete();\r\n        this._detachedSubject.complete();\r\n        this._viewportChanges.unsubscribe();\r\n        super.ngOnDestroy();\r\n    }\r\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\r\n    attach(forOf) {\r\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('CdkVirtualScrollViewport is already attached.');\r\n        }\r\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\r\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\r\n        // change detection loop ourselves.\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this._forOf = forOf;\r\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\r\n                const newLength = data.length;\r\n                if (newLength !== this._dataLength) {\r\n                    this._dataLength = newLength;\r\n                    this._scrollStrategy.onDataLengthChanged();\r\n                }\r\n                this._doChangeDetection();\r\n            });\r\n        });\r\n    }\r\n    /** Detaches the current `CdkVirtualForOf`. */\r\n    detach() {\r\n        this._forOf = null;\r\n        this._detachedSubject.next();\r\n    }\r\n    /** Gets the length of the data bound to this viewport (in number of items). */\r\n    getDataLength() {\r\n        return this._dataLength;\r\n    }\r\n    /** Gets the size of the viewport (in pixels). */\r\n    getViewportSize() {\r\n        return this._viewportSize;\r\n    }\r\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\r\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\r\n    // setting it to something else, but its error prone and should probably be split into\r\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\r\n    /** Get the current rendered range of items. */\r\n    getRenderedRange() {\r\n        return this._renderedRange;\r\n    }\r\n    /**\r\n     * Sets the total size of all content (in pixels), including content that is not currently\r\n     * rendered.\r\n     */\r\n    setTotalContentSize(size) {\r\n        if (this._totalContentSize !== size) {\r\n            this._totalContentSize = size;\r\n            this._calculateSpacerSize();\r\n            this._markChangeDetectionNeeded();\r\n        }\r\n    }\r\n    /** Sets the currently rendered range of indices. */\r\n    setRenderedRange(range) {\r\n        if (!rangesEqual(this._renderedRange, range)) {\r\n            this._renderedRangeSubject.next(this._renderedRange = range);\r\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\r\n        }\r\n    }\r\n    /**\r\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\r\n     */\r\n    getOffsetToRenderedContentStart() {\r\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\r\n    }\r\n    /**\r\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\r\n     * (in pixels).\r\n     */\r\n    setRenderedContentOffset(offset, to = 'to-start') {\r\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\r\n        // in the negative direction.\r\n        const isRtl = this.dir && this.dir.value == 'rtl';\r\n        const isHorizontal = this.orientation == 'horizontal';\r\n        const axis = isHorizontal ? 'X' : 'Y';\r\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\r\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\r\n        this._renderedContentOffset = offset;\r\n        if (to === 'to-end') {\r\n            transform += ` translate${axis}(-100%)`;\r\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\r\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\r\n            // expand upward).\r\n            this._renderedContentOffsetNeedsRewrite = true;\r\n        }\r\n        if (this._renderedContentTransform != transform) {\r\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\r\n            // into the string.\r\n            this._renderedContentTransform = transform;\r\n            this._markChangeDetectionNeeded(() => {\r\n                if (this._renderedContentOffsetNeedsRewrite) {\r\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\r\n                    this._renderedContentOffsetNeedsRewrite = false;\r\n                    this.setRenderedContentOffset(this._renderedContentOffset);\r\n                }\r\n                else {\r\n                    this._scrollStrategy.onRenderedOffsetChanged();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\r\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\r\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\r\n     * @param offset The offset to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\r\n     */\r\n    scrollToOffset(offset, behavior = 'auto') {\r\n        const options = { behavior };\r\n        if (this.orientation === 'horizontal') {\r\n            options.start = offset;\r\n        }\r\n        else {\r\n            options.top = offset;\r\n        }\r\n        this.scrollTo(options);\r\n    }\r\n    /**\r\n     * Scrolls to the offset for the given index.\r\n     * @param index The index of the element to scroll to.\r\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\r\n     */\r\n    scrollToIndex(index, behavior = 'auto') {\r\n        this._scrollStrategy.scrollToIndex(index, behavior);\r\n    }\r\n    /**\r\n     * Gets the current scroll offset from the start of the viewport (in pixels).\r\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\r\n     *     in horizontal mode.\r\n     */\r\n    measureScrollOffset(from) {\r\n        return from ?\r\n            super.measureScrollOffset(from) :\r\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\r\n    }\r\n    /** Measure the combined size of all of the rendered items. */\r\n    measureRenderedContentSize() {\r\n        const contentEl = this._contentWrapper.nativeElement;\r\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\r\n    }\r\n    /**\r\n     * Measure the total combined size of the given range. Throws if the range includes items that are\r\n     * not rendered.\r\n     */\r\n    measureRangeSize(range) {\r\n        if (!this._forOf) {\r\n            return 0;\r\n        }\r\n        return this._forOf.measureRangeSize(range, this.orientation);\r\n    }\r\n    /** Update the viewport dimensions and re-render. */\r\n    checkViewportSize() {\r\n        // TODO: Cleanup later when add logic for handling content resize\r\n        this._measureViewportSize();\r\n        this._scrollStrategy.onDataLengthChanged();\r\n    }\r\n    /** Measure the viewport size. */\r\n    _measureViewportSize() {\r\n        const viewportEl = this.elementRef.nativeElement;\r\n        this._viewportSize = this.orientation === 'horizontal' ?\r\n            viewportEl.clientWidth : viewportEl.clientHeight;\r\n    }\r\n    /** Queue up change detection to run. */\r\n    _markChangeDetectionNeeded(runAfter) {\r\n        if (runAfter) {\r\n            this._runAfterChangeDetection.push(runAfter);\r\n        }\r\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\r\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\r\n        if (!this._isChangeDetectionPending) {\r\n            this._isChangeDetectionPending = true;\r\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\r\n                this._doChangeDetection();\r\n            }));\r\n        }\r\n    }\r\n    /** Run change detection. */\r\n    _doChangeDetection() {\r\n        this._isChangeDetectionPending = false;\r\n        // Apply the content transform. The transform can't be set via an Angular binding because\r\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\r\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\r\n        // the `Number` function first to coerce it to a numeric value.\r\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\r\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\r\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\r\n        // instead does not properly check the projected content.\r\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\r\n        const runAfterChangeDetection = this._runAfterChangeDetection;\r\n        this._runAfterChangeDetection = [];\r\n        for (const fn of runAfterChangeDetection) {\r\n            fn();\r\n        }\r\n    }\r\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\r\n    _calculateSpacerSize() {\r\n        this._totalContentHeight =\r\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\r\n        this._totalContentWidth =\r\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\r\n    }\r\n}\r\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler)); };\r\nCdkVirtualScrollViewport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\r\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\r\n                provide: CdkScrollable,\r\n                useExisting: CdkVirtualScrollViewport\r\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\r\n        ɵngcc0.ɵɵprojection(2);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\r\n    } if (rf & 2) {\r\n        ɵngcc0.ɵɵadvance(3);\r\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\r\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nCdkVirtualScrollViewport.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgZone },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: ScrollDispatcher },\r\n    { type: ViewportRuler }\r\n];\r\nCdkVirtualScrollViewport.propDecorators = {\r\n    orientation: [{ type: Input }],\r\n    scrolledIndexChange: [{ type: Output }],\r\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-virtual-scroll-viewport',\r\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\r\n                host: {\r\n                    'class': 'cdk-virtual-scroll-viewport',\r\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\r\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                providers: [{\r\n                        provide: CdkScrollable,\r\n                        useExisting: CdkVirtualScrollViewport\r\n                    }],\r\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [VIRTUAL_SCROLL_STRATEGY]\r\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler }]; }, { scrolledIndexChange: [{\r\n            type: Output\r\n        }], orientation: [{\r\n            type: Input\r\n        }], _contentWrapper: [{\r\n            type: ViewChild,\r\n            args: ['contentWrapper', { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Helper to extract the offset of a DOM Node in a certain direction. */\r\nfunction getOffset(orientation, direction, node) {\r\n    const el = node;\r\n    if (!el.getBoundingClientRect) {\r\n        return 0;\r\n    }\r\n    const rect = el.getBoundingClientRect();\r\n    if (orientation === 'horizontal') {\r\n        return direction === 'start' ? rect.left : rect.right;\r\n    }\r\n    return direction === 'start' ? rect.top : rect.bottom;\r\n}\r\n/**\r\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\r\n * container.\r\n */\r\nclass CdkVirtualForOf {\r\n    constructor(\r\n    /** The view container to add items to. */\r\n    _viewContainerRef, \r\n    /** The template to use when stamping out new items. */\r\n    _template, \r\n    /** The set of available differs. */\r\n    _differs, \r\n    /** The strategy used to render items in the virtual scroll viewport. */\r\n    _viewRepeater, \r\n    /** The virtual scrolling viewport that these items are being rendered in. */\r\n    _viewport, ngZone) {\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._template = _template;\r\n        this._differs = _differs;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._viewport = _viewport;\r\n        /** Emits when the rendered view of the data changes. */\r\n        this.viewChange = new Subject();\r\n        /** Subject that emits when a new DataSource instance is given. */\r\n        this._dataSourceChanges = new Subject();\r\n        /** Emits whenever the data in the current DataSource changes. */\r\n        this.dataStream = this._dataSourceChanges\r\n            .pipe(\r\n        // Start off with null `DataSource`.\r\n        startWith(null), \r\n        // Bundle up the previous and current data sources so we can work with both.\r\n        pairwise(), \r\n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\r\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\r\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\r\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \r\n        // Replay the last emitted data when someone subscribes.\r\n        shareReplay(1));\r\n        /** The differ used to calculate changes to the data. */\r\n        this._differ = null;\r\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\r\n        this._needsUpdate = false;\r\n        this._destroyed = new Subject();\r\n        this.dataStream.subscribe(data => {\r\n            this._data = data;\r\n            this._onRenderedDataChange();\r\n        });\r\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\r\n            this._renderedRange = range;\r\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\r\n            this._onRenderedDataChange();\r\n        });\r\n        this._viewport.attach(this);\r\n    }\r\n    /** The DataSource to display. */\r\n    get cdkVirtualForOf() {\r\n        return this._cdkVirtualForOf;\r\n    }\r\n    set cdkVirtualForOf(value) {\r\n        this._cdkVirtualForOf = value;\r\n        if (isDataSource(value)) {\r\n            this._dataSourceChanges.next(value);\r\n        }\r\n        else {\r\n            // If value is an an NgIterable, convert it to an array.\r\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\r\n        }\r\n    }\r\n    /**\r\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\r\n     * the item and produces a value to be used as the item's identity when tracking changes.\r\n     */\r\n    get cdkVirtualForTrackBy() {\r\n        return this._cdkVirtualForTrackBy;\r\n    }\r\n    set cdkVirtualForTrackBy(fn) {\r\n        this._needsUpdate = true;\r\n        this._cdkVirtualForTrackBy = fn ?\r\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\r\n            undefined;\r\n    }\r\n    /** The template used to stamp out new elements. */\r\n    set cdkVirtualForTemplate(value) {\r\n        if (value) {\r\n            this._needsUpdate = true;\r\n            this._template = value;\r\n        }\r\n    }\r\n    /**\r\n     * The size of the cache used to store templates that are not being used for re-use later.\r\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\r\n     */\r\n    get cdkVirtualForTemplateCacheSize() {\r\n        return this._viewRepeater.viewCacheSize;\r\n    }\r\n    set cdkVirtualForTemplateCacheSize(size) {\r\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\r\n    }\r\n    /**\r\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\r\n     * in the specified range. Throws an error if the range includes items that are not currently\r\n     * rendered.\r\n     */\r\n    measureRangeSize(range, orientation) {\r\n        if (range.start >= range.end) {\r\n            return 0;\r\n        }\r\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\r\n        }\r\n        // The index into the list of rendered views for the first item in the range.\r\n        const renderedStartIndex = range.start - this._renderedRange.start;\r\n        // The length of the range we're measuring.\r\n        const rangeLen = range.end - range.start;\r\n        // Loop over all the views, find the first and land node and compute the size by subtracting\r\n        // the top of the first node from the bottom of the last one.\r\n        let firstNode;\r\n        let lastNode;\r\n        // Find the first node by starting from the beginning and going forwards.\r\n        for (let i = 0; i < rangeLen; i++) {\r\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\r\n            if (view && view.rootNodes.length) {\r\n                firstNode = lastNode = view.rootNodes[0];\r\n                break;\r\n            }\r\n        }\r\n        // Find the last node by starting from the end and going backwards.\r\n        for (let i = rangeLen - 1; i > -1; i--) {\r\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\r\n            if (view && view.rootNodes.length) {\r\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\r\n                break;\r\n            }\r\n        }\r\n        return firstNode && lastNode ?\r\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\r\n    }\r\n    ngDoCheck() {\r\n        if (this._differ && this._needsUpdate) {\r\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\r\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\r\n            // changing (need to do this diff).\r\n            const changes = this._differ.diff(this._renderedItems);\r\n            if (!changes) {\r\n                this._updateContext();\r\n            }\r\n            else {\r\n                this._applyChanges(changes);\r\n            }\r\n            this._needsUpdate = false;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._viewport.detach();\r\n        this._dataSourceChanges.next(undefined);\r\n        this._dataSourceChanges.complete();\r\n        this.viewChange.complete();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n        this._viewRepeater.detach();\r\n    }\r\n    /** React to scroll state changes in the viewport. */\r\n    _onRenderedDataChange() {\r\n        if (!this._renderedRange) {\r\n            return;\r\n        }\r\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\r\n        if (!this._differ) {\r\n            // Use a wrapper function for the `trackBy` so any new values are\r\n            // picked up automatically without having to recreate the differ.\r\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\r\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\r\n            });\r\n        }\r\n        this._needsUpdate = true;\r\n    }\r\n    /** Swap out one `DataSource` for another. */\r\n    _changeDataSource(oldDs, newDs) {\r\n        if (oldDs) {\r\n            oldDs.disconnect(this);\r\n        }\r\n        this._needsUpdate = true;\r\n        return newDs ? newDs.connect(this) : of();\r\n    }\r\n    /** Update the `CdkVirtualForOfContext` for all views. */\r\n    _updateContext() {\r\n        const count = this._data.length;\r\n        let i = this._viewContainerRef.length;\r\n        while (i--) {\r\n            const view = this._viewContainerRef.get(i);\r\n            view.context.index = this._renderedRange.start + i;\r\n            view.context.count = count;\r\n            this._updateComputedContextProperties(view.context);\r\n            view.detectChanges();\r\n        }\r\n    }\r\n    /** Apply changes to the DOM. */\r\n    _applyChanges(changes) {\r\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), (record) => record.item);\r\n        // Update $implicit for any items that had an identity change.\r\n        changes.forEachIdentityChange((record) => {\r\n            const view = this._viewContainerRef.get(record.currentIndex);\r\n            view.context.$implicit = record.item;\r\n        });\r\n        // Update the context variables on all items.\r\n        const count = this._data.length;\r\n        let i = this._viewContainerRef.length;\r\n        while (i--) {\r\n            const view = this._viewContainerRef.get(i);\r\n            view.context.index = this._renderedRange.start + i;\r\n            view.context.count = count;\r\n            this._updateComputedContextProperties(view.context);\r\n        }\r\n    }\r\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\r\n    _updateComputedContextProperties(context) {\r\n        context.first = context.index === 0;\r\n        context.last = context.index === context.count - 1;\r\n        context.even = context.index % 2 === 0;\r\n        context.odd = !context.even;\r\n    }\r\n    _getEmbeddedViewArgs(record, index) {\r\n        // Note that it's important that we insert the item directly at the proper index,\r\n        // rather than inserting it and the moving it in place, because if there's a directive\r\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\r\n        // comment node which can throw off the move when it's being repeated for all items.\r\n        return {\r\n            templateRef: this._template,\r\n            context: {\r\n                $implicit: record.item,\r\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\r\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\r\n                cdkVirtualForOf: this._cdkVirtualForOf,\r\n                index: -1,\r\n                count: -1,\r\n                first: false,\r\n                last: false,\r\n                odd: false,\r\n                even: false\r\n            },\r\n            index,\r\n        };\r\n    }\r\n}\r\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\r\nCdkVirtualForOf.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\r\n        ])] });\r\nCdkVirtualForOf.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: _RecycleViewRepeaterStrategy, decorators: [{ type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\r\n    { type: NgZone }\r\n];\r\nCdkVirtualForOf.propDecorators = {\r\n    cdkVirtualForOf: [{ type: Input }],\r\n    cdkVirtualForTrackBy: [{ type: Input }],\r\n    cdkVirtualForTemplate: [{ type: Input }],\r\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\r\n                providers: [\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy },\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: ɵngcc3._RecycleViewRepeaterStrategy, decorators: [{\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: CdkVirtualScrollViewport, decorators: [{\r\n                type: SkipSelf\r\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForOf: [{\r\n            type: Input\r\n        }], cdkVirtualForTrackBy: [{\r\n            type: Input\r\n        }], cdkVirtualForTemplate: [{\r\n            type: Input\r\n        }], cdkVirtualForTemplateCacheSize: [{\r\n            type: Input\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass CdkScrollableModule {\r\n}\r\nCdkScrollableModule.ɵfac = function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); };\r\nCdkScrollableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\r\nCdkScrollableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [CdkScrollable],\r\n                declarations: [CdkScrollable]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\r\n/**\r\n * @docs-primary-export\r\n */\r\nclass ScrollingModule {\r\n}\r\nScrollingModule.ɵfac = function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); };\r\nScrollingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\r\nScrollingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\r\n            BidiModule,\r\n            PlatformModule,\r\n            CdkScrollableModule\r\n        ], BidiModule, CdkScrollableModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    BidiModule,\r\n                    PlatformModule,\r\n                    CdkScrollableModule\r\n                ],\r\n                exports: [\r\n                    BidiModule,\r\n                    CdkScrollableModule,\r\n                    CdkFixedSizeVirtualScroll,\r\n                    CdkVirtualForOf,\r\n                    CdkVirtualScrollViewport,\r\n                ],\r\n                declarations: [\r\n                    CdkFixedSizeVirtualScroll,\r\n                    CdkVirtualForOf,\r\n                    CdkVirtualScrollViewport,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\r\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\r\n\r\n","import { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { isDataSource, _VIEW_REPEATER_STRATEGY, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/bidi';\r\nimport * as ɵngcc2 from '@angular/cdk/platform';\r\nimport * as ɵngcc3 from '@angular/cdk/scrolling';\r\n\r\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]]];\r\nconst _c1 = [\"caption\", \"colgroup, col\"];\r\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\r\n} }\r\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\r\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\r\n    ɵngcc0.ɵɵtext(1);\r\n    ɵngcc0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const data_r2 = ctx.$implicit;\r\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\r\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\r\n    ɵngcc0.ɵɵadvance(1);\r\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\r\n} }\r\nexport { DataSource } from '@angular/cdk/collections';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, Injectable, NgZone, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, ChangeDetectorRef, Attribute, SkipSelf, ViewChild, ContentChildren, NgModule } from '@angular/core';\r\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\r\nimport { takeUntil, take } from 'rxjs/operators';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Mixin to provide a directive with a function that checks if the sticky input has been\r\n * changed since the last time the function was called. Essentially adds a dirty-check to the\r\n * sticky value.\r\n * @docs-private\r\n */\r\nfunction mixinHasStickyInput(base) {\r\n    return class extends base {\r\n        constructor(...args) {\r\n            super(...args);\r\n            this._sticky = false;\r\n            /** Whether the sticky input has changed since it was last checked. */\r\n            this._hasStickyChanged = false;\r\n        }\r\n        /** Whether sticky positioning should be applied. */\r\n        get sticky() { return this._sticky; }\r\n        set sticky(v) {\r\n            const prevValue = this._sticky;\r\n            this._sticky = coerceBooleanProperty(v);\r\n            this._hasStickyChanged = prevValue !== this._sticky;\r\n        }\r\n        /** Whether the sticky value has changed since this was last called. */\r\n        hasStickyChanged() {\r\n            const hasStickyChanged = this._hasStickyChanged;\r\n            this._hasStickyChanged = false;\r\n            return hasStickyChanged;\r\n        }\r\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\r\n        resetStickyChanged() {\r\n            this._hasStickyChanged = false;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Used to provide a table to some of the sub-components without causing a circular dependency.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\r\n/** Injection token that can be used to specify the text column options. */\r\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Cell definition for a CDK table.\r\n * Captures the template of a column's data row cell as well as cell-specific properties.\r\n */\r\nclass CdkCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\r\nCdkCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Header cell definition for a CDK table.\r\n * Captures the template of a column's header cell and as well as cell-specific properties.\r\n */\r\nclass CdkHeaderCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkHeaderCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\r\nCdkHeaderCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkHeaderCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n/**\r\n * Footer cell definition for a CDK table.\r\n * Captures the template of a column's footer cell and as well as cell-specific properties.\r\n */\r\nclass CdkFooterCellDef {\r\n    constructor(/** @docs-private */ template) {\r\n        this.template = template;\r\n    }\r\n}\r\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkFooterCellDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\r\nCdkFooterCellDef.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkFooterCellDef]' }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkColumnDef.\r\n/** @docs-private */\r\nclass CdkColumnDefBase {\r\n}\r\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\r\n/**\r\n * Column definition for the CDK table.\r\n * Defines a set of cells available for a table column.\r\n */\r\nclass CdkColumnDef extends _CdkColumnDefBase {\r\n    constructor(_table) {\r\n        super();\r\n        this._table = _table;\r\n        this._stickyEnd = false;\r\n    }\r\n    /** Unique name for this column. */\r\n    get name() { return this._name; }\r\n    set name(name) { this._setNameInput(name); }\r\n    /**\r\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\r\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\r\n     * has been changed.\r\n     */\r\n    get stickyEnd() {\r\n        return this._stickyEnd;\r\n    }\r\n    set stickyEnd(v) {\r\n        const prevValue = this._stickyEnd;\r\n        this._stickyEnd = coerceBooleanProperty(v);\r\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\r\n    }\r\n    /**\r\n     * Overridable method that sets the css classes that will be added to every cell in this\r\n     * column.\r\n     * In the future, columnCssClassName will change from type string[] to string and this\r\n     * will set a single string value.\r\n     * @docs-private\r\n     */\r\n    _updateColumnCssClassName() {\r\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\r\n    }\r\n    /**\r\n     * This has been extracted to a util because of TS 4 and VE.\r\n     * View Engine doesn't support property rename inheritance.\r\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\r\n     * @docs-private\r\n     */\r\n    _setNameInput(value) {\r\n        // If the directive is set without a name (updated programmatically), then this setter will\r\n        // trigger with an empty string and should not overwrite the programmatically set value.\r\n        if (value) {\r\n            this._name = value;\r\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\r\n            this._updateColumnCssClassName();\r\n        }\r\n    }\r\n}\r\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkColumnDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\r\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkColumnDef.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\nCdkColumnDef.propDecorators = {\r\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\r\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\r\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\r\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\r\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkColumnDef]',\r\n                inputs: ['sticky'],\r\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\r\n            }]\r\n    }], function () { return [{ type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, { name: [{\r\n            type: Input,\r\n            args: ['cdkColumnDef']\r\n        }], stickyEnd: [{\r\n            type: Input,\r\n            args: ['stickyEnd']\r\n        }], cell: [{\r\n            type: ContentChild,\r\n            args: [CdkCellDef]\r\n        }], headerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkHeaderCellDef]\r\n        }], footerCell: [{\r\n            type: ContentChild,\r\n            args: [CdkFooterCellDef]\r\n        }] }); })();\r\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\r\nclass BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\r\n        // with destructuring.\r\n        const classList = elementRef.nativeElement.classList;\r\n        for (const className of columnDef._columnCssClassName) {\r\n            classList.add(className);\r\n        }\r\n    }\r\n}\r\n/** Header cell template container that adds the right classes and role. */\r\nclass CdkHeaderCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkHeaderCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkHeaderCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\r\n                host: {\r\n                    'class': 'cdk-header-cell',\r\n                    'role': 'columnheader'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Footer cell template container that adds the right classes and role. */\r\nclass CdkFooterCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkFooterCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkFooterCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\r\n                host: {\r\n                    'class': 'cdk-footer-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/** Cell template container that adds the right classes and role. */\r\nclass CdkCell extends BaseCdkCell {\r\n    constructor(columnDef, elementRef) {\r\n        super(columnDef, elementRef);\r\n    }\r\n}\r\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nCdkCell.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkCell.ctorParameters = () => [\r\n    { type: CdkColumnDef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCell, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'cdk-cell, td[cdk-cell]',\r\n                host: {\r\n                    'class': 'cdk-cell',\r\n                    'role': 'gridcell'\r\n                }\r\n            }]\r\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @docs-private\r\n */\r\nclass _Schedule {\r\n    constructor() {\r\n        this.tasks = [];\r\n        this.endTasks = [];\r\n    }\r\n}\r\n/** Injection token used to provide a coalesced style scheduler. */\r\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\r\n/**\r\n * Allows grouping up CSSDom mutations after the current execution context.\r\n * This can significantly improve performance when separate consecutive functions are\r\n * reading from the CSSDom and then mutating it.\r\n *\r\n * @docs-private\r\n */\r\nclass _CoalescedStyleScheduler {\r\n    constructor(_ngZone) {\r\n        this._ngZone = _ngZone;\r\n        this._currentSchedule = null;\r\n        this._destroyed = new Subject();\r\n    }\r\n    /**\r\n     * Schedules the specified task to run at the end of the current VM turn.\r\n     */\r\n    schedule(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.tasks.push(task);\r\n    }\r\n    /**\r\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\r\n     * VM turn.\r\n     */\r\n    scheduleEnd(task) {\r\n        this._createScheduleIfNeeded();\r\n        this._currentSchedule.endTasks.push(task);\r\n    }\r\n    /** Prevent any further tasks from running. */\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    _createScheduleIfNeeded() {\r\n        if (this._currentSchedule) {\r\n            return;\r\n        }\r\n        this._currentSchedule = new _Schedule();\r\n        this._getScheduleObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\r\n                const schedule = this._currentSchedule;\r\n                // Capture new tasks scheduled by the current set of tasks.\r\n                this._currentSchedule = new _Schedule();\r\n                for (const task of schedule.tasks) {\r\n                    task();\r\n                }\r\n                for (const task of schedule.endTasks) {\r\n                    task();\r\n                }\r\n            }\r\n            this._currentSchedule = null;\r\n        });\r\n    }\r\n    _getScheduleObservable() {\r\n        // Use onStable when in the context of an ongoing change detection cycle so that we\r\n        // do not accidentally trigger additional cycles.\r\n        return this._ngZone.isStable ?\r\n            from(Promise.resolve(undefined)) :\r\n            this._ngZone.onStable.pipe(take(1));\r\n    }\r\n}\r\n_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) { return new (t || _CoalescedStyleScheduler)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\r\n_CoalescedStyleScheduler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: _CoalescedStyleScheduler, factory: _CoalescedStyleScheduler.ɵfac });\r\n_CoalescedStyleScheduler.ctorParameters = () => [\r\n    { type: NgZone }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_CoalescedStyleScheduler, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * The row template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n */\r\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\r\n/**\r\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\r\n * for changes and notifying the table.\r\n */\r\nclass BaseRowDef {\r\n    constructor(\r\n    /** @docs-private */ template, _differs) {\r\n        this.template = template;\r\n        this._differs = _differs;\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\r\n        // of the columns property or an empty array if none is provided.\r\n        if (!this._columnsDiffer) {\r\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\r\n            this._columnsDiffer = this._differs.find(columns).create();\r\n            this._columnsDiffer.diff(columns);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the difference between the current columns and the columns from the last diff, or null\r\n     * if there is no difference.\r\n     */\r\n    getColumnsDiff() {\r\n        return this._columnsDiffer.diff(this.columns);\r\n    }\r\n    /** Gets this row def's relevant cell template from the provided column def. */\r\n    extractCellTemplate(column) {\r\n        if (this instanceof CdkHeaderRowDef) {\r\n            return column.headerCell.template;\r\n        }\r\n        if (this instanceof CdkFooterRowDef) {\r\n            return column.footerCell.template;\r\n        }\r\n        else {\r\n            return column.cell.template;\r\n        }\r\n    }\r\n}\r\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\r\nBaseRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nBaseRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\r\n        type: Directive\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkHeaderRowDef.\r\n/** @docs-private */\r\nclass CdkHeaderRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\r\n/**\r\n * Header row definition for the CDK table.\r\n * Captures the header row's template and other header properties such as the columns to display.\r\n */\r\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkHeaderRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkHeaderRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkHeaderRowDef]',\r\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n// Boilerplate for applying mixins to CdkFooterRowDef.\r\n/** @docs-private */\r\nclass CdkFooterRowDefBase extends BaseRowDef {\r\n}\r\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\r\n/**\r\n * Footer row definition for the CDK table.\r\n * Captures the footer row's template and other footer properties such as the columns to display.\r\n */\r\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\r\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n    }\r\n}\r\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkFooterRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\r\nCdkFooterRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkFooterRowDef]',\r\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Data row definition for the CDK table.\r\n * Captures the header row's template and other row properties such as the columns to display and\r\n * a when predicate that describes when this row should be used.\r\n */\r\nclass CdkRowDef extends BaseRowDef {\r\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\r\n    //   if this template should be used.\r\n    constructor(template, _differs, _table) {\r\n        super(template, _differs);\r\n        this._table = _table;\r\n    }\r\n}\r\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\r\nCdkRowDef.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nCdkRowDef.ctorParameters = () => [\r\n    { type: TemplateRef },\r\n    { type: IterableDiffers },\r\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: '[cdkRowDef]',\r\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [CDK_TABLE]\r\n            }, {\r\n                type: Optional\r\n            }] }]; }, null); })();\r\n/**\r\n * Outlet for rendering cells inside of a row or header row.\r\n * @docs-private\r\n */\r\nclass CdkCellOutlet {\r\n    constructor(_viewContainer) {\r\n        this._viewContainer = _viewContainer;\r\n        CdkCellOutlet.mostRecentCellOutlet = this;\r\n    }\r\n    ngOnDestroy() {\r\n        // If this was the last outlet being rendered in the view, remove the reference\r\n        // from the static property after it has been destroyed to avoid leaking memory.\r\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\r\n            CdkCellOutlet.mostRecentCellOutlet = null;\r\n        }\r\n    }\r\n}\r\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\r\nCdkCellOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\r\n/**\r\n * Static property containing the latest constructed instance of this class.\r\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\r\n * createEmbeddedView. After one of these components are created, this property will provide\r\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\r\n * construct the cells with the provided context.\r\n */\r\nCdkCellOutlet.mostRecentCellOutlet = null;\r\nCdkCellOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[cdkCellOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\r\n/** Header template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkHeaderRow {\r\n}\r\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\r\nCdkHeaderRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-header-row, tr[cdk-header-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-header-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkFooterRow {\r\n}\r\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\r\nCdkFooterRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-footer-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\r\nclass CdkRow {\r\n}\r\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\r\nCdkRow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainer(0, 0);\r\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkRow, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-row, tr[cdk-row]',\r\n                template: CDK_ROW_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-row',\r\n                    'role': 'row'\r\n                },\r\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                encapsulation: ViewEncapsulation.None\r\n            }]\r\n    }], null, null); })();\r\n/** Row that can be used to display a message when no data is shown in the table. */\r\nclass CdkNoDataRow {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n}\r\nCdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) { return new (t || CdkNoDataRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\r\nCdkNoDataRow.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkNoDataRow, selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]] });\r\nCdkNoDataRow.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkNoDataRow, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: 'ng-template[cdkNoDataRow]'\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * List of all possible directions that can be used for sticky positioning.\r\n * @docs-private\r\n */\r\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\r\n/**\r\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\r\n * @docs-private\r\n */\r\nclass StickyStyler {\r\n    /**\r\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\r\n     *     that uses the native `<table>` element.\r\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\r\n     *     sticky positioning applied.\r\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\r\n     *     by reversing left/right positions.\r\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\r\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\r\n     *     using inline styles. If false, it is assumed that position: sticky is included in\r\n     *     the component stylesheet for _stickCellCss.\r\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\r\n     *     and their dimensions.\r\n     */\r\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler` parameter to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\r\n        this._isNativeHtmlTable = _isNativeHtmlTable;\r\n        this._stickCellCss = _stickCellCss;\r\n        this.direction = direction;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._isBrowser = _isBrowser;\r\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\r\n        this._positionListener = _positionListener;\r\n        this._cachedCellWidths = [];\r\n        this._borderCellCss = {\r\n            'top': `${_stickCellCss}-border-elem-top`,\r\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\r\n            'left': `${_stickCellCss}-border-elem-left`,\r\n            'right': `${_stickCellCss}-border-elem-right`,\r\n        };\r\n    }\r\n    /**\r\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\r\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\r\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\r\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\r\n     */\r\n    clearStickyPositioning(rows, stickyDirections) {\r\n        const elementsToClear = [];\r\n        for (const row of rows) {\r\n            // If the row isn't an element (e.g. if it's an `ng-container`),\r\n            // it won't have inline styles or `children` so we skip it.\r\n            if (row.nodeType !== row.ELEMENT_NODE) {\r\n                continue;\r\n            }\r\n            elementsToClear.push(row);\r\n            for (let i = 0; i < row.children.length; i++) {\r\n                elementsToClear.push(row.children[i]);\r\n            }\r\n        }\r\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            for (const element of elementsToClear) {\r\n                this._removeStickyStyle(element, stickyDirections);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky left and right positions to the cells of each row according to the sticky\r\n     * states of the rendered column definitions.\r\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\r\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the start of the row.\r\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\r\n     *     in this index position should be stuck to the end of the row.\r\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\r\n     *     column cell. If `false` cached widths will be used instead.\r\n     */\r\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\r\n        if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\r\n            stickyEndStates.some(state => state))) {\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\r\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\r\n            }\r\n            return;\r\n        }\r\n        const firstRow = rows[0];\r\n        const numCells = firstRow.children.length;\r\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\r\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\r\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\r\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\r\n        const firstStickyEnd = stickyEndStates.indexOf(true);\r\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            const isRtl = this.direction === 'rtl';\r\n            const start = isRtl ? 'right' : 'left';\r\n            const end = isRtl ? 'left' : 'right';\r\n            for (const row of rows) {\r\n                for (let i = 0; i < numCells; i++) {\r\n                    const cell = row.children[i];\r\n                    if (stickyStartStates[i]) {\r\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\r\n                    }\r\n                    if (stickyEndStates[i]) {\r\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\r\n                    }\r\n                }\r\n            }\r\n            if (this._positionListener) {\r\n                this._positionListener.stickyColumnsUpdated({\r\n                    sizes: lastStickyStart === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(0, lastStickyStart + 1)\r\n                            .map((width, index) => stickyStartStates[index] ? width : null)\r\n                });\r\n                this._positionListener.stickyEndColumnsUpdated({\r\n                    sizes: firstStickyEnd === -1 ?\r\n                        [] :\r\n                        cellWidths\r\n                            .slice(firstStickyEnd)\r\n                            .map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null)\r\n                            .reverse()\r\n                });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\r\n     * row itself otherwise.\r\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\r\n     *     sticky state and to the provided top or bottom position.\r\n     * @param stickyStates A list of boolean states where each state represents whether the row\r\n     *     should be stuck in the particular top or bottom position.\r\n     * @param position The position direction in which the row should be stuck if that row should be\r\n     *     sticky.\r\n     *\r\n     */\r\n    stickRows(rowsToStick, stickyStates, position) {\r\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\r\n        if (!this._isBrowser) {\r\n            return;\r\n        }\r\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\r\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\r\n        // sticky states need to be reversed as well.\r\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\r\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\r\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\r\n        const stickyOffsets = [];\r\n        const stickyCellHeights = [];\r\n        const elementsToStick = [];\r\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\r\n            stickyOffsets[rowIndex] = stickyOffset;\r\n            if (!states[rowIndex]) {\r\n                continue;\r\n            }\r\n            const row = rows[rowIndex];\r\n            elementsToStick[rowIndex] = this._isNativeHtmlTable ?\r\n                Array.from(row.children) : [row];\r\n            const height = row.getBoundingClientRect().height;\r\n            stickyOffset += height;\r\n            stickyCellHeights[rowIndex] = height;\r\n        }\r\n        const borderedRowIndex = states.lastIndexOf(true);\r\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\r\n        // (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            var _a, _b;\r\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n                if (!states[rowIndex]) {\r\n                    continue;\r\n                }\r\n                const offset = stickyOffsets[rowIndex];\r\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\r\n                for (const element of elementsToStick[rowIndex]) {\r\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\r\n                }\r\n            }\r\n            if (position === 'top') {\r\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n            else {\r\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({ sizes: stickyCellHeights, elements: elementsToStick });\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\r\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\r\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\r\n     * the tfoot element.\r\n     */\r\n    updateStickyFooterContainer(tableElement, stickyStates) {\r\n        if (!this._isNativeHtmlTable) {\r\n            return;\r\n        }\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\r\n        this._scheduleStyleChanges(() => {\r\n            if (stickyStates.some(state => !state)) {\r\n                this._removeStickyStyle(tfoot, ['bottom']);\r\n            }\r\n            else {\r\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\r\n     * the zIndex, removing each of the provided sticky directions, and removing the\r\n     * sticky position if there are no more directions.\r\n     */\r\n    _removeStickyStyle(element, stickyDirections) {\r\n        for (const dir of stickyDirections) {\r\n            element.style[dir] = '';\r\n            element.classList.remove(this._borderCellCss[dir]);\r\n        }\r\n        // If the element no longer has any more sticky directions, remove sticky positioning and\r\n        // the sticky CSS class.\r\n        // Short-circuit checking element.style[dir] for stickyDirections as they\r\n        // were already removed above.\r\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\r\n        if (hasDirection) {\r\n            element.style.zIndex = this._getCalculatedZIndex(element);\r\n        }\r\n        else {\r\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\r\n            element.style.zIndex = '';\r\n            if (this._needsPositionStickyOnElement) {\r\n                element.style.position = '';\r\n            }\r\n            element.classList.remove(this._stickCellCss);\r\n        }\r\n    }\r\n    /**\r\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\r\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\r\n     * direction and value.\r\n     */\r\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\r\n        element.classList.add(this._stickCellCss);\r\n        if (isBorderElement) {\r\n            element.classList.add(this._borderCellCss[dir]);\r\n        }\r\n        element.style[dir] = `${dirValue}px`;\r\n        element.style.zIndex = this._getCalculatedZIndex(element);\r\n        if (this._needsPositionStickyOnElement) {\r\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\r\n        }\r\n    }\r\n    /**\r\n     * Calculate what the z-index should be for the element, depending on what directions (top,\r\n     * bottom, left, right) have been set. It should be true that elements with a top direction\r\n     * should have the highest index since these are elements like a table header. If any of those\r\n     * elements are also sticky in another direction, then they should appear above other elements\r\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\r\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\r\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\r\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\r\n     * elements.\r\n     */\r\n    _getCalculatedZIndex(element) {\r\n        const zIndexIncrements = {\r\n            top: 100,\r\n            bottom: 10,\r\n            left: 1,\r\n            right: 1,\r\n        };\r\n        let zIndex = 0;\r\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\r\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\r\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\r\n        for (const dir of STICKY_DIRECTIONS) {\r\n            if (element.style[dir]) {\r\n                zIndex += zIndexIncrements[dir];\r\n            }\r\n        }\r\n        return zIndex ? `${zIndex}` : '';\r\n    }\r\n    /** Gets the widths for each cell in the provided row. */\r\n    _getCellWidths(row, recalculateCellWidths = true) {\r\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\r\n            return this._cachedCellWidths;\r\n        }\r\n        const cellWidths = [];\r\n        const firstRowCells = row.children;\r\n        for (let i = 0; i < firstRowCells.length; i++) {\r\n            let cell = firstRowCells[i];\r\n            cellWidths.push(cell.getBoundingClientRect().width);\r\n        }\r\n        this._cachedCellWidths = cellWidths;\r\n        return cellWidths;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyStartColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = 0; i < widths.length; i++) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Determines the left and right positions of each sticky column cell, which will be the\r\n     * accumulation of all sticky column cell widths to the left and right, respectively.\r\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\r\n     */\r\n    _getStickyEndColumnPositions(widths, stickyStates) {\r\n        const positions = [];\r\n        let nextPosition = 0;\r\n        for (let i = widths.length; i > 0; i--) {\r\n            if (stickyStates[i]) {\r\n                positions[i] = nextPosition;\r\n                nextPosition += widths[i];\r\n            }\r\n        }\r\n        return positions;\r\n    }\r\n    /**\r\n     * Schedules styles to be applied when the style scheduler deems appropriate.\r\n     * @breaking-change 11.0.0 This method can be removed in favor of calling\r\n     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\r\n     */\r\n    _scheduleStyleChanges(changes) {\r\n        if (this._coalescedStyleScheduler) {\r\n            this._coalescedStyleScheduler.schedule(changes);\r\n        }\r\n        else {\r\n            changes();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Returns an error to be thrown when attempting to find an unexisting column.\r\n * @param id Id whose lookup failed.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownColumnError(id) {\r\n    return Error(`Could not find column with id \"${id}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when two column definitions have the same name.\r\n * @docs-private\r\n */\r\nfunction getTableDuplicateColumnNameError(name) {\r\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\r\n * @docs-private\r\n */\r\nfunction getTableMultipleDefaultRowDefsError() {\r\n    return Error(`There can only be one default row without a when predicate function.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\r\n * @docs-private\r\n */\r\nfunction getTableMissingMatchingRowDefError(data) {\r\n    return Error(`Could not find a matching row definition for the` +\r\n        `provided row data: ${JSON.stringify(data)}`);\r\n}\r\n/**\r\n * Returns an error to be thrown when there is no row definitions present in the content.\r\n * @docs-private\r\n */\r\nfunction getTableMissingRowDefsError() {\r\n    return Error('Missing definitions for header, footer, and row; ' +\r\n        'cannot determine which columns should be rendered.');\r\n}\r\n/**\r\n * Returns an error to be thrown when the data source does not match the compatible types.\r\n * @docs-private\r\n */\r\nfunction getTableUnknownDataSourceError() {\r\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\r\n}\r\n/**\r\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingParentTableError() {\r\n    return Error(`Text column could not find a parent table for registration.`);\r\n}\r\n/**\r\n * Returns an error to be thrown when a table text column doesn't have a name.\r\n * @docs-private\r\n */\r\nfunction getTableTextColumnMissingNameError() {\r\n    return Error(`Table text column must have a name.`);\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** The injection token used to specify the StickyPositioningListener. */\r\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\r\n * @docs-private\r\n */\r\nclass DataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\r\nDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[rowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\r\n * @docs-private\r\n */\r\nclass HeaderRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nHeaderRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\r\nHeaderRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[headerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\r\n * @docs-private\r\n */\r\nclass FooterRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nFooterRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\r\nFooterRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[footerRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * Provides a handle for the table to grab the view\r\n * container's ng-container to insert the no data row.\r\n * @docs-private\r\n */\r\nclass NoDataRowOutlet {\r\n    constructor(viewContainer, elementRef) {\r\n        this.viewContainer = viewContainer;\r\n        this.elementRef = elementRef;\r\n    }\r\n}\r\nNoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) { return new (t || NoDataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\r\nNoDataRowOutlet.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NoDataRowOutlet, selectors: [[\"\", \"noDataRowOutlet\", \"\"]] });\r\nNoDataRowOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef },\r\n    { type: ElementRef }\r\n];\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NoDataRowOutlet, [{\r\n        type: Directive,\r\n        args: [{ selector: '[noDataRowOutlet]' }]\r\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\r\n/**\r\n * The table template that can be used by the mat-table. Should not be used outside of the\r\n * material library.\r\n * @docs-private\r\n */\r\nconst CDK_TABLE_TEMPLATE = \r\n// Note that according to MDN, the `caption` element has to be projected as the **first**\r\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\r\n`\r\n  <ng-content select=\"caption\"></ng-content>\r\n  <ng-content select=\"colgroup, col\"></ng-content>\r\n  <ng-container headerRowOutlet></ng-container>\r\n  <ng-container rowOutlet></ng-container>\r\n  <ng-container noDataRowOutlet></ng-container>\r\n  <ng-container footerRowOutlet></ng-container>\r\n`;\r\n/**\r\n * Class used to conveniently type the embedded view ref for rows with a context.\r\n * @docs-private\r\n */\r\nclass RowViewRef extends EmbeddedViewRef {\r\n}\r\n/**\r\n * A data table that can render a header row, data rows, and a footer row.\r\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\r\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\r\n * connect function that will return an Observable stream that emits the data array to render.\r\n */\r\nclass CdkTable {\r\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, \r\n    /**\r\n     * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\r\n     *    parameters to become required.\r\n     * @breaking-change 11.0.0\r\n     */\r\n    _viewRepeater, _coalescedStyleScheduler, _stickyPositioningListener, \r\n    // Optional for backwards compatibility. The viewport ruler is provided in root. Therefore,\r\n    // this property will never be null.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _viewportRuler) {\r\n        this._differs = _differs;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._elementRef = _elementRef;\r\n        this._dir = _dir;\r\n        this._platform = _platform;\r\n        this._viewRepeater = _viewRepeater;\r\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\r\n        this._stickyPositioningListener = _stickyPositioningListener;\r\n        this._viewportRuler = _viewportRuler;\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._onDestroy = new Subject();\r\n        /**\r\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\r\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\r\n         * any custom column definitions added to `_customColumnDefs`.\r\n         */\r\n        this._columnDefsByName = new Map();\r\n        /**\r\n         * Column definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * column definitions as *its* content child.\r\n         */\r\n        this._customColumnDefs = new Set();\r\n        /**\r\n         * Data row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in data rows as *its* content child.\r\n         */\r\n        this._customRowDefs = new Set();\r\n        /**\r\n         * Header row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\r\n         * built-in header rows as *its* content child.\r\n         */\r\n        this._customHeaderRowDefs = new Set();\r\n        /**\r\n         * Footer row definitions that were defined outside of the direct content children of the table.\r\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\r\n         * built-in footer row as *its* content child.\r\n         */\r\n        this._customFooterRowDefs = new Set();\r\n        /**\r\n         * Whether the header row definition has been changed. Triggers an update to the header row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._headerRowDefChanged = true;\r\n        /**\r\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\r\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\r\n         */\r\n        this._footerRowDefChanged = true;\r\n        /**\r\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\r\n         * change.\r\n         */\r\n        this._stickyColumnStylesNeedReset = true;\r\n        /**\r\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\r\n         * `false`, cached values will be used instead. This is only applicable to tables with\r\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\r\n         */\r\n        this._forceRecalculateCellWidths = true;\r\n        /**\r\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\r\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\r\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\r\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\r\n         * and understand which rows are added/moved/removed.\r\n         *\r\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\r\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\r\n         * contains an array of created pairs. The array is necessary to handle cases where the data\r\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\r\n         * stored.\r\n         */\r\n        this._cachedRenderRowsMap = new Map();\r\n        /**\r\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\r\n         * table subclasses.\r\n         */\r\n        this.stickyCssClass = 'cdk-table-sticky';\r\n        /**\r\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\r\n         * the position is set in a selector associated with the value of stickyCssClass. May be\r\n         * overridden by table subclasses\r\n         */\r\n        this.needsPositionStickyOnElement = true;\r\n        /** Whether the no data row is currently showing anything. */\r\n        this._isShowingNoDataRow = false;\r\n        this._multiTemplateDataRows = false;\r\n        this._fixedLayout = false;\r\n        // TODO(andrewseguin): Remove max value as the end index\r\n        //   and instead calculate the view on init and scroll.\r\n        /**\r\n         * Stream containing the latest information on what rows are being displayed on screen.\r\n         * Can be used by the data source to as a heuristic of what data should be provided.\r\n         *\r\n         * @docs-private\r\n         */\r\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\r\n        if (!role) {\r\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\r\n        }\r\n        this._document = _document;\r\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\r\n    }\r\n    /**\r\n     * Tracking function that will be used to check the differences in data changes. Used similarly\r\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\r\n     * relative to the function to know if a row should be added/removed/moved.\r\n     * Accepts a function that takes two parameters, `index` and `item`.\r\n     */\r\n    get trackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    set trackBy(fn) {\r\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\r\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    /**\r\n     * The table's source of data, which can be provided in three ways (in order of complexity):\r\n     *   - Simple data array (each object represents one table row)\r\n     *   - Stream that emits a data array each time the array changes\r\n     *   - `DataSource` object that implements the connect/disconnect interface.\r\n     *\r\n     * If a data array is provided, the table must be notified when the array's objects are\r\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\r\n     * render the diff since the last table render. If the data array reference is changed, the table\r\n     * will automatically trigger an update to the rows.\r\n     *\r\n     * When providing an Observable stream, the table will trigger an update automatically when the\r\n     * stream emits a new array of data.\r\n     *\r\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\r\n     * provided by the connect function and trigger updates when that stream emits new data array\r\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\r\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\r\n     * subscriptions registered during the connect process).\r\n     */\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(dataSource) {\r\n        if (this._dataSource !== dataSource) {\r\n            this._switchDataSource(dataSource);\r\n        }\r\n    }\r\n    /**\r\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\r\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\r\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\r\n     * defined in the table, or otherwise the default row which does not have a when predicate.\r\n     */\r\n    get multiTemplateDataRows() {\r\n        return this._multiTemplateDataRows;\r\n    }\r\n    set multiTemplateDataRows(v) {\r\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\r\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\r\n        // this setter will be invoked before the row outlet has been defined hence the null check.\r\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\r\n            this._forceRenderDataRows();\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\r\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\r\n     */\r\n    get fixedLayout() {\r\n        return this._fixedLayout;\r\n    }\r\n    set fixedLayout(v) {\r\n        this._fixedLayout = coerceBooleanProperty(v);\r\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\r\n        this._forceRecalculateCellWidths = true;\r\n        this._stickyColumnStylesNeedReset = true;\r\n    }\r\n    ngOnInit() {\r\n        this._setupStickyStyler();\r\n        if (this._isNativeHtmlTable) {\r\n            this._applyNativeTableSections();\r\n        }\r\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\r\n        // the user has provided a custom trackBy, return the result of that function as evaluated\r\n        // with the values of the `RenderRow`'s data and index.\r\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\r\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\r\n        });\r\n        // Table cell dimensions may change after resizing the window. Signal the sticky styler to\r\n        // refresh its cache of cell widths the next time sticky styles are updated.\r\n        // @breaking-change 11.0.0 Remove null check for _viewportRuler once it's a required parameter.\r\n        if (this._viewportRuler) {\r\n            this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n                this._forceRecalculateCellWidths = true;\r\n            });\r\n        }\r\n    }\r\n    ngAfterContentChecked() {\r\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\r\n        this._cacheRowDefs();\r\n        this._cacheColumnDefs();\r\n        // Make sure that the user has at least added header, footer, or data row def.\r\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingRowDefsError();\r\n        }\r\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\r\n        const columnsChanged = this._renderUpdatedColumns();\r\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\r\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\r\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\r\n        this._forceRecalculateCellWidths = rowDefsChanged;\r\n        // If the header row definition has been changed, trigger a render to the header row.\r\n        if (this._headerRowDefChanged) {\r\n            this._forceRenderHeaderRows();\r\n            this._headerRowDefChanged = false;\r\n        }\r\n        // If the footer row definition has been changed, trigger a render to the footer row.\r\n        if (this._footerRowDefChanged) {\r\n            this._forceRenderFooterRows();\r\n            this._footerRowDefChanged = false;\r\n        }\r\n        // If there is a data source and row definitions, connect to the data source unless a\r\n        // connection has already been made.\r\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\r\n            this._observeRenderChanges();\r\n        }\r\n        else if (this._stickyColumnStylesNeedReset) {\r\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\r\n            // called when it row data arrives. Otherwise, we need to call it proactively.\r\n            this.updateStickyColumnStyles();\r\n        }\r\n        this._checkStickyStates();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rowOutlet.viewContainer.clear();\r\n        this._noDataRowOutlet.viewContainer.clear();\r\n        this._headerRowOutlet.viewContainer.clear();\r\n        this._footerRowOutlet.viewContainer.clear();\r\n        this._cachedRenderRowsMap.clear();\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n    }\r\n    /**\r\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\r\n     * input or retrieved through an Observable stream (directly or from a DataSource).\r\n     * Checks for differences in the data since the last diff to perform only the necessary\r\n     * changes (add/remove/move rows).\r\n     *\r\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\r\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\r\n     * an array, this function will need to be called to render any changes.\r\n     */\r\n    renderRows() {\r\n        this._renderRows = this._getAllRenderRows();\r\n        const changes = this._dataDiffer.diff(this._renderRows);\r\n        if (!changes) {\r\n            this._updateNoDataRow();\r\n            return;\r\n        }\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\r\n        // `else` clause once `_viewRepeater` is turned into a required parameter.\r\n        if (this._viewRepeater) {\r\n            this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), (record) => record.item.data, (change) => {\r\n                if (change.operation === 1 /* INSERTED */ && change.context) {\r\n                    this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            changes.forEachOperation((record, prevIndex, currentIndex) => {\r\n                if (record.previousIndex == null) {\r\n                    const renderRow = record.item;\r\n                    const rowDef = renderRow.rowDef;\r\n                    const context = { $implicit: renderRow.data };\r\n                    this._renderRow(this._rowOutlet, rowDef, currentIndex, context);\r\n                }\r\n                else if (currentIndex == null) {\r\n                    viewContainer.remove(prevIndex);\r\n                }\r\n                else {\r\n                    const view = viewContainer.get(prevIndex);\r\n                    viewContainer.move(view, currentIndex);\r\n                }\r\n            });\r\n        }\r\n        // Update the meta context of a row's context data (index, count, first, last, ...)\r\n        this._updateRowIndexContext();\r\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\r\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\r\n        changes.forEachIdentityChange((record) => {\r\n            const rowView = viewContainer.get(record.currentIndex);\r\n            rowView.context.$implicit = record.item.data;\r\n        });\r\n        this._updateNoDataRow();\r\n        this.updateStickyColumnStyles();\r\n    }\r\n    /** Adds a column definition that was not included as part of the content children. */\r\n    addColumnDef(columnDef) {\r\n        this._customColumnDefs.add(columnDef);\r\n    }\r\n    /** Removes a column definition that was not included as part of the content children. */\r\n    removeColumnDef(columnDef) {\r\n        this._customColumnDefs.delete(columnDef);\r\n    }\r\n    /** Adds a row definition that was not included as part of the content children. */\r\n    addRowDef(rowDef) {\r\n        this._customRowDefs.add(rowDef);\r\n    }\r\n    /** Removes a row definition that was not included as part of the content children. */\r\n    removeRowDef(rowDef) {\r\n        this._customRowDefs.delete(rowDef);\r\n    }\r\n    /** Adds a header row definition that was not included as part of the content children. */\r\n    addHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.add(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Removes a header row definition that was not included as part of the content children. */\r\n    removeHeaderRowDef(headerRowDef) {\r\n        this._customHeaderRowDefs.delete(headerRowDef);\r\n        this._headerRowDefChanged = true;\r\n    }\r\n    /** Adds a footer row definition that was not included as part of the content children. */\r\n    addFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.add(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Removes a footer row definition that was not included as part of the content children. */\r\n    removeFooterRowDef(footerRowDef) {\r\n        this._customFooterRowDefs.delete(footerRowDef);\r\n        this._footerRowDefChanged = true;\r\n    }\r\n    /** Sets a no data row definition that was not included as a part of the content children. */\r\n    setNoDataRow(noDataRow) {\r\n        this._customNoDataRow = noDataRow;\r\n    }\r\n    /**\r\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\r\n     * automatically called when the header row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyHeaderRowStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const thead = tableElement.querySelector('thead');\r\n        if (thead) {\r\n            thead.style.display = headerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\r\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\r\n     * automatically called when the footer row changes its displayed set of columns, or if its\r\n     * sticky input changes. May be called manually for cases where the cell content changes outside\r\n     * of these events.\r\n     */\r\n    updateStickyFooterRowStyles() {\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        const tableElement = this._elementRef.nativeElement;\r\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\r\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\r\n        // required child `row`.\r\n        const tfoot = tableElement.querySelector('tfoot');\r\n        if (tfoot) {\r\n            tfoot.style.display = footerRows.length ? '' : 'none';\r\n        }\r\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\r\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\r\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\r\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\r\n     * sticking to the left and right. Then sticky styles are added for the left and right according\r\n     * to the column definitions for each cell in each row. This is automatically called when\r\n     * the data source provides a new set of data or when a column definition changes its sticky\r\n     * input. May be called manually for cases where the cell content changes outside of these events.\r\n     */\r\n    updateStickyColumnStyles() {\r\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\r\n        const dataRows = this._getRenderedRows(this._rowOutlet);\r\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\r\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\r\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\r\n        // don't need to be cleared unless either the sticky column config changes or one of the row\r\n        // defs change.\r\n        if ((this._isNativeHtmlTable && !this._fixedLayout)\r\n            || this._stickyColumnStylesNeedReset) {\r\n            // Clear the left and right positioning from all columns in the table across all rows since\r\n            // sticky columns span across all table sections (header, data, footer)\r\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\r\n            this._stickyColumnStylesNeedReset = false;\r\n        }\r\n        // Update the sticky styles for each header row depending on the def's sticky state\r\n        headerRows.forEach((headerRow, i) => {\r\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\r\n        });\r\n        // Update the sticky styles for each data row depending on its def's sticky state\r\n        this._rowDefs.forEach(rowDef => {\r\n            // Collect all the rows rendered with this row definition.\r\n            const rows = [];\r\n            for (let i = 0; i < dataRows.length; i++) {\r\n                if (this._renderRows[i].rowDef === rowDef) {\r\n                    rows.push(dataRows[i]);\r\n                }\r\n            }\r\n            this._addStickyColumnStyles(rows, rowDef);\r\n        });\r\n        // Update the sticky styles for each footer row depending on the def's sticky state\r\n        footerRows.forEach((footerRow, i) => {\r\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\r\n        });\r\n        // Reset the dirty state of the sticky input change since it has been used.\r\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\r\n    }\r\n    /**\r\n     * Get the list of RenderRow objects to render according to the current list of data and defined\r\n     * row definitions. If the previous list already contained a particular pair, it should be reused\r\n     * so that the differ equates their references.\r\n     */\r\n    _getAllRenderRows() {\r\n        const renderRows = [];\r\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\r\n        // new cache while unused ones can be picked up by garbage collection.\r\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\r\n        this._cachedRenderRowsMap = new Map();\r\n        // For each data object, get the list of rows that should be rendered, represented by the\r\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            let data = this._data[i];\r\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\r\n            if (!this._cachedRenderRowsMap.has(data)) {\r\n                this._cachedRenderRowsMap.set(data, new WeakMap());\r\n            }\r\n            for (let j = 0; j < renderRowsForData.length; j++) {\r\n                let renderRow = renderRowsForData[j];\r\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\r\n                if (cache.has(renderRow.rowDef)) {\r\n                    cache.get(renderRow.rowDef).push(renderRow);\r\n                }\r\n                else {\r\n                    cache.set(renderRow.rowDef, [renderRow]);\r\n                }\r\n                renderRows.push(renderRow);\r\n            }\r\n        }\r\n        return renderRows;\r\n    }\r\n    /**\r\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\r\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\r\n     * `(T, CdkRowDef)` pair.\r\n     */\r\n    _getRenderRowsForData(data, dataIndex, cache) {\r\n        const rowDefs = this._getRowDefs(data, dataIndex);\r\n        return rowDefs.map(rowDef => {\r\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef) : [];\r\n            if (cachedRenderRows.length) {\r\n                const dataRow = cachedRenderRows.shift();\r\n                dataRow.dataIndex = dataIndex;\r\n                return dataRow;\r\n            }\r\n            else {\r\n                return { data, rowDef, dataIndex };\r\n            }\r\n        });\r\n    }\r\n    /** Update the map containing the content's column definitions. */\r\n    _cacheColumnDefs() {\r\n        this._columnDefsByName.clear();\r\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\r\n        columnDefs.forEach(columnDef => {\r\n            if (this._columnDefsByName.has(columnDef.name) &&\r\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableDuplicateColumnNameError(columnDef.name);\r\n            }\r\n            this._columnDefsByName.set(columnDef.name, columnDef);\r\n        });\r\n    }\r\n    /** Update the list of all available row definitions that can be used. */\r\n    _cacheRowDefs() {\r\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\r\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\r\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\r\n        // After all row definitions are determined, find the row definition to be considered default.\r\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\r\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\r\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMultipleDefaultRowDefsError();\r\n        }\r\n        this._defaultRowDef = defaultRowDefs[0];\r\n    }\r\n    /**\r\n     * Check if the header, data, or footer rows have changed what columns they want to display or\r\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\r\n     * re-render that section.\r\n     */\r\n    _renderUpdatedColumns() {\r\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\r\n        // Force re-render data rows if the list of column definitions have changed.\r\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\r\n        if (dataColumnsChanged) {\r\n            this._forceRenderDataRows();\r\n        }\r\n        // Force re-render header/footer rows if the list of column definitions have changed.\r\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (headerColumnsChanged) {\r\n            this._forceRenderHeaderRows();\r\n        }\r\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\r\n        if (footerColumnsChanged) {\r\n            this._forceRenderFooterRows();\r\n        }\r\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\r\n    }\r\n    /**\r\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\r\n     * render change subscription if one exists. If the data source is null, interpret this by\r\n     * clearing the row outlet. Otherwise start listening for new data.\r\n     */\r\n    _switchDataSource(dataSource) {\r\n        this._data = [];\r\n        if (isDataSource(this.dataSource)) {\r\n            this.dataSource.disconnect(this);\r\n        }\r\n        // Stop listening for data from the previous data source.\r\n        if (this._renderChangeSubscription) {\r\n            this._renderChangeSubscription.unsubscribe();\r\n            this._renderChangeSubscription = null;\r\n        }\r\n        if (!dataSource) {\r\n            if (this._dataDiffer) {\r\n                this._dataDiffer.diff([]);\r\n            }\r\n            this._rowOutlet.viewContainer.clear();\r\n        }\r\n        this._dataSource = dataSource;\r\n    }\r\n    /** Set up a subscription for the data provided by the data source. */\r\n    _observeRenderChanges() {\r\n        // If no data source has been set, there is nothing to observe for changes.\r\n        if (!this.dataSource) {\r\n            return;\r\n        }\r\n        let dataStream;\r\n        if (isDataSource(this.dataSource)) {\r\n            dataStream = this.dataSource.connect(this);\r\n        }\r\n        else if (isObservable(this.dataSource)) {\r\n            dataStream = this.dataSource;\r\n        }\r\n        else if (Array.isArray(this.dataSource)) {\r\n            dataStream = of(this.dataSource);\r\n        }\r\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableUnknownDataSourceError();\r\n        }\r\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy))\r\n            .subscribe(data => {\r\n            this._data = data || [];\r\n            this.renderRows();\r\n        });\r\n    }\r\n    /**\r\n     * Clears any existing content in the header row outlet and creates a new embedded view\r\n     * in the outlet using the header row definition.\r\n     */\r\n    _forceRenderHeaderRows() {\r\n        // Clear the header row outlet if any content exists.\r\n        if (this._headerRowOutlet.viewContainer.length > 0) {\r\n            this._headerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\r\n        this.updateStickyHeaderRowStyles();\r\n    }\r\n    /**\r\n     * Clears any existing content in the footer row outlet and creates a new embedded view\r\n     * in the outlet using the footer row definition.\r\n     */\r\n    _forceRenderFooterRows() {\r\n        // Clear the footer row outlet if any content exists.\r\n        if (this._footerRowOutlet.viewContainer.length > 0) {\r\n            this._footerRowOutlet.viewContainer.clear();\r\n        }\r\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\r\n        this.updateStickyFooterRowStyles();\r\n    }\r\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\r\n    _addStickyColumnStyles(rows, rowDef) {\r\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\r\n            const columnDef = this._columnDefsByName.get(columnName);\r\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnName);\r\n            }\r\n            return columnDef;\r\n        });\r\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\r\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\r\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\r\n    }\r\n    /** Gets the list of rows that have been rendered in the row outlet. */\r\n    _getRenderedRows(rowOutlet) {\r\n        const renderedRows = [];\r\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\r\n            const viewRef = rowOutlet.viewContainer.get(i);\r\n            renderedRows.push(viewRef.rootNodes[0]);\r\n        }\r\n        return renderedRows;\r\n    }\r\n    /**\r\n     * Get the matching row definitions that should be used for this row data. If there is only\r\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\r\n     * predicate that returns true with the data. If none return true, return the default row\r\n     * definition.\r\n     */\r\n    _getRowDefs(data, dataIndex) {\r\n        if (this._rowDefs.length == 1) {\r\n            return [this._rowDefs[0]];\r\n        }\r\n        let rowDefs = [];\r\n        if (this.multiTemplateDataRows) {\r\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\r\n        }\r\n        else {\r\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\r\n            if (rowDef) {\r\n                rowDefs.push(rowDef);\r\n            }\r\n        }\r\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableMissingMatchingRowDefError(data);\r\n        }\r\n        return rowDefs;\r\n    }\r\n    _getEmbeddedViewArgs(renderRow, index) {\r\n        const rowDef = renderRow.rowDef;\r\n        const context = { $implicit: renderRow.data };\r\n        return {\r\n            templateRef: rowDef.template,\r\n            context,\r\n            index,\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\r\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\r\n     * of where to place the new row template in the outlet.\r\n     */\r\n    _renderRow(outlet, rowDef, index, context = {}) {\r\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\r\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\r\n        this._renderCellTemplateForItem(rowDef, context);\r\n        return view;\r\n    }\r\n    _renderCellTemplateForItem(rowDef, context) {\r\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\r\n            if (CdkCellOutlet.mostRecentCellOutlet) {\r\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\r\n            }\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\r\n     * e.g. first/last/even/odd.\r\n     */\r\n    _updateRowIndexContext() {\r\n        const viewContainer = this._rowOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            if (this.multiTemplateDataRows) {\r\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\r\n                context.renderIndex = renderIndex;\r\n            }\r\n            else {\r\n                context.index = this._renderRows[renderIndex].dataIndex;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the column definitions for the provided row def. */\r\n    _getCellTemplates(rowDef) {\r\n        if (!rowDef || !rowDef.columns) {\r\n            return [];\r\n        }\r\n        return Array.from(rowDef.columns, columnId => {\r\n            const column = this._columnDefsByName.get(columnId);\r\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n                throw getTableUnknownColumnError(columnId);\r\n            }\r\n            return rowDef.extractCellTemplate(column);\r\n        });\r\n    }\r\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\r\n    _applyNativeTableSections() {\r\n        const documentFragment = this._document.createDocumentFragment();\r\n        const sections = [\r\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\r\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\r\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\r\n        ];\r\n        for (const section of sections) {\r\n            const element = this._document.createElement(section.tag);\r\n            element.setAttribute('role', 'rowgroup');\r\n            for (const outlet of section.outlets) {\r\n                element.appendChild(outlet.elementRef.nativeElement);\r\n            }\r\n            documentFragment.appendChild(element);\r\n        }\r\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\r\n        this._elementRef.nativeElement.appendChild(documentFragment);\r\n    }\r\n    /**\r\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\r\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\r\n     * `multiTemplateDataRows` or adding/removing row definitions.\r\n     */\r\n    _forceRenderDataRows() {\r\n        this._dataDiffer.diff([]);\r\n        this._rowOutlet.viewContainer.clear();\r\n        this.renderRows();\r\n    }\r\n    /**\r\n     * Checks if there has been a change in sticky states since last check and applies the correct\r\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\r\n     * during a change detection and after the inputs are settled (after content check).\r\n     */\r\n    _checkStickyStates() {\r\n        const stickyCheckReducer = (acc, d) => {\r\n            return acc || d.hasStickyChanged();\r\n        };\r\n        // Note that the check needs to occur for every definition since it notifies the definition\r\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\r\n        // remaining definitions and leave them in an unchecked state.\r\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyHeaderRowStyles();\r\n        }\r\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\r\n            this.updateStickyFooterRowStyles();\r\n        }\r\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\r\n            this._stickyColumnStylesNeedReset = true;\r\n            this.updateStickyColumnStyles();\r\n        }\r\n    }\r\n    /**\r\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\r\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\r\n     * stickiness when directionality changes.\r\n     */\r\n    _setupStickyStyler() {\r\n        const direction = this._dir ? this._dir.value : 'ltr';\r\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\r\n        (this._dir ? this._dir.change : of())\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(value => {\r\n            this._stickyStyler.direction = value;\r\n            this.updateStickyColumnStyles();\r\n        });\r\n    }\r\n    /** Filters definitions that belong to this table from a QueryList. */\r\n    _getOwnDefs(items) {\r\n        return items.filter(item => !item._table || item._table === this);\r\n    }\r\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\r\n    _updateNoDataRow() {\r\n        const noDataRow = this._customNoDataRow || this._noDataRow;\r\n        if (noDataRow) {\r\n            const shouldShow = this._rowOutlet.viewContainer.length === 0;\r\n            if (shouldShow !== this._isShowingNoDataRow) {\r\n                const container = this._noDataRowOutlet.viewContainer;\r\n                shouldShow ? container.createEmbeddedView(noDataRow.templateRef) : container.clear();\r\n                this._isShowingNoDataRow = shouldShow;\r\n            }\r\n        }\r\n    }\r\n}\r\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER, 8), ɵngcc0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ViewportRuler, 8)); };\r\nCdkTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\r\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\r\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(DataRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(HeaderRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(FooterRowOutlet, 7);\r\n        ɵngcc0.ɵɵviewQuery(NoDataRowOutlet, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._noDataRowOutlet = _t.first);\r\n    } }, hostAttrs: [1, \"cdk-table\"], hostVars: 2, hostBindings: function CdkTable_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\r\n    } }, inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\r\n            { provide: CDK_TABLE, useExisting: CdkTable },\r\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n        ])], ngContentSelectors: _c1, decls: 6, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef(_c0);\r\n        ɵngcc0.ɵɵprojection(0);\r\n        ɵngcc0.ɵɵprojection(1, 1);\r\n        ɵngcc0.ɵɵelementContainer(2, 0);\r\n        ɵngcc0.ɵɵelementContainer(3, 1);\r\n        ɵngcc0.ɵɵelementContainer(4, 2);\r\n        ɵngcc0.ɵɵelementContainer(5, 3);\r\n    } }, directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], encapsulation: 2 });\r\nCdkTable.ctorParameters = () => [\r\n    { type: IterableDiffers },\r\n    { type: ChangeDetectorRef },\r\n    { type: ElementRef },\r\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\r\n    { type: Directionality, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: Platform },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_VIEW_REPEATER_STRATEGY,] }] },\r\n    { type: _CoalescedStyleScheduler, decorators: [{ type: Optional }, { type: Inject, args: [_COALESCED_STYLE_SCHEDULER,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [STICKY_POSITIONING_LISTENER,] }] },\r\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\r\n];\r\nCdkTable.propDecorators = {\r\n    trackBy: [{ type: Input }],\r\n    dataSource: [{ type: Input }],\r\n    multiTemplateDataRows: [{ type: Input }],\r\n    fixedLayout: [{ type: Input }],\r\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\r\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\r\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\r\n    _noDataRowOutlet: [{ type: ViewChild, args: [NoDataRowOutlet, { static: true },] }],\r\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\r\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\r\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                },] }],\r\n    _noDataRow: [{ type: ContentChild, args: [CdkNoDataRow,] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTable, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-table, table[cdk-table]',\r\n                exportAs: 'cdkTable',\r\n                template: CDK_TABLE_TEMPLATE,\r\n                host: {\r\n                    'class': 'cdk-table',\r\n                    '[class.cdk-table-fixed-layout]': 'fixedLayout'\r\n                },\r\n                encapsulation: ViewEncapsulation.None,\r\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\r\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\r\n                // declared elsewhere, they are checked when their declaration points are checked.\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default,\r\n                providers: [\r\n                    { provide: CDK_TABLE, useExisting: CdkTable },\r\n                    { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\r\n                    { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\r\n                    // Prevent nested tables from seeing this table's StickyPositioningListener.\r\n                    { provide: STICKY_POSITIONING_LISTENER, useValue: null },\r\n                ],\r\n                styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['role']\r\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [DOCUMENT]\r\n            }] }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_VIEW_REPEATER_STRATEGY]\r\n            }] }, { type: _CoalescedStyleScheduler, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [_COALESCED_STYLE_SCHEDULER]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: SkipSelf\r\n            }, {\r\n                type: Inject,\r\n                args: [STICKY_POSITIONING_LISTENER]\r\n            }] }, { type: ɵngcc3.ViewportRuler, decorators: [{\r\n                type: Optional\r\n            }] }]; }, { trackBy: [{\r\n            type: Input\r\n        }], dataSource: [{\r\n            type: Input\r\n        }], multiTemplateDataRows: [{\r\n            type: Input\r\n        }], fixedLayout: [{\r\n            type: Input\r\n        }], _rowOutlet: [{\r\n            type: ViewChild,\r\n            args: [DataRowOutlet, { static: true }]\r\n        }], _headerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [HeaderRowOutlet, { static: true }]\r\n        }], _footerRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [FooterRowOutlet, { static: true }]\r\n        }], _noDataRowOutlet: [{\r\n            type: ViewChild,\r\n            args: [NoDataRowOutlet, { static: true }]\r\n        }], _contentColumnDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkColumnDef, { descendants: true }]\r\n        }], _contentRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkRowDef, { descendants: true }]\r\n        }], _contentHeaderRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkHeaderRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _contentFooterRowDefs: [{\r\n            type: ContentChildren,\r\n            args: [CdkFooterRowDef, {\r\n                    descendants: true\r\n                }]\r\n        }], _noDataRow: [{\r\n            type: ContentChild,\r\n            args: [CdkNoDataRow]\r\n        }] }); })();\r\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\r\nfunction mergeArrayAndSet(array, set) {\r\n    return array.concat(Array.from(set));\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Column that simply shows text content for the header and row cells. Assumes that the table\r\n * is using the native table implementation (`<table>`).\r\n *\r\n * By default, the name of this column will be the header text and data property accessor.\r\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\r\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\r\n * input.\r\n */\r\nclass CdkTextColumn {\r\n    constructor(\r\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\r\n    // for better error reporting.\r\n    // tslint:disable-next-line: lightweight-tokens\r\n    _table, _options) {\r\n        this._table = _table;\r\n        this._options = _options;\r\n        /** Alignment of the cell values. */\r\n        this.justify = 'start';\r\n        this._options = _options || {};\r\n    }\r\n    /** Column name that should be used to reference this column. */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        this._name = name;\r\n        // With Ivy, inputs can be initialized before static query results are\r\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\r\n        this._syncColumnDefName();\r\n    }\r\n    ngOnInit() {\r\n        this._syncColumnDefName();\r\n        if (this.headerText === undefined) {\r\n            this.headerText = this._createDefaultHeaderText();\r\n        }\r\n        if (!this.dataAccessor) {\r\n            this.dataAccessor =\r\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\r\n        }\r\n        if (this._table) {\r\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\r\n            // since the columnDef will not pick up its content by the time the table finishes checking\r\n            // its content and initializing the rows.\r\n            this.columnDef.cell = this.cell;\r\n            this.columnDef.headerCell = this.headerCell;\r\n            this._table.addColumnDef(this.columnDef);\r\n        }\r\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            throw getTableTextColumnMissingParentTableError();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this._table) {\r\n            this._table.removeColumnDef(this.columnDef);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a default header text. Use the options' header text transformation function if one\r\n     * has been provided. Otherwise simply capitalize the column name.\r\n     */\r\n    _createDefaultHeaderText() {\r\n        const name = this.name;\r\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getTableTextColumnMissingNameError();\r\n        }\r\n        if (this._options && this._options.defaultHeaderTextTransform) {\r\n            return this._options.defaultHeaderTextTransform(name);\r\n        }\r\n        return name[0].toUpperCase() + name.slice(1);\r\n    }\r\n    /** Synchronizes the column definition name with the text column name. */\r\n    _syncColumnDefName() {\r\n        if (this.columnDef) {\r\n            this.columnDef.name = this.name;\r\n        }\r\n    }\r\n}\r\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\r\nCdkTextColumn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(CdkColumnDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkCellDef, 7);\r\n        ɵngcc0.ɵɵviewQuery(CdkHeaderCellDef, 7);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\r\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\r\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\r\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\r\n        ɵngcc0.ɵɵelementContainerEnd();\r\n    } }, directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell], encapsulation: 2 });\r\nCdkTextColumn.ctorParameters = () => [\r\n    { type: CdkTable, decorators: [{ type: Optional }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\r\n];\r\nCdkTextColumn.propDecorators = {\r\n    name: [{ type: Input }],\r\n    headerText: [{ type: Input }],\r\n    dataAccessor: [{ type: Input }],\r\n    justify: [{ type: Input }],\r\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\r\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\r\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\r\n};\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'cdk-text-column',\r\n                template: `\r\n    <ng-container cdkColumnDef>\r\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\r\n        {{headerText}}\r\n      </th>\r\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\r\n        {{dataAccessor(data, name)}}\r\n      </td>\r\n    </ng-container>\r\n  `,\r\n                encapsulation: ViewEncapsulation.None,\r\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\r\n                // to the table to be inserted into its view. This is problematic when change detection runs since\r\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\r\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\r\n                // an ExpressionChangedAfterItHasBeenCheckedError).\r\n                // tslint:disable-next-line:validate-decorators\r\n                changeDetection: ChangeDetectionStrategy.Default\r\n            }]\r\n    }], function () { return [{ type: CdkTable, decorators: [{\r\n                type: Optional\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [TEXT_COLUMN_OPTIONS]\r\n            }] }]; }, { justify: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], headerText: [{\r\n            type: Input\r\n        }], dataAccessor: [{\r\n            type: Input\r\n        }], columnDef: [{\r\n            type: ViewChild,\r\n            args: [CdkColumnDef, { static: true }]\r\n        }], cell: [{\r\n            type: ViewChild,\r\n            args: [CdkCellDef, { static: true }]\r\n        }], headerCell: [{\r\n            type: ViewChild,\r\n            args: [CdkHeaderCellDef, { static: true }]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst EXPORTED_DECLARATIONS = [\r\n    CdkTable,\r\n    CdkRowDef,\r\n    CdkCellDef,\r\n    CdkCellOutlet,\r\n    CdkHeaderCellDef,\r\n    CdkFooterCellDef,\r\n    CdkColumnDef,\r\n    CdkCell,\r\n    CdkRow,\r\n    CdkHeaderCell,\r\n    CdkFooterCell,\r\n    CdkHeaderRow,\r\n    CdkHeaderRowDef,\r\n    CdkFooterRow,\r\n    CdkFooterRowDef,\r\n    DataRowOutlet,\r\n    HeaderRowOutlet,\r\n    FooterRowOutlet,\r\n    CdkTextColumn,\r\n    CdkNoDataRow,\r\n    NoDataRowOutlet,\r\n];\r\nclass CdkTableModule {\r\n}\r\nCdkTableModule.ɵfac = function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); };\r\nCdkTableModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\r\nCdkTableModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ScrollingModule]] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: EXPORTED_DECLARATIONS,\r\n                declarations: EXPORTED_DECLARATIONS,\r\n                imports: [ScrollingModule]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; }, imports: function () { return [ScrollingModule]; }, exports: function () { return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet]; } }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\r\n\r\n"],"names":["InjectionToken","inject","EventEmitter","ɵɵdefineInjectable","ɵɵinject","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","ɵngcc0","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","constructor","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵfac","Directionality_Factory","t","ɵprov","token","ngDevMode","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","Dir_Factory","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","inputs","outputs","exportAs","features","ɵɵProvidersFeature","provide","useExisting","BidiModule","BidiModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","ɵangular_material_src_cdk_bidi_bidi_a","ElementRef","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","nativeElement","coerceStringArray","separator","result","sourceValues","split","sourceValue","trimmedString","trim","push","isObservable","of","Subject","DataSource","isDataSource","connect","ArrayDataSource","_data","disconnect","_DisposeViewRepeaterStrategy","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","remove","get","move","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","destroy","cachedView","_insertViewFromCache","$implicit","undefined","viewArgs","detachedView","_maybeCacheView","length","indexOf","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","forEach","_markSelected","selected","_selected","from","values","select","_verifyValueAssignment","_emitChangeEvent","deselect","_unmarkSelected","toggle","isSelected","clear","_unmarkAll","has","isEmpty","size","hasValue","sort","predicate","isMultipleSelection","next","source","added","removed","add","delete","getMultipleValuesInSingleSelectionError","Error","UniqueSelectionDispatcher","_listeners","notify","id","name","listener","listen","filter","registered","UniqueSelectionDispatcher_Factory","_VIEW_REPEATER_STRATEGY","PLATFORM_ID","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","createElement","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","Object","defineProperty","normalizePassiveListenerOptions","options","capture","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","style","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","scrollLeft","parentNode","removeChild","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","element","rootNode","getRootNode","ShadowRoot","forwardRef","NgZone","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","ViewChild","ViewContainerRef","TemplateRef","IterableDiffers","SkipSelf","Observable","fromEvent","animationFrameScheduler","asapScheduler","Subscription","distinctUntilChanged","auditTime","takeUntil","startWith","pairwise","switchMap","shareReplay","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","pipe","_viewport","_itemSize","_minBufferPx","_maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","Math","ceil","newVisibleIndex","max","min","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","ngOnChanges","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","ɵɵNgOnChangesFeature","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","Map","register","scrollable","set","elementScrolled","subscribe","deregister","scrollableReference","unsubscribe","scrolled","auditTimeInMs","observer","_addGlobalListener","subscription","_removeGlobalListener","_","container","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","getElementRef","parentElement","runOutsideAngular","ScrollDispatcher_Factory","CdkScrollable","elementRef","scrollDispatcher","ngZone","_destroyed","_elementScrolled","ngOnInit","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","ɵɵdirectiveInject","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_changeListener","event","_updateViewportSize","removeEventListener","_viewportSize","output","getViewportRect","scrollPosition","getViewportScrollPosition","documentRect","getBoundingClientRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","run","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","EMPTY","checkViewportSize","orientation","_calculateSpacerSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","_doChangeDetection","range","getOffsetToRenderedContentStart","offset","to","isHorizontal","axis","axisDirection","transform","_renderedContentTransform","measureRenderedContentSize","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","CdkVirtualScrollViewport_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ɵɵclassProp","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","styles","encapsulation","changeDetection","getOffset","direction","node","rect","CdkVirtualForOf","_viewContainerRef","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_onRenderedDataChange","cdkVirtualForOf","_cdkVirtualForOf","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","item","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","renderedStartIndex","rangeLen","firstNode","lastNode","i","rootNodes","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","slice","find","create","oldDs","newDs","count","_updateComputedContextProperties","detectChanges","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","last","even","odd","CdkVirtualForOf_Factory","useClass","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","imports","CdkTextColumn_th_1_Template","ɵɵtext","ctx_r0","ɵɵnextContext","justify","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","ctx_r1","dataAccessor","ContentChild","EmbeddedViewRef","Attribute","ContentChildren","BehaviorSubject","take","mixinHasStickyInput","base","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","cell","headerCell","footerCell","BaseCdkCell","columnDef","classList","className","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","schedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","isStable","onStable","_CoalescedStyleScheduler_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_columnsDiffer","columns","currentValue","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","ɵɵelementContainer","directives","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","nodeType","ELEMENT_NODE","children","_scheduleStyleChanges","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","map","reverse","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","borderedRowIndex","_b","isBorderedRowIndex","stickyHeaderRowsUpdated","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_elementRef","role","_stickyPositioningListener","_viewportRuler","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","MAX_VALUE","nodeName","trackBy","_trackByFn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_renderCellTemplateForItem","rowDef","prevIndex","renderRow","_renderRow","_updateRowIndexContext","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","j","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","columnName","rowOutlet","renderedRows","viewRef","outlet","cellTemplate","_getCellTemplates","renderIndex","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","stickyCheckReducer","d","items","_noDataRow","shouldShow","CdkTable_Factory","ɵɵinjectAttribute","CdkTable_ContentQueries","CdkTable_Query","CdkTable_HostBindings","useValue","CdkTable_Template","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory"],"sourceRoot":"webpack:///"}