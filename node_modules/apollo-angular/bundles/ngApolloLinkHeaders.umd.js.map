{"version":3,"file":"ngApolloLinkHeaders.umd.js","sources":["../../headers/src/index.ts","../../headers/src/ngApolloLinkHeaders.ts"],"names":["ApolloLink","HttpHeaders"],"mappings":";;;;;;QAGa,WAAW,GAAG;AACrB,QAAJ,OAAO,IAAIA,eAAU,CAAC,UAAC,SAAoB,EAAE,OAAiB;AAAI,YACzD,IAAA,UAAU,GAAgB,SAAS,WAAzB,EAAE,UAAU,GAAI,SAAS,WAAb,CAAc;AAC/C,YAAI,IAAM,OAAO,GAAG,UAAU,EAAE,CAAC;AACjC,YACI,IAAI,OAAO,CAAC,OAAO,EAAE;AACzB,gBAAM,UAAU,iCACL,OAAO,KACV,OAAO,EAAE,IAAIC,gBAAW,CAAC,OAAO,CAAC,OAAO,CAAC,IACzC,CAAC;AACT,aAAK;AACL,YACI,OAAO,OAAO,CAAC,SAAS,CAAC,CAAC;AAC9B,SAAG,CAAC,CAAC;AACL,IAAA;AACA;AAAC,IClBD;AACA;AAEA;AACO;AAAC;AACc;AAAC;AAAmE;AAAC;AAAM","sourcesContent":["import {HttpHeaders} from '@angular/common/http';\nimport {ApolloLink, Operation, NextLink} from '@apollo/client/core';\n\nexport const httpHeaders = () => {\n  return new ApolloLink((operation: Operation, forward: NextLink) => {\n    const {getContext, setContext} = operation;\n    const context = getContext();\n\n    if (context.headers) {\n      setContext({\n        ...context,\n        headers: new HttpHeaders(context.headers),\n      });\n    }\n\n    return forward(operation);\n  });\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}