import { Injectable } from '@angular/core';
import { Apollo } from './apollo';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './apollo';
export class Query {
    constructor(apollo) {
        this.apollo = apollo;
        this.client = 'default';
    }
    watch(variables, options) {
        return this.apollo.use(this.client).watchQuery(Object.assign(Object.assign({}, options), { variables, query: this.document }));
    }
    fetch(variables, options) {
        return this.apollo.use(this.client).query(Object.assign(Object.assign({}, options), { variables, query: this.document }));
    }
}
Query.ɵfac = function Query_Factory(t) { return new (t || Query)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo)); };
Query.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Query, factory: Query.ɵfac });
Query.ctorParameters = () => [
    { type: Apollo }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Query, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Apollo }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3dvcmtzcGFjZXMvYXBvbGxvLWFuZ3VsYXIvcGFja2FnZXMvYXBvbGxvLWFuZ3VsYXIvc3JjL3F1ZXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFNekMsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFVBQVUsQ0FBQzs7O0FBS2hDLE1BQU0sT0FBTyxLQUFLO0FBQUcsSUFJbkIsWUFBc0IsTUFBYztBQUFJLFFBQWxCLFdBQU0sR0FBTixNQUFNLENBQVE7QUFBQyxRQUY5QixXQUFNLEdBQUcsU0FBUyxDQUFDO0FBQzVCLElBQ3lDLENBQUM7QUFDMUMsSUFDUyxLQUFLLENBQ1YsU0FBYSxFQUNiLE9BQXNDO0FBQ3hDLFFBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxpQ0FDekMsT0FBTyxLQUNWLFNBQVMsRUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFDcEIsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUNILElBQ1MsS0FBSyxDQUNWLFNBQWEsRUFDYixPQUFpQztBQUNuQyxRQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssaUNBQ3BDLE9BQU8sS0FDVixTQUFTLEVBQ1QsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLElBQ3BCLENBQUM7QUFDUCxJQUFFLENBQUM7QUFDSDtpQ0E1QkMsVUFBVTs2RkFDVDtBQUFDO0FBQStCLFlBTDFCLE1BQU07QUFBRzs7O3VFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEb2N1bWVudE5vZGV9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHtBcG9sbG9RdWVyeVJlc3VsdH0gZnJvbSAnQGFwb2xsby9jbGllbnQvY29yZSc7XG5pbXBvcnQge1R5cGVkRG9jdW1lbnROb2RlfSBmcm9tICdAZ3JhcGhxbC10eXBlZC1kb2N1bWVudC1ub2RlL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtBcG9sbG99IGZyb20gJy4vYXBvbGxvJztcbmltcG9ydCB7UXVlcnlSZWZ9IGZyb20gJy4vcXVlcnktcmVmJztcbmltcG9ydCB7V2F0Y2hRdWVyeU9wdGlvbnNBbG9uZSwgUXVlcnlPcHRpb25zQWxvbmUsIEVtcHR5T2JqZWN0fSBmcm9tICcuL3R5cGVzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFF1ZXJ5PFQgPSB7fSwgViA9IEVtcHR5T2JqZWN0PiB7XG4gIHB1YmxpYyByZWFkb25seSBkb2N1bWVudDogRG9jdW1lbnROb2RlIHwgVHlwZWREb2N1bWVudE5vZGU8VCwgVj47XG4gIHB1YmxpYyBjbGllbnQgPSAnZGVmYXVsdCc7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGFwb2xsbzogQXBvbGxvKSB7fVxuXG4gIHB1YmxpYyB3YXRjaChcbiAgICB2YXJpYWJsZXM/OiBWLFxuICAgIG9wdGlvbnM/OiBXYXRjaFF1ZXJ5T3B0aW9uc0Fsb25lPFYsIFQ+LFxuICApOiBRdWVyeVJlZjxULCBWPiB7XG4gICAgcmV0dXJuIHRoaXMuYXBvbGxvLnVzZSh0aGlzLmNsaWVudCkud2F0Y2hRdWVyeTxULCBWPih7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdmFyaWFibGVzLFxuICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgZmV0Y2goXG4gICAgdmFyaWFibGVzPzogVixcbiAgICBvcHRpb25zPzogUXVlcnlPcHRpb25zQWxvbmU8ViwgVD4sXG4gICk6IE9ic2VydmFibGU8QXBvbGxvUXVlcnlSZXN1bHQ8VD4+IHtcbiAgICByZXR1cm4gdGhpcy5hcG9sbG8udXNlKHRoaXMuY2xpZW50KS5xdWVyeTxULCBWPih7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdmFyaWFibGVzLFxuICAgICAgcXVlcnk6IHRoaXMuZG9jdW1lbnQsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==