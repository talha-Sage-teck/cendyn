{"version":3,"sources":["../../projects/ng-dynamic-component/src/lib/io/event-argument.ts","../../projects/ng-dynamic-component/src/lib/component-injector/token.ts","../../projects/ng-dynamic-component/src/lib/component-injector/component-outlet-injector.directive.ts","../../projects/ng-dynamic-component/src/lib/component-injector/component-outlet-injector.module.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-dynamic-component/src/lib/util.ts","../../projects/ng-dynamic-component/src/lib/io/io.service.ts","../../projects/ng-dynamic-component/src/lib/dynamic-io/dynamic-io.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-io/dynamic-io.module.ts","../../../projects/ng-dynamic-component/src/lib/dynamic.component.ts","../../../projects/ng-dynamic-component/src/lib/dynamic.module.ts","../../projects/ng-dynamic-component/src/lib/dynamic-attributes/dynamic-attributes.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-attributes/dynamic-attributes.module.ts","../../projects/ng-dynamic-component/src/lib/io/io-factory.service.ts","../../projects/ng-dynamic-component/src/lib/window-ref/window-ref.service.ts","../../projects/ng-dynamic-component/src/lib/window-ref/window-ref-browser.ts","../../projects/ng-dynamic-component/src/lib/dynamic-directives/dynamic-directives.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-directives/dynamic-directives.module.ts"],"names":["defaultEventArgumentFactory","EventArgumentToken","InjectionToken","providedIn","factory","DynamicComponentInjectorToken","COMPONENT_INJECTOR","ComponentOutletInjectorDirective","componentOutlet","this","Object","defineProperty","prototype","_componentRef","Directive","args","selector","exportAs","providers","provide","useExisting","NgComponentOutlet","decorators","type","Host","NgModule","imports","CommonModule","exports","declarations","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","createNewChange","val","SimpleChange","undefined","noop","IoService","differs","cfr","eventArgument","checkInit","failInit","lastComponentInst","inputsDiffer","find","compFactory","outputsShouldDisconnect$","Subject","outputsChanged","compInjector","componentRef","compRef","instance","componentInst","injector","get","ChangeDetectorRef","ngOnDestroy","_disconnectOutputs","init","componentInjector","options","trackOutputChanges","outputsDiffer_1","outputs","diff","update","inputs","inputsChanged","updateIO","compChanged","componentInstChanged","inputsChanges","_getInputsChanges","_updateInputChanges","updateInputs","lastInputChanges","bindOutputs","maybeUpdate","isNotFirstChange","isFirstChange","_updateCompFactory","compInst","_resolveInputs","keys","forEach","p","compCdr","markForCheck","notifyOnInputChanges","_this","_resolveOutputs","filter","pipe","takeUntil","subscribe","event","changes","forceFirstChanges","ngOnChanges","_collectFirstChanges","differ","_collectChangesFromDiffer","prop","_resolveChanges","forEachAddedItem","record","key","currentValue","forEachChangedItem","prevVal","previousValue","_resolveCompFactory","resolveComponentFactory","componentType","constructor","_remapIO","_processOutputs","processedOutputs","outputExpr","_processOutputArgs","output","handler","apply","map","arg","io","mapping","newIO","newKey","_findPropByTplInMapping","tplName","mapping_1","mapping_1_1","templateName","propName","Error","Injectable","KeyValueDiffers","ComponentFactoryResolver","Inject","DynamicIoDirective","ioService","ndcDynamicInputs","ngComponentOutletNdcDynamicInputs","ndcDynamicOutputs","ngComponentOutletNdcDynamicOutputs","ngDoCheck","Optional","Input","ComponentOutletInjectorModule","DynamicComponent","vcr","ndcDynamicCreated","EventEmitter","ndcDynamicComponent","createDynamicComponent","clear","createComponent","_resolveInjector","ndcDynamicContent","emit","ndcDynamicInjector","ndcDynamicProviders","Injector","parent","Component","template","ViewContainerRef","Output","DynamicIoModule","DynamicAttributesDirective","renderer","attrsDiffer","ndcDynamicAttributes","ngComponentOutletNdcDynamicAttributes","_a","location","nativeElement","lastCompType","_compType","isCompChanged","_isCompChanged","_attributes","lastAttrActions","_changesToAttrActions","_updateAttributes","setAttribute","name","namespace","_nativeElement","removeAttribute","actions","set","remove","attrActions","forEachRemovedItem","Renderer2","IoFactoryService","WindowRefToken","window","nativeWindow","DynamicDirectivesDirective","iterableDiffers","ioFactoryService","windowRef","ndcDynamicDirectivesCreated","dirRef","Map","dirIo","dirsDiffer","_","def","ndcDynamicDirectives","ngComponentOutletNdcDynamicDirectives","lastCompInstance","compInstance","Reflect","maybeDestroyDirectives","dirsChanges","directives","updateDirectives","processDirChanges","destroyAllDirectives","_c","item","destroyDirective","createdDirs","initDirective","Boolean","dir","updateDirective","dirDef","has","createDirective","hostInjector","hostComponent","hostView","changeDetectorRef","onDestroy","initDirIO","callInitHooks","destroyDirRef","delete","dirToCompDef","destroy","dirType","useClass","deps","resolveDirParamTypes","ElementRef","useValue","ctor","_b","ctorParameters","param","extractNgParamTypes","reflect","getMetadata","obj","callHook","hook","IterableDiffers","WindowRefService"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport function defaultEventArgumentFactory() {\n  return '$event';\n}\n\nexport const EventArgumentToken = new InjectionToken<string>('EventArgument', {\n  providedIn: 'root',\n  factory: defaultEventArgumentFactory,\n});\n","import { ComponentRef, InjectionToken } from '@angular/core';\n\nexport interface DynamicComponentInjector {\n  componentRef: ComponentRef<any> | null;\n}\n\n/**\n * @deprecated Since v6.0.0 - Use {@link DynamicComponentInjector} instead\n */\nexport type ComponentInjector = DynamicComponentInjector;\n\nexport const DynamicComponentInjectorToken = new InjectionToken<\n  DynamicComponentInjector\n>('DynamicComponentInjector');\n\n/**\n * @deprecated Since v6.0.0 - Use {@link DynamicComponentInjectorToken} instead\n * and provide component class via `useExisting` instead of `useValue`\n */\nexport const COMPONENT_INJECTOR = DynamicComponentInjectorToken;\n","import { NgComponentOutlet } from '@angular/common';\nimport { ComponentRef, Directive, Host } from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from './token';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ngComponentOutlet]',\n  exportAs: 'ndcComponentOutletInjector',\n  providers: [\n    {\n      provide: DynamicComponentInjectorToken,\n      useExisting: ComponentOutletInjectorDirective,\n    },\n  ],\n})\nexport class ComponentOutletInjectorDirective\n  implements DynamicComponentInjector {\n  get componentRef(): ComponentRef<any> {\n    // NOTE: Accessing private APIs of Angular\n    return (this.componentOutlet as any)._componentRef;\n  }\n\n  constructor(@Host() private componentOutlet: NgComponentOutlet) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from './component-outlet-injector.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ComponentOutletInjectorDirective],\n  declarations: [ComponentOutletInjectorDirective],\n})\nexport class ComponentOutletInjectorModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { KeyValueChangeRecord, SimpleChange, Type } from '@angular/core';\n\nexport type KeyValueChangeRecordAny = KeyValueChangeRecord<any, any>;\n\nexport function createNewChange(val: any): SimpleChange {\n  return new SimpleChange(undefined, val, true);\n}\n\nexport function createChange(val: any, prevVal: any): SimpleChange {\n  return new SimpleChange(prevVal, val, false);\n}\n\nexport function noop(): void {}\n\nexport function getCtorParamTypes(\n  ctor: any,\n  reflect: { getMetadata: (type: string, obj: object) => any[] },\n): any[] {\n  return reflect.getMetadata('design:paramtypes', ctor);\n}\n\n/**\n * Extract type arguments from Angular Directive/Component\n */\nexport function extractNgParamTypes(type: Type<any>): any[] | undefined {\n  // NOTE: Accessing private APIs of Angular\n  return (type as any)?.ctorParameters?.()?.map(param => param.type);\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  KeyValueChanges,\n  KeyValueDiffers,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DynamicComponentInjector } from '../component-injector/token';\nimport { createChange, createNewChange, noop } from '../util';\nimport { EventArgumentToken } from './event-argument';\nimport { EventHandler, InputsType, OutputsType, OutputWithArgs } from './types';\n\nexport interface IOMapInfo {\n  propName: string;\n  templateName: string;\n}\nexport type IOMappingList = IOMapInfo[];\nexport type KeyValueChangesAny = KeyValueChanges<any, any>;\n\nexport interface IoInitOptions {\n  trackOutputChanges?: boolean;\n}\n\ninterface OutputsTypeProcessed extends OutputsType {\n  [k: string]: EventHandler;\n}\n\n@Injectable()\nexport class IoService implements OnDestroy {\n  private checkInit = this.failInit;\n\n  private lastComponentInst: any = null;\n  private lastInputChanges: SimpleChanges;\n  private inputsDiffer = this.differs.find({}).create();\n  private compFactory: ComponentFactory<any> | null = null;\n  private outputsShouldDisconnect$ = new Subject<void>();\n\n  private inputs: InputsType;\n  private outputs: OutputsType;\n  private compInjector: DynamicComponentInjector;\n  private outputsChanged: (outputs: OutputsType) => boolean = () => false;\n\n  private get compRef() {\n    return this.compInjector.componentRef;\n  }\n\n  private get componentInst() {\n    return this.compRef ? this.compRef.instance : null;\n  }\n\n  private get componentInstChanged(): boolean {\n    if (this.lastComponentInst !== this.componentInst) {\n      this.lastComponentInst = this.componentInst;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private get compCdr(): ChangeDetectorRef {\n    // tslint:disable-next-line: deprecation\n    return this.compRef ? this.compRef.injector.get(ChangeDetectorRef) : null;\n  }\n\n  constructor(\n    private differs: KeyValueDiffers,\n    private cfr: ComponentFactoryResolver,\n    @Inject(EventArgumentToken)\n    private eventArgument: string,\n  ) {}\n\n  ngOnDestroy(): void {\n    this._disconnectOutputs();\n  }\n\n  init(\n    componentInjector: DynamicComponentInjector,\n    options: IoInitOptions = {},\n  ) {\n    this.checkInit = componentInjector ? noop : this.failInit;\n    this.compInjector = componentInjector;\n\n    if (options.trackOutputChanges) {\n      const outputsDiffer = this.differs.find({}).create();\n      this.outputsChanged = outputs => !!outputsDiffer.diff(outputs);\n    }\n  }\n\n  update(\n    inputs: InputsType,\n    outputs: OutputsType,\n    inputsChanged: boolean,\n    outputsChanged: boolean,\n  ) {\n    this.checkInit();\n    this.updateIO(inputs, outputs);\n\n    const compChanged = this.componentInstChanged;\n\n    if (compChanged || inputsChanged) {\n      const inputsChanges = this._getInputsChanges();\n      if (inputsChanges) {\n        this._updateInputChanges(inputsChanges);\n      }\n      this.updateInputs(compChanged || !this.lastInputChanges);\n    }\n\n    if (compChanged || outputsChanged) {\n      this.bindOutputs();\n    }\n  }\n\n  maybeUpdate() {\n    this.checkInit();\n\n    if (this.componentInstChanged) {\n      this.updateInputs(true);\n      this.bindOutputs();\n      return;\n    }\n\n    if (this.outputsChanged(this.outputs)) {\n      this.bindOutputs();\n    }\n\n    if (!this.inputs) {\n      return;\n    }\n\n    const inputsChanges = this._getInputsChanges();\n\n    if (inputsChanges) {\n      const isNotFirstChange = !!this.lastInputChanges;\n      this._updateInputChanges(inputsChanges);\n\n      if (isNotFirstChange) {\n        this.updateInputs();\n      }\n    }\n  }\n\n  private updateIO(inputs: InputsType, outputs: OutputsType) {\n    this.inputs = inputs;\n    this.outputs = outputs;\n  }\n\n  private updateInputs(isFirstChange = false) {\n    if (isFirstChange) {\n      this._updateCompFactory();\n    }\n\n    const compInst = this.componentInst;\n    let inputs = this.inputs;\n\n    if (!inputs || !compInst) {\n      return;\n    }\n\n    inputs = this._resolveInputs(inputs);\n\n    Object.keys(inputs).forEach(p => (compInst[p] = inputs[p]));\n\n    // Mark component for check to re-render with new inputs\n    if (this.compCdr) {\n      this.compCdr.markForCheck();\n    }\n\n    this.notifyOnInputChanges(this.lastInputChanges, isFirstChange);\n  }\n\n  private bindOutputs() {\n    this._disconnectOutputs();\n\n    const compInst = this.componentInst;\n    let outputs = this.outputs;\n\n    if (!outputs || !compInst) {\n      return;\n    }\n\n    outputs = this._resolveOutputs(outputs);\n\n    Object.keys(outputs)\n      .filter(p => compInst[p])\n      .forEach(p =>\n        compInst[p]\n          .pipe(takeUntil(this.outputsShouldDisconnect$))\n          .subscribe((event: any) => (outputs[p] as EventHandler)(event)),\n      );\n  }\n\n  private notifyOnInputChanges(\n    changes: SimpleChanges = {},\n    forceFirstChanges: boolean,\n  ) {\n    // Exit early if component not interested to receive changes\n    if (!this.componentInst.ngOnChanges) {\n      return;\n    }\n\n    if (forceFirstChanges) {\n      changes = this._collectFirstChanges();\n    }\n\n    this.componentInst.ngOnChanges(changes);\n  }\n\n  private _disconnectOutputs() {\n    this.outputsShouldDisconnect$.next();\n  }\n\n  private _getInputsChanges(): KeyValueChangesAny {\n    return this.inputsDiffer.diff(this.inputs);\n  }\n\n  private _updateInputChanges(differ: KeyValueChangesAny) {\n    this.lastInputChanges = this._collectChangesFromDiffer(differ);\n  }\n\n  private _collectFirstChanges(): SimpleChanges {\n    const changes = {} as SimpleChanges;\n    const inputs = this.inputs;\n\n    Object.keys(inputs).forEach(\n      prop => (changes[prop] = createNewChange(inputs[prop])),\n    );\n\n    return this._resolveChanges(changes);\n  }\n\n  private _collectChangesFromDiffer(differ: KeyValueChangesAny): SimpleChanges {\n    const changes: SimpleChanges = {};\n\n    differ.forEachAddedItem(\n      record => (changes[record.key] = createNewChange(record.currentValue)),\n    );\n\n    differ.forEachChangedItem(\n      record =>\n        (changes[record.key] = createChange(\n          record.currentValue,\n          record.previousValue,\n        )),\n    );\n\n    return this._resolveChanges(changes);\n  }\n\n  private _resolveCompFactory(): ComponentFactory<any> | null {\n    try {\n      try {\n        return this.cfr.resolveComponentFactory(this.compRef.componentType);\n      } catch (e) {\n        // Fallback if componentType does not exist (happens on NgComponentOutlet)\n        return this.cfr.resolveComponentFactory(\n          this.compRef.instance.constructor,\n        );\n      }\n    } catch (e) {\n      // Factory not available - bailout\n      return null;\n    }\n  }\n\n  private _updateCompFactory() {\n    this.compFactory = this._resolveCompFactory();\n  }\n\n  private _resolveInputs(inputs: InputsType): InputsType {\n    if (!this.compFactory) {\n      return inputs;\n    }\n\n    return this._remapIO(inputs, this.compFactory.inputs);\n  }\n\n  private _resolveOutputs(outputs: OutputsType): OutputsType {\n    outputs = this._processOutputs(outputs);\n\n    if (!this.compFactory) {\n      return outputs;\n    }\n\n    return this._remapIO(outputs, this.compFactory.outputs);\n  }\n\n  private _processOutputs(outputs: OutputsType): OutputsTypeProcessed {\n    const processedOutputs: OutputsTypeProcessed = {};\n\n    Object.keys(outputs).forEach(key => {\n      const outputExpr = outputs[key];\n\n      if (typeof outputExpr === 'function') {\n        processedOutputs[key] = outputExpr;\n      } else {\n        processedOutputs[key] =\n          outputExpr && this._processOutputArgs(outputExpr);\n      }\n    });\n\n    return processedOutputs;\n  }\n\n  private _processOutputArgs(output: OutputWithArgs): EventHandler {\n    const { handler } = output;\n    const args = 'args' in output ? output.args || [] : [this.eventArgument];\n\n    return event =>\n      handler(...args.map(arg => (arg === this.eventArgument ? event : arg)));\n  }\n\n  private _resolveChanges(changes: SimpleChanges): SimpleChanges {\n    if (!this.compFactory) {\n      return changes;\n    }\n\n    return this._remapIO(changes, this.compFactory.inputs);\n  }\n\n  private _remapIO<T extends Record<string, any>>(\n    io: T,\n    mapping: IOMappingList,\n  ): T {\n    const newIO = {};\n\n    Object.keys(io).forEach(key => {\n      const newKey = this._findPropByTplInMapping(key, mapping) || key;\n      newIO[newKey] = io[key];\n    });\n\n    return newIO as T;\n  }\n\n  private _findPropByTplInMapping(\n    tplName: string,\n    mapping: IOMappingList,\n  ): string | null {\n    for (const map of mapping) {\n      if (map.templateName === tplName) {\n        return map.propName;\n      }\n    }\n    return null;\n  }\n\n  private failInit() {\n    throw Error(\n      'IoService: ComponentInjector was not set! Please call init() method!',\n    );\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  Inject,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from '../component-injector/component-outlet-injector.directive';\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\nimport { IoService } from '../io/io.service';\nimport { InputsType, OutputsType } from '../io/types';\n\n// tslint:disable-next-line: no-conflicting-lifecycle\n@Directive({\n  selector:\n    '[ndcDynamicInputs],[ndcDynamicOutputs],[ngComponentOutletNdcDynamicInputs],[ngComponentOutletNdcDynamicOutputs]',\n  providers: [IoService],\n})\nexport class DynamicIoDirective implements OnChanges, DoCheck {\n  @Input()\n  ndcDynamicInputs: InputsType;\n  @Input()\n  ngComponentOutletNdcDynamicInputs: InputsType;\n  @Input()\n  ndcDynamicOutputs: OutputsType;\n  @Input()\n  ngComponentOutletNdcDynamicOutputs: OutputsType;\n\n  private get inputs() {\n    return this.ndcDynamicInputs || this.ngComponentOutletNdcDynamicInputs;\n  }\n\n  private get outputs() {\n    return this.ndcDynamicOutputs || this.ngComponentOutletNdcDynamicOutputs;\n  }\n\n  constructor(\n    private ioService: IoService,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {\n    this.ioService.init(this.componentInjector);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.ioService.update(\n      this.inputs,\n      this.outputs,\n      this.inputsChanged(changes),\n      this.outputsChanged(changes),\n    );\n  }\n\n  ngDoCheck() {\n    this.ioService.maybeUpdate();\n  }\n\n  private inputsChanged(changes: SimpleChanges): boolean {\n    return (\n      'ngComponentOutletNdcDynamicInputs' in changes ||\n      'ndcDynamicInputs' in changes\n    );\n  }\n\n  private outputsChanged(changes: SimpleChanges): boolean {\n    return (\n      'ngComponentOutletNdcDynamicOutputs' in changes ||\n      'ndcDynamicOutputs' in changes\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicIoDirective } from './dynamic-io.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicIoDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicIoDirective],\n})\nexport class DynamicIoModule {}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  StaticProvider,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from './component-injector';\n\n@Component({\n  selector: 'ndc-dynamic',\n  template: '',\n  providers: [\n    { provide: DynamicComponentInjectorToken, useExisting: DynamicComponent },\n  ],\n})\nexport class DynamicComponent implements OnChanges, DynamicComponentInjector {\n  @Input()\n  ndcDynamicComponent: Type<any>;\n  @Input()\n  ndcDynamicInjector: Injector;\n  @Input()\n  ndcDynamicProviders: StaticProvider[];\n  @Input()\n  ndcDynamicContent: any[][];\n\n  @Output()\n  ndcDynamicCreated: EventEmitter<ComponentRef<any>> = new EventEmitter();\n\n  componentRef: ComponentRef<any> | null;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.ndcDynamicComponent) {\n      this.createDynamicComponent();\n    }\n  }\n\n  createDynamicComponent() {\n    this.vcr.clear();\n    this.componentRef = null;\n\n    if (this.ndcDynamicComponent) {\n      this.componentRef = this.vcr.createComponent(\n        this.cfr.resolveComponentFactory(this.ndcDynamicComponent),\n        0,\n        this._resolveInjector(),\n        this.ndcDynamicContent,\n      );\n      this.ndcDynamicCreated.emit(this.componentRef);\n    }\n  }\n\n  private _resolveInjector(): Injector {\n    let injector = this.ndcDynamicInjector || this.vcr.injector;\n\n    if (this.ndcDynamicProviders) {\n      injector = Injector.create({\n        providers: this.ndcDynamicProviders,\n        parent: injector,\n      });\n    }\n\n    return injector;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DynamicIoModule } from './dynamic-io/dynamic-io.module';\nimport { DynamicComponent } from './dynamic.component';\n\n@NgModule({\n  imports: [CommonModule, DynamicIoModule],\n  exports: [DynamicComponent, DynamicIoModule],\n  declarations: [DynamicComponent],\n})\nexport class DynamicModule {}\n","import {\n  Directive,\n  DoCheck,\n  Inject,\n  Injector,\n  Input,\n  KeyValueChanges,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Type,\n} from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from '../component-injector/component-outlet-injector.directive';\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\n\nexport interface AttributesMap {\n  [key: string]: string;\n}\n\ninterface AttributeActions {\n  set: AttributesMap;\n  remove: string[];\n}\n\n@Directive({\n  selector: '[ndcDynamicAttributes],[ngComponentOutletNdcDynamicAttributes]',\n  exportAs: 'ndcDynamicAttributes',\n})\nexport class DynamicAttributesDirective implements DoCheck {\n  @Input()\n  ndcDynamicAttributes: AttributesMap;\n  @Input()\n  ngComponentOutletNdcDynamicAttributes: AttributesMap;\n\n  private attrsDiffer = this.differs.find({}).create<string, string>();\n  private lastCompType: Type<any>;\n  private lastAttrActions: AttributeActions;\n\n  private get _attributes() {\n    return (\n      this.ndcDynamicAttributes || this.ngComponentOutletNdcDynamicAttributes\n    );\n  }\n\n  private get _nativeElement() {\n    return this.componentInjector.componentRef?.location.nativeElement;\n  }\n\n  private get _compType() {\n    return this.componentInjector.componentRef?.componentType;\n  }\n\n  private get _isCompChanged() {\n    if (this.lastCompType !== this._compType) {\n      this.lastCompType = this._compType;\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private differs: KeyValueDiffers,\n    private injector: Injector,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {}\n\n  ngDoCheck(): void {\n    const isCompChanged = this._isCompChanged;\n    const changes = this.attrsDiffer.diff(this._attributes);\n\n    if (changes) {\n      this.lastAttrActions = this._changesToAttrActions(changes);\n    }\n\n    if (changes || (isCompChanged && this.lastAttrActions)) {\n      this._updateAttributes(this.lastAttrActions);\n    }\n  }\n\n  setAttribute(name: string, value: string, namespace?: string) {\n    if (this._nativeElement) {\n      this.renderer.setAttribute(this._nativeElement, name, value, namespace);\n    }\n  }\n\n  removeAttribute(name: string, namespace?: string) {\n    if (this._nativeElement) {\n      this.renderer.removeAttribute(this._nativeElement, name, namespace);\n    }\n  }\n\n  private _updateAttributes(actions: AttributeActions) {\n    // ? Early exit if no dynamic component\n    if (!this._compType) {\n      return;\n    }\n\n    Object.keys(actions.set).forEach(key =>\n      this.setAttribute(key, actions.set[key]),\n    );\n\n    actions.remove.forEach(key => this.removeAttribute(key));\n  }\n\n  private _changesToAttrActions(\n    changes: KeyValueChanges<string, string>,\n  ): AttributeActions {\n    const attrActions: AttributeActions = {\n      set: {},\n      remove: [],\n    };\n\n    changes.forEachAddedItem(r => (attrActions.set[r.key] = r.currentValue));\n    changes.forEachChangedItem(r => (attrActions.set[r.key] = r.currentValue));\n    changes.forEachRemovedItem(r => attrActions.remove.push(r.key));\n\n    return attrActions;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicAttributesDirective } from './dynamic-attributes.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicAttributesDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicAttributesDirective],\n})\nexport class DynamicAttributesModule {}\n","import {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  KeyValueDiffers,\n} from '@angular/core';\n\nimport { EventArgumentToken } from './event-argument';\nimport { IoService } from './io.service';\n\n@Injectable({ providedIn: 'root' })\nexport class IoFactoryService {\n  constructor(\n    private differs: KeyValueDiffers,\n    private cfr: ComponentFactoryResolver,\n    @Inject(EventArgumentToken)\n    private eventArgument: string,\n  ) {}\n\n  create() {\n    return new IoService(this.differs, this.cfr, this.eventArgument);\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\n\nimport { browserWindowFactory } from './window-ref-browser';\n\nexport const WindowRefToken = new InjectionToken<Window>('WindowRef', {\n  providedIn: 'root',\n  factory: browserWindowFactory,\n});\n\n@Injectable({ providedIn: 'root' })\nexport class WindowRefService {\n  nativeWindow = this.injector.get(WindowRefToken, null);\n\n  constructor(private injector: Injector) {}\n}\n","export function browserWindowFactory() {\n  return window;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  IterableChanges,\n  IterableDiffers,\n  OnDestroy,\n  Optional,\n  Output,\n  Type,\n  ViewContainerRef,\n  ViewRef,\n} from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\nimport { IoFactoryService } from '../io/io-factory.service';\nimport { IoService } from '../io/io.service';\nimport { InputsType, OutputsType } from '../io/types';\nimport { extractNgParamTypes, getCtorParamTypes } from '../util';\nimport { WindowRefService } from '../window-ref/window-ref.service';\n\nexport interface DynamicDirectiveDef<T> {\n  type: Type<T>;\n  inputs?: InputsType;\n  outputs?: OutputsType;\n}\n\nexport function dynamicDirectiveDef<T>(\n  type: Type<T>,\n  inputs?: InputsType,\n  outputs?: OutputsType,\n): DynamicDirectiveDef<T> {\n  return { type, inputs, outputs };\n}\n\nexport interface DirectiveRef<T> {\n  instance: T;\n  type: Type<T>;\n  injector: Injector;\n  hostComponent: Type<any>;\n  hostView: ViewRef;\n  location: ElementRef;\n  changeDetectorRef: ChangeDetectorRef;\n  // tslint:disable-next-line: ban-types\n  onDestroy: (callback: Function) => void;\n}\n\n@Directive({\n  selector: '[ndcDynamicDirectives],[ngComponentOutletNdcDynamicDirectives]',\n})\nexport class DynamicDirectivesDirective implements OnDestroy, DoCheck {\n  @Input()\n  ndcDynamicDirectives: DynamicDirectiveDef<any>[];\n  @Input()\n  ngComponentOutletNdcDynamicDirectives: DynamicDirectiveDef<any>[];\n\n  @Output()\n  ndcDynamicDirectivesCreated = new EventEmitter<DirectiveRef<any>[]>();\n\n  private lastCompInstance: any;\n\n  private get directives() {\n    return (\n      this.ndcDynamicDirectives || this.ngComponentOutletNdcDynamicDirectives\n    );\n  }\n\n  private get componentRef() {\n    return this.componentInjector.componentRef;\n  }\n\n  private get compInstance() {\n    return this.componentRef && this.componentRef.instance;\n  }\n\n  private get isCompChanged() {\n    if (this.lastCompInstance !== this.compInstance) {\n      this.lastCompInstance = this.compInstance;\n      return true;\n    }\n    return false;\n  }\n\n  private get hostInjector() {\n    return this.componentRef.injector;\n  }\n\n  private get hostVcr(): ViewContainerRef {\n    // NOTE: Accessing private APIs of Angular\n    // tslint:disable-next-line: no-string-literal\n    return this.componentRef['_viewRef']['_viewContainerRef'];\n  }\n\n  private get reflect() {\n    return (this.windowRef.nativeWindow as any).Reflect;\n  }\n\n  private dirRef = new Map<Type<any>, DirectiveRef<any>>();\n  private dirIo = new Map<Type<any>, IoService>();\n  private dirsDiffer = this.iterableDiffers\n    .find([])\n    .create<DynamicDirectiveDef<any>>((_, def) => def.type);\n\n  constructor(\n    private iterableDiffers: IterableDiffers,\n    private ioFactoryService: IoFactoryService,\n    private windowRef: WindowRefService,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {}\n\n  ngDoCheck(): void {\n    if (this.maybeDestroyDirectives()) {\n      return;\n    }\n\n    const dirsChanges = this.dirsDiffer.diff(this.directives);\n\n    if (!dirsChanges) {\n      return this.updateDirectives();\n    }\n\n    this.processDirChanges(dirsChanges);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyAllDirectives();\n  }\n\n  private maybeDestroyDirectives() {\n    if (this.isCompChanged || !this.componentRef) {\n      this.dirsDiffer.diff([]);\n      this.destroyAllDirectives();\n    }\n\n    return !this.componentRef;\n  }\n\n  private processDirChanges(\n    changes: IterableChanges<DynamicDirectiveDef<any>>,\n  ) {\n    changes.forEachRemovedItem(({ item }) => this.destroyDirective(item));\n\n    const createdDirs = [];\n    changes.forEachAddedItem(({ item }) =>\n      createdDirs.push(this.initDirective(item)),\n    );\n\n    if (createdDirs.length) {\n      this.ndcDynamicDirectivesCreated.emit(createdDirs.filter(Boolean));\n    }\n  }\n\n  private updateDirectives() {\n    this.directives.forEach(dir => this.updateDirective(dir));\n  }\n\n  private updateDirective(dirDef: DynamicDirectiveDef<any>) {\n    const io = this.dirIo.get(dirDef.type);\n    io.update(dirDef.inputs, dirDef.outputs, false, false);\n    io.maybeUpdate();\n  }\n\n  private initDirective(\n    dirDef: DynamicDirectiveDef<any>,\n  ): DirectiveRef<any> | undefined {\n    if (this.dirRef.has(dirDef.type)) {\n      return;\n    }\n\n    const instance = this.createDirective(dirDef.type);\n    const dir = {\n      instance,\n      type: dirDef.type,\n      injector: this.hostInjector,\n      hostComponent: this.componentRef.instance,\n      hostView: this.componentRef.hostView,\n      location: this.componentRef.location,\n      changeDetectorRef: this.componentRef.changeDetectorRef,\n      onDestroy: this.componentRef.onDestroy,\n    };\n\n    this.initDirIO(dir, dirDef.inputs, dirDef.outputs);\n    this.callInitHooks(instance);\n\n    this.dirRef.set(dir.type, dir);\n\n    return dir;\n  }\n\n  private destroyAllDirectives() {\n    this.dirRef.forEach(dir => this.destroyDirRef(dir));\n    this.dirRef.clear();\n    this.dirIo.clear();\n  }\n\n  private destroyDirective(dirDef: DynamicDirectiveDef<any>) {\n    this.destroyDirRef(this.dirRef.get(dirDef.type));\n    this.dirRef.delete(dirDef.type);\n    this.dirIo.delete(dirDef.type);\n  }\n\n  private initDirIO(dir: DirectiveRef<any>, inputs?: any, outputs?: any) {\n    const io = this.ioFactoryService.create();\n    io.init(\n      { componentRef: this.dirToCompDef(dir) },\n      { trackOutputChanges: true },\n    );\n    io.update(inputs, outputs, !!inputs, !!outputs);\n    this.dirIo.set(dir.type, io);\n  }\n\n  private dirToCompDef(dir: DirectiveRef<any>): ComponentRef<any> {\n    return {\n      changeDetectorRef: this.componentRef.changeDetectorRef,\n      hostView: this.componentRef.hostView,\n      location: this.componentRef.location,\n      destroy: this.componentRef.destroy,\n      onDestroy: this.componentRef.onDestroy,\n      injector: this.componentRef.injector,\n      instance: dir.instance,\n      componentType: dir.type,\n    };\n  }\n\n  private destroyDirRef(dir: DirectiveRef<any>) {\n    const io = this.dirIo.get(dir.type);\n    io.ngOnDestroy();\n\n    if ('ngOnDestroy' in dir.instance) {\n      dir.instance.ngOnDestroy();\n    }\n  }\n\n  private createDirective<T>(dirType: Type<T>): T {\n    const directiveInjector = Injector.create({\n      providers: [\n        {\n          provide: dirType,\n          useClass: dirType,\n          deps: this.resolveDirParamTypes(dirType),\n        },\n        { provide: ElementRef, useValue: this.componentRef.location },\n      ],\n      parent: this.hostInjector,\n      name: `DynamicDirectiveInjector:${dirType.name}@${this.componentRef.componentType.name}`,\n    });\n\n    return directiveInjector.get(dirType);\n  }\n\n  private resolveDirParamTypes(dirType: Type<any>): any[] {\n    return (\n      // First try Angular Compiler's metadata\n      extractNgParamTypes(dirType) ??\n      // Then fallback to Typescript Reflect API\n      getCtorParamTypes(dirType, this.reflect) ??\n      // Bailout\n      []\n    );\n  }\n\n  private callInitHooks(obj: any) {\n    this.callHook(obj, 'ngOnInit');\n    this.callHook(obj, 'ngDoCheck');\n    this.callHook(obj, 'ngAfterContentInit');\n    this.callHook(obj, 'ngAfterContentChecked');\n    this.callHook(obj, 'ngAfterViewInit');\n    this.callHook(obj, 'ngAfterViewChecked');\n  }\n\n  private callHook(obj: any, hook: string, args: any[] = []) {\n    if (obj[hook]) {\n      obj[hook](...args);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicDirectivesDirective } from './dynamic-directives.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicDirectivesDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicDirectivesDirective],\n})\nexport class DynamicDirectivesModule {}\n"]}