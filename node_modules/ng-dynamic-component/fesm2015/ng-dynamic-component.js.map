{"version":3,"file":"ng-dynamic-component.js","sources":["../../projects/ng-dynamic-component/src/lib/io/types.ts","../../projects/ng-dynamic-component/src/lib/io/event-argument.ts","../../projects/ng-dynamic-component/src/lib/component-injector/token.ts","../../projects/ng-dynamic-component/src/lib/component-injector/component-outlet-injector.directive.ts","../../projects/ng-dynamic-component/src/lib/component-injector/component-outlet-injector.module.ts","../../../projects/ng-dynamic-component/src/lib/util.ts","../../projects/ng-dynamic-component/src/lib/io/io.service.ts","../../projects/ng-dynamic-component/src/lib/dynamic-io/dynamic-io.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-io/dynamic-io.module.ts","../../../projects/ng-dynamic-component/src/lib/dynamic.component.ts","../../../projects/ng-dynamic-component/src/lib/dynamic.module.ts","../../projects/ng-dynamic-component/src/lib/dynamic-attributes/dynamic-attributes.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-attributes/dynamic-attributes.module.ts","../../projects/ng-dynamic-component/src/lib/io/io-factory.service.ts","../../projects/ng-dynamic-component/src/lib/window-ref/window-ref-browser.ts","../../projects/ng-dynamic-component/src/lib/window-ref/window-ref.service.ts","../../projects/ng-dynamic-component/src/lib/dynamic-directives/dynamic-directives.directive.ts","../../projects/ng-dynamic-component/src/lib/dynamic-directives/dynamic-directives.module.ts"],"names":[],"mappings":"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","sourcesContent":["export interface InputsType {\n  [k: string]: any;\n}\nexport interface OutputsType {\n  [k: string]: OutputExpression | undefined;\n}\n\nexport interface OutputWithArgs {\n  handler: AnyFunction;\n  args?: any[];\n}\n\nexport type OutputExpression = EventHandler | OutputWithArgs;\n\nexport type EventHandler<T = any> = (event: T) => any;\n\nexport type AnyFunction = (...args: any[]) => any;\n","import { InjectionToken } from '@angular/core';\n\nexport function defaultEventArgumentFactory() {\n  return '$event';\n}\n\nexport const EventArgumentToken = new InjectionToken<string>('EventArgument', {\n  providedIn: 'root',\n  factory: defaultEventArgumentFactory,\n});\n","import { ComponentRef, InjectionToken } from '@angular/core';\n\nexport interface DynamicComponentInjector {\n  componentRef: ComponentRef<any> | null;\n}\n\n/**\n * @deprecated Since v6.0.0 - Use {@link DynamicComponentInjector} instead\n */\nexport type ComponentInjector = DynamicComponentInjector;\n\nexport const DynamicComponentInjectorToken = new InjectionToken<\n  DynamicComponentInjector\n>('DynamicComponentInjector');\n\n/**\n * @deprecated Since v6.0.0 - Use {@link DynamicComponentInjectorToken} instead\n * and provide component class via `useExisting` instead of `useValue`\n */\nexport const COMPONENT_INJECTOR = DynamicComponentInjectorToken;\n","import { NgComponentOutlet } from '@angular/common';\nimport { ComponentRef, Directive, Host } from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from './token';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[ngComponentOutlet]',\n  exportAs: 'ndcComponentOutletInjector',\n  providers: [\n    {\n      provide: DynamicComponentInjectorToken,\n      useExisting: ComponentOutletInjectorDirective,\n    },\n  ],\n})\nexport class ComponentOutletInjectorDirective\n  implements DynamicComponentInjector {\n  get componentRef(): ComponentRef<any> {\n    // NOTE: Accessing private APIs of Angular\n    return (this.componentOutlet as any)._componentRef;\n  }\n\n  constructor(@Host() private componentOutlet: NgComponentOutlet) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from './component-outlet-injector.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ComponentOutletInjectorDirective],\n  declarations: [ComponentOutletInjectorDirective],\n})\nexport class ComponentOutletInjectorModule {}\n","import { KeyValueChangeRecord, SimpleChange, Type } from '@angular/core';\n\nexport type KeyValueChangeRecordAny = KeyValueChangeRecord<any, any>;\n\nexport function createNewChange(val: any): SimpleChange {\n  return new SimpleChange(undefined, val, true);\n}\n\nexport function createChange(val: any, prevVal: any): SimpleChange {\n  return new SimpleChange(prevVal, val, false);\n}\n\nexport function noop(): void {}\n\nexport function getCtorParamTypes(\n  ctor: any,\n  reflect: { getMetadata: (type: string, obj: object) => any[] },\n): any[] {\n  return reflect.getMetadata('design:paramtypes', ctor);\n}\n\n/**\n * Extract type arguments from Angular Directive/Component\n */\nexport function extractNgParamTypes(type: Type<any>): any[] | undefined {\n  // NOTE: Accessing private APIs of Angular\n  return (type as any)?.ctorParameters?.()?.map(param => param.type);\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  KeyValueChanges,\n  KeyValueDiffers,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { DynamicComponentInjector } from '../component-injector/token';\nimport { createChange, createNewChange, noop } from '../util';\nimport { EventArgumentToken } from './event-argument';\nimport { EventHandler, InputsType, OutputsType, OutputWithArgs } from './types';\n\nexport interface IOMapInfo {\n  propName: string;\n  templateName: string;\n}\nexport type IOMappingList = IOMapInfo[];\nexport type KeyValueChangesAny = KeyValueChanges<any, any>;\n\nexport interface IoInitOptions {\n  trackOutputChanges?: boolean;\n}\n\ninterface OutputsTypeProcessed extends OutputsType {\n  [k: string]: EventHandler;\n}\n\n@Injectable()\nexport class IoService implements OnDestroy {\n  private checkInit = this.failInit;\n\n  private lastComponentInst: any = null;\n  private lastInputChanges: SimpleChanges;\n  private inputsDiffer = this.differs.find({}).create();\n  private compFactory: ComponentFactory<any> | null = null;\n  private outputsShouldDisconnect$ = new Subject<void>();\n\n  private inputs: InputsType;\n  private outputs: OutputsType;\n  private compInjector: DynamicComponentInjector;\n  private outputsChanged: (outputs: OutputsType) => boolean = () => false;\n\n  private get compRef() {\n    return this.compInjector.componentRef;\n  }\n\n  private get componentInst() {\n    return this.compRef ? this.compRef.instance : null;\n  }\n\n  private get componentInstChanged(): boolean {\n    if (this.lastComponentInst !== this.componentInst) {\n      this.lastComponentInst = this.componentInst;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private get compCdr(): ChangeDetectorRef {\n    // tslint:disable-next-line: deprecation\n    return this.compRef ? this.compRef.injector.get(ChangeDetectorRef) : null;\n  }\n\n  constructor(\n    private differs: KeyValueDiffers,\n    private cfr: ComponentFactoryResolver,\n    @Inject(EventArgumentToken)\n    private eventArgument: string,\n  ) {}\n\n  ngOnDestroy(): void {\n    this._disconnectOutputs();\n  }\n\n  init(\n    componentInjector: DynamicComponentInjector,\n    options: IoInitOptions = {},\n  ) {\n    this.checkInit = componentInjector ? noop : this.failInit;\n    this.compInjector = componentInjector;\n\n    if (options.trackOutputChanges) {\n      const outputsDiffer = this.differs.find({}).create();\n      this.outputsChanged = outputs => !!outputsDiffer.diff(outputs);\n    }\n  }\n\n  update(\n    inputs: InputsType,\n    outputs: OutputsType,\n    inputsChanged: boolean,\n    outputsChanged: boolean,\n  ) {\n    this.checkInit();\n    this.updateIO(inputs, outputs);\n\n    const compChanged = this.componentInstChanged;\n\n    if (compChanged || inputsChanged) {\n      const inputsChanges = this._getInputsChanges();\n      if (inputsChanges) {\n        this._updateInputChanges(inputsChanges);\n      }\n      this.updateInputs(compChanged || !this.lastInputChanges);\n    }\n\n    if (compChanged || outputsChanged) {\n      this.bindOutputs();\n    }\n  }\n\n  maybeUpdate() {\n    this.checkInit();\n\n    if (this.componentInstChanged) {\n      this.updateInputs(true);\n      this.bindOutputs();\n      return;\n    }\n\n    if (this.outputsChanged(this.outputs)) {\n      this.bindOutputs();\n    }\n\n    if (!this.inputs) {\n      return;\n    }\n\n    const inputsChanges = this._getInputsChanges();\n\n    if (inputsChanges) {\n      const isNotFirstChange = !!this.lastInputChanges;\n      this._updateInputChanges(inputsChanges);\n\n      if (isNotFirstChange) {\n        this.updateInputs();\n      }\n    }\n  }\n\n  private updateIO(inputs: InputsType, outputs: OutputsType) {\n    this.inputs = inputs;\n    this.outputs = outputs;\n  }\n\n  private updateInputs(isFirstChange = false) {\n    if (isFirstChange) {\n      this._updateCompFactory();\n    }\n\n    const compInst = this.componentInst;\n    let inputs = this.inputs;\n\n    if (!inputs || !compInst) {\n      return;\n    }\n\n    inputs = this._resolveInputs(inputs);\n\n    Object.keys(inputs).forEach(p => (compInst[p] = inputs[p]));\n\n    // Mark component for check to re-render with new inputs\n    if (this.compCdr) {\n      this.compCdr.markForCheck();\n    }\n\n    this.notifyOnInputChanges(this.lastInputChanges, isFirstChange);\n  }\n\n  private bindOutputs() {\n    this._disconnectOutputs();\n\n    const compInst = this.componentInst;\n    let outputs = this.outputs;\n\n    if (!outputs || !compInst) {\n      return;\n    }\n\n    outputs = this._resolveOutputs(outputs);\n\n    Object.keys(outputs)\n      .filter(p => compInst[p])\n      .forEach(p =>\n        compInst[p]\n          .pipe(takeUntil(this.outputsShouldDisconnect$))\n          .subscribe((event: any) => (outputs[p] as EventHandler)(event)),\n      );\n  }\n\n  private notifyOnInputChanges(\n    changes: SimpleChanges = {},\n    forceFirstChanges: boolean,\n  ) {\n    // Exit early if component not interested to receive changes\n    if (!this.componentInst.ngOnChanges) {\n      return;\n    }\n\n    if (forceFirstChanges) {\n      changes = this._collectFirstChanges();\n    }\n\n    this.componentInst.ngOnChanges(changes);\n  }\n\n  private _disconnectOutputs() {\n    this.outputsShouldDisconnect$.next();\n  }\n\n  private _getInputsChanges(): KeyValueChangesAny {\n    return this.inputsDiffer.diff(this.inputs);\n  }\n\n  private _updateInputChanges(differ: KeyValueChangesAny) {\n    this.lastInputChanges = this._collectChangesFromDiffer(differ);\n  }\n\n  private _collectFirstChanges(): SimpleChanges {\n    const changes = {} as SimpleChanges;\n    const inputs = this.inputs;\n\n    Object.keys(inputs).forEach(\n      prop => (changes[prop] = createNewChange(inputs[prop])),\n    );\n\n    return this._resolveChanges(changes);\n  }\n\n  private _collectChangesFromDiffer(differ: KeyValueChangesAny): SimpleChanges {\n    const changes: SimpleChanges = {};\n\n    differ.forEachAddedItem(\n      record => (changes[record.key] = createNewChange(record.currentValue)),\n    );\n\n    differ.forEachChangedItem(\n      record =>\n        (changes[record.key] = createChange(\n          record.currentValue,\n          record.previousValue,\n        )),\n    );\n\n    return this._resolveChanges(changes);\n  }\n\n  private _resolveCompFactory(): ComponentFactory<any> | null {\n    try {\n      try {\n        return this.cfr.resolveComponentFactory(this.compRef.componentType);\n      } catch (e) {\n        // Fallback if componentType does not exist (happens on NgComponentOutlet)\n        return this.cfr.resolveComponentFactory(\n          this.compRef.instance.constructor,\n        );\n      }\n    } catch (e) {\n      // Factory not available - bailout\n      return null;\n    }\n  }\n\n  private _updateCompFactory() {\n    this.compFactory = this._resolveCompFactory();\n  }\n\n  private _resolveInputs(inputs: InputsType): InputsType {\n    if (!this.compFactory) {\n      return inputs;\n    }\n\n    return this._remapIO(inputs, this.compFactory.inputs);\n  }\n\n  private _resolveOutputs(outputs: OutputsType): OutputsType {\n    outputs = this._processOutputs(outputs);\n\n    if (!this.compFactory) {\n      return outputs;\n    }\n\n    return this._remapIO(outputs, this.compFactory.outputs);\n  }\n\n  private _processOutputs(outputs: OutputsType): OutputsTypeProcessed {\n    const processedOutputs: OutputsTypeProcessed = {};\n\n    Object.keys(outputs).forEach(key => {\n      const outputExpr = outputs[key];\n\n      if (typeof outputExpr === 'function') {\n        processedOutputs[key] = outputExpr;\n      } else {\n        processedOutputs[key] =\n          outputExpr && this._processOutputArgs(outputExpr);\n      }\n    });\n\n    return processedOutputs;\n  }\n\n  private _processOutputArgs(output: OutputWithArgs): EventHandler {\n    const { handler } = output;\n    const args = 'args' in output ? output.args || [] : [this.eventArgument];\n\n    return event =>\n      handler(...args.map(arg => (arg === this.eventArgument ? event : arg)));\n  }\n\n  private _resolveChanges(changes: SimpleChanges): SimpleChanges {\n    if (!this.compFactory) {\n      return changes;\n    }\n\n    return this._remapIO(changes, this.compFactory.inputs);\n  }\n\n  private _remapIO<T extends Record<string, any>>(\n    io: T,\n    mapping: IOMappingList,\n  ): T {\n    const newIO = {};\n\n    Object.keys(io).forEach(key => {\n      const newKey = this._findPropByTplInMapping(key, mapping) || key;\n      newIO[newKey] = io[key];\n    });\n\n    return newIO as T;\n  }\n\n  private _findPropByTplInMapping(\n    tplName: string,\n    mapping: IOMappingList,\n  ): string | null {\n    for (const map of mapping) {\n      if (map.templateName === tplName) {\n        return map.propName;\n      }\n    }\n    return null;\n  }\n\n  private failInit() {\n    throw Error(\n      'IoService: ComponentInjector was not set! Please call init() method!',\n    );\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  Inject,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n} from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from '../component-injector/component-outlet-injector.directive';\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\nimport { IoService } from '../io/io.service';\nimport { InputsType, OutputsType } from '../io/types';\n\n// tslint:disable-next-line: no-conflicting-lifecycle\n@Directive({\n  selector:\n    '[ndcDynamicInputs],[ndcDynamicOutputs],[ngComponentOutletNdcDynamicInputs],[ngComponentOutletNdcDynamicOutputs]',\n  providers: [IoService],\n})\nexport class DynamicIoDirective implements OnChanges, DoCheck {\n  @Input()\n  ndcDynamicInputs: InputsType;\n  @Input()\n  ngComponentOutletNdcDynamicInputs: InputsType;\n  @Input()\n  ndcDynamicOutputs: OutputsType;\n  @Input()\n  ngComponentOutletNdcDynamicOutputs: OutputsType;\n\n  private get inputs() {\n    return this.ndcDynamicInputs || this.ngComponentOutletNdcDynamicInputs;\n  }\n\n  private get outputs() {\n    return this.ndcDynamicOutputs || this.ngComponentOutletNdcDynamicOutputs;\n  }\n\n  constructor(\n    private ioService: IoService,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {\n    this.ioService.init(this.componentInjector);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.ioService.update(\n      this.inputs,\n      this.outputs,\n      this.inputsChanged(changes),\n      this.outputsChanged(changes),\n    );\n  }\n\n  ngDoCheck() {\n    this.ioService.maybeUpdate();\n  }\n\n  private inputsChanged(changes: SimpleChanges): boolean {\n    return (\n      'ngComponentOutletNdcDynamicInputs' in changes ||\n      'ndcDynamicInputs' in changes\n    );\n  }\n\n  private outputsChanged(changes: SimpleChanges): boolean {\n    return (\n      'ngComponentOutletNdcDynamicOutputs' in changes ||\n      'ndcDynamicOutputs' in changes\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicIoDirective } from './dynamic-io.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicIoDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicIoDirective],\n})\nexport class DynamicIoModule {}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  StaticProvider,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from './component-injector';\n\n@Component({\n  selector: 'ndc-dynamic',\n  template: '',\n  providers: [\n    { provide: DynamicComponentInjectorToken, useExisting: DynamicComponent },\n  ],\n})\nexport class DynamicComponent implements OnChanges, DynamicComponentInjector {\n  @Input()\n  ndcDynamicComponent: Type<any>;\n  @Input()\n  ndcDynamicInjector: Injector;\n  @Input()\n  ndcDynamicProviders: StaticProvider[];\n  @Input()\n  ndcDynamicContent: any[][];\n\n  @Output()\n  ndcDynamicCreated: EventEmitter<ComponentRef<any>> = new EventEmitter();\n\n  componentRef: ComponentRef<any> | null;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.ndcDynamicComponent) {\n      this.createDynamicComponent();\n    }\n  }\n\n  createDynamicComponent() {\n    this.vcr.clear();\n    this.componentRef = null;\n\n    if (this.ndcDynamicComponent) {\n      this.componentRef = this.vcr.createComponent(\n        this.cfr.resolveComponentFactory(this.ndcDynamicComponent),\n        0,\n        this._resolveInjector(),\n        this.ndcDynamicContent,\n      );\n      this.ndcDynamicCreated.emit(this.componentRef);\n    }\n  }\n\n  private _resolveInjector(): Injector {\n    let injector = this.ndcDynamicInjector || this.vcr.injector;\n\n    if (this.ndcDynamicProviders) {\n      injector = Injector.create({\n        providers: this.ndcDynamicProviders,\n        parent: injector,\n      });\n    }\n\n    return injector;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DynamicIoModule } from './dynamic-io/dynamic-io.module';\nimport { DynamicComponent } from './dynamic.component';\n\n@NgModule({\n  imports: [CommonModule, DynamicIoModule],\n  exports: [DynamicComponent, DynamicIoModule],\n  declarations: [DynamicComponent],\n})\nexport class DynamicModule {}\n","import {\n  Directive,\n  DoCheck,\n  Inject,\n  Injector,\n  Input,\n  KeyValueChanges,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Type,\n} from '@angular/core';\n\nimport { ComponentOutletInjectorDirective } from '../component-injector/component-outlet-injector.directive';\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\n\nexport interface AttributesMap {\n  [key: string]: string;\n}\n\ninterface AttributeActions {\n  set: AttributesMap;\n  remove: string[];\n}\n\n@Directive({\n  selector: '[ndcDynamicAttributes],[ngComponentOutletNdcDynamicAttributes]',\n  exportAs: 'ndcDynamicAttributes',\n})\nexport class DynamicAttributesDirective implements DoCheck {\n  @Input()\n  ndcDynamicAttributes: AttributesMap;\n  @Input()\n  ngComponentOutletNdcDynamicAttributes: AttributesMap;\n\n  private attrsDiffer = this.differs.find({}).create<string, string>();\n  private lastCompType: Type<any>;\n  private lastAttrActions: AttributeActions;\n\n  private get _attributes() {\n    return (\n      this.ndcDynamicAttributes || this.ngComponentOutletNdcDynamicAttributes\n    );\n  }\n\n  private get _nativeElement() {\n    return this.componentInjector.componentRef?.location.nativeElement;\n  }\n\n  private get _compType() {\n    return this.componentInjector.componentRef?.componentType;\n  }\n\n  private get _isCompChanged() {\n    if (this.lastCompType !== this._compType) {\n      this.lastCompType = this._compType;\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private differs: KeyValueDiffers,\n    private injector: Injector,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {}\n\n  ngDoCheck(): void {\n    const isCompChanged = this._isCompChanged;\n    const changes = this.attrsDiffer.diff(this._attributes);\n\n    if (changes) {\n      this.lastAttrActions = this._changesToAttrActions(changes);\n    }\n\n    if (changes || (isCompChanged && this.lastAttrActions)) {\n      this._updateAttributes(this.lastAttrActions);\n    }\n  }\n\n  setAttribute(name: string, value: string, namespace?: string) {\n    if (this._nativeElement) {\n      this.renderer.setAttribute(this._nativeElement, name, value, namespace);\n    }\n  }\n\n  removeAttribute(name: string, namespace?: string) {\n    if (this._nativeElement) {\n      this.renderer.removeAttribute(this._nativeElement, name, namespace);\n    }\n  }\n\n  private _updateAttributes(actions: AttributeActions) {\n    // ? Early exit if no dynamic component\n    if (!this._compType) {\n      return;\n    }\n\n    Object.keys(actions.set).forEach(key =>\n      this.setAttribute(key, actions.set[key]),\n    );\n\n    actions.remove.forEach(key => this.removeAttribute(key));\n  }\n\n  private _changesToAttrActions(\n    changes: KeyValueChanges<string, string>,\n  ): AttributeActions {\n    const attrActions: AttributeActions = {\n      set: {},\n      remove: [],\n    };\n\n    changes.forEachAddedItem(r => (attrActions.set[r.key] = r.currentValue));\n    changes.forEachChangedItem(r => (attrActions.set[r.key] = r.currentValue));\n    changes.forEachRemovedItem(r => attrActions.remove.push(r.key));\n\n    return attrActions;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicAttributesDirective } from './dynamic-attributes.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicAttributesDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicAttributesDirective],\n})\nexport class DynamicAttributesModule {}\n","import {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  KeyValueDiffers,\n} from '@angular/core';\n\nimport { EventArgumentToken } from './event-argument';\nimport { IoService } from './io.service';\n\n@Injectable({ providedIn: 'root' })\nexport class IoFactoryService {\n  constructor(\n    private differs: KeyValueDiffers,\n    private cfr: ComponentFactoryResolver,\n    @Inject(EventArgumentToken)\n    private eventArgument: string,\n  ) {}\n\n  create() {\n    return new IoService(this.differs, this.cfr, this.eventArgument);\n  }\n}\n","export function browserWindowFactory() {\n  return window;\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\n\nimport { browserWindowFactory } from './window-ref-browser';\n\nexport const WindowRefToken = new InjectionToken<Window>('WindowRef', {\n  providedIn: 'root',\n  factory: browserWindowFactory,\n});\n\n@Injectable({ providedIn: 'root' })\nexport class WindowRefService {\n  nativeWindow = this.injector.get(WindowRefToken, null);\n\n  constructor(private injector: Injector) {}\n}\n","import {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  IterableChanges,\n  IterableDiffers,\n  OnDestroy,\n  Optional,\n  Output,\n  Type,\n  ViewContainerRef,\n  ViewRef,\n} from '@angular/core';\n\nimport {\n  DynamicComponentInjector,\n  DynamicComponentInjectorToken,\n} from '../component-injector/token';\nimport { IoFactoryService } from '../io/io-factory.service';\nimport { IoService } from '../io/io.service';\nimport { InputsType, OutputsType } from '../io/types';\nimport { extractNgParamTypes, getCtorParamTypes } from '../util';\nimport { WindowRefService } from '../window-ref/window-ref.service';\n\nexport interface DynamicDirectiveDef<T> {\n  type: Type<T>;\n  inputs?: InputsType;\n  outputs?: OutputsType;\n}\n\nexport function dynamicDirectiveDef<T>(\n  type: Type<T>,\n  inputs?: InputsType,\n  outputs?: OutputsType,\n): DynamicDirectiveDef<T> {\n  return { type, inputs, outputs };\n}\n\nexport interface DirectiveRef<T> {\n  instance: T;\n  type: Type<T>;\n  injector: Injector;\n  hostComponent: Type<any>;\n  hostView: ViewRef;\n  location: ElementRef;\n  changeDetectorRef: ChangeDetectorRef;\n  // tslint:disable-next-line: ban-types\n  onDestroy: (callback: Function) => void;\n}\n\n@Directive({\n  selector: '[ndcDynamicDirectives],[ngComponentOutletNdcDynamicDirectives]',\n})\nexport class DynamicDirectivesDirective implements OnDestroy, DoCheck {\n  @Input()\n  ndcDynamicDirectives: DynamicDirectiveDef<any>[];\n  @Input()\n  ngComponentOutletNdcDynamicDirectives: DynamicDirectiveDef<any>[];\n\n  @Output()\n  ndcDynamicDirectivesCreated = new EventEmitter<DirectiveRef<any>[]>();\n\n  private lastCompInstance: any;\n\n  private get directives() {\n    return (\n      this.ndcDynamicDirectives || this.ngComponentOutletNdcDynamicDirectives\n    );\n  }\n\n  private get componentRef() {\n    return this.componentInjector.componentRef;\n  }\n\n  private get compInstance() {\n    return this.componentRef && this.componentRef.instance;\n  }\n\n  private get isCompChanged() {\n    if (this.lastCompInstance !== this.compInstance) {\n      this.lastCompInstance = this.compInstance;\n      return true;\n    }\n    return false;\n  }\n\n  private get hostInjector() {\n    return this.componentRef.injector;\n  }\n\n  private get hostVcr(): ViewContainerRef {\n    // NOTE: Accessing private APIs of Angular\n    // tslint:disable-next-line: no-string-literal\n    return this.componentRef['_viewRef']['_viewContainerRef'];\n  }\n\n  private get reflect() {\n    return (this.windowRef.nativeWindow as any).Reflect;\n  }\n\n  private dirRef = new Map<Type<any>, DirectiveRef<any>>();\n  private dirIo = new Map<Type<any>, IoService>();\n  private dirsDiffer = this.iterableDiffers\n    .find([])\n    .create<DynamicDirectiveDef<any>>((_, def) => def.type);\n\n  constructor(\n    private iterableDiffers: IterableDiffers,\n    private ioFactoryService: IoFactoryService,\n    private windowRef: WindowRefService,\n    @Inject(DynamicComponentInjectorToken)\n    @Optional()\n    private componentInjector?: DynamicComponentInjector,\n  ) {}\n\n  ngDoCheck(): void {\n    if (this.maybeDestroyDirectives()) {\n      return;\n    }\n\n    const dirsChanges = this.dirsDiffer.diff(this.directives);\n\n    if (!dirsChanges) {\n      return this.updateDirectives();\n    }\n\n    this.processDirChanges(dirsChanges);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyAllDirectives();\n  }\n\n  private maybeDestroyDirectives() {\n    if (this.isCompChanged || !this.componentRef) {\n      this.dirsDiffer.diff([]);\n      this.destroyAllDirectives();\n    }\n\n    return !this.componentRef;\n  }\n\n  private processDirChanges(\n    changes: IterableChanges<DynamicDirectiveDef<any>>,\n  ) {\n    changes.forEachRemovedItem(({ item }) => this.destroyDirective(item));\n\n    const createdDirs = [];\n    changes.forEachAddedItem(({ item }) =>\n      createdDirs.push(this.initDirective(item)),\n    );\n\n    if (createdDirs.length) {\n      this.ndcDynamicDirectivesCreated.emit(createdDirs.filter(Boolean));\n    }\n  }\n\n  private updateDirectives() {\n    this.directives.forEach(dir => this.updateDirective(dir));\n  }\n\n  private updateDirective(dirDef: DynamicDirectiveDef<any>) {\n    const io = this.dirIo.get(dirDef.type);\n    io.update(dirDef.inputs, dirDef.outputs, false, false);\n    io.maybeUpdate();\n  }\n\n  private initDirective(\n    dirDef: DynamicDirectiveDef<any>,\n  ): DirectiveRef<any> | undefined {\n    if (this.dirRef.has(dirDef.type)) {\n      return;\n    }\n\n    const instance = this.createDirective(dirDef.type);\n    const dir = {\n      instance,\n      type: dirDef.type,\n      injector: this.hostInjector,\n      hostComponent: this.componentRef.instance,\n      hostView: this.componentRef.hostView,\n      location: this.componentRef.location,\n      changeDetectorRef: this.componentRef.changeDetectorRef,\n      onDestroy: this.componentRef.onDestroy,\n    };\n\n    this.initDirIO(dir, dirDef.inputs, dirDef.outputs);\n    this.callInitHooks(instance);\n\n    this.dirRef.set(dir.type, dir);\n\n    return dir;\n  }\n\n  private destroyAllDirectives() {\n    this.dirRef.forEach(dir => this.destroyDirRef(dir));\n    this.dirRef.clear();\n    this.dirIo.clear();\n  }\n\n  private destroyDirective(dirDef: DynamicDirectiveDef<any>) {\n    this.destroyDirRef(this.dirRef.get(dirDef.type));\n    this.dirRef.delete(dirDef.type);\n    this.dirIo.delete(dirDef.type);\n  }\n\n  private initDirIO(dir: DirectiveRef<any>, inputs?: any, outputs?: any) {\n    const io = this.ioFactoryService.create();\n    io.init(\n      { componentRef: this.dirToCompDef(dir) },\n      { trackOutputChanges: true },\n    );\n    io.update(inputs, outputs, !!inputs, !!outputs);\n    this.dirIo.set(dir.type, io);\n  }\n\n  private dirToCompDef(dir: DirectiveRef<any>): ComponentRef<any> {\n    return {\n      changeDetectorRef: this.componentRef.changeDetectorRef,\n      hostView: this.componentRef.hostView,\n      location: this.componentRef.location,\n      destroy: this.componentRef.destroy,\n      onDestroy: this.componentRef.onDestroy,\n      injector: this.componentRef.injector,\n      instance: dir.instance,\n      componentType: dir.type,\n    };\n  }\n\n  private destroyDirRef(dir: DirectiveRef<any>) {\n    const io = this.dirIo.get(dir.type);\n    io.ngOnDestroy();\n\n    if ('ngOnDestroy' in dir.instance) {\n      dir.instance.ngOnDestroy();\n    }\n  }\n\n  private createDirective<T>(dirType: Type<T>): T {\n    const directiveInjector = Injector.create({\n      providers: [\n        {\n          provide: dirType,\n          useClass: dirType,\n          deps: this.resolveDirParamTypes(dirType),\n        },\n        { provide: ElementRef, useValue: this.componentRef.location },\n      ],\n      parent: this.hostInjector,\n      name: `DynamicDirectiveInjector:${dirType.name}@${this.componentRef.componentType.name}`,\n    });\n\n    return directiveInjector.get(dirType);\n  }\n\n  private resolveDirParamTypes(dirType: Type<any>): any[] {\n    return (\n      // First try Angular Compiler's metadata\n      extractNgParamTypes(dirType) ??\n      // Then fallback to Typescript Reflect API\n      getCtorParamTypes(dirType, this.reflect) ??\n      // Bailout\n      []\n    );\n  }\n\n  private callInitHooks(obj: any) {\n    this.callHook(obj, 'ngOnInit');\n    this.callHook(obj, 'ngDoCheck');\n    this.callHook(obj, 'ngAfterContentInit');\n    this.callHook(obj, 'ngAfterContentChecked');\n    this.callHook(obj, 'ngAfterViewInit');\n    this.callHook(obj, 'ngAfterViewChecked');\n  }\n\n  private callHook(obj: any, hook: string, args: any[] = []) {\n    if (obj[hook]) {\n      obj[hook](...args);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';\nimport { DynamicDirectivesDirective } from './dynamic-directives.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [DynamicDirectivesDirective, ComponentOutletInjectorModule],\n  declarations: [DynamicDirectivesDirective],\n})\nexport class DynamicDirectivesModule {}\n"]}