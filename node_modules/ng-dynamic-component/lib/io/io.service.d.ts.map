{"version":3,"file":"io.service.d.ts","sources":["io.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, KeyValueChanges, KeyValueDiffers, OnDestroy } from '@angular/core';\nimport { DynamicComponentInjector } from '../component-injector/token';\nimport { InputsType, OutputsType } from './types';\nexport interface IOMapInfo {\n    propName: string;\n    templateName: string;\n}\nexport declare type IOMappingList = IOMapInfo[];\nexport declare type KeyValueChangesAny = KeyValueChanges<any, any>;\nexport interface IoInitOptions {\n    trackOutputChanges?: boolean;\n}\nexport declare class IoService implements OnDestroy {\n    private differs;\n    private cfr;\n    private eventArgument;\n    private checkInit;\n    private lastComponentInst;\n    private lastInputChanges;\n    private inputsDiffer;\n    private compFactory;\n    private outputsShouldDisconnect$;\n    private inputs;\n    private outputs;\n    private compInjector;\n    private outputsChanged;\n    private get compRef();\n    private get componentInst();\n    private get componentInstChanged();\n    private get compCdr();\n    constructor(differs: KeyValueDiffers, cfr: ComponentFactoryResolver, eventArgument: string);\n    ngOnDestroy(): void;\n    init(componentInjector: DynamicComponentInjector, options?: IoInitOptions): void;\n    update(inputs: InputsType, outputs: OutputsType, inputsChanged: boolean, outputsChanged: boolean): void;\n    maybeUpdate(): void;\n    private updateIO;\n    private updateInputs;\n    private bindOutputs;\n    private notifyOnInputChanges;\n    private _disconnectOutputs;\n    private _getInputsChanges;\n    private _updateInputChanges;\n    private _collectFirstChanges;\n    private _collectChangesFromDiffer;\n    private _resolveCompFactory;\n    private _updateCompFactory;\n    private _resolveInputs;\n    private _resolveOutputs;\n    private _processOutputs;\n    private _processOutputArgs;\n    private _resolveChanges;\n    private _remapIO;\n    private _findPropByTplInMapping;\n    private failInit;\n}\n"]}