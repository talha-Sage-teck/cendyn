/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-io/dynamic-io.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Inject, Input, Optional, } from '@angular/core';
import { DynamicComponentInjectorToken, } from '../component-injector/token';
import { IoService } from '../io/io.service';
// tslint:disable-next-line: no-conflicting-lifecycle
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../io/io.service';
export class DynamicIoDirective {
    /**
     * @param {?} ioService
     * @param {?=} componentInjector
     */
    constructor(ioService, componentInjector) {
        this.ioService = ioService;
        this.componentInjector = componentInjector;
        this.ioService.init(this.componentInjector);
    }
    /**
     * @private
     * @return {?}
     */
    get inputs() {
        return this.ndcDynamicInputs || this.ngComponentOutletNdcDynamicInputs;
    }
    /**
     * @private
     * @return {?}
     */
    get outputs() {
        return this.ndcDynamicOutputs || this.ngComponentOutletNdcDynamicOutputs;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        this.ioService.update(this.inputs, this.outputs, this.inputsChanged(changes), this.outputsChanged(changes));
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        this.ioService.maybeUpdate();
    }
    /**
     * @private
     * @param {?} changes
     * @return {?}
     */
    inputsChanged(changes) {
        return ('ngComponentOutletNdcDynamicInputs' in changes ||
            'ndcDynamicInputs' in changes);
    }
    /**
     * @private
     * @param {?} changes
     * @return {?}
     */
    outputsChanged(changes) {
        return ('ngComponentOutletNdcDynamicOutputs' in changes ||
            'ndcDynamicOutputs' in changes);
    }
}
DynamicIoDirective.ɵfac = function DynamicIoDirective_Factory(t) { return new (t || DynamicIoDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IoService), ɵngcc0.ɵɵdirectiveInject(DynamicComponentInjectorToken, 8)); };
DynamicIoDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DynamicIoDirective, selectors: [["", "ndcDynamicInputs", ""], ["", "ndcDynamicOutputs", ""], ["", "ngComponentOutletNdcDynamicInputs", ""], ["", "ngComponentOutletNdcDynamicOutputs", ""]], inputs: { ndcDynamicInputs: "ndcDynamicInputs", ngComponentOutletNdcDynamicInputs: "ngComponentOutletNdcDynamicInputs", ndcDynamicOutputs: "ndcDynamicOutputs", ngComponentOutletNdcDynamicOutputs: "ngComponentOutletNdcDynamicOutputs" }, features: [ɵngcc0.ɵɵProvidersFeature([IoService]), ɵngcc0.ɵɵNgOnChangesFeature] });
/** @nocollapse */
DynamicIoDirective.ctorParameters = () => [
    { type: IoService },
    { type: undefined, decorators: [{ type: Inject, args: [DynamicComponentInjectorToken,] }, { type: Optional }] }
];
DynamicIoDirective.propDecorators = {
    ndcDynamicInputs: [{ type: Input }],
    ngComponentOutletNdcDynamicInputs: [{ type: Input }],
    ndcDynamicOutputs: [{ type: Input }],
    ngComponentOutletNdcDynamicOutputs: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIoDirective, [{
        type: Directive,
        args: [{
                selector: '[ndcDynamicInputs],[ndcDynamicOutputs],[ngComponentOutletNdcDynamicInputs],[ngComponentOutletNdcDynamicOutputs]',
                providers: [IoService]
            }]
    }], function () { return [{ type: ɵngcc1.IoService }, { type: undefined, decorators: [{
                type: Inject,
                args: [DynamicComponentInjectorToken]
            }, {
                type: Optional
            }] }]; }, { ndcDynamicInputs: [{
            type: Input
        }], ngComponentOutletNdcDynamicInputs: [{
            type: Input
        }], ndcDynamicOutputs: [{
            type: Input
        }], ngComponentOutletNdcDynamicOutputs: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    DynamicIoDirective.prototype.ndcDynamicInputs;
    /** @type {?} */
    DynamicIoDirective.prototype.ngComponentOutletNdcDynamicInputs;
    /** @type {?} */
    DynamicIoDirective.prototype.ndcDynamicOutputs;
    /** @type {?} */
    DynamicIoDirective.prototype.ngComponentOutletNdcDynamicOutputs;
    /**
     * @type {?}
     * @private
     */
    DynamicIoDirective.prototype.ioService;
    /**
     * @type {?}
     * @private
     */
    DynamicIoDirective.prototype.componentInjector;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1pby5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWR5bmFtaWMtY29tcG9uZW50L3NyYy9saWIvZHluYW1pYy1pby9keW5hbWljLWlvLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsTUFBTSxFQUNOLEtBQUssRUFFTCxRQUFRLEdBRVQsTUFBTSxlQUFlLENBQUM7QUFHdkIsT0FBTyxFQUVMLDZCQUE2QixHQUM5QixNQUFNLDZCQUE2QixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM3Qzs7O0FBUUEsTUFBTSxPQUFPLGtCQUFrQjtBQUFHO0FBQVE7QUFDcEM7QUFFTjtBQUFRLElBZU4sWUFDVSxTQUFvQixFQUdwQixpQkFBNEM7QUFDdEQsUUFKVSxjQUFTLEdBQVQsU0FBUyxDQUFXO0FBQUMsUUFHckIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUEyQjtBQUFDLFFBRXJELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ2hELElBQUUsQ0FBQztBQUNIO0FBQ087QUFBZ0I7QUFDckI7QUFBUSxJQWxCUixJQUFZLE1BQU07QUFDcEIsUUFBSSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsaUNBQWlDLENBQUM7QUFDM0UsSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUFnQjtBQUNQO0FBQVEsSUFEdEIsSUFBWSxPQUFPO0FBQ3JCLFFBQUksT0FBTyxJQUFJLENBQUMsaUJBQWlCLElBQUksSUFBSSxDQUFDLGtDQUFrQyxDQUFDO0FBQzdFLElBQUUsQ0FBQztBQUNIO0FBQ087QUFDVztBQUNmO0FBQVEsSUFPVCxXQUFXLENBQUMsT0FBc0I7QUFDcEMsUUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FDbkIsSUFBSSxDQUFDLE1BQU0sRUFDWCxJQUFJLENBQUMsT0FBTyxFQUNaLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQzNCLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQzdCLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSDtBQUNPO0FBQ0c7QUFBUSxJQURoQixTQUFTO0FBQ1gsUUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ2pDLElBQUUsQ0FBQztBQUNIO0FBQ087QUFBZ0I7QUFBMEI7QUFDeEM7QUFDTCxJQUZNLGFBQWEsQ0FBQyxPQUFzQjtBQUFJLFFBQzlDLE9BQU8sQ0FDTCxtQ0FBbUMsSUFBSSxPQUFPO0FBQ3BELFlBQU0sa0JBQWtCLElBQUksT0FBTyxDQUM5QixDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUFnQjtBQUEwQjtBQUN6QztBQUNMLElBRk8sY0FBYyxDQUFDLE9BQXNCO0FBQUksUUFDL0MsT0FBTyxDQUNMLG9DQUFvQyxJQUFJLE9BQU87QUFDckQsWUFBTSxtQkFBbUIsSUFBSSxPQUFPLENBQy9CLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSDs4Q0ExREMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFDTixpSEFBaUg7V0FDbkgsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDLGVBQ3ZCLHFoQkFDSTtBQUFDO0FBQW1CO0FBQ3BCLFlBVkksU0FBUztBQUFJLDRDQTZCakIsTUFBTSxTQUFDLDZCQUE2QixjQUNwQyxRQUFRO0FBQ1Y7QUFBRztBQUFzQywrQkFyQnpDLEtBQUs7QUFDTixnREFDQyxLQUFLO0FBQ04sZ0NBQ0MsS0FBSztBQUNOLGlEQUNDLEtBQUs7QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQztBQUFhO0FBQXFCLElBUHBDLDhDQUM2QjtBQUMvQjtBQUNVLElBRFIsK0RBQzhDO0FBQ2hEO0FBQ1UsSUFEUiwrQ0FDK0I7QUFDakM7QUFDVSxJQURSLGdFQUNnRDtBQUNsRDtBQUNPO0FBQWlCO0FBQ1Q7QUFBUSxJQVFuQix1Q0FBNEI7QUFBQztBQUMxQjtBQUFpQjtBQUFnQjtBQUNuQyxJQURELCtDQUVvRDtBQUFDO0FBQ3hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBEb0NoZWNrLFxuICBJbmplY3QsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE9wdGlvbmFsLFxuICBTaW1wbGVDaGFuZ2VzLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29tcG9uZW50T3V0bGV0SW5qZWN0b3JEaXJlY3RpdmUgfSBmcm9tICcuLi9jb21wb25lbnQtaW5qZWN0b3IvY29tcG9uZW50LW91dGxldC1pbmplY3Rvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHtcbiAgRHluYW1pY0NvbXBvbmVudEluamVjdG9yLFxuICBEeW5hbWljQ29tcG9uZW50SW5qZWN0b3JUb2tlbixcbn0gZnJvbSAnLi4vY29tcG9uZW50LWluamVjdG9yL3Rva2VuJztcbmltcG9ydCB7IElvU2VydmljZSB9IGZyb20gJy4uL2lvL2lvLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW5wdXRzVHlwZSwgT3V0cHV0c1R5cGUgfSBmcm9tICcuLi9pby90eXBlcyc7XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tY29uZmxpY3RpbmctbGlmZWN5Y2xlXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6XG4gICAgJ1tuZGNEeW5hbWljSW5wdXRzXSxbbmRjRHluYW1pY091dHB1dHNdLFtuZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNJbnB1dHNdLFtuZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzXScsXG4gIHByb3ZpZGVyczogW0lvU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIER5bmFtaWNJb0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgRG9DaGVjayB7XG4gIEBJbnB1dCgpXG4gIG5kY0R5bmFtaWNJbnB1dHM6IElucHV0c1R5cGU7XG4gIEBJbnB1dCgpXG4gIG5nQ29tcG9uZW50T3V0bGV0TmRjRHluYW1pY0lucHV0czogSW5wdXRzVHlwZTtcbiAgQElucHV0KClcbiAgbmRjRHluYW1pY091dHB1dHM6IE91dHB1dHNUeXBlO1xuICBASW5wdXQoKVxuICBuZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzOiBPdXRwdXRzVHlwZTtcblxuICBwcml2YXRlIGdldCBpbnB1dHMoKSB7XG4gICAgcmV0dXJuIHRoaXMubmRjRHluYW1pY0lucHV0cyB8fCB0aGlzLm5nQ29tcG9uZW50T3V0bGV0TmRjRHluYW1pY0lucHV0cztcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IG91dHB1dHMoKSB7XG4gICAgcmV0dXJuIHRoaXMubmRjRHluYW1pY091dHB1dHMgfHwgdGhpcy5uZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBpb1NlcnZpY2U6IElvU2VydmljZSxcbiAgICBASW5qZWN0KER5bmFtaWNDb21wb25lbnRJbmplY3RvclRva2VuKVxuICAgIEBPcHRpb25hbCgpXG4gICAgcHJpdmF0ZSBjb21wb25lbnRJbmplY3Rvcj86IER5bmFtaWNDb21wb25lbnRJbmplY3RvcixcbiAgKSB7XG4gICAgdGhpcy5pb1NlcnZpY2UuaW5pdCh0aGlzLmNvbXBvbmVudEluamVjdG9yKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICB0aGlzLmlvU2VydmljZS51cGRhdGUoXG4gICAgICB0aGlzLmlucHV0cyxcbiAgICAgIHRoaXMub3V0cHV0cyxcbiAgICAgIHRoaXMuaW5wdXRzQ2hhbmdlZChjaGFuZ2VzKSxcbiAgICAgIHRoaXMub3V0cHV0c0NoYW5nZWQoY2hhbmdlcyksXG4gICAgKTtcbiAgfVxuXG4gIG5nRG9DaGVjaygpIHtcbiAgICB0aGlzLmlvU2VydmljZS5tYXliZVVwZGF0ZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBpbnB1dHNDaGFuZ2VkKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgJ25nQ29tcG9uZW50T3V0bGV0TmRjRHluYW1pY0lucHV0cycgaW4gY2hhbmdlcyB8fFxuICAgICAgJ25kY0R5bmFtaWNJbnB1dHMnIGluIGNoYW5nZXNcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBvdXRwdXRzQ2hhbmdlZChjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIChcbiAgICAgICduZ0NvbXBvbmVudE91dGxldE5kY0R5bmFtaWNPdXRwdXRzJyBpbiBjaGFuZ2VzIHx8XG4gICAgICAnbmRjRHluYW1pY091dHB1dHMnIGluIGNoYW5nZXNcbiAgICApO1xuICB9XG59XG4iXX0=