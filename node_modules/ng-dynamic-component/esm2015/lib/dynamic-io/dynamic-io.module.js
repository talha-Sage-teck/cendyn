/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-io/dynamic-io.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';
import { DynamicIoDirective } from './dynamic-io.directive';
import * as ɵngcc0 from '@angular/core';
export class DynamicIoModule {
}
DynamicIoModule.ɵfac = function DynamicIoModule_Factory(t) { return new (t || DynamicIoModule)(); };
DynamicIoModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicIoModule });
DynamicIoModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule], ComponentOutletInjectorModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicIoModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [DynamicIoDirective, ComponentOutletInjectorModule],
                declarations: [DynamicIoDirective]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicIoModule, { declarations: function () { return [DynamicIoDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DynamicIoDirective, ComponentOutletInjectorModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1pby5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWR5bmFtaWMtY29tcG9uZW50L3NyYy9saWIvZHluYW1pYy1pby9keW5hbWljLWlvLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQU81RCxNQUFNLE9BQU8sZUFBZTtBQUFHOzJDQUw5QixRQUFRLFNBQUMsa0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWTtBQUFDLGtCQUN2QixPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSw2QkFBNkIsQ0FBQztPQUM1RCxZQUFZLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxlQUNuQzs7Ozs7Ozs7OzBUQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29tcG9uZW50T3V0bGV0SW5qZWN0b3JNb2R1bGUgfSBmcm9tICcuLi9jb21wb25lbnQtaW5qZWN0b3IvY29tcG9uZW50LW91dGxldC1pbmplY3Rvci5tb2R1bGUnO1xuaW1wb3J0IHsgRHluYW1pY0lvRGlyZWN0aXZlIH0gZnJvbSAnLi9keW5hbWljLWlvLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbRHluYW1pY0lvRGlyZWN0aXZlLCBDb21wb25lbnRPdXRsZXRJbmplY3Rvck1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW0R5bmFtaWNJb0RpcmVjdGl2ZV0sXG59KVxuZXhwb3J0IGNsYXNzIER5bmFtaWNJb01vZHVsZSB7fVxuIl19