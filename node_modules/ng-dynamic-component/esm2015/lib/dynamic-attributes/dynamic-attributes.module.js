/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-attributes/dynamic-attributes.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ComponentOutletInjectorModule } from '../component-injector/component-outlet-injector.module';
import { DynamicAttributesDirective } from './dynamic-attributes.directive';
import * as ɵngcc0 from '@angular/core';
export class DynamicAttributesModule {
}
DynamicAttributesModule.ɵfac = function DynamicAttributesModule_Factory(t) { return new (t || DynamicAttributesModule)(); };
DynamicAttributesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicAttributesModule });
DynamicAttributesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule], ComponentOutletInjectorModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicAttributesModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [DynamicAttributesDirective, ComponentOutletInjectorModule],
                declarations: [DynamicAttributesDirective]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicAttributesModule, { declarations: function () { return [DynamicAttributesDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DynamicAttributesDirective, ComponentOutletInjectorModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1hdHRyaWJ1dGVzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1jb21wb25lbnQvc3JjL2xpYi9keW5hbWljLWF0dHJpYnV0ZXMvZHluYW1pYy1hdHRyaWJ1dGVzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOztBQU81RSxNQUFNLE9BQU8sdUJBQXVCO0FBQUc7bURBTHRDLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7RUFDdkIsT0FBTyxFQUFFLENBQUMsMEJBQTBCLEVBQUUsNkJBQTZCLENBQUMsa0JBQ3BFLFlBQVksRUFBRSxDQUFDO3dCQUEwQixDQUFDLGVBQzNDOzs7Ozs7Ozs7a1ZBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb21wb25lbnRPdXRsZXRJbmplY3Rvck1vZHVsZSB9IGZyb20gJy4uL2NvbXBvbmVudC1pbmplY3Rvci9jb21wb25lbnQtb3V0bGV0LWluamVjdG9yLm1vZHVsZSc7XG5pbXBvcnQgeyBEeW5hbWljQXR0cmlidXRlc0RpcmVjdGl2ZSB9IGZyb20gJy4vZHluYW1pYy1hdHRyaWJ1dGVzLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbRHluYW1pY0F0dHJpYnV0ZXNEaXJlY3RpdmUsIENvbXBvbmVudE91dGxldEluamVjdG9yTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbRHluYW1pY0F0dHJpYnV0ZXNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljQXR0cmlidXRlc01vZHVsZSB7fVxuIl19