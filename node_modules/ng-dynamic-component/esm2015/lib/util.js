/**
 * @fileoverview added by tsickle
 * Generated from: lib/util.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { SimpleChange } from '@angular/core';
/**
 * @param {?} val
 * @return {?}
 */
export function createNewChange(val) {
    return new SimpleChange(undefined, val, true);
}
/**
 * @param {?} val
 * @param {?} prevVal
 * @return {?}
 */
export function createChange(val, prevVal) {
    return new SimpleChange(prevVal, val, false);
}
/**
 * @return {?}
 */
export function noop() { }
/**
 * @param {?} ctor
 * @param {?} reflect
 * @return {?}
 */
export function getCtorParamTypes(ctor, reflect) {
    return reflect.getMetadata('design:paramtypes', ctor);
}
/**
 * Extract type arguments from Angular Directive/Component
 * @param {?} type
 * @return {?}
 */
export function extractNgParamTypes(type) {
    var _a, _b, _c;
    // NOTE: Accessing private APIs of Angular
    return (_c = (_b = (_a = ((/** @type {?} */ (type)))) === null || _a === void 0 ? void 0 : _a.ctorParameters) === null || _b === void 0 ? void 0 : _b.call(_a)) === null || _c === void 0 ? void 0 : _c.map((/**
     * @param {?} param
     * @return {?}
     */
    param => param.type));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWNvbXBvbmVudC9zcmMvIiwic291cmNlcyI6WyJsaWIvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBd0IsWUFBWSxFQUFRLE1BQU0sZUFBZSxDQUFDOzs7OztBQUl6RSxNQUFNLFVBQVUsZUFBZSxDQUFDLEdBQVE7SUFDdEMsT0FBTyxJQUFJLFlBQVksQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hELENBQUM7Ozs7OztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsR0FBUSxFQUFFLE9BQVk7SUFDakQsT0FBTyxJQUFJLFlBQVksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQy9DLENBQUM7Ozs7QUFFRCxNQUFNLFVBQVUsSUFBSSxLQUFVLENBQUM7Ozs7OztBQUUvQixNQUFNLFVBQVUsaUJBQWlCLENBQy9CLElBQVMsRUFDVCxPQUE4RDtJQUU5RCxPQUFPLE9BQU8sQ0FBQyxXQUFXLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDeEQsQ0FBQzs7Ozs7O0FBS0QsTUFBTSxVQUFVLG1CQUFtQixDQUFDLElBQWU7O0lBQ2pELDBDQUEwQztJQUMxQyx5QkFBTyxDQUFDLG1CQUFBLElBQUksRUFBTyxDQUFDLDBDQUFFLGNBQWMsNEZBQU0sR0FBRzs7OztJQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRTtBQUNyRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5VmFsdWVDaGFuZ2VSZWNvcmQsIFNpbXBsZUNoYW5nZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBLZXlWYWx1ZUNoYW5nZVJlY29yZEFueSA9IEtleVZhbHVlQ2hhbmdlUmVjb3JkPGFueSwgYW55PjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5ld0NoYW5nZSh2YWw6IGFueSk6IFNpbXBsZUNoYW5nZSB7XG4gIHJldHVybiBuZXcgU2ltcGxlQ2hhbmdlKHVuZGVmaW5lZCwgdmFsLCB0cnVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNoYW5nZSh2YWw6IGFueSwgcHJldlZhbDogYW55KTogU2ltcGxlQ2hhbmdlIHtcbiAgcmV0dXJuIG5ldyBTaW1wbGVDaGFuZ2UocHJldlZhbCwgdmFsLCBmYWxzZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBub29wKCk6IHZvaWQge31cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEN0b3JQYXJhbVR5cGVzKFxuICBjdG9yOiBhbnksXG4gIHJlZmxlY3Q6IHsgZ2V0TWV0YWRhdGE6ICh0eXBlOiBzdHJpbmcsIG9iajogb2JqZWN0KSA9PiBhbnlbXSB9LFxuKTogYW55W10ge1xuICByZXR1cm4gcmVmbGVjdC5nZXRNZXRhZGF0YSgnZGVzaWduOnBhcmFtdHlwZXMnLCBjdG9yKTtcbn1cblxuLyoqXG4gKiBFeHRyYWN0IHR5cGUgYXJndW1lbnRzIGZyb20gQW5ndWxhciBEaXJlY3RpdmUvQ29tcG9uZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0TmdQYXJhbVR5cGVzKHR5cGU6IFR5cGU8YW55Pik6IGFueVtdIHwgdW5kZWZpbmVkIHtcbiAgLy8gTk9URTogQWNjZXNzaW5nIHByaXZhdGUgQVBJcyBvZiBBbmd1bGFyXG4gIHJldHVybiAodHlwZSBhcyBhbnkpPy5jdG9yUGFyYW1ldGVycz8uKCk/Lm1hcChwYXJhbSA9PiBwYXJhbS50eXBlKTtcbn1cbiJdfQ==