{"version":3,"file":"ngx-chips.js","sources":["ngx-chips/core/pipes/highlight.pipe.ts","ngx-chips/core/constants/index.ts","ngx-chips/core/providers/drag-provider.ts","ngx-chips/defaults.ts","ngx-chips/core/providers/options-provider.ts","ngx-chips/core/accessor.ts","ngx-chips/core/helpers/listen.ts","ngx-chips/components/tag-input-form/tag-input-form.component.ts","ngx-chips/components/tag/tag-ripple.component.ts","ngx-chips/components/tag/tag.component.ts","ngx-chips/components/tag-input/animations.ts","ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ngx-chips/components/tag-input/tag-input.ts","ngx-chips/components/icon/icon.ts","ngx-chips/tag-input.module.ts","ngx-chips/ngx-chips.ts"],"names":["constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    46: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input, Directive } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\n@Directive()\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input') public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple)\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = typeof window !== 'undefined' && (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow & typeof globalThis).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow & typeof globalThis).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as ɵb} from './components/tag-input/animations';\nexport {TagInputAccessor as ɵa} from './core/accessor';\nexport {HighlightPipe as ɵd} from './core/pipes/highlight.pipe';\nexport {DragProvider as ɵc} from './core/providers/drag-provider';"]}