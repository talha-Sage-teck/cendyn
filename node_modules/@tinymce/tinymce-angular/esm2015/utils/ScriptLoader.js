/**
 * Copyright (c) 2017-present, Ephox, Inc.
 *
 * This source code is licensed under the Apache 2 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { uuid } from './Utils';
const createState = () => ({
    listeners: [],
    scriptId: uuid('tiny-script'),
    scriptLoaded: false
});
const ɵ0 = createState;
const CreateScriptLoader = () => {
    let state = createState();
    const injectScriptTag = (scriptId, doc, url, callback) => {
        const scriptTag = doc.createElement('script');
        scriptTag.referrerPolicy = 'origin';
        scriptTag.type = 'application/javascript';
        scriptTag.id = scriptId;
        scriptTag.src = url;
        const handler = () => {
            scriptTag.removeEventListener('load', handler);
            callback();
        };
        scriptTag.addEventListener('load', handler);
        if (doc.head) {
            doc.head.appendChild(scriptTag);
        }
    };
    const load = (doc, url, callback) => {
        if (state.scriptLoaded) {
            callback();
        }
        else {
            state.listeners.push(callback);
            if (!doc.getElementById(state.scriptId)) {
                injectScriptTag(state.scriptId, doc, url, () => {
                    state.listeners.forEach((fn) => fn());
                    state.scriptLoaded = true;
                });
            }
        }
    };
    // Only to be used by tests.
    const reinitialize = () => {
        state = createState();
    };
    return {
        load,
        reinitialize
    };
};
const ɵ1 = CreateScriptLoader;
const ScriptLoader = CreateScriptLoader();
export { ScriptLoader };
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NyaXB0TG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdGlueW1jZS1hbmd1bGFyLWNvbXBvbmVudC9zcmMvbWFpbi90cy91dGlscy9TY3JpcHRMb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQVMvQixNQUFNLFdBQVcsR0FBRyxHQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQ3BDLFNBQVMsRUFBRSxFQUFFO0lBQ2IsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDN0IsWUFBWSxFQUFFLEtBQUs7Q0FDcEIsQ0FBQyxDQUFDOztBQU9ILE1BQU0sa0JBQWtCLEdBQUcsR0FBaUIsRUFBRTtJQUM1QyxJQUFJLEtBQUssR0FBYyxXQUFXLEVBQUUsQ0FBQztJQUVyQyxNQUFNLGVBQWUsR0FBRyxDQUFDLFFBQWdCLEVBQUUsR0FBYSxFQUFFLEdBQVcsRUFBRSxRQUFvQixFQUFFLEVBQUU7UUFDN0YsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QyxTQUFTLENBQUMsY0FBYyxHQUFHLFFBQVEsQ0FBQztRQUNwQyxTQUFTLENBQUMsSUFBSSxHQUFHLHdCQUF3QixDQUFDO1FBQzFDLFNBQVMsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBRXBCLE1BQU0sT0FBTyxHQUFHLEdBQUcsRUFBRTtZQUNuQixTQUFTLENBQUMsbUJBQW1CLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQy9DLFFBQVEsRUFBRSxDQUFDO1FBQ2IsQ0FBQyxDQUFDO1FBQ0YsU0FBUyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUM1QyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQUU7WUFDWixHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNqQztJQUNILENBQUMsQ0FBQztJQUVGLE1BQU0sSUFBSSxHQUFHLENBQUMsR0FBYSxFQUFFLEdBQVcsRUFBRSxRQUFvQixFQUFFLEVBQUU7UUFDaEUsSUFBSSxLQUFLLENBQUMsWUFBWSxFQUFFO1lBQ3RCLFFBQVEsRUFBRSxDQUFDO1NBQ1o7YUFBTTtZQUNMLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRTtnQkFDdkMsZUFBZSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7b0JBQzdDLEtBQUssQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUN0QyxLQUFLLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztnQkFDNUIsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0lBRUYsNEJBQTRCO0lBQzVCLE1BQU0sWUFBWSxHQUFHLEdBQUcsRUFBRTtRQUN4QixLQUFLLEdBQUcsV0FBVyxFQUFFLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0lBRUYsT0FBTztRQUNMLElBQUk7UUFDSixZQUFZO0tBQ2IsQ0FBQztBQUNKLENBQUMsQ0FBQzs7QUFFRixNQUFNLFlBQVksR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0FBRTFDLE9BQU8sRUFDTCxZQUFZLEVBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEVwaG94LCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuaW1wb3J0IHsgdXVpZCB9IGZyb20gJy4vVXRpbHMnO1xuXG5leHBvcnQgdHlwZSBjYWxsYmFja0ZuID0gKCkgPT4gdm9pZDtcbmV4cG9ydCBpbnRlcmZhY2UgSVN0YXRlT2JqIHtcbiAgbGlzdGVuZXJzOiBjYWxsYmFja0ZuW107XG4gIHNjcmlwdElkOiBzdHJpbmc7XG4gIHNjcmlwdExvYWRlZDogYm9vbGVhbjtcbn1cblxuY29uc3QgY3JlYXRlU3RhdGUgPSAoKTogSVN0YXRlT2JqID0+ICh7XG4gIGxpc3RlbmVyczogW10sXG4gIHNjcmlwdElkOiB1dWlkKCd0aW55LXNjcmlwdCcpLFxuICBzY3JpcHRMb2FkZWQ6IGZhbHNlXG59KTtcblxuaW50ZXJmYWNlIFNjcmlwdExvYWRlciB7XG4gIGxvYWQ6IChkb2M6IERvY3VtZW50LCB1cmw6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrRm4pID0+IHZvaWQ7XG4gIHJlaW5pdGlhbGl6ZTogKCkgPT4gdm9pZDtcbn1cblxuY29uc3QgQ3JlYXRlU2NyaXB0TG9hZGVyID0gKCk6IFNjcmlwdExvYWRlciA9PiB7XG4gIGxldCBzdGF0ZTogSVN0YXRlT2JqID0gY3JlYXRlU3RhdGUoKTtcblxuICBjb25zdCBpbmplY3RTY3JpcHRUYWcgPSAoc2NyaXB0SWQ6IHN0cmluZywgZG9jOiBEb2N1bWVudCwgdXJsOiBzdHJpbmcsIGNhbGxiYWNrOiBjYWxsYmFja0ZuKSA9PiB7XG4gICAgY29uc3Qgc2NyaXB0VGFnID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHNjcmlwdFRhZy5yZWZlcnJlclBvbGljeSA9ICdvcmlnaW4nO1xuICAgIHNjcmlwdFRhZy50eXBlID0gJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnO1xuICAgIHNjcmlwdFRhZy5pZCA9IHNjcmlwdElkO1xuICAgIHNjcmlwdFRhZy5zcmMgPSB1cmw7XG5cbiAgICBjb25zdCBoYW5kbGVyID0gKCkgPT4ge1xuICAgICAgc2NyaXB0VGFnLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBoYW5kbGVyKTtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfTtcbiAgICBzY3JpcHRUYWcuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGhhbmRsZXIpO1xuICAgIGlmIChkb2MuaGVhZCkge1xuICAgICAgZG9jLmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0VGFnKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgbG9hZCA9IChkb2M6IERvY3VtZW50LCB1cmw6IHN0cmluZywgY2FsbGJhY2s6IGNhbGxiYWNrRm4pID0+IHtcbiAgICBpZiAoc3RhdGUuc2NyaXB0TG9hZGVkKSB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdGF0ZS5saXN0ZW5lcnMucHVzaChjYWxsYmFjayk7XG4gICAgICBpZiAoIWRvYy5nZXRFbGVtZW50QnlJZChzdGF0ZS5zY3JpcHRJZCkpIHtcbiAgICAgICAgaW5qZWN0U2NyaXB0VGFnKHN0YXRlLnNjcmlwdElkLCBkb2MsIHVybCwgKCkgPT4ge1xuICAgICAgICAgIHN0YXRlLmxpc3RlbmVycy5mb3JFYWNoKChmbikgPT4gZm4oKSk7XG4gICAgICAgICAgc3RhdGUuc2NyaXB0TG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8vIE9ubHkgdG8gYmUgdXNlZCBieSB0ZXN0cy5cbiAgY29uc3QgcmVpbml0aWFsaXplID0gKCkgPT4ge1xuICAgIHN0YXRlID0gY3JlYXRlU3RhdGUoKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGxvYWQsXG4gICAgcmVpbml0aWFsaXplXG4gIH07XG59O1xuXG5jb25zdCBTY3JpcHRMb2FkZXIgPSBDcmVhdGVTY3JpcHRMb2FkZXIoKTtcblxuZXhwb3J0IHtcbiAgU2NyaXB0TG9hZGVyXG59OyJdfQ==