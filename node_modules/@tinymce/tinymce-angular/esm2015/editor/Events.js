import { Output, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class Events {
    constructor() {
        this.onBeforePaste = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onClick = new EventEmitter();
        this.onContextMenu = new EventEmitter();
        this.onCopy = new EventEmitter();
        this.onCut = new EventEmitter();
        this.onDblclick = new EventEmitter();
        this.onDrag = new EventEmitter();
        this.onDragDrop = new EventEmitter();
        this.onDragEnd = new EventEmitter();
        this.onDragGesture = new EventEmitter();
        this.onDragOver = new EventEmitter();
        this.onDrop = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onKeyDown = new EventEmitter();
        this.onKeyPress = new EventEmitter();
        this.onKeyUp = new EventEmitter();
        this.onMouseDown = new EventEmitter();
        this.onMouseEnter = new EventEmitter();
        this.onMouseLeave = new EventEmitter();
        this.onMouseMove = new EventEmitter();
        this.onMouseOut = new EventEmitter();
        this.onMouseOver = new EventEmitter();
        this.onMouseUp = new EventEmitter();
        this.onPaste = new EventEmitter();
        this.onSelectionChange = new EventEmitter();
        this.onActivate = new EventEmitter();
        this.onAddUndo = new EventEmitter();
        this.onBeforeAddUndo = new EventEmitter();
        this.onBeforeExecCommand = new EventEmitter();
        this.onBeforeGetContent = new EventEmitter();
        this.onBeforeRenderUI = new EventEmitter();
        this.onBeforeSetContent = new EventEmitter();
        this.onChange = new EventEmitter();
        this.onClearUndos = new EventEmitter();
        this.onDeactivate = new EventEmitter();
        this.onDirty = new EventEmitter();
        this.onExecCommand = new EventEmitter();
        this.onGetContent = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onInit = new EventEmitter();
        this.onInitNgModel = new EventEmitter();
        this.onLoadContent = new EventEmitter();
        this.onNodeChange = new EventEmitter();
        this.onPostProcess = new EventEmitter();
        this.onPostRender = new EventEmitter();
        this.onPreInit = new EventEmitter();
        this.onPreProcess = new EventEmitter();
        this.onProgressState = new EventEmitter();
        this.onRedo = new EventEmitter();
        this.onRemove = new EventEmitter();
        this.onReset = new EventEmitter();
        this.onResizeEditor = new EventEmitter();
        this.onSaveContent = new EventEmitter();
        this.onSetAttrib = new EventEmitter();
        this.onObjectResizeStart = new EventEmitter();
        this.onObjectResized = new EventEmitter();
        this.onObjectSelected = new EventEmitter();
        this.onSetContent = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onSubmit = new EventEmitter();
        this.onUndo = new EventEmitter();
        this.onVisualAid = new EventEmitter();
    }
}
Events.ɵfac = function Events_Factory(t) { return new (t || Events)(); };
Events.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: Events, outputs: { onBeforePaste: "onBeforePaste", onBlur: "onBlur", onClick: "onClick", onContextMenu: "onContextMenu", onCopy: "onCopy", onCut: "onCut", onDblclick: "onDblclick", onDrag: "onDrag", onDragDrop: "onDragDrop", onDragEnd: "onDragEnd", onDragGesture: "onDragGesture", onDragOver: "onDragOver", onDrop: "onDrop", onFocus: "onFocus", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onKeyDown: "onKeyDown", onKeyPress: "onKeyPress", onKeyUp: "onKeyUp", onMouseDown: "onMouseDown", onMouseEnter: "onMouseEnter", onMouseLeave: "onMouseLeave", onMouseMove: "onMouseMove", onMouseOut: "onMouseOut", onMouseOver: "onMouseOver", onMouseUp: "onMouseUp", onPaste: "onPaste", onSelectionChange: "onSelectionChange", onActivate: "onActivate", onAddUndo: "onAddUndo", onBeforeAddUndo: "onBeforeAddUndo", onBeforeExecCommand: "onBeforeExecCommand", onBeforeGetContent: "onBeforeGetContent", onBeforeRenderUI: "onBeforeRenderUI", onBeforeSetContent: "onBeforeSetContent", onChange: "onChange", onClearUndos: "onClearUndos", onDeactivate: "onDeactivate", onDirty: "onDirty", onExecCommand: "onExecCommand", onGetContent: "onGetContent", onHide: "onHide", onInit: "onInit", onInitNgModel: "onInitNgModel", onLoadContent: "onLoadContent", onNodeChange: "onNodeChange", onPostProcess: "onPostProcess", onPostRender: "onPostRender", onPreInit: "onPreInit", onPreProcess: "onPreProcess", onProgressState: "onProgressState", onRedo: "onRedo", onRemove: "onRemove", onReset: "onReset", onResizeEditor: "onResizeEditor", onSaveContent: "onSaveContent", onSetAttrib: "onSetAttrib", onObjectResizeStart: "onObjectResizeStart", onObjectResized: "onObjectResized", onObjectSelected: "onObjectSelected", onSetContent: "onSetContent", onShow: "onShow", onSubmit: "onSubmit", onUndo: "onUndo", onVisualAid: "onVisualAid" } });
Events.propDecorators = {
    onBeforePaste: [{ type: Output }],
    onBlur: [{ type: Output }],
    onClick: [{ type: Output }],
    onContextMenu: [{ type: Output }],
    onCopy: [{ type: Output }],
    onCut: [{ type: Output }],
    onDblclick: [{ type: Output }],
    onDrag: [{ type: Output }],
    onDragDrop: [{ type: Output }],
    onDragEnd: [{ type: Output }],
    onDragGesture: [{ type: Output }],
    onDragOver: [{ type: Output }],
    onDrop: [{ type: Output }],
    onFocus: [{ type: Output }],
    onFocusIn: [{ type: Output }],
    onFocusOut: [{ type: Output }],
    onKeyDown: [{ type: Output }],
    onKeyPress: [{ type: Output }],
    onKeyUp: [{ type: Output }],
    onMouseDown: [{ type: Output }],
    onMouseEnter: [{ type: Output }],
    onMouseLeave: [{ type: Output }],
    onMouseMove: [{ type: Output }],
    onMouseOut: [{ type: Output }],
    onMouseOver: [{ type: Output }],
    onMouseUp: [{ type: Output }],
    onPaste: [{ type: Output }],
    onSelectionChange: [{ type: Output }],
    onActivate: [{ type: Output }],
    onAddUndo: [{ type: Output }],
    onBeforeAddUndo: [{ type: Output }],
    onBeforeExecCommand: [{ type: Output }],
    onBeforeGetContent: [{ type: Output }],
    onBeforeRenderUI: [{ type: Output }],
    onBeforeSetContent: [{ type: Output }],
    onChange: [{ type: Output }],
    onClearUndos: [{ type: Output }],
    onDeactivate: [{ type: Output }],
    onDirty: [{ type: Output }],
    onExecCommand: [{ type: Output }],
    onGetContent: [{ type: Output }],
    onHide: [{ type: Output }],
    onInit: [{ type: Output }],
    onInitNgModel: [{ type: Output }],
    onLoadContent: [{ type: Output }],
    onNodeChange: [{ type: Output }],
    onPostProcess: [{ type: Output }],
    onPostRender: [{ type: Output }],
    onPreInit: [{ type: Output }],
    onPreProcess: [{ type: Output }],
    onProgressState: [{ type: Output }],
    onRedo: [{ type: Output }],
    onRemove: [{ type: Output }],
    onReset: [{ type: Output }],
    onResizeEditor: [{ type: Output }],
    onSaveContent: [{ type: Output }],
    onSetAttrib: [{ type: Output }],
    onObjectResizeStart: [{ type: Output }],
    onObjectResized: [{ type: Output }],
    onObjectSelected: [{ type: Output }],
    onSetContent: [{ type: Output }],
    onShow: [{ type: Output }],
    onSubmit: [{ type: Output }],
    onUndo: [{ type: Output }],
    onVisualAid: [{ type: Output }]
};

export const validEvents = [
    'onActivate',
    'onAddUndo',
    'onBeforeAddUndo',
    'onBeforeExecCommand',
    'onBeforeGetContent',
    'onBeforeRenderUI',
    'onBeforeSetContent',
    'onBeforePaste',
    'onBlur',
    'onChange',
    'onClearUndos',
    'onClick',
    'onContextMenu',
    'onCopy',
    'onCut',
    'onDblclick',
    'onDeactivate',
    'onDirty',
    'onDrag',
    'onDragDrop',
    'onDragEnd',
    'onDragGesture',
    'onDragOver',
    'onDrop',
    'onExecCommand',
    'onFocus',
    'onFocusIn',
    'onFocusOut',
    'onGetContent',
    'onHide',
    'onInit',
    'onKeyDown',
    'onKeyPress',
    'onKeyUp',
    'onLoadContent',
    'onMouseDown',
    'onMouseEnter',
    'onMouseLeave',
    'onMouseMove',
    'onMouseOut',
    'onMouseOver',
    'onMouseUp',
    'onNodeChange',
    'onObjectResizeStart',
    'onObjectResized',
    'onObjectSelected',
    'onPaste',
    'onPostProcess',
    'onPostRender',
    'onPreProcess',
    'onProgressState',
    'onRedo',
    'onRemove',
    'onReset',
    'onResizeEditor',
    'onSaveContent',
    'onSelectionChange',
    'onSetAttrib',
    'onSetContent',
    'onShow',
    'onSubmit',
    'onUndo',
    'onVisualAid'
];

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRzLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90aW55bWNlLWFuZ3VsYXItY29tcG9uZW50L3NyYy9tYWluL3RzL2VkaXRvci9FdmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBT3JELE1BQU0sT0FBTyxNQUFNO0FBQ25CLElBREE7QUFBZ0IsUUFDRyxrQkFBYSxHQUEyQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzlGLFFBQW1CLFdBQU0sR0FBdUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUNuRixRQUFtQixZQUFPLEdBQXVDLElBQUksWUFBWSxFQUFFLENBQUM7QUFDcEYsUUFBbUIsa0JBQWEsR0FBdUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUMxRixRQUFtQixXQUFNLEdBQTJDLElBQUksWUFBWSxFQUFFLENBQUM7QUFDdkYsUUFBbUIsVUFBSyxHQUEyQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3RGLFFBQW1CLGVBQVUsR0FBdUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUN2RixRQUFtQixXQUFNLEdBQXNDLElBQUksWUFBWSxFQUFFLENBQUM7QUFDbEYsUUFBbUIsZUFBVSxHQUFzQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3RGLFFBQW1CLGNBQVMsR0FBc0MsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUNyRixRQUFtQixrQkFBYSxHQUFzQyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3pGLFFBQW1CLGVBQVUsR0FBc0MsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUN0RixRQUFtQixXQUFNLEdBQXNDLElBQUksWUFBWSxFQUFFLENBQUM7QUFDbEYsUUFBbUIsWUFBTyxHQUF1QyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3BGLFFBQW1CLGNBQVMsR0FBdUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUN0RixRQUFtQixlQUFVLEdBQXVDLElBQUksWUFBWSxF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LFdBQVc7QUFDYixJQUFFLGVBQWU7QUFDakIsSUFBRSxZQUFZO0FBQ2QsSUFBRSxRQUFRO0FBQ1YsSUFBRSxlQUFlO0FBQ2pCLElBQUUsU0FBUztBQUNYLElBQUUsV0FBVztBQUNiLElBQUUsWUFBWTtBQUNkLElBQUUsY0FBYztBQUNoQixJQUFFLFFBQVE7QUFDVixJQUFFLFFBQVE7QUFDVixJQUFFLFdBQVc7QUFDYixJQUFFLFlBQVk7QUFDZCxJQUFFLFNBQVM7QUFDWCxJQUFFLGVBQWU7QUFDakIsSUFBRSxhQUFhO0FBQ2YsSUFBRSxjQUFjO0FBQ2hCLElBQUUsY0FBYztBQUNoQixJQUFFLGFBQWE7QUFDZixJQUFFLFlBQVk7QUFDZCxJQUFFLGFBQWE7QUFDZixJQUFFLFdBQVc7QUFDYixJQUFFLGNBQWM7QUFDaEIsSUFBRSxxQkFBcUI7QUFDdkIsSUFBRSxpQkFBaUI7QUFDbkIsSUFBRSxrQkFBa0I7QUFDcEIsSUFBRSxTQUFTO0FBQ1gsSUFBRSxlQUFlO0FBQ2pCLElBQUUsY0FBYztBQUNoQixJQUFFLGNBQWM7QUFDaEIsSUFBRSxpQkFBaUI7QUFDbkIsSUFBRSxRQUFRO0FBQ1YsSUFBRSxVQUFVO0FBQ1osSUFBRSxTQUFTO0FBQ1gsSUFBRSxnQkFBZ0I7QUFDbEIsSUFBRSxlQUFlO0FBQ2pCLElBQUUsbUJBQW1CO0FBQ3JCLElBQUUsYUFBYTtBQUNmLElBQUUsY0FBYztBQUNoQixJQUFFLFFBQVE7QUFDVixJQUFFLFVBQVU7QUFDWixJQUFFLFFBQVE7QUFDVixJQUFFLGFBQWE7QUFDZixDQUFDLENBQUM7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRPYmo8VD4ge1xuICBldmVudDogVDtcbiAgZWRpdG9yOiBhbnk7XG59XG5cbmV4cG9ydCBjbGFzcyBFdmVudHMge1xuICBAT3V0cHV0KCkgcHVibGljIG9uQmVmb3JlUGFzdGU6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxDbGlwYm9hcmRFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uQmx1cjogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPEZvY3VzRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkNsaWNrOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8TW91c2VFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uQ29udGV4dE1lbnU6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxNb3VzZUV2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25Db3B5OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8Q2xpcGJvYXJkRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkN1dDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPENsaXBib2FyZEV2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25EYmxjbGljazogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPE1vdXNlRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkRyYWc6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxEcmFnRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkRyYWdEcm9wOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8RHJhZ0V2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25EcmFnRW5kOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8RHJhZ0V2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25EcmFnR2VzdHVyZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPERyYWdFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uRHJhZ092ZXI6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxEcmFnRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkRyb3A6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxEcmFnRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8Rm9jdXNFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uRm9jdXNJbjogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPEZvY3VzRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkZvY3VzT3V0OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8Rm9jdXNFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uS2V5RG93bjogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPEtleWJvYXJkRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbktleVByZXNzOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8S2V5Ym9hcmRFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uS2V5VXA6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxLZXlib2FyZEV2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25Nb3VzZURvd246IEV2ZW50RW1pdHRlcjxFdmVudE9iajxNb3VzZUV2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25Nb3VzZUVudGVyOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8TW91c2VFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uTW91c2VMZWF2ZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPE1vdXNlRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbk1vdXNlTW92ZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPE1vdXNlRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbk1vdXNlT3V0OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8TW91c2VFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uTW91c2VPdmVyOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8TW91c2VFdmVudD4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uTW91c2VVcDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPE1vdXNlRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvblBhc3RlOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8Q2xpcGJvYXJkRXZlbnQ+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvblNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPEV2ZW50Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25BY3RpdmF0ZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uQWRkVW5kbzogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uQmVmb3JlQWRkVW5kbzogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uQmVmb3JlRXhlY0NvbW1hbmQ6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkJlZm9yZUdldENvbnRlbnQ6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkJlZm9yZVJlbmRlclVJOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25CZWZvcmVTZXRDb250ZW50OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkNsZWFyVW5kb3M6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkRpcnR5OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25FeGVjQ29tbWFuZDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uR2V0Q29udGVudDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uSGlkZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uSW5pdDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uSW5pdE5nTW9kZWw6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvbkxvYWRDb250ZW50OiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25Ob2RlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25Qb3N0UHJvY2VzczogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUG9zdFJlbmRlcjogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUHJlSW5pdDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUHJlUHJvY2VzczogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUHJvZ3Jlc3NTdGF0ZTogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUmVkbzogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUmVtb3ZlOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25SZXNldDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uUmVzaXplRWRpdG9yOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25TYXZlQ29udGVudDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uU2V0QXR0cmliOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBwdWJsaWMgb25PYmplY3RSZXNpemVTdGFydDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uT2JqZWN0UmVzaXplZDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uT2JqZWN0U2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvblNldENvbnRlbnQ6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvblNob3c6IEV2ZW50RW1pdHRlcjxFdmVudE9iajxhbnk+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHB1YmxpYyBvblN1Ym1pdDogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uVW5kbzogRXZlbnRFbWl0dGVyPEV2ZW50T2JqPGFueT4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgcHVibGljIG9uVmlzdWFsQWlkOiBFdmVudEVtaXR0ZXI8RXZlbnRPYmo8YW55Pj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG59XG5cbmV4cG9ydCBjb25zdCB2YWxpZEV2ZW50czogKGtleW9mIEV2ZW50cylbXSA9IFtcbiAgJ29uQWN0aXZhdGUnLFxuICAnb25BZGRVbmRvJyxcbiAgJ29uQmVmb3JlQWRkVW5kbycsXG4gICdvbkJlZm9yZUV4ZWNDb21tYW5kJyxcbiAgJ29uQmVmb3JlR2V0Q29udGVudCcsXG4gICdvbkJlZm9yZVJlbmRlclVJJyxcbiAgJ29uQmVmb3JlU2V0Q29udGVudCcsXG4gICdvbkJlZm9yZVBhc3RlJyxcbiAgJ29uQmx1cicsXG4gICdvbkNoYW5nZScsXG4gICdvbkNsZWFyVW5kb3MnLFxuICAnb25DbGljaycsXG4gICdvbkNvbnRleHRNZW51JyxcbiAgJ29uQ29weScsXG4gICdvbkN1dCcsXG4gICdvbkRibGNsaWNrJyxcbiAgJ29uRGVhY3RpdmF0ZScsXG4gICdvbkRpcnR5JyxcbiAgJ29uRHJhZycsXG4gICdvbkRyYWdEcm9wJyxcbiAgJ29uRHJhZ0VuZCcsXG4gICdvbkRyYWdHZXN0dXJlJyxcbiAgJ29uRHJhZ092ZXInLFxuICAnb25Ecm9wJyxcbiAgJ29uRXhlY0NvbW1hbmQnLFxuICAnb25Gb2N1cycsXG4gICdvbkZvY3VzSW4nLFxuICAnb25Gb2N1c091dCcsXG4gICdvbkdldENvbnRlbnQnLFxuICAnb25IaWRlJyxcbiAgJ29uSW5pdCcsXG4gICdvbktleURvd24nLFxuICAnb25LZXlQcmVzcycsXG4gICdvbktleVVwJyxcbiAgJ29uTG9hZENvbnRlbnQnLFxuICAnb25Nb3VzZURvd24nLFxuICAnb25Nb3VzZUVudGVyJyxcbiAgJ29uTW91c2VMZWF2ZScsXG4gICdvbk1vdXNlTW92ZScsXG4gICdvbk1vdXNlT3V0JyxcbiAgJ29uTW91c2VPdmVyJyxcbiAgJ29uTW91c2VVcCcsXG4gICdvbk5vZGVDaGFuZ2UnLFxuICAnb25PYmplY3RSZXNpemVTdGFydCcsXG4gICdvbk9iamVjdFJlc2l6ZWQnLFxuICAnb25PYmplY3RTZWxlY3RlZCcsXG4gICdvblBhc3RlJyxcbiAgJ29uUG9zdFByb2Nlc3MnLFxuICAnb25Qb3N0UmVuZGVyJyxcbiAgJ29uUHJlUHJvY2VzcycsXG4gICdvblByb2dyZXNzU3RhdGUnLFxuICAnb25SZWRvJyxcbiAgJ29uUmVtb3ZlJyxcbiAgJ29uUmVzZXQnLFxuICAnb25SZXNpemVFZGl0b3InLFxuICAnb25TYXZlQ29udGVudCcsXG4gICdvblNlbGVjdGlvbkNoYW5nZScsXG4gICdvblNldEF0dHJpYicsXG4gICdvblNldENvbnRlbnQnLFxuICAnb25TaG93JyxcbiAgJ29uU3VibWl0JyxcbiAgJ29uVW5kbycsXG4gICdvblZpc3VhbEFpZCdcbl07XG4iXX0=