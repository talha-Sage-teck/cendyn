import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { AdvancedPieChartComponent } from './advanced-pie-chart.component';
import { PieLabelComponent } from './pie-label.component';
import { PieArcComponent } from './pie-arc.component';
import { PieChartComponent } from './pie-chart.component';
import { PieGridComponent } from './pie-grid.component';
import { PieGridSeriesComponent } from './pie-grid-series.component';
import { PieSeriesComponent } from './pie-series.component';
import * as ɵngcc0 from '@angular/core';
export class PieChartModule {
}
PieChartModule.ɵfac = function PieChartModule_Factory(t) { return new (t || PieChartModule)(); };
PieChartModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PieChartModule });
PieChartModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ChartCommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PieChartModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ],
                exports: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PieChartModule, { declarations: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWNoYXJ0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvc3dpbWxhbmUvbmd4LWNoYXJ0cy9zcmMvbGliL3BpZS1jaGFydC9waWUtY2hhcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQXVCNUQsTUFBTSxPQUFPLGNBQWM7QUFBRzswQ0FyQjdCLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUUsQ0FBQztNQUFpQixDQUFDLGtCQUM1QixZQUFZLEVBQUUsc0JBQ1oseUJBQXlCO3FCQUN6QixpQkFBaUIsc0JBQ2pCLGVBQWU7QUFDZixpQkFBaUIsc0JBQ2pCLGdCQUFnQixzQkFDaEIsc0JBQXNCO1dBQ3RCO0tBQWtCO01BQ25CLGtCQUNELE9BQU8sRUFBRTtTQUNQO0VBQXlCLHNCQUN6QixpQkFBaUI7Z0JBQ2pCLGVBQWU7Y0FDZixpQkFBaUI7Z0JBQ2pCLGdCQUFnQjtlQUNoQixzQkFBc0I7cUJBQ3RCLGtCQUFrQjthQUNuQixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dDQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY2hhcnQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBBZHZhbmNlZFBpZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9hZHZhbmNlZC1waWUtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUxhYmVsQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtbGFiZWwuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUFyY0NvbXBvbmVudCB9IGZyb20gJy4vcGllLWFyYy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL3BpZS1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllR3JpZENvbXBvbmVudCB9IGZyb20gJy4vcGllLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUdyaWRTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL3BpZS1ncmlkLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtc2VyaWVzLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDaGFydENvbW1vbk1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQsXG4gICAgUGllTGFiZWxDb21wb25lbnQsXG4gICAgUGllQXJjQ29tcG9uZW50LFxuICAgIFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUdyaWRDb21wb25lbnQsXG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudCxcbiAgICBQaWVTZXJpZXNDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQsXG4gICAgUGllTGFiZWxDb21wb25lbnQsXG4gICAgUGllQXJjQ29tcG9uZW50LFxuICAgIFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUdyaWRDb21wb25lbnQsXG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudCxcbiAgICBQaWVTZXJpZXNDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQaWVDaGFydE1vZHVsZSB7fVxuIl19