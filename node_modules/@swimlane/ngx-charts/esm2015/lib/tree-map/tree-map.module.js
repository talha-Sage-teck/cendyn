import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { TreeMapCellComponent } from './tree-map-cell.component';
import { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';
import { TreeMapComponent } from './tree-map.component';
import * as ɵngcc0 from '@angular/core';
export class TreeMapModule {
}
TreeMapModule.ɵfac = function TreeMapModule_Factory(t) { return new (t || TreeMapModule)(); };
TreeMapModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TreeMapModule });
TreeMapModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ChartCommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TreeMapModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],
                exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TreeMapModule, { declarations: function () { return [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1tYXAubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9zd2ltbGFuZS9uZ3gtY2hhcnRzL3NyYy9saWIvdHJlZS1tYXAvdHJlZS1tYXAubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBT3hELE1BQU0sT0FBTyxhQUFhO0FBQUc7eUNBTDVCLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUUsQ0FBQztRQUFpQixDQUFDLGtCQUM1QixZQUFZLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRTtLQUEwQixFQUFFLGdCQUFnQixDQUFDLGtCQUNsRixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRTtJQUEwQixFQUFFLGdCQUFnQixDQUFDLGNBQzlFOzs7Ozs7Ozs4WEFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoYXJ0Q29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NoYXJ0LWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgVHJlZU1hcENlbGxDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtbWFwLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IFRyZWVNYXBDZWxsU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLW1hcC1jZWxsLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVHJlZU1hcENvbXBvbmVudCB9IGZyb20gJy4vdHJlZS1tYXAuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NoYXJ0Q29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbVHJlZU1hcENlbGxDb21wb25lbnQsIFRyZWVNYXBDZWxsU2VyaWVzQ29tcG9uZW50LCBUcmVlTWFwQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1RyZWVNYXBDZWxsQ29tcG9uZW50LCBUcmVlTWFwQ2VsbFNlcmllc0NvbXBvbmVudCwgVHJlZU1hcENvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgVHJlZU1hcE1vZHVsZSB7fVxuIl19