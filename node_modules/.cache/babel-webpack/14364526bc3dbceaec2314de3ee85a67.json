{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, Directive, ElementRef, Input, HostListener, NgModule, EventEmitter, Output, CUSTOM_ELEMENTS_SCHEMA, Inject, LOCALE_ID, ViewChild, Pipe, ChangeDetectionStrategy, HostBinding, SecurityContext, NgModuleFactory, Compiler, NgZone } from '@angular/core';\nimport { BehaviorSubject, of, combineLatest, forkJoin, merge, Subject, EMPTY, throwError, Subscription, timer, isObservable, from } from 'rxjs';\nimport { map, distinctUntilChanged, tap, shareReplay, debounceTime, first, take, catchError, skip, filter, finalize, startWith, debounce, mergeMap, concatAll, toArray, concatMap } from 'rxjs/operators';\nimport * as i1 from 'apollo-angular';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport * as i5 from 'common';\nimport { deepClone, isVoid, emptyObject, Button, SelectionStatus, isFalse, BaseComponentRegistry, ActionHandler, isTrue, isEmptyString, MessageTypes, SortDirection, PageSelection, OverridableMap, BaseField, LineActionEvent, isEditable, ready, ALL_VIEW_MODES, RecordMapperRegistry } from 'common';\nimport { isString, merge as merge$1, isArray, floor } from 'lodash-es';\nimport * as i2 from '@angular/router';\nimport { Router, RouterModule, DefaultUrlSerializer, PRIMARY_OUTLET, UrlTree, ActivatedRoute } from '@angular/router';\nimport { CommonModule, formatNumber, formatDate, formatCurrency, DecimalPipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport * as i3 from 'angular-svg-icon';\nimport { SvgIconRegistryService, AngularSvgIconModule } from 'angular-svg-icon';\nimport { __rest } from 'tslib';\nimport * as i1$1 from '@angular/cdk/layout';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport * as i1$3 from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModule, NgbDropdownModule, NgbTooltipModule, NgbActiveModal, NgbCalendar, NgbPopoverConfig, NgbPopover, NgbDatepickerModule, NgbTimepickerModule, NgbDateParserFormatter, NgbDateAdapter, NgbModal, ModalDismissReasons, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport partial from 'lodash-es/partial';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { DynamicModule } from 'ng-dynamic-component';\nimport { moveItemInArray, transferArrayItem, DragDropModule } from '@angular/cdk/drag-drop';\nimport { DateTime } from 'luxon';\nimport get from 'lodash-es/get';\nimport { multiply, divide, round } from 'mathjs';\nimport { TagInputModule } from 'ngx-chips';\nimport { trigger, transition, animate, style, useAnimation } from '@angular/animations';\nimport { EditorModule, TINYMCE_SCRIPT_SRC } from '@tinymce/tinymce-angular';\nimport isObjectLike from 'lodash-es/isObjectLike';\nimport set from 'lodash-es/set';\nimport * as i1$2 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\nimport * as i6 from 'bn-ng-idle';\nimport { BnNgIdleService } from 'bn-ng-idle';\nimport { fadeIn, fadeOut } from 'ng-animate';\nimport { MutationObserverFactory } from '@angular/cdk/observers';\nimport defaults from 'lodash-es/defaults';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { loadRemoteModule } from '@angular-architects/module-federation';\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'apollo-angular';\nimport * as ɵngcc2 from '@angular/router';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from 'angular-svg-icon';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@ng-bootstrap/ng-bootstrap';\nimport * as ɵngcc8 from '@swimlane/ngx-charts';\nimport * as ɵngcc9 from 'ng-dynamic-component';\nimport * as ɵngcc10 from '@angular/cdk/drag-drop';\nimport * as ɵngcc11 from 'ngx-chips';\nimport * as ɵngcc12 from '@tinymce/tinymce-angular';\nimport * as ɵngcc13 from '@angular/common/http';\nimport * as ɵngcc14 from 'bn-ng-idle';\nimport * as ɵngcc15 from 'common';\nimport * as ɵngcc16 from '@angular/cdk/table';\nimport * as ɵngcc17 from '@angular/cdk/scrolling';\nimport * as ɵngcc18 from '@angular/platform-browser';\n\nfunction ActionBarUiComponent_div_0_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 17);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const createLink_r3 = ctx.$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"routerLink\", createLink_r3.route);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appListStrings.moduleList && vm_r1.appListStrings.moduleList[createLink_r3.label], \" \");\n  }\n}\n\nfunction ActionBarUiComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"form\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ActionBarUiComponent_div_0_Template_input_ngModelChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.searchTerm = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(6, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function ActionBarUiComponent_div_0_Template_button_click_6_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.search();\n    });\n    ɵngcc0.ɵɵelement(7, \"scrm-image\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(10, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(11, \"button\", 12);\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"ul\", 13);\n    ɵngcc0.ɵɵtemplate(14, ActionBarUiComponent_div_0_li_14_Template, 4, 2, \"li\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"placeholder\", \"\", vm_r1.appStrings[\"LBL_SEARCH\"] || \"\", \"...\");\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r0.searchTerm);\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_NEW\"] || \"\", \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.actionBar.createLinks);\n  }\n}\n\nfunction ImageComponent_ng_container_0_ng_container_1_svg_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"svg-icon\", 3);\n  }\n\n  if (rf & 2) {\n    const img_r3 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"name\", img_r3.name);\n    ɵngcc0.ɵɵproperty(\"svgClass\", ctx_r4.klass || \"\")(\"title\", ctx_r4.title || \"\");\n  }\n}\n\nfunction ImageComponent_ng_container_0_ng_container_1_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"img\", 4);\n  }\n\n  if (rf & 2) {\n    const img_r3 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r5.klass);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", img_r3.path, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r5.title || \"\");\n  }\n}\n\nfunction ImageComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ImageComponent_ng_container_0_ng_container_1_svg_icon_1_Template, 1, 3, \"svg-icon\", 1);\n    ɵngcc0.ɵɵtemplate(2, ImageComponent_ng_container_0_ng_container_1_img_2_Template, 1, 5, \"img\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const img_r3 = ctx.ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", img_r3.type === \"svg\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", img_r3.type !== \"svg\");\n  }\n}\n\nfunction ImageComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ImageComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.getImage(vm_r1, ctx_r0.image));\n  }\n}\n\nfunction ActionGroupMenuComponent_ng_container_0_scrm_button_group_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button-group\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config$\", ctx_r2.config$);\n  }\n}\n\nfunction ActionGroupMenuComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, ActionGroupMenuComponent_ng_container_0_scrm_button_group_2_Template, 1, 1, \"scrm-button-group\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"\", ctx_r0.klass, \" float-right\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config$);\n  }\n}\n\nfunction DropdownButtonComponent_scrm_image_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r1.config.icon)(\"klass\", ctx_r1.config.iconKlass || \"\");\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r2.config.label, \" \");\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r3.config.labelKey);\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_8_ng_container_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"scrm-image\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"image\", item_r5.icon)(\"klass\", item_r5.iconKlass || \"\");\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function DropdownButtonComponent_ng_container_8_ng_container_1_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n\n      const _r0 = ɵngcc0.ɵɵreference(1);\n\n      return item_r5 && ctx_r10.click(item_r5.onClick, _r0);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(3, DropdownButtonComponent_ng_container_8_ng_container_1_div_3_Template, 2, 2, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 11);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r5 && item_r5.klass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r5 && item_r5.label, \" \");\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"scrm-dropdown-submenu\", 12);\n    ɵngcc0.ɵɵlistener(\"item-clicked\", function DropdownButtonComponent_ng_container_8_ng_container_2_Template_scrm_dropdown_submenu_item_clicked_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n\n      const _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r14.close(_r0);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", item_r5);\n  }\n}\n\nfunction DropdownButtonComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DropdownButtonComponent_ng_container_8_ng_container_1_Template, 6, 3, \"ng-container\", 4);\n    ɵngcc0.ɵɵtemplate(2, DropdownButtonComponent_ng_container_8_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5 && !ctx_r4.isDropdown(item_r5));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5 && ctx_r4.isDropdown(item_r5));\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction DropdownSubmenuComponent_scrm_image_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r0.item.icon);\n  }\n}\n\nfunction DropdownSubmenuComponent_div_5_li_2_scrm_image_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 5);\n  }\n\n  if (rf & 2) {\n    const subItem_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"image\", subItem_r3.icon);\n  }\n}\n\nfunction DropdownSubmenuComponent_div_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function DropdownSubmenuComponent_div_5_li_2_Template_a_click_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7);\n      const subItem_r3 = restoredCtx.$implicit;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.click(subItem_r3);\n    });\n    ɵngcc0.ɵɵtemplate(2, DropdownSubmenuComponent_div_5_li_2_scrm_image_2_Template, 1, 1, \"scrm-image\", 2);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subItem_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", subItem_r3 && subItem_r3.klass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", subItem_r3.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", subItem_r3 && subItem_r3.label, \" \");\n  }\n}\n\nfunction DropdownSubmenuComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 7);\n    ɵngcc0.ɵɵtemplate(2, DropdownSubmenuComponent_div_5_li_2_Template, 4, 3, \"li\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngbCollapse\", ctx_r1.isCollapsed);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.item.items);\n  }\n}\n\nfunction LabelComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r2.language.getFieldLabel(ctx_r2.labelKey, ctx_r2.module), \" \");\n  }\n}\n\nfunction LabelComponent_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.language.getListLabel(ctx_r3.listKey, ctx_r3.labelKey), \" \");\n  }\n}\n\nfunction LabelComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LabelComponent_ng_container_0_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    ɵngcc0.ɵɵtemplate(2, LabelComponent_ng_container_0_ng_container_2_Template, 2, 1, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.listKey && ctx_r0.labelKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.listKey && ctx_r0.labelKey);\n  }\n}\n\nfunction ButtonComponent_scrm_image_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r0.config.icon)(\"klass\", ctx_r0.config.iconKlass || \"\")(\"title\", ctx_r0.language.getFieldLabel(ctx_r0.config.titleKey || \"\"));\n  }\n}\n\nfunction ButtonComponent_scrm_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-label\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r1.config.labelKey);\n  }\n}\n\nfunction ButtonGroupComponent_div_0_ng_container_1_scrm_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button\", 4);\n  }\n\n  if (rf & 2) {\n    const item_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"config\", item_r3);\n  }\n}\n\nfunction ButtonGroupComponent_div_0_ng_container_1_scrm_dropdown_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-dropdown-button\", 4);\n  }\n\n  if (rf & 2) {\n    const item_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"config\", item_r3);\n  }\n}\n\nfunction ButtonGroupComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ButtonGroupComponent_div_0_ng_container_1_scrm_button_1_Template, 1, 1, \"scrm-button\", 3);\n    ɵngcc0.ɵɵtemplate(2, ButtonGroupComponent_div_0_ng_container_1_scrm_dropdown_button_2_Template, 1, 1, \"scrm-dropdown-button\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r3 && !ctx_r1.isDropdown(item_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r3 && ctx_r1.isDropdown(item_r3));\n  }\n}\n\nfunction ButtonGroupComponent_div_0_scrm_dropdown_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-dropdown-button\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r2.dropdownConfig);\n  }\n}\n\nfunction ButtonGroupComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, ButtonGroupComponent_div_0_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(2, ButtonGroupComponent_div_0_scrm_dropdown_button_2_Template, 1, 1, \"scrm-dropdown-button\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.buttons.expanded);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.buttons.collapsed.length);\n  }\n}\n\nfunction BulkActionMenuComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"label\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"input\", 5);\n    ɵngcc0.ɵɵlistener(\"change\", function BulkActionMenuComponent_div_0_Template_input_change_4_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      const vm_r1 = restoredCtx.ngIf;\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.toggleSelection(vm_r1.status);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"span\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"span\", 7);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(9, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function BulkActionMenuComponent_div_0_Template_a_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.selectAll();\n    });\n    ɵngcc0.ɵɵtext(10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function BulkActionMenuComponent_div_0_Template_a_click_11_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.selectPage();\n    });\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function BulkActionMenuComponent_div_0_Template_a_click_13_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.deselectAll();\n    });\n    ɵngcc0.ɵɵtext(14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(15, \"scrm-dropdown-button\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.checked(vm_r1.status))(\"indeterminate\", ctx_r0.intermediate(vm_r1.status));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate2(\"\", vm_r1.count > 0 ? vm_r1.appStrings[\"LBL_LISTVIEW_SELECTED_OBJECTS\"] || \"\" : \"\", \" \", vm_r1.count > 0 ? vm_r1.count : \"\", \"\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_LISTVIEW_OPTION_ENTIRE\"] || \"\", \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_LISTVIEW_OPTION_CURRENT\"] || \"\", \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_LISTVIEW_NONE\"] || \"\", \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", vm_r1.count < 1)(\"config\", ctx_r0.getDropdownConfig(vm_r1.actions, vm_r1.appStrings));\n  }\n}\n\nfunction PieGridChartComponent_scrm_chart_message_area_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart-message-area\", 2);\n  }\n}\n\nfunction PieGridChartComponent_ngx_charts_pie_grid_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngx-charts-pie-grid\", 3);\n    ɵngcc0.ɵɵlistener(\"resize\", function PieGridChartComponent_ngx_charts_pie_grid_1_Template_ngx_charts_pie_grid_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onResize();\n    }, false, ɵngcc0.ɵɵresolveWindow);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"animations\", false)(\"view\", ctx_r1.view)(\"scheme\", ctx_r1.scheme)(\"label\", ctx_r1.language.getFieldLabel(ctx_r1.label))(\"results\", ctx_r1.results);\n  }\n}\n\nfunction VerticalBarChartComponent_scrm_chart_message_area_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart-message-area\", 2);\n  }\n}\n\nfunction VerticalBarChartComponent_ngx_charts_bar_vertical_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const model_r4 = ctx.model;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(model_r4.name);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.formatTooltipValue(model_r4.value));\n  }\n}\n\nfunction VerticalBarChartComponent_ngx_charts_bar_vertical_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngx-charts-bar-vertical\", 3);\n    ɵngcc0.ɵɵlistener(\"resize\", function VerticalBarChartComponent_ngx_charts_bar_vertical_1_Template_ngx_charts_bar_vertical_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onResize();\n    }, false, ɵngcc0.ɵɵresolveWindow);\n    ɵngcc0.ɵɵtemplate(1, VerticalBarChartComponent_ngx_charts_bar_vertical_1_ng_template_1_Template, 4, 2, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"animations\", false)(\"results\", ctx_r1.results)(\"view\", ctx_r1.view)(\"scheme\", ctx_r1.scheme)(\"gradient\", ctx_r1.gradient)(\"xAxis\", ctx_r1.xAxis)(\"yAxis\", ctx_r1.yAxis)(\"legend\", ctx_r1.legend)(\"legendPosition\", \"below\")(\"showXAxisLabel\", ctx_r1.showXAxisLabel)(\"showYAxisLabel\", ctx_r1.showYAxisLabel)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"yAxisLabel\", ctx_r1.yAxisLabel)(\"yAxisTickFormatting\", ctx_r1.yAxisTickFormatting);\n  }\n}\n\nfunction ChartMessageAreaComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.labelKey);\n  }\n}\n\nfunction LineChartComponent_scrm_chart_message_area_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart-message-area\", 2);\n  }\n}\n\nfunction LineChartComponent_ngx_charts_line_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngx-charts-line-chart\", 3);\n    ɵngcc0.ɵɵlistener(\"resize\", function LineChartComponent_ngx_charts_line_chart_1_Template_ngx_charts_line_chart_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onResize();\n    }, false, ɵngcc0.ɵɵresolveWindow);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"animations\", false)(\"results\", ctx_r1.results)(\"view\", ctx_r1.view)(\"scheme\", ctx_r1.scheme)(\"gradient\", ctx_r1.gradient)(\"xAxis\", ctx_r1.xAxis)(\"yAxis\", ctx_r1.yAxis)(\"legend\", ctx_r1.legend)(\"xScaleMin\", ctx_r1.xScaleMin)(\"xScaleMax\", ctx_r1.xScaleMax)(\"xAxisTicks\", ctx_r1.xAxisTicks)(\"showXAxisLabel\", ctx_r1.showXAxisLabel)(\"showYAxisLabel\", ctx_r1.showYAxisLabel)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"legendPosition\", \"below\")(\"autoScale\", true)(\"yAxisTickFormatting\", ctx_r1.yAxisTickFormatting)(\"xAxisTickFormatting\", ctx_r1.xAxisTickFormatting)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"yAxisLabel\", ctx_r1.yAxisLabel);\n  }\n}\n\nfunction ChartComponent_scrm_chart_message_area_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart-message-area\", 2);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"dataSource\": a0\n  };\n};\n\nfunction ChartComponent_ndc_dynamic_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r1.chartType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r1.dataSource));\n  }\n}\n\nfunction CloseButtonComponent_scrm_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"scrm-button\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.getConfig());\n  }\n}\n\nfunction ColumnChooserComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.getColumnLabel(item_r4.label), \" \");\n  }\n}\n\nfunction ColumnChooserComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.getColumnLabel(item_r5.label), \" \");\n  }\n}\n\nconst _c2 = function (a0) {\n  return [a0];\n};\n\nfunction ModalComponent_scrm_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-label\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.titleKey);\n  }\n}\n\nfunction ModalComponent_scrm_close_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-close-button\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.close);\n  }\n}\n\nconst _c3 = [[[\"\", \"modal-body\", \"\"]], [[\"\", \"modal-footer\", \"\"]]];\nconst _c4 = [\"[modal-body]\", \"[modal-footer]\"];\n\nfunction DynamicLabelComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.parsedLabel);\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_div_3_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 1);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r8.labelClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(col_r3.field.label);\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_div_3_scrm_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-label\", 8);\n  }\n\n  if (rf & 2) {\n    const col_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"labelKey\", col_r3.field.labelKey)(\"ngClass\", ctx_r9.labelClass);\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, FieldGridComponent_div_1_div_1_div_3_label_1_Template, 2, 2, \"label\", 6);\n    ɵngcc0.ɵɵtemplate(2, FieldGridComponent_div_1_div_1_div_3_scrm_label_2_Template, 1, 2, \"scrm-label\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"pr-3\", ctx_r4.labelDisplay === \"inline\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r3.field.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !col_r3.field.label && col_r3.field.labelKey);\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"scrm-field\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"flex-grow-1\", ctx_r5.labelDisplay === \"inline\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"field\", col_r3.field)(\"klass\", ctx_r5.inputClass)(\"mode\", ctx_r5.fieldMode)(\"record\", ctx_r5.record)(\"type\", col_r3.field.type);\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FieldGridComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementContainerStart(1);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(3, FieldGridComponent_div_1_div_1_div_3_Template, 3, 4, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(4, FieldGridComponent_div_1_div_1_div_4_Template, 2, 7, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(5, FieldGridComponent_div_1_div_1_ng_container_5_Template, 2, 0, \"ng-container\", 5);\n    ɵngcc0.ɵɵtemplate(6, FieldGridComponent_div_1_div_1_ng_container_6_Template, 2, 0, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.colClass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"align-items-center\", ctx_r2.labelDisplay === \"inline\")(\"flex-column\", ctx_r2.labelDisplay === \"top\")(\"flex-row\", ctx_r2.labelDisplay === \"inline\")(\"justify-content-end\", !col_r3.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r3.field && col_r3.field.display !== \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r3.field && col_r3.field.display !== \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r3.actionSlot);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r3.specialSlot);\n  }\n}\n\nfunction FieldGridComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, FieldGridComponent_div_1_div_1_Template, 7, 13, \"div\", 0);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.rowClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r1.cols);\n  }\n}\n\nconst _c5 = [[[\"\", \"field-grid-actions\", \"\"]], [[\"\", \"field-grid-actions\", \"\"]]];\nconst _c6 = [\"[field-grid-actions]\", \"[field-grid-actions]\"];\nconst _c7 = [\"tag\"];\n\nfunction DateDetailFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r0.field.value, ctx_r0.getDateFormat()), \"\\n\");\n  }\n}\n\nfunction CurrencyDetailFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"formatCurrency\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r0.getCurrencyValue(), ctx_r0.getOptions()), \"\\n\");\n  }\n}\n\nfunction DateTimeEditFieldComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelementStart(2, \"ngb-datepicker\", 5);\n    ɵngcc0.ɵɵlistener(\"dateSelect\", function DateTimeEditFieldComponent_ng_template_4_Template_ngb_datepicker_dateSelect_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onDateChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(4, \"ngb-timepicker\", 7);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DateTimeEditFieldComponent_ng_template_4_Template_ngb_timepicker_ngModelChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onTimeChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.dateTimeModel.date)(\"startDate\", ctx_r1.dateTimeModel.date);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.dateTimeModel.time)(\"seconds\", ctx_r1.dateTimeModel.displaySeconds)(\"hourStep\", ctx_r1.dateTimeModel.hourStep)(\"minuteStep\", ctx_r1.dateTimeModel.minuteStep)(\"secondStep\", ctx_r1.dateTimeModel.secondStep);\n  }\n}\n\nfunction DateTimeDetailFieldComponent_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r2.field.value, ctx_r2.getDateTimeFormat()), \" \");\n  }\n}\n\nfunction DateTimeDetailFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DateTimeDetailFieldComponent_ng_container_0_span_1_Template, 3, 4, \"span\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.field.value);\n  }\n}\n\nfunction DateTimeFilterFieldComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelementStart(2, \"ngb-datepicker\", 5);\n    ɵngcc0.ɵɵlistener(\"dateSelect\", function DateTimeFilterFieldComponent_ng_template_4_Template_ngb_datepicker_dateSelect_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onDateChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(4, \"ngb-timepicker\", 7);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DateTimeFilterFieldComponent_ng_template_4_Template_ngb_timepicker_ngModelChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onTimeChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.dateTimeModel.date)(\"startDate\", ctx_r1.dateTimeModel.date);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r1.dateTimeModel.time)(\"seconds\", ctx_r1.dateTimeModel.displaySeconds)(\"hourStep\", ctx_r1.dateTimeModel.hourStep)(\"minuteStep\", ctx_r1.dateTimeModel.minuteStep)(\"secondStep\", ctx_r1.dateTimeModel.secondStep);\n  }\n}\n\nfunction MultiEnumDetailFieldComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const selected_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(selected_r1.label);\n  }\n}\n\nfunction EmailListFieldsComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate1(\"href\", \"mailto:\", ctx_r0.field.value, \"\", ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.field.value);\n  }\n}\n\nfunction EmailListFieldsComponent_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function EmailListFieldsComponent_a_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.openEmail();\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.field.value);\n  }\n}\n\nfunction FloatDetailFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"formatNumber\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.field.value), \"\\n\");\n  }\n}\n\nfunction RecordListModalComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction RecordListModalComponent_ng_container_3_scrm_list_filter_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-list-filter\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r2.filterConfig);\n  }\n}\n\nfunction RecordListModalComponent_ng_container_3_ng_container_9_scrm_loading_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-loading-spinner\", 11);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"overlay\", true);\n  }\n}\n\nfunction RecordListModalComponent_ng_container_3_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordListModalComponent_ng_container_3_ng_container_9_scrm_loading_spinner_1_Template, 1, 1, \"scrm-loading-spinner\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const loading_r4 = ctx.ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", loading_r4);\n  }\n}\n\nfunction RecordListModalComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(5, RecordListModalComponent_ng_container_3_scrm_list_filter_5_Template, 1, 1, \"scrm-list-filter\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 6);\n    ɵngcc0.ɵɵelement(8, \"scrm-table\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, RecordListModalComponent_ng_container_3_ng_container_9_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵpipe(10, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.filterConfig);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.tableConfig);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(10, 3, ctx_r1.loading$));\n  }\n}\n\nfunction RelateEditFieldComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"tag-input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"keyup.enter\", function RelateEditFieldComponent_ng_container_1_Template_tag_input_keyup_enter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.selectFirstElement();\n    })(\"onAdd\", function RelateEditFieldComponent_ng_container_1_Template_tag_input_onAdd_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onAdd($event);\n    })(\"onBlur\", function RelateEditFieldComponent_ng_container_1_Template_tag_input_onBlur_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.resetStatus();\n    })(\"onRemove\", function RelateEditFieldComponent_ng_container_1_Template_tag_input_onRemove_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onRemove();\n    })(\"ngModelChange\", function RelateEditFieldComponent_ng_container_1_Template_tag_input_ngModelChange_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.selectedValues = $event;\n    });\n    ɵngcc0.ɵɵelement(4, \"tag-input-dropdown\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵelement(6, \"scrm-button\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r0.getInvalidClass());\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r0.selectedValues)(\"clearOnBlur\", true)(\"displayBy\", ctx_r0.getRelateFieldName())(\"inputClass\", ctx_r0.getInvalidClass())(\"onTextChangeDebounce\", 500)(\"onlyFromAutocomplete\", true)(\"placeholder\", ctx_r0.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx_r0.getPlaceholderLabel());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"autocompleteObservable\", ctx_r0.search)(\"displayBy\", ctx_r0.getRelateFieldName())(\"keepOpen\", false)(\"showDropdownIfEmpty\", true);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.selectButton);\n  }\n}\n\nfunction RelateEditFieldComponent_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"small\", 9);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r1.getMessage())(\"module\", ctx_r1.module);\n  }\n}\n\nfunction RelateFilterFieldComponent_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"small\", 8);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r1.getMessage())(\"module\", ctx_r1.module);\n  }\n}\n\nfunction IntDetailFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.field.value);\n  }\n}\n\nfunction IntDetailFieldComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"formatNumber\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r1.field.value), \"\\n\");\n  }\n}\n\nfunction DropdownEnumEditFieldComponent_ng_container_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMap(ctx_r1.getId(item_r2));\n    ɵngcc0.ɵɵproperty(\"ngValue\", item_r2.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r2.label, \" \");\n  }\n}\n\nfunction DropdownEnumEditFieldComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DropdownEnumEditFieldComponent_ng_container_2_option_1_Template, 2, 5, \"option\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n  }\n}\n\nfunction RadioEnumEditFieldComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"input\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"form-check radioenum-input \", ctx_r0.getId(item_r1), \"\");\n    ɵngcc0.ɵɵclassProp(\"form-check-inline\", ctx_r0.displayDirection === \"row\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", ctx_r0.getId(item_r1));\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.field.value === item_r1.value)(\"formControl\", ctx_r0.field.formControl)(\"value\", item_r1.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"for\", ctx_r0.getId(item_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r1.label, \" \");\n  }\n}\n\nfunction GroupFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction GroupFieldComponent_ng_container_1_ng_container_2_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"label\");\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const groupField_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"labelKey\", groupField_r3.labelKey)(\"module\", ctx_r5.getModule());\n  }\n}\n\nfunction GroupFieldComponent_ng_container_1_ng_container_2_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-field\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const groupField_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"componentType\", ctx_r6.getComponentType(groupField_r3.type, groupField_r3.definition))(\"field\", groupField_r3)(\"klass\", ctx_r6.klass)(\"mode\", ctx_r6.mode)(\"record\", ctx_r6.record)(\"parent\", ctx_r6.parent)(\"type\", groupField_r3.type);\n  }\n}\n\nfunction GroupFieldComponent_ng_container_1_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, GroupFieldComponent_ng_container_1_ng_container_2_div_1_span_1_Template, 3, 2, \"span\", 5);\n    ɵngcc0.ɵɵtemplate(2, GroupFieldComponent_ng_container_1_ng_container_2_div_1_span_2_Template, 2, 7, \"span\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const groupField_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"flex-fill\", ctx_r4.mode === \"edit\" && ctx_r4.getDirection() === \"flex-row\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", groupField_r3.labelKey && ctx_r4.showLabel(groupField_r3.definition.name));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", groupField_r3.type);\n  }\n}\n\nfunction GroupFieldComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GroupFieldComponent_ng_container_1_ng_container_2_div_1_Template, 3, 4, \"div\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const groupField_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isModeEnabled(ctx_r2.mode, groupField_r3));\n  }\n}\n\nfunction GroupFieldComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, GroupFieldComponent_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"d-flex \", ctx_r1.getDirection(), \" justify-content-start align-items-start field-group h-100\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.getFields());\n  }\n}\n\nconst _c8 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"mode\": a0,\n    \"field\": a1,\n    \"klass\": a2,\n    \"record\": a3,\n    \"parent\": a4\n  };\n};\n\nfunction DynamicFieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function DynamicFieldComponent_ng_container_0_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onClick();\n    });\n    ɵngcc0.ɵɵelement(2, \"ndc-dynamic\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.componentType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction5(2, _c8, ctx_r0.mode, ctx_r0.field, ctx_r0.klass, ctx_r0.record, ctx_r0.parent));\n  }\n}\n\nfunction DynamicFieldComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵelement(2, \"ndc-dynamic\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"routerLink\", ctx_r1.getLink());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r1.componentType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction5(3, _c8, ctx_r1.mode, ctx_r1.field, ctx_r1.klass, ctx_r1.record, ctx_r1.parent));\n  }\n}\n\nfunction DynamicFieldComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"ndc-dynamic\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r2.componentType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction5(2, _c8, ctx_r2.mode, ctx_r2.field, ctx_r2.klass, ctx_r2.record, ctx_r2.parent));\n  }\n}\n\nconst _c9 = function (a0) {\n  return {\n    field: a0\n  };\n};\n\nfunction DynamicFieldComponent_ng_container_3_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-label\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"context\", ctx_r7.getMessageContext(item_r8.value, ctx_r7.record))(\"fields\", ɵngcc0.ɵɵpureFunction1(3, _c9, ctx_r7.field))(\"labelKey\", ctx_r7.getMessageLabelKey(item_r8.value));\n  }\n}\n\nfunction DynamicFieldComponent_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DynamicFieldComponent_ng_container_3_ng_container_1_div_1_Template, 2, 5, \"div\", 4);\n    ɵngcc0.ɵɵpipe(2, \"keyvalue\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r6.field.formControl.errors));\n  }\n}\n\nfunction DynamicFieldComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, DynamicFieldComponent_ng_container_3_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.field.formControl.invalid && ctx_r3.field.formControl.touched);\n  }\n}\n\nfunction CompositeComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction CompositeComponent_ng_container_1_div_2_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\");\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attribute_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", attribute_r3.labelKey)(\"module\", ctx_r4.getModule());\n  }\n}\n\nfunction CompositeComponent_ng_container_1_div_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-field\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attribute_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"componentType\", ctx_r5.getComponentType(attribute_r3.type, attribute_r3.definition))(\"field\", attribute_r3)(\"klass\", ctx_r5.klass)(\"mode\", ctx_r5.getMode())(\"record\", ctx_r5.record)(\"parent\", ctx_r5.parent)(\"type\", attribute_r3.type);\n  }\n}\n\nfunction CompositeComponent_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(2, CompositeComponent_ng_container_1_div_2_label_2_Template, 2, 2, \"label\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, CompositeComponent_ng_container_1_div_2_span_3_Template, 2, 7, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attribute_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"flex-fill\", ctx_r2.mode === \"edit\" && ctx_r2.getDirection() === \"flex-row\")(\"align-self-start\", ctx_r2.getDirection() === \"flex-row\" && attribute_r3.labelKey && ctx_r2.showLabel(attribute_r3));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", attribute_r3.labelKey && ctx_r2.showLabel(attribute_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", attribute_r3.type);\n  }\n}\n\nfunction CompositeComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, CompositeComponent_ng_container_1_div_2_Template, 4, 6, \"div\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"d-flex \", ctx_r1.getDirection(), \" justify-content-start align-items-end field-group h-100 composite-field-wrapper\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.getAttributes());\n  }\n}\n\nfunction FieldComponent_ng_container_0_scrm_dynamic_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-dynamic-field\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"componentType\", ctx_r1.componentType)(\"field\", ctx_r1.field)(\"klass\", ctx_r1.klass)(\"mode\", ctx_r1.componentMode)(\"record\", ctx_r1.record)(\"parent\", ctx_r1.record)(\"type\", ctx_r1.type);\n  }\n}\n\nfunction FieldComponent_ng_container_0_scrm_line_items_field_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-line-items-field\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"field\", ctx_r2.field)(\"klass\", ctx_r2.klass)(\"mode\", ctx_r2.componentMode)(\"record\", ctx_r2.record)(\"parent\", ctx_r2.record);\n  }\n}\n\nfunction FieldComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FieldComponent_ng_container_0_scrm_dynamic_field_1_Template, 1, 7, \"scrm-dynamic-field\", 1);\n    ɵngcc0.ɵɵtemplate(2, FieldComponent_ng_container_0_scrm_line_items_field_2_Template, 1, 5, \"scrm-line-items-field\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.type !== \"line-items\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.type === \"line-items\");\n  }\n}\n\nfunction LineItemsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_3_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-field\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemField_r10 = ctx.$implicit;\n    const item_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate2(\"\", itemField_r10.type, \" \", itemField_r10.name, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"componentType\", ctx_r8.getComponentType(itemField_r10.type, itemField_r10.definition))(\"field\", itemField_r10)(\"klass\", ctx_r8.klass)(\"mode\", ctx_r8.mode)(\"record\", item_r5)(\"parent\", ctx_r8.parent)(\"type\", itemField_r10.type);\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_3_div_1_scrm_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    const item_r5 = ctx_r12.$implicit;\n    const i_r6 = ctx_r12.index;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r9.getRemoveItemButton(item_r5, i_r6));\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, LineItemsComponent_ng_container_1_ng_container_3_div_1_div_2_Template, 2, 11, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(4, LineItemsComponent_ng_container_1_ng_container_3_div_1_scrm_button_4_Template, 1, 1, \"scrm-button\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r7.getItemFields(item_r5));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isEditable());\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LineItemsComponent_ng_container_1_ng_container_3_div_1_Template, 5, 2, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(item_r5 && item_r5.attributes && item_r5.attributes.deleted));\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_scrm_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r3.getAddItemButton());\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_6_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-label\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r16 = ctx.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"context\", ctx_r15.getMessageContext(item_r16.value, ctx_r15.record))(\"fields\", ɵngcc0.ɵɵpureFunction1(3, _c9, ctx_r15.field))(\"labelKey\", ctx_r15.getMessageLabelKey(item_r16.value));\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LineItemsComponent_ng_container_1_ng_container_6_ng_container_1_div_1_Template, 2, 5, \"div\", 12);\n    ɵngcc0.ɵɵpipe(2, \"keyvalue\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r14.field.itemFormArray.errors));\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, LineItemsComponent_ng_container_1_ng_container_6_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.field.itemFormArray.invalid);\n  }\n}\n\nfunction LineItemsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtemplate(3, LineItemsComponent_ng_container_1_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(5, LineItemsComponent_ng_container_1_scrm_button_5_Template, 1, 1, \"scrm-button\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, LineItemsComponent_ng_container_1_ng_container_6_Template, 2, 1, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate2(\"line-items d-flex flex-column \", ctx_r1.field.type, \" \", ctx_r1.field.name, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"d-flex \", ctx_r1.getDirection(), \" justify-content-start align-items-end line-item h-100\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.getItems());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isEditable());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isEditable() && ctx_r1.field.itemFormArray && ctx_r1.field.itemFormArray.errors);\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_ng_container_1_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 10);\n    ɵngcc0.ɵɵtext(2, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_ng_container_1_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function FieldLayoutComponent_div_1_div_1_ng_container_1_button_12_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r12.dataSource.getEditAction();\n    });\n    ɵngcc0.ɵɵelement(1, \"scrm-image\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c10 = function () {\n  return [\"edit\", \"create\"];\n};\n\nfunction FieldLayoutComponent_div_1_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"strong\");\n    ɵngcc0.ɵɵelementStart(3, \"label\", 1);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵpipe(5, \"uppercase\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(6, \": \");\n    ɵngcc0.ɵɵtemplate(7, FieldLayoutComponent_div_1_div_1_ng_container_1_ng_container_7_Template, 3, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n    ɵngcc0.ɵɵelement(10, \"scrm-field\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"div\");\n    ɵngcc0.ɵɵtemplate(12, FieldLayoutComponent_div_1_div_1_ng_container_1_button_12_Template, 2, 0, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r6.labelClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 9, col_r4.field.label));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.field.definition.required && ɵngcc0.ɵɵpureFunction0(11, _c10).includes(ctx_r6.config.mode));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"type\", col_r4.field.type)(\"mode\", ctx_r6.config.mode)(\"klass\", ctx_r6.inputClass)(\"field\", col_r4.field)(\"record\", ctx_r6.record);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.field.definition.inline_edit !== false && !col_r4.field.definition.readonly && ctx_r6.dataSource.inlineEdit && ctx_r6.config.mode === \"detail\");\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 13);\n  }\n}\n\nfunction FieldLayoutComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, FieldLayoutComponent_div_1_div_1_ng_container_1_Template, 13, 12, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(2, FieldLayoutComponent_div_1_div_1_ng_container_2_Template, 2, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(3, FieldLayoutComponent_div_1_div_1_ng_container_3_Template, 2, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(4, FieldLayoutComponent_div_1_div_1_div_4_Template, 1, 0, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    const colNumber_r5 = ctx.index;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    const row_r1 = ctx_r15.$implicit;\n    const i_r2 = ctx_r15.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"field-column-bordered\", row_r1.cols.length > 1 && colNumber_r5 < row_r1.cols.length - 1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.colClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.field && col_r4.field.display !== \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.actionSlot);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.specialSlot);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r4.field && i_r2 < ctx_r3.fieldGrid.length - 1);\n  }\n}\n\nfunction FieldLayoutComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, FieldLayoutComponent_div_1_div_1_Template, 5, 7, \"div\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.rowClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r1.cols);\n  }\n}\n\nconst _c11 = [[[\"\", \"field-grid-actions\", \"\"]], [[\"\", \"field-grid-special\", \"\"]]];\nconst _c12 = [\"[field-grid-actions]\", \"[field-grid-special]\"];\n\nfunction FilterUiComponent_ng_template_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 19);\n    ɵngcc0.ɵɵtext(3, \"Opportunity Name\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"input\", 20);\n    ɵngcc0.ɵɵelementStart(5, \"label\", 21);\n    ɵngcc0.ɵɵelement(6, \"input\", 22);\n    ɵngcc0.ɵɵelement(7, \"span\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"p\", 24);\n    ɵngcc0.ɵɵtext(9, \" My Items \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(10, \"label\", 21);\n    ɵngcc0.ɵɵelement(11, \"input\", 22);\n    ɵngcc0.ɵɵelement(12, \"span\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"p\", 24);\n    ɵngcc0.ɵɵtext(14, \" Open Items \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"label\", 21);\n    ɵngcc0.ɵɵelement(16, \"input\", 22);\n    ɵngcc0.ɵɵelement(17, \"span\", 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(18, \"p\", 24);\n    ɵngcc0.ɵɵtext(19, \" My Favourites \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilterUiComponent_ng_template_0_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 19);\n    ɵngcc0.ɵɵtext(3, \"Opportunity Name\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"input\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(8, \"label\", 19);\n    ɵngcc0.ɵɵtext(9, \"Account Name\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(10, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(11, \"div\", 13);\n    ɵngcc0.ɵɵelement(12, \"input\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(14, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(15, \"button\", 27);\n    ɵngcc0.ɵɵelement(16, \"scrm-image\", 28);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(17, \"button\", 29);\n    ɵngcc0.ɵɵelement(18, \"scrm-image\", 30);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(19, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(20, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(21, \"label\", 19);\n    ɵngcc0.ɵɵtext(22, \"Opportunity Amount\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(23, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(24, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(25, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(26, \"select\");\n    ɵngcc0.ɵɵelementStart(27, \"option\");\n    ɵngcc0.ɵɵtext(28, \"Equals\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(29, \"option\");\n    ɵngcc0.ɵɵtext(30, \"Greater than\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(31, \"option\");\n    ɵngcc0.ɵɵtext(32, \"Less than\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(33, \"div\", 12);\n    ɵngcc0.ɵɵelement(34, \"input\", 32);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(35, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(36, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(37, \"label\", 19);\n    ɵngcc0.ɵɵtext(38, \"Expected Close Date\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(39, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(40, \"div\", 33);\n    ɵngcc0.ɵɵelementStart(41, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(42, \"select\");\n    ɵngcc0.ɵɵelementStart(43, \"option\");\n    ɵngcc0.ɵɵtext(44, \"Equals\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(45, \"option\");\n    ɵngcc0.ɵɵtext(46, \"Greater than\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(47, \"option\");\n    ɵngcc0.ɵɵtext(48, \"Less than\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(49, \"div\", 34);\n    ɵngcc0.ɵɵelement(50, \"input\", 35);\n    ɵngcc0.ɵɵelementStart(51, \"button\", 36);\n    ɵngcc0.ɵɵelement(52, \"scrm-image\", 37);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(53, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(54, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(55, \"label\", 19);\n    ɵngcc0.ɵɵtext(56, \"Next Step\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(57, \"input\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(58, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(59, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(60, \"label\", 19);\n    ɵngcc0.ɵɵtext(61, \"Save Filter as:\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(62, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(63, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(64, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(65, \"select\");\n    ɵngcc0.ɵɵelementStart(66, \"option\");\n    ɵngcc0.ɵɵtext(67, \"Lorem Ipsum\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(68, \"option\");\n    ɵngcc0.ɵɵtext(69, \"Lorem Ipsum\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(70, \"option\");\n    ɵngcc0.ɵɵtext(71, \"Lorem Ipsum\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(72, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(73, \"button\", 38);\n    ɵngcc0.ɵɵtext(74, \"Save\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(75, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(76, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(77, \"label\", 19);\n    ɵngcc0.ɵɵtext(78, \"Order by column\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(79, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(80, \"select\");\n    ɵngcc0.ɵɵelementStart(81, \"option\");\n    ɵngcc0.ɵɵtext(82, \"Name\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(83, \"option\");\n    ɵngcc0.ɵɵtext(84, \"Date Created\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(85, \"option\");\n    ɵngcc0.ɵɵtext(86, \"Date Modified\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilterUiComponent_ng_template_0_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 39);\n    ɵngcc0.ɵɵtext(1, \" My Filters \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilterUiComponent_ng_template_0_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 40);\n    ɵngcc0.ɵɵlistener(\"click\", function FilterUiComponent_ng_template_0_ng_template_17_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.toggleAdvancedFilter();\n    });\n    ɵngcc0.ɵɵtext(1, \" Advanced \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilterUiComponent_ng_template_0_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 40);\n    ɵngcc0.ɵɵlistener(\"click\", function FilterUiComponent_ng_template_0_ng_template_18_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.toggleQuickFilter();\n    });\n    ɵngcc0.ɵɵtext(1, \" Quick \");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FilterUiComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function FilterUiComponent_ng_template_0_Template_button_click_4_listener() {\n      const modal_r2 = ctx.$implicit;\n      return modal_r2.dismiss(\"Cross click\");\n    });\n    ɵngcc0.ɵɵelement(5, \"scrm-image\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(7, FilterUiComponent_ng_template_0_ng_template_7_Template, 20, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵtemplate(8, FilterUiComponent_ng_template_0_ng_template_8_Template, 87, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(10, \"div\", 11);\n    ɵngcc0.ɵɵelement(11, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(12, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(13, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(14, \"button\", 15);\n    ɵngcc0.ɵɵtext(15, \" Clear \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(16, FilterUiComponent_ng_template_0_ng_template_16_Template, 2, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵtemplate(17, FilterUiComponent_ng_template_0_ng_template_17_Template, 2, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵtemplate(18, FilterUiComponent_ng_template_0_ng_template_18_Template, 2, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementStart(19, \"button\", 16);\n    ɵngcc0.ɵɵtext(20, \" Search \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.modalTitle);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.quickFilter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.advancedFilter);\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.advancedFilter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.quickFilter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.advancedFilter);\n  }\n}\n\nfunction FooterUiComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function FooterUiComponent_ng_container_6_Template_a_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.backToTop();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵtext(4, \" Back To Top \");\n    ɵngcc0.ɵɵelement(5, \"scrm-image\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction FooterUiComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"h5\", 13);\n    ɵngcc0.ɵɵtext(3, \"\\u00A9 Powered By SugarCRM\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"button\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function FooterUiComponent_ng_template_8_Template_button_click_4_listener() {\n      const modal_r7 = ctx.$implicit;\n      return modal_r7.dismiss(\"Cross click\");\n    });\n    ɵngcc0.ɵɵelement(5, \"scrm-image\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(7, \"p\");\n    ɵngcc0.ɵɵtext(8, \" \\u00A9 2004-2013 SugarCRM Inc. The Program is provided AS IS, without warranty. Licensed under AGPLv3. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"p\");\n    ɵngcc0.ɵɵtext(10, \" This program is free software; you can redistribute it and/or modify it under the terms of the GNU Affero General Public License version 3 as published by the Free Software Foundation, including the additional permission set forth in the source code header. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"p\");\n    ɵngcc0.ɵɵtext(12, \" SugarCRM is a trademark of SugarCRM, Inc. All other company and product names may be trademarks of the respective companies with which they are associated. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction FooterUiComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"h5\", 13);\n    ɵngcc0.ɵɵtext(3, \"\\u00A9 Supercharged by SuiteCRM\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"button\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function FooterUiComponent_ng_template_10_Template_button_click_4_listener() {\n      const modal_r9 = ctx.$implicit;\n      return modal_r9.dismiss(\"Cross click\");\n    });\n    ɵngcc0.ɵɵelement(5, \"scrm-image\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(7, \"p\");\n    ɵngcc0.ɵɵtext(8, \" SuiteCRM has been written and assembled by SalesAgility. The Program is provided AS IS, without warranty. Licensed under AGPLv3. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"p\");\n    ɵngcc0.ɵɵtext(10, \" This program is free software; you can redistribute it and/or modify it under the terms of the GNU Affero General Public License version 3 as published by the Free Software Foundation, including the additional permission set forth in the source code header. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"p\");\n    ɵngcc0.ɵɵtext(12, \" SuiteCRM is a trademark of SalesAgility Ltd. All other company and product names may be trademarks of the respective companies with which they are associated. \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction GridWidgetComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.messageLabelKey);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"image\", col_r6.icon)(\"klass\", col_r6.iconClass);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelement(1, \"scrm-field\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const statistics_r15 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"type\", statistics_r15.field.type)(\"field\", statistics_r15.field);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelement(1, \"scrm-inline-loading-spinner\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_div_1_Template, 2, 2, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(2, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_div_2_Template, 2, 0, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const statistics_r15 = ctx.ngIf;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", statistics_r15.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", statistics_r15.loading && ctx_r9.loading);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 15);\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"labelKey\", col_r6.labelKey)(\"module\", ctx_r10.getContextModule());\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(2, \"label\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r2 = ɵngcc0.ɵɵnextContext(4).ngIf;\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(vm_r2.description);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelement(1, \"scrm-dynamic-label\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const vm_r2 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"context\", ctx_r21.getMessageContext())(\"fields\", ctx_r21.getMessageFields(vm_r2.statistics))(\"labelKey\", col_r6.dynamicLabel);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelement(1, \"scrm-inline-loading-spinner\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_div_1_Template, 2, 3, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(2, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_div_2_Template, 2, 0, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.loading);\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtext(2, \" - \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"widget-entry-value \", ctx_r13.getSizeClass(col_r6.size), \"\");\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(2, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_2_Template, 3, 2, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(3, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_3_Template, 3, 2, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(4, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_4_Template, 4, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(5, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_5_Template, 3, 2, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(6, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_ng_container_6_Template, 3, 3, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ɵngcc0.ɵɵnextContext().$implicit;\n    const vm_r2 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.statistic && vm_r2.statistics[col_r6.statistic]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.labelKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.descriptionKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.dynamicLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.statistic && !ctx_r7.loading && (!vm_r2.statistics[col_r6.statistic].field || vm_r2.statistics[col_r6.statistic].field && ctx_r7.isEmptyFieldValue(vm_r2.statistics[col_r6.statistic].field.value)));\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_ng_container_1_div_2_ng_container_1_Template, 7, 6, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r6 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassMapInterpolate2(\"\", ctx_r5.getColClass(), \" \", ctx_r5.getClass(col_r6), \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r6.display !== \"hidden\");\n  }\n}\n\nfunction GridWidgetComponent_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, GridWidgetComponent_div_1_ng_container_1_div_2_Template, 2, 5, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate4(\"d-flex \", ctx_r3.getJustify(item_r4.justify), \" \", ctx_r3.getAlign(item_r4.align), \" \", ctx_r3.getRowClass(), \" \", ctx_r3.getLayoutRowClass(item_r4), \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r4.cols);\n  }\n}\n\nfunction GridWidgetComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_ng_container_1_Template, 3, 7, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r2 = ctx.ngIf;\n    ɵngcc0.ɵɵpropertyInterpolate(\"ngbTooltip\", vm_r2.tooltipTitleText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r2.layout);\n  }\n}\n\nfunction WidgetPanelComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@widgetContentFade\", ctx_r0.displayContent ? \"true\" : \"false\");\n  }\n}\n\nconst _c13 = [[[\"\", \"widget-body\", \"\"]]];\nconst _c14 = [\"[widget-body]\"];\n\nfunction PanelComponent_scrm_close_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-close-button\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.getCloseButton());\n  }\n}\n\nfunction PanelComponent_scrm_minimise_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-minimise-button\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.minimiseButton)(\"status\", ctx_r1.minimiseStatus);\n  }\n}\n\nfunction PanelComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction PanelComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r3.titleKey);\n  }\n}\n\nconst _c15 = [[[\"\", \"panel-icon-area\", \"\"]], [[\"\", \"panel-header-button\", \"\"]], [[\"\", \"panel-body\", \"\"]]];\nconst _c16 = [\"[panel-icon-area]\", \"[panel-header-button]\", \"[panel-body]\"];\n\nfunction MinimiseButtonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.internalConfig);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nav\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 6);\n    ɵngcc0.ɵɵelementStart(3, \"li\", 7);\n    ɵngcc0.ɵɵtext(4, \"\\u00A0 \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"nav\", 8);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(3, \"ul\", 6);\n    ɵngcc0.ɵɵelementStart(4, \"li\", 10);\n    ɵngcc0.ɵɵelement(5, \"scrm-logo-ui\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-mobile-menu\", 23);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    const _r7 = ɵngcc0.ɵɵreference(3);\n\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"all\", ctx_r8.navbar.all.modules)(\"current\", ctx_r8.navbar.current)(\"items\", ctx_r8.navbar.menu)(\"navigationType\", vm_r1.userPreferences[\"navigation_paradigm\"] || \"\")(\"onClose\", ctx_r8.getCloseCallBack(_r7));\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_template_15_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const globalAction_r13 = ctx.$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"href\", globalAction_r13.link.url, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵpropertyInterpolate(\"target\", globalAction_r13.link.target);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", globalAction_r13.link.label, \" \");\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_template_15_a_0_Template, 2, 3, \"a\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r10.navbar.globalActions);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 12, 13);\n    ɵngcc0.ɵɵelementStart(4, \"button\", 14);\n    ɵngcc0.ɵɵelement(5, \"scrm-image\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(7, BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_container_7_Template, 2, 5, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(9, \"li\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseNavbarComponent_div_0_ng_container_2_ng_container_2_Template_li_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n\n      const _r7 = ɵngcc0.ɵɵreference(3);\n\n      return _r7.close();\n    });\n    ɵngcc0.ɵɵelementStart(10, \"a\", 19, 20);\n    ɵngcc0.ɵɵelement(12, \"scrm-image\", 21);\n    ɵngcc0.ɵɵtext(13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(14, \"div\", 22);\n    ɵngcc0.ɵɵtemplate(15, BaseNavbarComponent_div_0_ng_container_2_ng_container_2_ng_template_15_Template, 1, 1, \"ng-template\", 2);\n    ɵngcc0.ɵɵelement(16, \"scrm-logout-ui\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(17, \"scrm-action-bar-ui\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r9 = ɵngcc0.ɵɵreference(11);\n\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"autoClose\", false);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"@mobileNavFade\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.navbar && ctx_r5.navbar.menu && ctx_r5.navbar.menu.length);\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r5.navbar.currentUser.firstName, \" \", ctx_r5.navbar.currentUser.lastName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"min-width\", _r9.offsetWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.navbar.globalActions);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 37);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item\", 38);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", ctx_r20.navbar.current);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 39);\n    ɵngcc0.ɵɵelement(1, \"scrm-grouped-menu-item\", 40);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r22 = ctx.$implicit;\n    const ctx_r21 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", item_r22)(\"subNavCollapse\", ctx_r21.subNavCollapse);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 33);\n    ɵngcc0.ɵɵtemplate(2, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_li_2_Template, 2, 1, \"li\", 34);\n    ɵngcc0.ɵɵtemplate(3, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_li_3_Template, 2, 2, \"li\", 35);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"scrm-menu-items-list\", 36);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r16.navbar.current);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r16.navbar.menu);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"items\", ctx_r16.navbar.all.modules);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 37);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item\", 38);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", ctx_r23.navbar.current);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 43);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item\", 38);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r25 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"item\", item_r25);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 6);\n    ɵngcc0.ɵɵtemplate(2, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_li_2_Template, 2, 1, \"li\", 34);\n    ɵngcc0.ɵɵtemplate(3, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_li_3_Template, 2, 1, \"li\", 41);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"scrm-menu-items-list\", 42);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.navbar.current);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r17.navbar.menu);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"items\", ctx_r17.navbar.all.modules);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_15_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 25);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const globalAction_r27 = ctx.$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"href\", globalAction_r27.link.url, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵpropertyInterpolate(\"target\", globalAction_r27.link.target);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", globalAction_r27.link.label, \" \");\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_15_a_1_Template, 2, 3, \"a\", 24);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.navbar.globalActions);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"nav\", 26);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 27);\n    ɵngcc0.ɵɵelement(3, \"scrm-home-menu-item\", 28);\n    ɵngcc0.ɵɵtemplate(4, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_4_Template, 5, 3, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(5, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_5_Template, 5, 3, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(7, \"ul\", 6);\n    ɵngcc0.ɵɵelementStart(8, \"li\", 29);\n    ɵngcc0.ɵɵelementStart(9, \"a\", 19, 30);\n    ɵngcc0.ɵɵelement(11, \"scrm-image\", 21);\n    ɵngcc0.ɵɵelementStart(12, \"span\", 31);\n    ɵngcc0.ɵɵtext(13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(14, \"div\", 32);\n    ɵngcc0.ɵɵtemplate(15, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_ng_container_15_Template, 2, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵelement(16, \"scrm-logout-ui\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(17, \"scrm-action-bar-ui\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r18 = ɵngcc0.ɵɵreference(10);\n\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngbCollapse\", ctx_r6.mainNavCollapse);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"active\", vm_r1.appState.module && vm_r1.appState.module === \"home\")(\"route\", ctx_r6.getHomePage());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.userPreferences[\"navigation_paradigm\"] == \"gm\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.userPreferences[\"navigation_paradigm\"] != \"gm\");\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r6.navbar.currentUser.firstName, \" \", ctx_r6.navbar.currentUser.lastName, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"min-width\", _r18.offsetWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.navbar.globalActions);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseNavbarComponent_div_0_ng_container_2_ng_container_1_Template, 6, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(2, BaseNavbarComponent_div_0_ng_container_2_ng_container_2_Template, 18, 8, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(3, BaseNavbarComponent_div_0_ng_container_2_ng_container_3_Template, 18, 10, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.isUserLoggedIn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isUserLoggedIn && ctx_r3.mobileNavbar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.isUserLoggedIn && !ctx_r3.mobileNavbar);\n  }\n}\n\nfunction BaseNavbarComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, BaseNavbarComponent_div_0_ng_template_1_Template, 5, 0, \"ng-template\", 2);\n    ɵngcc0.ɵɵtemplate(2, BaseNavbarComponent_div_0_ng_container_2_Template, 4, 3, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.loaded);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.loaded);\n  }\n}\n\nfunction LogoutUiComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function LogoutUiComponent_ng_container_0_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.doLogout();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(vm_r1.appStrings[ctx_r0.logout.logoutAction.label] || \"\");\n  }\n}\n\nfunction BaseMenuItemLinkComponent_a_0_scrm_image_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"image\", ctx_r2.icon);\n  }\n}\n\nfunction BaseMenuItemLinkComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵtemplate(1, BaseMenuItemLinkComponent_a_0_scrm_image_1_Template, 1, 1, \"scrm-image\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.class)(\"queryParams\", ctx_r0.link.params)(\"routerLink\", ctx_r0.link.route);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.link.label, \"\\n\");\n  }\n}\n\nfunction BaseMenuItemLinkComponent_a_1_scrm_image_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-image\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate(\"image\", ctx_r3.icon);\n  }\n}\n\nfunction BaseMenuItemLinkComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 5);\n    ɵngcc0.ɵɵtemplate(1, BaseMenuItemLinkComponent_a_1_scrm_image_1_Template, 1, 1, \"scrm-image\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"href\", ctx_r1.link.url, ɵngcc0.ɵɵsanitizeUrl)(\"ngClass\", ctx_r1.class);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.link.label, \"\\n\");\n  }\n}\n\nconst _c17 = function (a0, a1, a2) {\n  return {\n    \"link\": a0,\n    \"icon\": a1,\n    \"class\": a2\n  };\n};\n\nfunction MenuItemLinkComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction3(2, _c17, ctx_r0.link, ctx_r0.icon, ctx_r0.class));\n  }\n}\n\nfunction BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subitem_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"submenu-nav-link nav-link action-link\");\n    ɵngcc0.ɵɵproperty(\"icon\", subitem_r6.icon)(\"link\", subitem_r6.link);\n  }\n}\n\nfunction BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-sub-menu-recently-viewed\", 13);\n    ɵngcc0.ɵɵelement(2, \"scrm-sub-menu-favorites\", 13);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const sub_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"module\", sub_r2.module);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"module\", sub_r2.module);\n  }\n}\n\nfunction BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 8);\n    ɵngcc0.ɵɵtemplate(1, BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_li_1_Template, 2, 4, \"li\", 9);\n    ɵngcc0.ɵɵtemplate(2, BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_ng_container_2_Template, 3, 2, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sub_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"rounded-0\", sub_r2.submenu && sub_r2.submenu.length === 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", sub_r2.submenu);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", sub_r2 && sub_r2.module);\n  }\n}\n\nconst _c18 = function (a3, a4) {\n  return {\n    \"sub-nav-link\": true,\n    \"nav-link\": true,\n    \"action-link\": true,\n    \"dropdown-item\": a3,\n    \"dropdown-toggle\": a4\n  };\n};\n\nfunction BaseGroupedMenuItemComponent_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 5);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 6);\n    ɵngcc0.ɵɵtemplate(2, BaseGroupedMenuItemComponent_ul_4_li_1_ul_2_Template, 3, 4, \"ul\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sub_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ɵngcc0.ɵɵpureFunction2(4, _c18, sub_r2.submenu.length, sub_r2.submenu.length));\n    ɵngcc0.ɵɵproperty(\"link\", sub_r2.link);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", sub_r2.submenu.length);\n  }\n}\n\nfunction BaseGroupedMenuItemComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseGroupedMenuItemComponent_ul_4_Template_ul_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.hideDropdown();\n    });\n    ɵngcc0.ɵɵtemplate(1, BaseGroupedMenuItemComponent_ul_4_li_1_Template, 3, 7, \"li\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngbCollapse\", ctx_r0.subNavCollapse);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.item.submenu);\n  }\n}\n\nconst _c19 = function (a0, a1) {\n  return {\n    \"item\": a0,\n    \"subNavCollapse\": a1\n  };\n};\n\nfunction GroupedMenuItemComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c19, ctx_r0.item, ctx_r0.subNavCollapse));\n  }\n}\n\nfunction BaseMenuItemsListComponent_ul_0_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"nav-link action-link\");\n    ɵngcc0.ɵɵproperty(\"link\", item_r3.link);\n  }\n}\n\nfunction BaseMenuItemsListComponent_ul_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuItemsListComponent_ul_0_div_4_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r4.hideDropdown();\n    });\n    ɵngcc0.ɵɵtemplate(1, BaseMenuItemsListComponent_ul_0_div_4_div_1_Template, 2, 3, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.items);\n  }\n}\n\nfunction BaseMenuItemsListComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 3);\n    ɵngcc0.ɵɵelement(3, \"scrm-label\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, BaseMenuItemsListComponent_ul_0_div_4_Template, 2, 1, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.labelKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showDropdown);\n  }\n}\n\nconst _c20 = function (a0, a1) {\n  return {\n    \"items\": a0,\n    \"labelKey\": a1\n  };\n};\n\nfunction MenuItemsListComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c20, ctx_r0.items, ctx_r0.labelKey));\n  }\n}\n\nfunction BaseMenuRecentlyViewedComponent_ng_container_0_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuRecentlyViewedComponent_ng_container_0_ng_container_3_div_1_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r4.onClick && ctx_r4.onClick();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const recentRecord_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"routerLink\", ctx_r2.buildRoute(recentRecord_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", recentRecord_r3.attributes.item_summary, \" \");\n  }\n}\n\nfunction BaseMenuRecentlyViewedComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseMenuRecentlyViewedComponent_ng_container_0_ng_container_3_div_1_Template, 3, 2, \"div\", 3);\n    ɵngcc0.ɵɵpipe(2, \"slice\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(2, 1, ctx_r1.records, 0, ctx_r1.maxDisplayed));\n  }\n}\n\nfunction BaseMenuRecentlyViewedComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"h4\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuRecentlyViewedComponent_ng_container_0_Template_h4_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.toggleCollapse();\n    });\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, BaseMenuRecentlyViewedComponent_ng_container_0_ng_container_3_Template, 3, 5, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.collapsed);\n  }\n}\n\nconst _c21 = function (a0, a1, a2) {\n  return {\n    \"module\": a0,\n    \"onClick\": a1,\n    \"collapsible\": a2\n  };\n};\n\nfunction MenuRecentlyViewedComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction3(2, _c21, ctx_r0.module, ctx_r0.onClick, ctx_r0.collapsible));\n  }\n}\n\nconst _c22 = function (a0, a1) {\n  return {\n    \"route\": a0,\n    \"active\": a1\n  };\n};\n\nfunction HomeMenuItemComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c22, ctx_r0.route, ctx_r0.active));\n  }\n}\n\nfunction BaseMenuItemComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sub_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"sub-nav-link nav-link action-link\");\n    ɵngcc0.ɵɵproperty(\"icon\", sub_r3.icon)(\"link\", sub_r3.link);\n  }\n}\n\nfunction BaseMenuItemComponent_div_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-sub-menu-recently-viewed\", 8);\n    ɵngcc0.ɵɵelement(2, \"scrm-sub-menu-favorites\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"module\", ctx_r2.item.module);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"module\", ctx_r2.item.module);\n  }\n}\n\nfunction BaseMenuItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuItemComponent_div_3_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.hideDropdown();\n    });\n    ɵngcc0.ɵɵtemplate(1, BaseMenuItemComponent_div_3_div_1_Template, 2, 4, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(2, BaseMenuItemComponent_div_3_ng_container_2_Template, 3, 2, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.item.submenu);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.item && ctx_r0.item.module);\n  }\n}\n\nconst _c23 = function (a2) {\n  return {\n    \"top-nav-link\": true,\n    \"nav-link-nongrouped\": true,\n    \"dropdown-toggle\": a2\n  };\n};\n\nconst _c24 = function (a0) {\n  return {\n    \"item\": a0\n  };\n};\n\nfunction MenuItemComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction1(2, _c24, ctx_r0.item));\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileMenuComponent_ng_container_0_Template_li_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.navBackLink();\n    });\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 6);\n    ɵngcc0.ɵɵelementStart(3, \"a\", 7);\n    ɵngcc0.ɵɵelement(4, \"scrm-label\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_1_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileMenuComponent_ng_container_1_ng_container_1_li_2_Template_li_click_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const item_r7 = restoredCtx.$implicit;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r8.changeSubNav($event, item_r7.submenu, ctx_r8.navigationType, item_r7);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 12);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"scrm-image\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r7.link.label);\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, BaseMobileMenuComponent_ng_container_1_ng_container_1_li_2_Template, 4, 1, \"li\", 10);\n    ɵngcc0.ɵɵelementContainerStart(3);\n    ɵngcc0.ɵɵelementStart(4, \"li\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileMenuComponent_ng_container_1_ng_container_1_Template_li_click_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.changeSubNav($event, ctx_r10.all, \"gm\", null);\n    });\n    ɵngcc0.ɵɵelementStart(5, \"a\", 12);\n    ɵngcc0.ɵɵelement(6, \"scrm-label\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"scrm-image\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.mainItems);\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(2, \"li\", 16);\n    ɵngcc0.ɵɵelement(3, \"scrm-menu-recently-viewed\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"li\", 16);\n    ɵngcc0.ɵɵelement(5, \"scrm-menu-favorites\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"collapsible\", true)(\"module\", ctx_r14.subNavItem.module)(\"onClick\", ctx_r14.onClose);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"collapsible\", true)(\"module\", ctx_r14.subNavItem.module)(\"onClick\", ctx_r14.onClose);\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-mobile-module-menu\", 15);\n    ɵngcc0.ɵɵtemplate(2, BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_1_ng_container_2_Template, 6, 6, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"items\", ctx_r12.submenu)(\"onClose\", ctx_r12.onClose);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.subNavItem && ctx_r12.subNavItem.module);\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-mobile-grouped-menu\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"items\", ctx_r13.submenu)(\"onClose\", ctx_r13.onClose);\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    ɵngcc0.ɵɵtemplate(2, BaseMobileMenuComponent_ng_container_1_ng_container_2_ng_container_2_Template, 2, 2, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.subNavigationType !== \"gm\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.subNavigationType === \"gm\");\n  }\n}\n\nfunction BaseMobileMenuComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileMenuComponent_ng_container_1_ng_container_1_Template, 8, 1, \"ng-container\", 0);\n    ɵngcc0.ɵɵtemplate(2, BaseMobileMenuComponent_ng_container_1_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.mainNavLink);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.mobileSubNav);\n  }\n}\n\nconst _c25 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"current\": a0,\n    \"items\": a1,\n    \"all\": a2,\n    \"onClose\": a3,\n    \"navigationType\": a4\n  };\n};\n\nfunction MobileMenuComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction5(2, _c25, ctx_r0.current, ctx_r0.items, ctx_r0.all, ctx_r0.onClose, ctx_r0.navigationType));\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_1_ng_template_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r5.onClose && ctx_r5.onClose();\n    });\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"mobile-nav-link dropdown-item action-link pl-5 pr-3 pt-2 pb-2\");\n    ɵngcc0.ɵɵproperty(\"icon\", item_r1.icon || \"\")(\"link\", item_r1.link);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ngb-panel\", 5);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_1_ng_template_1_Template, 2, 4, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"cardClass\", \"mobile-nav-group-item disabled\")(\"disabled\", true);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_li_0_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r12.onClose && ctx_r12.onClose();\n    });\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subitem_r11 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"mobile-nav-link action-link pl-1 pr-3 pt-2 pb-2 w-100\");\n    ɵngcc0.ɵɵproperty(\"icon\", subitem_r11.icon || \"\")(\"link\", subitem_r11.link);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"li\");\n    ɵngcc0.ɵɵelement(2, \"scrm-menu-recently-viewed\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"li\");\n    ɵngcc0.ɵɵelement(4, \"scrm-menu-favorites\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"collapsible\", true)(\"module\", item_r1.module)(\"onClick\", ctx_r10.onClose);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"collapsible\", true)(\"module\", item_r1.module)(\"onClick\", ctx_r10.onClose);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_li_0_Template, 2, 4, \"li\", 11);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_ng_container_1_Template, 5, 6, \"ng-container\", 12);\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r1.submenu);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1 && item_r1.module);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ngb-panel\", 9);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_ng_template_1_Template, 2, 2, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"title\", item_r1.link.label);\n  }\n}\n\nfunction BaseMobileGroupedMenuComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_1_Template, 2, 2, \"ngb-panel\", 3);\n    ɵngcc0.ɵɵtemplate(2, BaseMobileGroupedMenuComponent_ng_container_2_ngb_panel_2_Template, 2, 1, \"ngb-panel\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r1.submenu || !item_r1.submenu.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1.submenu && item_r1.submenu.length);\n  }\n}\n\nconst _c26 = function (a0, a1) {\n  return {\n    \"items\": a0,\n    \"onClose\": a1\n  };\n};\n\nfunction MobileGroupedMenuComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c26, ctx_r0.items, ctx_r0.onClose));\n  }\n}\n\nfunction BaseMobileModuleMenuComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"li\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMobileModuleMenuComponent_ng_container_0_Template_li_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onClose && ctx_r2.onClose();\n    });\n    ɵngcc0.ɵɵelement(3, \"scrm-menu-item-link\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassMap(\"mobile-nav-link dropdown-item action-link pl-3 pr-3 pt-2 pb-2\");\n    ɵngcc0.ɵɵproperty(\"icon\", item_r1.icon || \"\")(\"link\", item_r1.link);\n  }\n}\n\nfunction MobileModuleMenuComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c26, ctx_r0.items, ctx_r0.onClose));\n  }\n}\n\nconst _c27 = function (a0, a1, a2) {\n  return {\n    label: a0,\n    url: a1,\n    route: a2\n  };\n};\n\nfunction BaseSubMenuRecentlyViewedComponent_ng_container_0_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const recentRecord_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"submenu-nav-link nav-link action-link\");\n    ɵngcc0.ɵɵproperty(\"link\", ɵngcc0.ɵɵpureFunction3(3, _c27, recentRecord_r2.attributes.item_summary, ctx_r1.buildRoute(recentRecord_r2), ctx_r1.buildRoute(recentRecord_r2)));\n  }\n}\n\nfunction BaseSubMenuRecentlyViewedComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n    ɵngcc0.ɵɵelement(3, \"scrm-image\", 3);\n    ɵngcc0.ɵɵelement(4, \"scrm-label\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 5);\n    ɵngcc0.ɵɵtemplate(6, BaseSubMenuRecentlyViewedComponent_ng_container_0_li_6_Template, 2, 7, \"li\", 6);\n    ɵngcc0.ɵɵpipe(7, \"slice\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(7, 1, ctx_r0.records, 0, ctx_r0.maxDisplayed));\n  }\n}\n\nconst _c28 = function (a0) {\n  return {\n    \"module\": a0\n  };\n};\n\nfunction SubMenuRecentlyViewedComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction1(2, _c28, ctx_r0.module));\n  }\n}\n\nfunction BaseSubMenuFavoritesComponent_ng_container_0_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵelement(1, \"scrm-menu-item-link\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const favorite_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"submenu-nav-link nav-link action-link\");\n    ɵngcc0.ɵɵproperty(\"link\", ɵngcc0.ɵɵpureFunction3(3, _c27, favorite_r2.attributes.parent_name, ctx_r1.buildRoute(favorite_r2), ctx_r1.buildRoute(favorite_r2)));\n  }\n}\n\nfunction BaseSubMenuFavoritesComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n    ɵngcc0.ɵɵelement(3, \"scrm-image\", 3);\n    ɵngcc0.ɵɵelement(4, \"scrm-label\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"ul\", 5);\n    ɵngcc0.ɵɵtemplate(6, BaseSubMenuFavoritesComponent_ng_container_0_li_6_Template, 2, 7, \"li\", 6);\n    ɵngcc0.ɵɵpipe(7, \"slice\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(7, 1, ctx_r0.records, 0, ctx_r0.maxDisplayed));\n  }\n}\n\nfunction SubMenuFavoritesComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction1(2, _c28, ctx_r0.module));\n  }\n}\n\nfunction BaseMenuFavoritesComponent_ng_container_0_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuFavoritesComponent_ng_container_0_ng_container_3_div_1_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r4.onClick && ctx_r4.onClick();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const favorite_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"routerLink\", ctx_r2.buildRoute(favorite_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", favorite_r3.attributes.parent_name, \" \");\n  }\n}\n\nfunction BaseMenuFavoritesComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, BaseMenuFavoritesComponent_ng_container_0_ng_container_3_div_1_Template, 3, 2, \"div\", 3);\n    ɵngcc0.ɵɵpipe(2, \"slice\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(2, 1, ctx_r1.records, 0, ctx_r1.maxDisplayed));\n  }\n}\n\nfunction BaseMenuFavoritesComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"h4\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function BaseMenuFavoritesComponent_ng_container_0_Template_h4_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.toggleCollapse();\n    });\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, BaseMenuFavoritesComponent_ng_container_0_ng_container_3_Template, 3, 5, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.collapsed);\n  }\n}\n\nfunction MenuFavoritesComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.getType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction3(2, _c21, ctx_r0.module, ctx_r0.onClick, ctx_r0.collapsible));\n  }\n}\n\nfunction InstallErrorModalComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"strong\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 7);\n    ɵngcc0.ɵɵtext(5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.getColumnLabel(\"LBL_CHECKSYS_TITLE\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.getColumnLabel(\"ERR_CHECKSYS\"), \" \");\n  }\n}\n\nfunction InstallErrorModalComponent_li_6_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵelementStart(1, \"strong\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.getColumnLabel(item_r2.value.info), \" \");\n  }\n}\n\nfunction InstallErrorModalComponent_li_6_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.getColumnLabel(item_r2.value.error), \" \");\n  }\n}\n\nfunction InstallErrorModalComponent_li_6_div_9_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const subItems_r9 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", subItems_r9, \" \");\n  }\n}\n\nfunction InstallErrorModalComponent_li_6_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"ul\");\n    ɵngcc0.ɵɵtemplate(2, InstallErrorModalComponent_li_6_div_9_li_2_Template, 2, 1, \"li\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r2.value.data);\n  }\n}\n\nfunction InstallErrorModalComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵelementStart(3, \"span\");\n    ɵngcc0.ɵɵelement(4, \"scrm-image\", 9);\n    ɵngcc0.ɵɵelementStart(5, \"strong\", 10);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, InstallErrorModalComponent_li_6_span_7_Template, 3, 1, \"span\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, InstallErrorModalComponent_li_6_div_8_Template, 2, 1, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, InstallErrorModalComponent_li_6_div_9_Template, 3, 1, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"alert \", ctx_r1.getAlertType(item_r2.value), \"\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r1.getAlertIcon(item_r2.value));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.getColumnLabel(item_r2.value.label), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r2.value.info !== \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r2.value.error !== \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r2.value.data.length !== 0);\n  }\n}\n\nconst _c29 = [\"dataContainer\"];\n\nfunction LineActionMenuComponent_ng_container_0_scrm_button_group_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button-group\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config$\", ctx_r1.config$);\n  }\n}\n\nfunction LineActionMenuComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtemplate(3, LineActionMenuComponent_ng_container_0_scrm_button_group_3_Template, 1, 1, \"scrm-button-group\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r0.klass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config$);\n  }\n}\n\nfunction MessageUiComponent_div_0_div_1_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const appStrings_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(appStrings_r1[message_r5.labelKey] || \"\");\n  }\n}\n\nfunction MessageUiComponent_div_0_div_1_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(message_r5.text);\n  }\n}\n\nfunction MessageUiComponent_div_0_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function MessageUiComponent_div_0_div_1_div_1_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const message_r5 = restoredCtx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r11.close(message_r5);\n    });\n    ɵngcc0.ɵɵtemplate(1, MessageUiComponent_div_0_div_1_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(2, MessageUiComponent_div_0_div_1_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementStart(3, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function MessageUiComponent_div_0_div_1_div_1_Template_a_click_3_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const message_r5 = restoredCtx.$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r13.close(message_r5);\n    });\n    ɵngcc0.ɵɵelementStart(4, \"span\", 8);\n    ɵngcc0.ɵɵtext(5, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"message \", message_r5.type, \" alert-dismissible fade show shadow\");\n    ɵngcc0.ɵɵproperty(\"@fade\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r5.labelKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", message_r5.text);\n  }\n}\n\nfunction MessageUiComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, MessageUiComponent_div_0_div_1_div_1_Template, 6, 6, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const items_r3 = ctx.ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", items_r3);\n  }\n}\n\nfunction MessageUiComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, MessageUiComponent_div_0_div_1_Template, 2, 1, \"div\", 2);\n    ɵngcc0.ɵɵpipe(2, \"async\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.messages$));\n  }\n}\n\nconst _c30 = function (a0) {\n  return {\n    \"hide-pagination-count\": a0\n  };\n};\n\nfunction PaginationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_div_0_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.first();\n    });\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_div_0_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.previous();\n    });\n    ɵngcc0.ɵɵelement(4, \"scrm-image\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 6);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_div_0_Template_button_click_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.next();\n    });\n    ɵngcc0.ɵɵelement(8, \"scrm-image\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"button\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function PaginationComponent_div_0_Template_button_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.last();\n    });\n    ɵngcc0.ɵɵelement(10, \"scrm-image\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c30, ctx_r0.displayResponsiveTable));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate4(\" (\", vm_r1.pageCount.pageFirst, \" - \", vm_r1.pageCount.pageLast, \" \", vm_r1.appStrings[\"LBL_LIST_OF\"] || \"\", \" \", vm_r1.pageCount.total, \") \");\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"scrm-panel\", 7);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 8);\n    ɵngcc0.ɵɵelement(4, \"scrm-field-layout\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"title\", panel_r4.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"panel-\", panel_r4.key, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"dataSource\", ctx_r3.getLayoutDataSource(panel_r4));\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, RecordContentComponent_ng_container_0_div_1_div_1_Template, 5, 5, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.panels);\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_div_2_li_3_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"scrm-field-layout\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"tab-\", panel_r7.key, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"dataSource\", ctx_r9.getLayoutDataSource(panel_r7));\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_div_2_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, RecordContentComponent_ng_container_0_div_2_li_3_ng_template_3_Template, 2, 4, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    ɵngcc0.ɵɵproperty(\"ngbNavItem\", i_r8 + 1);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(panel_r7.label);\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"ul\", 11, 12);\n    ɵngcc0.ɵɵlistener(\"activeIdChange\", function RecordContentComponent_ng_container_0_div_2_Template_ul_activeIdChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.active = $event;\n    });\n    ɵngcc0.ɵɵtemplate(3, RecordContentComponent_ng_container_0_div_2_li_3_Template, 4, 2, \"li\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"div\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r5 = ɵngcc0.ɵɵreference(2);\n\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"activeId\", ctx_r2.active);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.panels);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngbNavOutlet\", _r5);\n  }\n}\n\nfunction RecordContentComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordContentComponent_ng_container_0_div_1_Template, 2, 1, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, RecordContentComponent_ng_container_0_div_2_Template, 5, 3, \"div\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config && ctx_r0.config.layout === \"panels\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config && ctx_r0.config.layout === \"tabs\");\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r11 = ɵngcc0.ɵɵnextContext(3).ngIf;\n    const col_r5 = ɵngcc0.ɵɵnextContext(4).$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r15.getLabelClass(col_r5));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", field_r11.label, \" \");\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_scrm_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-label\", 8);\n  }\n\n  if (rf & 2) {\n    const field_r11 = ɵngcc0.ɵɵnextContext(3).ngIf;\n    const col_r5 = ɵngcc0.ɵɵnextContext(4).$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"labelKey\", field_r11.labelKey)(\"ngClass\", ctx_r16.getLabelClass(col_r5));\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_label_2_Template, 2, 2, \"label\", 6);\n    ɵngcc0.ɵɵtemplate(3, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_scrm_label_3_Template, 1, 2, \"scrm-label\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const field_r11 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const col_r5 = ɵngcc0.ɵɵnextContext(4).$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"pr-3\", ctx_r13.getLabelDisplay(col_r5, ctx_r13.mode) === \"inline\" && ctx_r13.getDisplay(col_r5) !== \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", field_r11.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !field_r11.label && field_r11.labelKey);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelement(2, \"scrm-field\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const field_r11 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const col_r5 = ɵngcc0.ɵɵnextContext(4).$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"flex-grow-1\", ctx_r14.getLabelDisplay(col_r5, ctx_r14.mode) === \"inline\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"field\", field_r11)(\"klass\", ctx_r14.getFieldClass(col_r5))(\"mode\", ctx_r14.mode)(\"type\", field_r11.type);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_1_Template, 4, 4, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(2, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_ng_container_2_Template, 3, 6, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ɵngcc0.ɵɵnextContext(5).$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.getLabelDisplay(col_r5, ctx_r12.mode) !== \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.getDisplay(col_r5) !== \"none\");\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const field_r11 = ctx.ngIf;\n    const col_r5 = ɵngcc0.ɵɵnextContext(4).$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.shouldDisplay(col_r5, field_r11, ctx_r10.mode));\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.getField(ctx_r8.record, col_r5.field));\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-action-group-menu\", 10);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"buttonClass\", ctx_r9.config.buttonClass)(\"config\", ctx_r9.config.actions);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵtemplate(3, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_ng_container_3_Template, 2, 2, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"align-items-center\", ctx_r7.getLabelDisplay(col_r5, ctx_r7.mode) === \"inline\")(\"flex-column\", ctx_r7.getLabelDisplay(col_r5, ctx_r7.mode) === \"top\")(\"flex-row\", ctx_r7.getLabelDisplay(col_r5, ctx_r7.mode) === \"inline\")(\"justify-content-end\", !col_r5.field);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.record);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r5.actionSlot && ctx_r7.config.actions);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_ng_container_1_Template, 4, 10, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(4);\n    let tmp_1_0;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"record-flexbox-col \", ctx_r6.getClass(col_r5), \"\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", (tmp_1_0 = ctx_r6.config.colClass) !== null && tmp_1_0 !== undefined ? tmp_1_0 : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r5.display !== \"hidden\" && ctx_r6.shouldColDisplayInMode(col_r5, ctx_r6.mode));\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_div_1_Template, 2, 5, \"div\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", col_r5.display !== \"hidden\" && ctx_r4.shouldColDisplayInMode(col_r5, ctx_r4.mode));\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    let tmp_1_0;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate3(\"d-flex record-flexbox-row \", ctx_r2.getJustify(item_r3.justify), \" \", ctx_r2.getAlign(item_r3.align), \" \", ctx_r2.getLayoutRowClass(item_r3), \"\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", (tmp_1_0 = ctx_r2.config.rowClass) !== null && tmp_1_0 !== undefined ? tmp_1_0 : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", item_r3.cols);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_ng_container_1_Template, 3, 7, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.layout.rows);\n  }\n}\n\nfunction RecordFlexboxComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, RecordFlexboxComponent_div_0_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"d-flex flex-column \", ctx_r0.config && ctx_r0.config.klass || \"\", \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.layout && ctx_r0.layout.rows);\n  }\n}\n\nfunction RecordGridComponent_ng_container_0_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵelement(1, \"scrm-action-group-menu\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"buttonClass\", ctx_r3.config.buttonClass)(\"config\", ctx_r3.config.actions);\n  }\n}\n\nfunction RecordGridComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"scrm-field-grid\", 2);\n    ɵngcc0.ɵɵtemplate(2, RecordGridComponent_ng_container_0_div_1_span_2_Template, 2, 2, \"span\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"record-grid \", ctx_r1.config && ctx_r1.config.klass || \"\", \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"actions\", !!ctx_r1.config.actions)(\"appendActions\", ctx_r1.config && ctx_r1.config.appendActions || false)(\"colClass\", ctx_r1.config && ctx_r1.config.colClass)(\"fieldMode\", ctx_r1.mode)(\"fields\", ctx_r1.fields)(\"inputClass\", ctx_r1.config && ctx_r1.config.inputClass)(\"labelClass\", ctx_r1.config && ctx_r1.config.labelClass)(\"labelDisplay\", ctx_r1.config && ctx_r1.config.labelDisplay || \"top\")(\"maxColumns\", ctx_r1.maxColumns)(\"rowClass\", ctx_r1.config && ctx_r1.config.rowClass)(\"sizeMap\", ctx_r1.sizeMap);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.config.actions);\n  }\n}\n\nfunction RecordGridComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordGridComponent_ng_container_0_div_1_Template, 3, 15, \"div\", 1);\n    ɵngcc0.ɵɵpipe(2, \"async\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.vm$));\n  }\n}\n\nfunction SortButtonComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function SortButtonComponent_ng_container_0_Template_a_click_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      const direction_r1 = restoredCtx.ngIf;\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.changeSorting(direction_r1);\n    });\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const direction_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r0.getStatusIcon(direction_r1));\n  }\n}\n\nfunction StatusBarComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelement(3, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"div\");\n    ɵngcc0.ɵɵtext(7, \"Record Status Bar Component\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction StatusBarComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtext(3, \"Record Status Bar Component\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ActionMenuComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"scrm-button-group\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config$\", ctx_r0.config$);\n  }\n}\n\nfunction SettingsMenuComponent_div_0_scrm_button_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button-group\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config$\", ctx_r2.config$);\n  }\n}\n\nfunction SettingsMenuComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, SettingsMenuComponent_div_0_scrm_button_group_1_Template, 1, 1, \"scrm-button-group\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config$);\n  }\n}\n\nfunction TableComponent_scrm_table_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-table-header\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"selection\", ctx_r0.config.selection)(\"bulkActions\", ctx_r0.config.bulkActions)(\"pagination\", ctx_r0.config.pagination);\n  }\n}\n\nfunction TableComponent_scrm_table_footer_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-table-footer\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"selection\", ctx_r1.config.selection)(\"bulkActions\", ctx_r1.config.bulkActions)(\"pagination\", ctx_r1.config.pagination);\n  }\n}\n\nfunction TableHeaderComponent_scrm_bulk_action_menu_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-bulk-action-menu\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"selectionSource\", ctx_r0.selection)(\"actionSource\", ctx_r0.bulkActions);\n  }\n}\n\nfunction TableHeaderComponent_scrm_pagination_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-pagination\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r1.pagination);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 12);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_3_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 15);\n    ɵngcc0.ɵɵlistener(\"change\", function TableBodyComponent_ng_container_0_ng_container_3_td_2_Template_input_change_2_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r14);\n      const record_r12 = restoredCtx.$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r13.toggleSelection(record_r12[\"id\"]);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"span\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const record_r12 = ctx.$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"checked\", record_r12[\"id\"] && vm_r1.selected[record_r12[\"id\"]] || ctx_r11.allSelected(vm_r1.selectionStatus))(\"disabled\", ctx_r11.allSelected(vm_r1.selectionStatus));\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 11);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_container_0_ng_container_3_th_1_Template, 1, 0, \"th\", 6);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_container_0_ng_container_3_td_2_Template, 4, 2, \"td\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_4_th_1_scrm_sort_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-sort-button\", 20);\n  }\n\n  if (rf & 2) {\n    const column_r16 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r19.getFieldSort(column_r16));\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_4_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 12);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 18);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_container_0_ng_container_4_th_1_scrm_sort_button_2_Template, 1, 1, \"scrm-sort-button\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"labelKey\", column_r16.label)(\"module\", ctx_r17.config.module || \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.config.sort$ && column_r16.sortable);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_4_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 13);\n    ɵngcc0.ɵɵelement(1, \"scrm-field\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const record_r22 = ctx.$implicit;\n    const column_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"mode\", \"list\")(\"type\", column_r16.type)(\"field\", ctx_r18.getField(column_r16, record_r22))(\"record\", record_r22);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 17);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_container_0_ng_container_4_th_1_Template, 3, 3, \"th\", 6);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_container_0_ng_container_4_td_2_Template, 2, 4, \"td\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r16 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkColumnDef\", column_r16.name);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 12);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_td_7_scrm_line_action_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-line-action-menu\", 23);\n  }\n\n  if (rf & 2) {\n    const record_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r25.config.lineActions)(\"record\", record_r24);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 13);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_container_0_td_7_scrm_line_action_menu_1_Template, 1, 2, \"scrm-line-action-menu\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const record_r24 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", record_r24 && ctx_r5.config.lineActions);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 24);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 25);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"p\", 26);\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 27);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"scrm-loading-spinner\", 28);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵclassProp(\"m-5\", !vm_r1.records || vm_r1.records.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"overlay\", true);\n  }\n}\n\nfunction TableBodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"table\", 2);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_container_0_ng_container_3_Template, 3, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(4, TableBodyComponent_ng_container_0_ng_container_4_Template, 3, 1, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementContainerStart(5, 5);\n    ɵngcc0.ɵɵtemplate(6, TableBodyComponent_ng_container_0_th_6_Template, 1, 0, \"th\", 6);\n    ɵngcc0.ɵɵtemplate(7, TableBodyComponent_ng_container_0_td_7_Template, 2, 1, \"td\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtemplate(8, TableBodyComponent_ng_container_0_tr_8_Template, 1, 0, \"tr\", 8);\n    ɵngcc0.ɵɵtemplate(9, TableBodyComponent_ng_container_0_tr_9_Template, 1, 0, \"tr\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, TableBodyComponent_ng_container_0_div_10_Template, 3, 0, \"div\", 0);\n    ɵngcc0.ɵɵtemplate(11, TableBodyComponent_ng_container_0_div_11_Template, 2, 3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"dataSource\", ctx_r0.config.dataSource);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.selection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r1.columns);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"cdkHeaderRowDef\", vm_r1.displayedColumns);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cdkRowDefColumns\", vm_r1.displayedColumns);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !vm_r1.loading && vm_r1.records.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.loading);\n  }\n}\n\nfunction TableFooterComponent_scrm_bulk_action_menu_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-bulk-action-menu\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"selectionSource\", ctx_r0.selection)(\"actionSource\", ctx_r0.bulkActions);\n  }\n}\n\nfunction TableFooterComponent_scrm_pagination_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-pagination\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r1.pagination);\n  }\n}\n\nfunction FavoriteToggleComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.addButton);\n  }\n}\n\nfunction FavoriteToggleComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.removeButton);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelement(1, \"scrm-dropdown-button\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r2.store.myFilterButton);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelement(1, \"input\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 15);\n    ɵngcc0.ɵɵelement(3, \"scrm-label\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", item_r8.value);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"labelKey\", item_r8.labelKey);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_1_div_1_Template, 4, 2, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.store.special);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_2_scrm_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button\", 7);\n  }\n\n  if (rf & 2) {\n    const button_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"config\", button_r10);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(1, ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_2_scrm_button_1_Template, 1, 1, \"scrm-button\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.store.gridButtons);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_scrm_field_grid_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"scrm-field-grid\", 8);\n    ɵngcc0.ɵɵtemplate(1, ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, ListFilterComponent_scrm_panel_0_scrm_field_grid_3_div_2_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"actions\", true)(\"appendActions\", false)(\"fieldMode\", ctx_r3.store.mode)(\"fields\", ctx_r3.store.displayFields)(\"record\", vm_r1)(\"special\", ctx_r3.store.special.length > 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.store.special.length > 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.store.gridButtons);\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-grid\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r4.getGridConfig());\n  }\n}\n\nfunction ListFilterComponent_scrm_panel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"scrm-panel\", 1);\n    ɵngcc0.ɵɵtemplate(1, ListFilterComponent_scrm_panel_0_div_1_Template, 2, 1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(3, ListFilterComponent_scrm_panel_0_scrm_field_grid_3_Template, 3, 8, \"scrm-field-grid\", 4);\n    ɵngcc0.ɵɵtemplate(4, ListFilterComponent_scrm_panel_0_ng_container_4_Template, 2, 1, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate1(\"klass\", \"filter-panel \", ctx_r0.config && ctx_r0.config.klass || \"\", \"\");\n    ɵngcc0.ɵɵproperty(\"titleKey\", \"LBL_BASIC_FILTER\")(\"close\", ctx_r0.store.closeButton)(\"isCollapsed$\", ctx_r0.store.isCollapsed$)(\"mode\", ctx_r0.store.panelMode);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.store.myFilterButton);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.store.displayFields && ctx_r0.store.displayFields.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config && ctx_r0.config.savedFilterEdit);\n  }\n}\n\nfunction RecordPanelComponent_scrm_panel_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-grid\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r2.getGridConfig());\n  }\n}\n\nfunction RecordPanelComponent_scrm_panel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"scrm-panel\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(2, RecordPanelComponent_scrm_panel_0_ng_container_2_Template, 2, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate1(\"klass\", \"record-panel \", ctx_r0.config && ctx_r0.config.klass || \"\", \"\");\n    ɵngcc0.ɵɵproperty(\"close\", ctx_r0.closeButton)(\"isCollapsed$\", ctx_r0.isCollapsed$)(\"mode\", ctx_r0.panelMode)(\"titleKey\", ctx_r0.config.title || \"\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config);\n  }\n}\n\nconst _c31 = [\"list\"];\n\nfunction RecordThreadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelement(1, \"scrm-label\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction RecordThreadComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelement(1, \"scrm-loading-spinner\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"overlay\", true);\n  }\n}\n\nfunction RecordThreadComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r5.getLoadMoreButton());\n  }\n}\n\nfunction RecordThreadComponent_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", null, 14);\n    ɵngcc0.ɵɵelement(2, \"scrm-record-thread-item\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const record_r8 = ctx.$implicit;\n\n    const _r9 = ɵngcc0.ɵɵreference(1);\n\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r6.buildItem(record_r8, _r9));\n  }\n}\n\nfunction RecordThreadComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r7.getLoadMoreButton());\n  }\n}\n\nfunction RecordThreadComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8, 9);\n    ɵngcc0.ɵɵtemplate(2, RecordThreadComponent_div_3_div_2_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(3, RecordThreadComponent_div_3_div_3_Template, 3, 1, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(4, RecordThreadComponent_div_3_div_4_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r2.getMaxHeight());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.direction === \"asc\" && !ctx_r2.allLoaded());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.records);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.direction === \"desc\" && !ctx_r2.allLoaded());\n  }\n}\n\nfunction RecordThreadComponent_ng_container_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 17);\n    ɵngcc0.ɵɵelement(2, \"scrm-record-thread-item\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 18);\n    ɵngcc0.ɵɵelement(4, \"scrm-button\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r10.buildCreateItem());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r10.getCreateButton());\n  }\n}\n\nfunction RecordThreadComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordThreadComponent_ng_container_4_div_1_Template, 5, 2, \"div\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.loading);\n  }\n}\n\nconst _c32 = [\"body\"];\n\nfunction RecordThreadItemComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-flexbox\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.buildConfig(ctx_r1.config.metadata.headerLayout));\n  }\n}\n\nfunction RecordThreadItemComponent_div_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-flexbox\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r3.buildConfig(ctx_r3.config.metadata.bodyLayout));\n  }\n}\n\nfunction RecordThreadItemComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n}\n\nfunction RecordThreadItemComponent_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelement(1, \"scrm-button\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r5.getCollapseButton());\n  }\n}\n\nfunction RecordThreadItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(2, RecordThreadItemComponent_div_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", null, 3);\n    ɵngcc0.ɵɵtemplate(5, RecordThreadItemComponent_div_0_ng_container_5_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(6, RecordThreadItemComponent_div_0_div_6_Template, 1, 0, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, RecordThreadItemComponent_div_0_div_7_Template, 2, 1, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate2(\"d-flex flex-column record-thread-item \", ctx_r0.config && ctx_r0.config.klass || \"\", \" \", ctx_r0.dynamicClass, \"\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config.metadata && ctx_r0.config.metadata.headerLayout);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"record-thread-item-body flex-grow-1 \", ctx_r0.getBodyClass(), \"\");\n    ɵngcc0.ɵɵclassProp(\"collapsed\", ctx_r0.collapsible && ctx_r0.collapsed)(\"expanded\", ctx_r0.collapsible && !ctx_r0.collapsed);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.config.metadata && ctx_r0.config.metadata.bodyLayout);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.collapsible && ctx_r0.collapsed);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.collapsible);\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 18);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const chart_r7 = ctx.$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r6.getKey(chart_r7));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r6.language.getFieldLabel(chart_r7.labelKey), \" \");\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"form\", 15);\n    ɵngcc0.ɵɵelementStart(3, \"select\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_Template_select_ngModelChange_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.onChartSelect();\n    })(\"ngModelChange\", function ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_Template_select_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.selectedChart = $event;\n    });\n    ɵngcc0.ɵɵtemplate(4, ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_option_4_Template, 2, 2, \"option\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r2.selectedChart);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.configuredCharts);\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_ng_container_9_scrm_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart\", 20);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"dataSource\", ctx_r12.dataSource)(\"type\", ctx_r12.chartType);\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ChartSidebarWidgetComponent_scrm_widget_panel_0_ng_container_9_scrm_chart_1_Template, 1, 2, \"scrm-chart\", 19);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.dataSource && ctx_r3.chartType);\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelement(1, \"scrm-loading-spinner\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"m-5\", !ctx_r4.dataSource);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"overlay\", true);\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 23);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.language.getFieldLabel(ctx_r5.messageLabelKey), \" \");\n  }\n}\n\nfunction ChartSidebarWidgetComponent_scrm_widget_panel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"scrm-widget-panel\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, ChartSidebarWidgetComponent_scrm_widget_panel_0_div_5_Template, 5, 2, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(8, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(9, ChartSidebarWidgetComponent_scrm_widget_panel_0_ng_container_9_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(10, ChartSidebarWidgetComponent_scrm_widget_panel_0_div_10_Template, 2, 3, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(11, ChartSidebarWidgetComponent_scrm_widget_panel_0_p_11_Template, 2, 1, \"p\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r0.title);\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isConfigured && ctx_r0.chartOptions.toggle);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.selectedChart && !ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.loading && (!ctx_r0.isConfigured() || !ctx_r0.dataSource));\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelement(1, \"scrm-loading-spinner\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"overlay\", true);\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_scrm_chart_message_area_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-chart-message-area\", 10);\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_div_5_div_1_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(1, \"small\", 25);\n    ɵngcc0.ɵɵelement(2, \"scrm-field\", 29);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const entry_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"type\", entry_r5.description.type)(\"field\", entry_r5.description)(\"record\", entry_r5.record);\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 14);\n    ɵngcc0.ɵɵelement(4, \"scrm-image\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 16);\n    ɵngcc0.ɵɵelement(7, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 19);\n    ɵngcc0.ɵɵelementStart(10, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(11, \"p\", 21);\n    ɵngcc0.ɵɵelement(12, \"scrm-field\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(13, HistorySidebarWidgetComponent_div_1_div_5_div_1_div_13_Template, 3, 3, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(14, \"div\", 24);\n    ɵngcc0.ɵɵelementStart(15, \"small\", 25);\n    ɵngcc0.ɵɵelement(16, \"scrm-field\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(17, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(18, \"small\", 27);\n    ɵngcc0.ɵɵelement(19, \"scrm-field\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const entry_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"d-flex flex-row m-2 history-timeline-entry entry-\", entry_r5.color, \"\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"image\", entry_r5.icon);\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵproperty(\"type\", entry_r5.title.type)(\"field\", entry_r5.title)(\"record\", entry_r5.record);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", entry_r5.description);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"type\", entry_r5.user.type)(\"field\", entry_r5.user)(\"record\", entry_r5.record);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"type\", entry_r5.date.type)(\"field\", entry_r5.date)(\"record\", entry_r5.record);\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, HistorySidebarWidgetComponent_div_1_div_5_div_1_Template, 20, 14, \"div\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.length > 0);\n  }\n}\n\nfunction HistorySidebarWidgetComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, HistorySidebarWidgetComponent_div_1_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"cdk-virtual-scroll-viewport\", 5);\n    ɵngcc0.ɵɵlistener(\"scroll\", function HistorySidebarWidgetComponent_div_1_Template_cdk_virtual_scroll_viewport_scroll_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onScroll();\n    });\n    ɵngcc0.ɵɵtemplate(4, HistorySidebarWidgetComponent_div_1_scrm_chart_message_area_4_Template, 1, 0, \"scrm-chart-message-area\", 6);\n    ɵngcc0.ɵɵtemplate(5, HistorySidebarWidgetComponent_div_1_div_5_Template, 2, 1, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.adapter == null ? null : ctx_r0.adapter.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c2, vm_r1.length <= 0 ? \"history-timeline-viewport-no-data\" : \"history-timeline-viewport\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r0.adapter == null ? null : ctx_r0.adapter.loading) && vm_r1.length <= 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r1);\n  }\n}\n\nfunction RecordThreadSidebarWidgetComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction RecordThreadSidebarWidgetComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-thread\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r1.recordThreadConfig);\n  }\n}\n\nfunction SidebarWidgetComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.getErrorMessage());\n  }\n}\n\nconst _c33 = function (a0, a1, a2) {\n  return {\n    \"config\": a0,\n    \"context\": a1,\n    \"context$\": a2\n  };\n};\n\nfunction SidebarWidgetComponent_ndc_dynamic_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r1.componentType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction3(2, _c33, ctx_r1.config, ctx_r1.context, ctx_r1.context$));\n  }\n}\n\nfunction SubpanelComponent_scrm_button_group_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-button-group\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config$\", ctx_r0.config$);\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function SubpanelContainerComponent_ng_container_0_ng_template_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.toggleSubPanels();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵelement(2, \"scrm-label\", 10);\n    ɵngcc0.ɵɵelement(3, \"scrm-image\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"image\", ctx_r3.toggleIcon);\n    ɵngcc0.ɵɵattribute(\"aria-expanded\", !ctx_r3.isCollapsed);\n  }\n}\n\nconst _c34 = function (a0) {\n  return {\n    \"sub-panel-banner-button-active\": a0\n  };\n};\n\nfunction SubpanelContainerComponent_ng_container_0_ng_template_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function SubpanelContainerComponent_ng_container_0_ng_template_5_div_2_Template_div_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const item_r9 = restoredCtx.$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r10.showSubpanel(item_r9.key, item_r9.value);\n    });\n    ɵngcc0.ɵɵelement(1, \"scrm-grid-widget\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c34, item_r9.value.show === true));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r8.getGridConfig(item_r9.value));\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(2, SubpanelContainerComponent_ng_container_0_ng_template_5_div_2_Template, 2, 4, \"div\", 14);\n    ɵngcc0.ɵɵpipe(3, \"keyvalue\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngbCollapse\", ctx_r4.isCollapsed);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(3, 2, vm_r1.subpanels));\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_ng_container_7_ng_container_1_scrm_subpanel_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-subpanel\", 18);\n  }\n\n  if (rf & 2) {\n    const item_r15 = ɵngcc0.ɵɵnextContext().ngIf;\n    const subpanelKey_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"maxColumns$\", ctx_r16.maxColumns$)(\"store\", item_r15)(\"onClose\", ctx_r16.getCloseCallBack(subpanelKey_r13, item_r15));\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, SubpanelContainerComponent_ng_container_0_ng_container_7_ng_container_1_scrm_subpanel_1_Template, 1, 3, \"scrm-subpanel\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r15 = ctx.ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r15.show);\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, SubpanelContainerComponent_ng_container_0_ng_container_7_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const subpanelKey_r13 = ctx.$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.subpanels[subpanelKey_r13]);\n  }\n}\n\nfunction SubpanelContainerComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"ngb-accordion\", 1, 2);\n    ɵngcc0.ɵɵelementStart(3, \"ngb-panel\", 3);\n    ɵngcc0.ɵɵtemplate(4, SubpanelContainerComponent_ng_container_0_ng_template_4_Template, 4, 2, \"ng-template\", 4);\n    ɵngcc0.ɵɵtemplate(5, SubpanelContainerComponent_ng_container_0_ng_template_5_Template, 4, 4, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(7, SubpanelContainerComponent_ng_container_0_ng_container_7_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(7);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.openSubpanels);\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"uppercase\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 1, vm_r1.appStrings[ctx_r2.messageLabelKey] || \"\"), \" \");\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"uppercase\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r6.getLabel(item_r5.value.labelKey)), \": \");\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelement(1, \"scrm-field\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"type\", vm_r1.statistics[item_r5.key].field.type)(\"field\", vm_r1.statistics[item_r5.key].field);\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, StatisticsTopWidgetComponent_div_0_ng_container_2_ng_container_3_div_1_Template, 2, 2, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !vm_r1.statistics[item_r5.key].loading && vm_r1.statistics[item_r5.key].field);\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_div_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1, \" - \");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵelement(1, \"scrm-inline-loading-spinner\");\n    ɵngcc0.ɵɵtemplate(2, StatisticsTopWidgetComponent_div_0_ng_container_2_div_4_ng_container_2_Template, 2, 0, \"ng-container\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const loading_r16 = ctx.ngIf;\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !loading_r16 && (!item_r5.key || !vm_r1.statistics[item_r5.key]));\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"uppercase\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r9.getLabel(item_r5.value.endLabelKey)), \" \");\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, StatisticsTopWidgetComponent_div_0_ng_container_2_div_2_Template, 3, 3, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(3, StatisticsTopWidgetComponent_div_0_ng_container_2_ng_container_3_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(4, StatisticsTopWidgetComponent_div_0_ng_container_2_div_4_Template, 3, 1, \"div\", 8);\n    ɵngcc0.ɵɵpipe(5, \"async\");\n    ɵngcc0.ɵɵtemplate(6, StatisticsTopWidgetComponent_div_0_ng_container_2_div_6_Template, 3, 3, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5.value.labelKey && ctx_r3.getLabel(item_r5.value.labelKey));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5.key && vm_r1.statistics[item_r5.key]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(5, 4, item_r5.value.store.loading$));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r5.value.endLabelKey && ctx_r3.getLabel(item_r5.value.endLabelKey));\n  }\n}\n\nfunction StatisticsTopWidgetComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, StatisticsTopWidgetComponent_div_0_div_1_Template, 3, 3, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(2, StatisticsTopWidgetComponent_div_0_ng_container_2_Template, 7, 6, \"ng-container\", 3);\n    ɵngcc0.ɵɵpipe(3, \"keyvalue\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.messageLabelKey);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r0.statistics));\n  }\n}\n\nconst _c35 = function (a0, a1) {\n  return {\n    \"config\": a0,\n    \"context\": a1\n  };\n};\n\nfunction TopWidgetComponent_ndc_dynamic_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx_r0.componentType)(\"ndcDynamicInputs\", ɵngcc0.ɵɵpureFunction2(2, _c35, ctx_r0.config, ctx_r0.context));\n  }\n}\n\nfunction CreateRecordComponent_div_0_scrm_status_bar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-status-bar\");\n  }\n}\n\nfunction CreateRecordComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-header\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelement(3, \"hr\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, CreateRecordComponent_div_0_scrm_status_bar_4_Template, 1, 0, \"scrm-status-bar\", 4);\n    ɵngcc0.ɵɵelement(5, \"scrm-record-container\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showStatusBar);\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 13);\n    ɵngcc0.ɵɵelement(3, \"div\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction RecordContainerComponent_div_0_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelement(2, \"scrm-top-widget\", 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", vm_r1.topWidgetConfig.widget)(\"context\", ctx_r9.getViewContext())(\"type\", vm_r1.topWidgetConfig.widget.type);\n  }\n}\n\nfunction RecordContainerComponent_div_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, RecordContainerComponent_div_0_ng_container_5_div_1_Template, 3, 3, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.topWidgetConfig.show && ctx_r3.hasTopWidgetMetadata(vm_r1.topWidgetConfig.widget));\n  }\n}\n\nfunction RecordContainerComponent_div_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-content-skeleton\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction RecordContainerComponent_div_0_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-content\", 16);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"dataSource\", ctx_r5.getContentAdapter());\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelement(1, \"scrm-sidebar-widget\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const widget_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", widget_r13)(\"context$\", ctx_r12.getViewContext$())(\"context\", ctx_r12.getViewContext())(\"type\", widget_r13.type);\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, RecordContainerComponent_div_0_div_10_div_2_Template, 2, 4, \"div\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r1.bottomWidgetConfig.widgets);\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 21);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵelement(2, \"scrm-subpanel-container\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r7.getSubpanelsConfig());\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelement(1, \"scrm-sidebar-widget\", 24);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const widget_r16 = ctx.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"type\", widget_r16.type)(\"context\", ctx_r15.getViewContext())(\"context$\", ctx_r15.getViewContext$())(\"config\", widget_r16);\n  }\n}\n\nfunction RecordContainerComponent_div_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(1, RecordContainerComponent_div_0_div_12_div_1_Template, 2, 4, \"div\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r1.sidebarWidgetConfig.widgets);\n  }\n}\n\nconst _c36 = function (a0) {\n  return {\n    \"col-lg-12\": a0\n  };\n};\n\nfunction RecordContainerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(4, RecordContainerComponent_div_0_div_4_Template, 4, 0, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(5, RecordContainerComponent_div_0_ng_container_5_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(8, RecordContainerComponent_div_0_ng_container_8_Template, 2, 0, \"ng-container\", 6);\n    ɵngcc0.ɵɵtemplate(9, RecordContainerComponent_div_0_ng_container_9_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, RecordContainerComponent_div_0_div_10_Template, 3, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(11, RecordContainerComponent_div_0_div_11_Template, 3, 1, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(12, RecordContainerComponent_div_0_div_12_Template, 2, 1, \"div\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c36, !vm_r1.sidebarWidgetConfig.show));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.bottomWidgetConfig.show && vm_r1.bottomWidgetConfig.widgets);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.showSubpanels);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.sidebarWidgetConfig.show && vm_r1.sidebarWidgetConfig.widgets);\n  }\n}\n\nfunction RecordHeaderComponent_ng_container_2_scrm_dynamic_label_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-dynamic-label\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"fields\", ctx_r2.record.fields)(\"labelKey\", ctx_r2.getSummaryTemplate());\n  }\n}\n\nfunction RecordHeaderComponent_ng_container_2_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵelement(1, \"scrm-favorite-toggle\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"record\", ctx_r3.record);\n  }\n}\n\nfunction RecordHeaderComponent_ng_container_2_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelement(1, \"scrm-action-group-menu\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r4.actionsAdapter);\n  }\n}\n\nfunction RecordHeaderComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵelement(4, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(5, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 8);\n    ɵngcc0.ɵɵelement(8, \"scrm-module-title\", 9);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(10, RecordHeaderComponent_ng_container_2_scrm_dynamic_label_10_Template, 1, 2, \"scrm-dynamic-label\", 11);\n    ɵngcc0.ɵɵtemplate(11, RecordHeaderComponent_ng_container_2_div_11_Template, 2, 1, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(12, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(13, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(14, RecordHeaderComponent_ng_container_2_div_14_Template, 2, 1, \"div\", 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(8);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r0.moduleTitle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.record && ctx_r0.record.fields);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.record && ctx_r0.record.fields && ctx_r0.mode !== \"create\");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.record);\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 21);\n    ɵngcc0.ɵɵelement(2, \"scrm-module-title\", 9);\n    ɵngcc0.ɵɵelement(3, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r5.moduleTitle);\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_div_1_scrm_dynamic_label_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-dynamic-label\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"fields\", ctx_r7.record.fields)(\"labelKey\", ctx_r7.getSummaryTemplate());\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵelement(1, \"scrm-favorite-toggle\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"record\", ctx_r8.record);\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelement(1, \"scrm-action-group-menu\", 26);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r9.actionsAdapter)(\"actionContext\", ctx_r9.getActionContext(ctx_r9.record));\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 21);\n    ɵngcc0.ɵɵelement(2, \"scrm-module-title\", 9);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(4, RecordHeaderComponent_ng_template_3_div_1_scrm_dynamic_label_4_Template, 1, 2, \"scrm-dynamic-label\", 11);\n    ɵngcc0.ɵɵtemplate(5, RecordHeaderComponent_ng_template_3_div_1_div_5_Template, 2, 1, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 24);\n    ɵngcc0.ɵɵelement(8, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(9, RecordHeaderComponent_ng_template_3_div_1_div_9_Template, 2, 2, \"div\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r6.moduleTitle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.record && ctx_r6.record.fields);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.record && ctx_r6.record.fields && ctx_r6.mode !== \"create\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.record);\n  }\n}\n\nfunction RecordHeaderComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, RecordHeaderComponent_ng_template_3_div_0_Template, 4, 1, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, RecordHeaderComponent_ng_template_3_div_1_Template, 10, 4, \"div\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.loading);\n  }\n}\n\nfunction RecordComponent_div_0_scrm_status_bar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"scrm-status-bar\");\n  }\n}\n\nfunction RecordComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"scrm-record-header\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelement(3, \"hr\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, RecordComponent_div_0_scrm_status_bar_4_Template, 1, 0, \"scrm-status-bar\", 4);\n    ɵngcc0.ɵɵelement(5, \"scrm-record-container\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showStatusBar);\n  }\n}\n\nfunction InstallHeaderComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵelement(5, \"scrm-label\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n    ɵngcc0.ɵɵelement(7, \"scrm-label\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(11, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(12, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(13, \"label\", 13);\n    ɵngcc0.ɵɵelement(14, \"scrm-label\", 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(15, \": \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(16, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(17, \"div\", 16);\n    ɵngcc0.ɵɵelement(18, \"scrm-field\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(19, \"div\");\n    ɵngcc0.ɵɵelement(20, \"scrm-action-group-menu\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(14);\n    ɵngcc0.ɵɵproperty(\"labelKey\", ctx_r0.store.getIgnoreSystemChecksField().definition.vname);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"field\", ctx_r0.store.getIgnoreSystemChecksField())(\"mode\", \"edit\")(\"record\", vm_r1.record)(\"type\", ctx_r0.store.getIgnoreSystemChecksField().type);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"actionContext\", ctx_r0.getActionContext(vm_r1.record))(\"config\", ctx_r0.actionsAdapter);\n  }\n}\n\nfunction InstallViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"scrm-install-header\");\n    ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n    ɵngcc0.ɵɵelement(3, \"hr\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"scrm-install-container\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ListContainerComponent_div_0_ng_container_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelement(1, \"scrm-sidebar-widget\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const widget_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", widget_r4)(\"context\", ctx_r3.getViewContext())(\"context$\", ctx_r3.store.context$)(\"type\", widget_r4.type);\n  }\n}\n\nfunction ListContainerComponent_div_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(2, ListContainerComponent_div_0_ng_container_4_div_2_Template, 2, 4, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"display\", ctx_r2.getDisplay(!!(vm_r1.sidebarWidgetConfig.show && vm_r1.sidebarWidgetConfig.widgets)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", vm_r1.sidebarWidgetConfig.widgets);\n  }\n}\n\nfunction ListContainerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelement(3, \"scrm-table\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, ListContainerComponent_div_0_ng_container_4_Template, 3, 3, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c36, !ctx_r0.getDisplayWidgets()));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.tableConfig);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.sidebarWidgetConfig.widgetsEnabled);\n  }\n}\n\nfunction ListHeaderComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 6);\n    ɵngcc0.ɵɵelement(5, \"scrm-action-menu\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n    ɵngcc0.ɵɵelement(9, \"scrm-module-title\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(10, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(11, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(12, \"div\", 10);\n    ɵngcc0.ɵɵelement(13, \"scrm-settings-menu\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(9);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r0.moduleTitle);\n  }\n}\n\nfunction ListHeaderComponent_ng_template_3_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"scrm-list-filter\", 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r2.filterAdapter.getConfig());\n  }\n}\n\nfunction ListHeaderComponent_ng_template_3_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"scrm-record-panel\", 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r3.recordPanelConfig);\n  }\n}\n\nfunction ListHeaderComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 12);\n    ɵngcc0.ɵɵelement(2, \"scrm-module-title\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 7);\n    ɵngcc0.ɵɵelement(6, \"scrm-action-menu\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n    ɵngcc0.ɵɵelement(8, \"scrm-settings-menu\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"div\", 15);\n    ɵngcc0.ɵɵelement(10, \"hr\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(11, ListHeaderComponent_ng_template_3_div_11_Template, 4, 1, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(12, ListHeaderComponent_ng_template_3_div_12_Template, 4, 1, \"div\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r1.moduleTitle);\n    ɵngcc0.ɵɵadvance(9);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.actionPanel === \"filters\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.actionPanel === \"recordPanel\" && ctx_r1.recordPanelConfig);\n  }\n}\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelement(1, \"scrm-list-header\");\n    ɵngcc0.ɵɵelement(2, \"scrm-list-container\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginUiComponent_div_0_div_6_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    let tmp_0_0;\n    ɵngcc0.ɵɵproperty(\"selected\", ((tmp_0_0 = ctx_r7.language) !== null && tmp_0_0 !== undefined ? tmp_0_0 : \"en_us\") === item_r8)(\"value\", item_r8);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r7.getEnabledLanguages()[item_r8], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"label\", 11);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(7, \"select\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"change\", function LoginUiComponent_div_0_div_6_Template_select_change_7_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n\n      const _r6 = ɵngcc0.ɵɵreference(8);\n\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.onLanguageSelect(_r6.value);\n    });\n    ɵngcc0.ɵɵtemplate(9, LoginUiComponent_div_0_div_6_option_9_Template, 2, 3, \"option\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(vm_r1.appStrings[\"LBL_LANGUAGE\"]);\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.getEnabledLanguagesKeys());\n  }\n}\n\nfunction LoginUiComponent_div_0_div_8_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"ERR_MISSING_REQUIRED_FIELDS\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_8_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"ERR_MISSING_REQUIRED_FIELDS\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_8_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 29);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 30);\n    ɵngcc0.ɵɵlistener(\"click\", function LoginUiComponent_div_0_div_8_div_13_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      const ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r19.flipCard();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_LOGIN_FORGOT_PASSWORD\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 19);\n    ɵngcc0.ɵɵelementStart(3, \"input\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function LoginUiComponent_div_0_div_8_Template_input_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r22.uname = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, LoginUiComponent_div_0_div_8_div_5_Template, 2, 1, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 13);\n    ɵngcc0.ɵɵelement(7, \"scrm-image\", 23);\n    ɵngcc0.ɵɵelementStart(8, \"input\", 24, 25);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function LoginUiComponent_div_0_div_8_Template_input_ngModelChange_8_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      const ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r24.passw = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, LoginUiComponent_div_0_div_8_div_10_Template, 2, 1, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"button\", 26);\n    ɵngcc0.ɵɵlistener(\"click\", function LoginUiComponent_div_0_div_8_Template_button_click_11_listener() {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r2 = ɵngcc0.ɵɵreference(2);\n\n      const ctx_r25 = ɵngcc0.ɵɵnextContext();\n\n      _r2.control.markAllAsTouched();\n\n      return _r2.valid && ctx_r25.doLogin();\n    });\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(13, LoginUiComponent_div_0_div_8_div_13_Template, 3, 1, \"div\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r12 = ɵngcc0.ɵɵreference(4);\n\n    const _r14 = ɵngcc0.ɵɵreference(9);\n\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@fade\", undefined);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", _r12.invalid && _r12.touched);\n    ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", vm_r1.appStrings[\"LBL_USER_NAME\"]);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r4.uname);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r12.invalid && _r12.touched);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", _r14.invalid && _r14.touched);\n    ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", vm_r1.appStrings[\"LBL_PASSWORD\"]);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r4.passw);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r14.invalid && _r14.touched);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"scrm-button-loading\", ctx_r4.loading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_LOGIN_BUTTON_LABEL\"], \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.showForgotPassword);\n  }\n}\n\nfunction LoginUiComponent_div_0_div_9_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"ERR_MISSING_REQUIRED_FIELDS\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_9_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ɵngcc0.ɵɵnextContext(2).ngIf;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"ERR_MISSING_REQUIRED_FIELDS\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵelement(2, \"scrm-image\", 19);\n    ɵngcc0.ɵɵelementStart(3, \"input\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function LoginUiComponent_div_0_div_9_Template_input_ngModelChange_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      const ctx_r33 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r33.uname = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, LoginUiComponent_div_0_div_9_div_5_Template, 2, 1, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"div\", 13);\n    ɵngcc0.ɵɵelement(7, \"scrm-image\", 32);\n    ɵngcc0.ɵɵelementStart(8, \"input\", 33, 34);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function LoginUiComponent_div_0_div_9_Template_input_ngModelChange_8_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      const ctx_r35 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r35.email = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(10, LoginUiComponent_div_0_div_9_div_10_Template, 2, 1, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"button\", 35);\n    ɵngcc0.ɵɵlistener(\"click\", function LoginUiComponent_div_0_div_9_Template_button_click_11_listener() {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      ɵngcc0.ɵɵnextContext();\n\n      const _r2 = ɵngcc0.ɵɵreference(2);\n\n      const ctx_r36 = ɵngcc0.ɵɵnextContext();\n\n      _r2.control.markAllAsTouched();\n\n      return _r2.valid && ctx_r36.recoverPassword();\n    });\n    ɵngcc0.ɵɵtext(12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(13, \"div\");\n    ɵngcc0.ɵɵelementStart(14, \"a\", 36);\n    ɵngcc0.ɵɵlistener(\"click\", function LoginUiComponent_div_0_div_9_Template_a_click_14_listener() {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      const ctx_r37 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r37.flipCard();\n    });\n    ɵngcc0.ɵɵtext(15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r27 = ɵngcc0.ɵɵreference(4);\n\n    const _r29 = ɵngcc0.ɵɵreference(9);\n\n    const vm_r1 = ɵngcc0.ɵɵnextContext().ngIf;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@fade\", undefined);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", _r27.invalid && _r27.touched);\n    ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", vm_r1.appStrings[\"LBL_USER_NAME\"]);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r5.uname);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r27.invalid && _r27.touched);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassProp(\"is-invalid\", _r29.invalid && _r29.touched);\n    ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", vm_r1.appStrings[\"LBL_EMAIL\"]);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r5.email);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", _r29.invalid && _r29.touched);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_GENERATE_PASSWORD_BUTTON_TITLE\"], \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", vm_r1.appStrings[\"LBL_BACK\"], \" \");\n  }\n}\n\nfunction LoginUiComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"form\", 2, 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelement(5, \"scrm-logo-ui\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, LoginUiComponent_div_0_div_6_Template, 10, 2, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(8, LoginUiComponent_div_0_div_8_Template, 14, 14, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(9, LoginUiComponent_div_0_div_9_Template, 16, 13, \"div\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const vm_r1 = ctx.ngIf;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(6);\n    ɵngcc0.ɵɵproperty(\"ngIf\", vm_r1.showLanguages);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.cardState === \"front\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.cardState === \"back\");\n  }\n}\n\nlet EntityGQL = /*#__PURE__*/(() => {\n  class EntityGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Fetch data either from backend or cache\n     *\n     * @param {string} entity to get from\n     * @param {string} id of the record\n     * @param {object} metadata with the fields to ask for\n     *\n     * @returns {object}  Observable<ApolloQueryResult<any>>\n     */\n\n\n    fetch(entity, id, metadata) {\n      const fields = metadata.fields;\n      const queryOptions = {\n        query: gql`\n              query ${entity}($id: ID!) {\n                ${entity}(id: $id) {\n                  ${fields.join('\\n')}\n                }\n              }\n            `,\n        variables: {\n          id\n        }\n      };\n      return this.apollo.query(queryOptions);\n    }\n\n  }\n\n  EntityGQL.ɵfac = function EntityGQL_Factory(t) {\n    return new (t || EntityGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  EntityGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function EntityGQL_Factory() {\n      return new EntityGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: EntityGQL,\n    providedIn: \"root\"\n  });\n  return EntityGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CollectionGQL = /*#__PURE__*/(() => {\n  class CollectionGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Fetch data either from backend or cache\n     *\n     * @param {string} module to get from\n     * @param {object} metadata with the fields to ask for\n     *\n     * @returns {object} Observable<ApolloQueryResult<any>>\n     */\n\n\n    fetchAll(module, metadata) {\n      const fields = metadata.fields;\n      const queryOptions = {\n        query: gql`\n                query ${module}{\n                    ${module} {\n                        edges {\n                            node {\n                                ${fields.join('\\n')}\n                            }\n                        }\n                    }\n                }\n            `\n      };\n      return this.apollo.query(queryOptions);\n    }\n\n  }\n\n  CollectionGQL.ɵfac = function CollectionGQL_Factory(t) {\n    return new (t || CollectionGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  CollectionGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CollectionGQL_Factory() {\n      return new CollectionGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: CollectionGQL,\n    providedIn: \"root\"\n  });\n  return CollectionGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$j = {\n  configs: {},\n  loading: false\n};\nlet internalState$7 = deepClone(initialState$j);\nlet cache$$4 = null;\nlet SystemConfigStore = /*#__PURE__*/(() => {\n  class SystemConfigStore {\n    constructor(collectionGQL) {\n      this.collectionGQL = collectionGQL;\n      this.store = new BehaviorSubject(internalState$7);\n      this.state$ = this.store.asObservable();\n      this.resourceName = 'systemConfigs';\n      this.fieldsMetadata = {\n        fields: ['id', '_id', 'value', 'items']\n      };\n      this.configs$ = this.state$.pipe(map(state => state.configs), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Get system config value by key\n     *\n     * @param {string} configKey of the config\n     * @returns {{}|string} config value\n     */\n\n\n    getConfigValue(configKey) {\n      if (!internalState$7.configs || !internalState$7.configs[configKey]) {\n        return null;\n      }\n\n      if (internalState$7.configs[configKey].value !== null) {\n        return internalState$7.configs[configKey].value;\n      }\n\n      return internalState$7.configs[configKey].items;\n    }\n\n    getHomePage() {\n      let defaultModule = 'home';\n      const defaultModuleConfig = this.getConfigValue('default_module');\n\n      if (defaultModuleConfig) {\n        defaultModule = defaultModuleConfig;\n      }\n\n      return defaultModule;\n    }\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cache$$4 = null;\n      this.updateState(deepClone(initialState$j));\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Initial SystemConfigs load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @returns {Observable<{}>} observable\n     */\n\n\n    load() {\n      this.updateState(Object.assign(Object.assign({}, internalState$7), {\n        loading: true\n      }));\n      return this.getSystemConfigs().pipe(tap(configs => {\n        this.updateState(Object.assign(Object.assign({}, internalState$7), {\n          configs,\n          loading: false\n        }));\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    isCached() {\n      return cache$$4 !== null;\n    }\n    /**\n     * Set pre-loaded configs and cache\n     */\n\n\n    set(configs) {\n      cache$$4 = of(configs).pipe(shareReplay(1));\n      this.updateState(Object.assign(Object.assign({}, internalState$7), {\n        configs,\n        loading: false\n      }));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {{}} state new state\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$7 = state);\n    }\n    /**\n     * Get SystemConfigs cached Observable or call the backend\n     *\n     * @returns {Observable<{}>} observable\n     */\n\n\n    getSystemConfigs() {\n      if (cache$$4 == null) {\n        cache$$4 = this.fetch().pipe(shareReplay(1));\n      }\n\n      return cache$$4;\n    }\n    /**\n     * Fetch the App strings from the backend\n     *\n     * @returns {Observable<{}>} observable\n     */\n\n\n    fetch() {\n      return this.collectionGQL.fetchAll(this.resourceName, this.fieldsMetadata).pipe(map(({\n        data\n      }) => {\n        const configs = {};\n\n        if (data.systemConfigs && data.systemConfigs.edges) {\n          data.systemConfigs.edges.forEach(edge => {\n            // eslint-disable-next-line no-underscore-dangle\n            configs[edge.node._id] = edge.node;\n          });\n        }\n\n        return configs;\n      }));\n    }\n\n  }\n\n  SystemConfigStore.ɵfac = function SystemConfigStore_Factory(t) {\n    return new (t || SystemConfigStore)(ɵngcc0.ɵɵinject(CollectionGQL));\n  };\n\n  SystemConfigStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SystemConfigStore_Factory() {\n      return new SystemConfigStore(i0.ɵɵinject(CollectionGQL));\n    },\n    token: SystemConfigStore,\n    providedIn: \"root\"\n  });\n  return SystemConfigStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoadingBuffer = /*#__PURE__*/(() => {\n  class LoadingBuffer {\n    constructor(config, delayConfigKey = 'loading_display_delay') {\n      var _a, _b, _c;\n\n      this.config = config;\n      this.delayConfigKey = delayConfigKey;\n      this.loadingStore = new BehaviorSubject(false);\n      this.loadingBufferStore = new BehaviorSubject(false);\n      this.subs = [];\n      this.buffered = false;\n      this.loading$ = this.loadingStore.asObservable();\n      const uiSettings = (_a = config.getConfigValue('ui')) !== null && _a !== void 0 ? _a : {};\n      const delay = (_c = parseInt((_b = uiSettings[delayConfigKey]) !== null && _b !== void 0 ? _b : '')) !== null && _c !== void 0 ? _c : 1500;\n      this.loadingBufferStore$ = this.loadingBufferStore.asObservable().pipe(debounceTime(delay));\n      this.subs.push(this.loadingBufferStore$.subscribe(loading => {\n        if (!this.buffered) {\n          return;\n        }\n\n        this.loadingStore.next(loading);\n      }));\n    }\n    /**\n     * Update loading status\n     *\n     * @param {boolean} loading status to set\n     */\n\n\n    updateLoading(loading) {\n      if (loading === true) {\n        this.buffered = true;\n        this.loadingBufferStore.next(loading);\n        return;\n      }\n\n      this.buffered = false;\n      this.loadingStore.next(loading);\n      this.loadingBufferStore.next(loading);\n    }\n\n  }\n\n  LoadingBuffer.ɵfac = function LoadingBuffer_Factory(t) {\n    return new (t || LoadingBuffer)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(String));\n  };\n\n  LoadingBuffer.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: LoadingBuffer,\n    factory: LoadingBuffer.ɵfac\n  });\n  return LoadingBuffer;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoadingBufferFactory = /*#__PURE__*/(() => {\n  class LoadingBufferFactory {\n    constructor(config) {\n      this.config = config;\n    }\n\n    create(delayConfigKey = 'loading_display_delay') {\n      return new LoadingBuffer(this.config, delayConfigKey);\n    }\n\n  }\n\n  LoadingBufferFactory.ɵfac = function LoadingBufferFactory_Factory(t) {\n    return new (t || LoadingBufferFactory)(ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  LoadingBufferFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LoadingBufferFactory_Factory() {\n      return new LoadingBufferFactory(i0.ɵɵinject(SystemConfigStore));\n    },\n    token: LoadingBufferFactory,\n    providedIn: \"root\"\n  });\n  return LoadingBufferFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$i = {\n  loading: false,\n  initialAppLoading: true,\n  module: null,\n  view: null,\n  loaded: false,\n  routeUrl: null,\n  activeRequests: 0\n};\nlet internalState$6 = deepClone(initialState$i);\nlet AppStateStore = /*#__PURE__*/(() => {\n  class AppStateStore {\n    constructor(loadingBufferFactory) {\n      this.loadingBufferFactory = loadingBufferFactory;\n      this.store = new BehaviorSubject(internalState$6);\n      this.state$ = this.store.asObservable();\n      this.loadingQueue = {};\n      this.subs = [];\n      this.loading$ = this.state$.pipe(map(state => state.loading), distinctUntilChanged());\n      this.module$ = this.state$.pipe(map(state => state.module), distinctUntilChanged());\n      this.view$ = this.state$.pipe(map(state => state.view), distinctUntilChanged());\n      this.initialAppLoading$ = this.state$.pipe(map(state => state.initialAppLoading), distinctUntilChanged());\n      this.activeRequests$ = this.state$.pipe(map(state => state.activeRequests), distinctUntilChanged());\n      this.vm$ = combineLatest([this.loading$, this.module$, this.view$, this.initialAppLoading$]).pipe(map(([loading, module, view, initialAppLoading]) => ({\n        loading,\n        module,\n        view,\n        loaded: internalState$6.loaded,\n        initialAppLoading\n      })));\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      this.loadingQueue = {};\n      this.updateState(deepClone(initialState$i));\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    clearAuthBased() {}\n\n    init() {\n      this.initLoadingBuffer();\n    }\n    /**\n     * Get number of active requests\n     */\n\n\n    getActiveRequests() {\n      return internalState$6.activeRequests;\n    }\n    /**\n     * Add active request to counter\n     */\n\n\n    addActiveRequest() {\n      let activeRequests = internalState$6.activeRequests;\n\n      if (isVoid(activeRequests)) {\n        activeRequests = 0;\n      }\n\n      activeRequests++;\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        activeRequests\n      }));\n    }\n    /**\n     * Remove active request to counter\n     */\n\n\n    removeActiveRequest() {\n      let activeRequests = internalState$6.activeRequests;\n\n      if (isVoid(activeRequests)) {\n        activeRequests = 0;\n      } else {\n        activeRequests--;\n      }\n\n      if (activeRequests < 0) {\n        activeRequests = 0;\n      }\n\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        activeRequests\n      }));\n    }\n    /**\n     * Update loading status for given key\n     *\n     * @param {string} key to update\n     * @param {boolean} loading status to set\n     * @param {boolean} delay\n     */\n\n\n    updateLoading(key, loading, delay = true) {\n      this.initLoadingBuffer();\n\n      if (loading === true) {\n        this.addToLoadingQueue(key);\n        this.loadingBuffer.updateLoading(loading);\n\n        if (!delay) {\n          this.updateState(Object.assign(Object.assign({}, internalState$6), {\n            loading\n          }));\n        }\n\n        return;\n      }\n\n      this.removeFromLoadingQueue(key);\n\n      if (this.hasActiveLoading()) {\n        this.loadingBuffer.updateLoading(loading);\n        this.updateState(Object.assign(Object.assign({}, internalState$6), {\n          loading\n        }));\n      }\n    }\n    /**\n     * Update loading status for given key\n     *\n     * @param {boolean} initialAppLoading status to set\n     */\n\n\n    updateInitialAppLoading(initialAppLoading) {\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        initialAppLoading\n      }));\n    }\n    /**\n     * Has app been initially loaded\n     *\n     * @returns {boolean} is loaded\n     */\n\n\n    isLoaded() {\n      return internalState$6.loaded;\n    }\n    /**\n     * Set initial app load status\n     *\n     * @param {string} loaded flag\n     */\n\n\n    setLoaded(loaded) {\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        loaded\n      }));\n    }\n    /**\n     * Set current module\n     *\n     * @param {string} module to set as current module\n     */\n\n\n    setModule(module) {\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        module\n      }));\n    }\n    /**\n     * Get the current module\n     *\n     * @returns {string} current view\n     */\n\n\n    getModule() {\n      var _a;\n\n      return (_a = internalState$6 === null || internalState$6 === void 0 ? void 0 : internalState$6.module) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Set current View\n     *\n     * @param {string} view to set as current view\n     */\n\n\n    setView(view) {\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        view\n      }));\n    }\n    /**\n     * Get the current view\n     *\n     * @returns {string} current view\n     */\n\n\n    getView() {\n      return internalState$6.view;\n    }\n    /**\n     * Set route url\n     *\n     * @param {string} routeUrl to set\n     */\n\n\n    setRouteUrl(routeUrl) {\n      this.updateState(Object.assign(Object.assign({}, internalState$6), {\n        routeUrl\n      }));\n    }\n    /**\n     * Get the route ulr\n     *\n     * @returns {string} current route url\n     */\n\n\n    getRouteUrl() {\n      return internalState$6.routeUrl;\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Init loading buffer\n     * @protected\n     */\n\n\n    initLoadingBuffer() {\n      if (!this.loadingBuffer) {\n        this.loadingBuffer = this.loadingBufferFactory.create();\n        this.subs.push(this.loadingBuffer.loading$.subscribe(loading => {\n          this.updateState(Object.assign(Object.assign({}, internalState$6), {\n            loading\n          }));\n        }));\n      }\n    }\n    /**\n     *  Check if there are still active loadings\n     *\n     *  @returns {boolean} active loading\n     */\n\n\n    hasActiveLoading() {\n      return Object.keys(this.loadingQueue).length < 1;\n    }\n    /**\n     * Remove key from loading queue\n     *\n     * @param {string} key to remove\n     */\n\n\n    removeFromLoadingQueue(key) {\n      if (this.loadingQueue[key]) {\n        delete this.loadingQueue[key];\n      }\n    }\n    /**\n     * Add key to loading queue\n     *\n     * @param {string} key to add\n     */\n\n\n    addToLoadingQueue(key) {\n      this.loadingQueue[key] = true;\n    }\n    /**\n     * Update the state\n     *\n     * @param {{}} state app state\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$6 = state);\n    }\n\n  }\n\n  AppStateStore.ɵfac = function AppStateStore_Factory(t) {\n    return new (t || AppStateStore)(ɵngcc0.ɵɵinject(LoadingBufferFactory));\n  };\n\n  AppStateStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AppStateStore_Factory() {\n      return new AppStateStore(i0.ɵɵinject(LoadingBufferFactory));\n    },\n    token: AppStateStore,\n    providedIn: \"root\"\n  });\n  return AppStateStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor() {\n      this.storageKey = 'scrm-session-storage';\n      this.stickyStorageKey = 'scrm-sticky-session-storage';\n    }\n\n    clear() {\n      this.getLocalStorage().removeItem(this.storageKey);\n      const sticky = this.getLocalStorage().getItem(this.stickyStorageKey);\n\n      if (sticky) {\n        this.getLocalStorage().setItem(this.storageKey, sticky);\n      }\n    }\n\n    set(key, data, sticky = false) {\n      this.store(this.storageKey, key, data);\n\n      if (sticky) {\n        this.store(this.stickyStorageKey, key, data);\n      }\n    }\n\n    store(storageKey, key, data) {\n      const storeJson = this.getLocalStorage().getItem(storageKey);\n      let store = {};\n\n      if (storeJson) {\n        store = JSON.parse(storeJson);\n      }\n\n      store[key] = data;\n      this.getLocalStorage().setItem(storageKey, JSON.stringify(store));\n    }\n\n    get(key) {\n      const storeJson = this.getLocalStorage().getItem(this.storageKey);\n      let store = {};\n\n      if (storeJson) {\n        store = JSON.parse(storeJson);\n      }\n\n      return store[key];\n    }\n\n    getLocalStorage() {\n      return localStorage;\n    }\n\n  }\n\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)();\n  };\n\n  LocalStorageService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LocalStorageService_Factory() {\n      return new LocalStorageService();\n    },\n    token: LocalStorageService,\n    providedIn: \"root\"\n  });\n  return LocalStorageService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EntityMutationGQL = /*#__PURE__*/(() => {\n  class EntityMutationGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Create record on the backend\n     *\n     * @param {string} graphqlEntityName to use\n     * @param {string} entityName to use\n     * @param {object} input values\n     * @param {object} metadata with the fields to ask for\n     *\n     * @returns {object} Observable<any>\n     */\n\n\n    create(graphqlEntityName, entityName, input, metadata) {\n      const fields = metadata.fields;\n      const mutationOptions = {\n        mutation: gql`\n                mutation create${entityName}($input: create${entityName}Input!) {\n                  create${entityName}(input: $input) {\n                    ${graphqlEntityName} {\n                      ${fields.join('\\n')}\n                    }\n                    clientMutationId\n                  }\n                }\n            `,\n        variables: {\n          input\n        }\n      };\n      return this.apollo.mutate(mutationOptions);\n    }\n\n  }\n\n  EntityMutationGQL.ɵfac = function EntityMutationGQL_Factory(t) {\n    return new (t || EntityMutationGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  EntityMutationGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function EntityMutationGQL_Factory() {\n      return new EntityMutationGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: EntityMutationGQL,\n    providedIn: \"root\"\n  });\n  return EntityMutationGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst blankProcess = {\n  id: null,\n  _id: null,\n  status: null,\n  async: null,\n  type: null,\n  options: null,\n  messages: []\n};\nlet ProcessService = /*#__PURE__*/(() => {\n  class ProcessService {\n    constructor(recordMutationGQL) {\n      this.recordMutationGQL = recordMutationGQL;\n      this.graphqlName = 'process';\n      this.coreName = 'Process';\n      this.createFieldsMetadata = {\n        fields: ['_id', 'status', 'async', 'type', 'messages', 'data']\n      };\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Submit and action/process request\n     * Returns observable\n     *\n     * @param {string} type to create\n     * @param {object} options to send\n     * @returns {object} Observable<any>\n     */\n\n\n    submit(type, options) {\n      return this.create(type, options);\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Create a process on the backend\n     *\n     * @param {string} type to create\n     * @param {object} options to send\n     * @returns {object} Observable<any>\n     */\n\n\n    create(type, options) {\n      const input = {\n        type,\n        options\n      };\n      return this.recordMutationGQL.create(this.graphqlName, this.coreName, input, this.createFieldsMetadata).pipe(map(({\n        data\n      }) => {\n        const process = Object.assign({}, blankProcess);\n\n        if (data.createProcess && data.createProcess.process) {\n          return data.createProcess.process;\n        }\n\n        return process;\n      }));\n    }\n\n  }\n\n  ProcessService.ɵfac = function ProcessService_Factory(t) {\n    return new (t || ProcessService)(ɵngcc0.ɵɵinject(EntityMutationGQL));\n  };\n\n  ProcessService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ProcessService_Factory() {\n      return new ProcessService(i0.ɵɵinject(EntityMutationGQL));\n    },\n    token: ProcessService,\n    providedIn: \"root\"\n  });\n  return ProcessService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$h = {\n  appStrings: {},\n  appListStrings: {},\n  modStrings: {},\n  languageKey: 'en_us',\n  loaded: {},\n  hasChanged: false\n};\nlet internalState$5 = deepClone(initialState$h);\nconst initialCache$1 = {\n  appStrings: {},\n  appListStrings: {},\n  modStrings: {}\n};\nlet loadedLanguages = {};\nlet cache$1 = deepClone(initialCache$1);\nlet LanguageStore = /*#__PURE__*/(() => {\n  class LanguageStore {\n    constructor(recordGQL, appStateStore, localStorage, processService, configs) {\n      this.recordGQL = recordGQL;\n      this.appStateStore = appStateStore;\n      this.localStorage = localStorage;\n      this.processService = processService;\n      this.configs = configs;\n      this.store = new BehaviorSubject(internalState$5);\n      this.state$ = this.store.asObservable();\n      this.config = {\n        appStrings: {\n          fetch: 'fetchAppStrings',\n          resourceName: 'appStrings',\n          metadata: {\n            fields: ['id', '_id', 'items']\n          }\n        },\n        appListStrings: {\n          fetch: 'fetchAppListStrings',\n          resourceName: 'appListStrings',\n          metadata: {\n            fields: ['id', '_id', 'items']\n          }\n        },\n        modStrings: {\n          fetch: 'fetchModStrings',\n          resourceName: 'modStrings',\n          metadata: {\n            fields: ['id', '_id', 'items']\n          }\n        }\n      };\n      this.appStrings$ = this.state$.pipe(map(state => state.appStrings), distinctUntilChanged());\n      this.appListStrings$ = this.state$.pipe(map(state => state.appListStrings), distinctUntilChanged());\n      this.modStrings$ = this.state$.pipe(map(state => state.modStrings), distinctUntilChanged());\n      this.languageKey$ = this.state$.pipe(map(state => state.languageKey), distinctUntilChanged());\n      this.vm$ = combineLatest([this.appStrings$, this.appListStrings$, this.modStrings$, this.languageKey$]).pipe(map(([appStrings, appListStrings, modStrings, languageKey]) => ({\n        appStrings,\n        appListStrings,\n        modStrings,\n        languageKey\n      })));\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      loadedLanguages = {};\n      cache$1 = deepClone(initialCache$1);\n      this.updateState(deepClone(initialState$h));\n    }\n\n    clearAuthBased() {\n      const keysToClear = ['modStrings', 'appListStrings'];\n      keysToClear.forEach(type => {\n        if (loadedLanguages && loadedLanguages[type]) {\n          delete loadedLanguages[type];\n        }\n      });\n      cache$1.modStrings = {};\n      cache$1.appListStrings = {};\n    }\n    /**\n     * Update the language strings toe the given language\n     *\n     * @param {string} languageKey language key\n     * @param {boolean} reload\n     */\n\n\n    changeLanguage(languageKey, reload = false) {\n      const types = [];\n      Object.keys(loadedLanguages).forEach(type => loadedLanguages[type] && types.push(type));\n      internalState$5.hasChanged = true;\n      this.appStateStore.updateLoading('change-language', true);\n      this.load(languageKey, types, reload).pipe(tap(() => {\n        this.localStorage.set('selected_language', languageKey, true);\n        this.appStateStore.updateLoading('change-language', false);\n      })).subscribe();\n    }\n    /**\n     * Get All languageStrings label by key\n     *\n     * @returns {object} LanguageStrings\n     */\n\n\n    getLanguageStrings() {\n      if (!internalState$5) {\n        return null;\n      }\n\n      return {\n        appStrings: internalState$5.appStrings,\n        appListStrings: internalState$5.appListStrings,\n        modStrings: internalState$5.modStrings,\n        languageKey: internalState$5.languageKey\n      };\n    }\n    /**\n     * Get AppStrings label by key\n     *\n     * @param {string} labelKey to fetch\n     * @returns {string} label\n     */\n\n\n    getAppString(labelKey) {\n      if (!internalState$5.appStrings || !internalState$5.appStrings[labelKey]) {\n        return null;\n      }\n\n      return internalState$5.appStrings[labelKey];\n    }\n    /**\n     * Get AppListStrings label by key\n     *\n     * @param {string} labelKey to fetch\n     * @returns {string|{}} app strings\n     */\n\n\n    getAppListString(labelKey) {\n      if (!internalState$5.appListStrings || !internalState$5.appListStrings[labelKey]) {\n        return null;\n      }\n\n      return internalState$5.appListStrings[labelKey];\n    }\n    /**\n     * Get ModStrings label by key\n     *\n     * @param {string} labelKey to fetch\n     * @returns {string|{}} mod strings\n     */\n\n\n    getModString(labelKey) {\n      if (!internalState$5.modStrings || !internalState$5.modStrings[labelKey]) {\n        return null;\n      }\n\n      return internalState$5.modStrings[labelKey];\n    }\n    /**\n     * Get field label\n     *\n     * @param {string} labelKey to fetch\n     * @param {string} module to use\n     * @param {object} lang to use\n     * @returns {string} label\n     */\n\n\n    getFieldLabel(labelKey, module = null, lang = null) {\n      let languages = lang;\n\n      if (!lang) {\n        languages = this.getLanguageStrings();\n      }\n\n      if (!languages || !languages.modStrings || !labelKey) {\n        return '';\n      }\n\n      let label = '';\n\n      if (module) {\n        label = languages.modStrings[module] && languages.modStrings[module][labelKey];\n      }\n\n      if (!label) {\n        label = languages.appStrings && languages.appStrings[labelKey];\n      }\n\n      return label || '';\n    }\n    /**\n     * Get list label\n     *\n     * @param {string} listKey to fetch\n     * @param {string} labelKey to fetch\n     * @returns {string} label\n     */\n\n\n    getListLabel(listKey, labelKey) {\n      if (!listKey || !labelKey) {\n        return '';\n      }\n\n      const listStrings = this.getAppListString(listKey);\n\n      if (!listStrings) {\n        return '';\n      }\n\n      return listStrings[labelKey] || '';\n    }\n    /**\n     * Get all available string types\n     *\n     * @returns {string[]} string types\n     */\n\n\n    getAvailableStringsTypes() {\n      return Object.keys(this.config);\n    }\n    /**\n     * Returns whether the language has changed manually\n     *\n     * @returns {boolean} has changed\n     */\n\n\n    hasLanguageChanged() {\n      return internalState$5.hasChanged;\n    }\n    /**\n     * Returns the currently active language\n     *\n     * @returns {string} current language key\n     */\n\n\n    getCurrentLanguage() {\n      var _a;\n\n      const storedLanguage = this.localStorage.get('selected_language');\n\n      if (storedLanguage) {\n        return storedLanguage;\n      }\n\n      return (_a = internalState$5.languageKey) !== null && _a !== void 0 ? _a : 'en_us';\n    }\n    /**\n     * Returns the active language\n     *\n     * @returns {string} active language key\n     */\n\n\n    getActiveLanguage() {\n      var _a;\n\n      return (_a = internalState$5.languageKey) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Returns the selected language\n     *\n     * @returns {string} selected language key\n     */\n\n\n    getSelectedLanguage() {\n      var _a;\n\n      return (_a = this.localStorage.get('selected_language')) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Check if language is enabled\n     * @param currentLanguage\n     */\n\n\n    isLanguageEnabled(currentLanguage) {\n      var _a;\n\n      if (!currentLanguage) {\n        return false;\n      }\n\n      const languages = (_a = this.configs.getConfigValue('languages')) !== null && _a !== void 0 ? _a : {};\n      const disabled = this.getDisabledLanguages();\n      const languageKeys = Object.keys(languages);\n\n      if (!languageKeys.length) {\n        return false;\n      }\n\n      return languageKeys.includes(currentLanguage) && !disabled.includes(currentLanguage);\n    }\n    /**\n     * Get disabled languages\n     */\n\n\n    getDisabledLanguages() {\n      var _a;\n\n      const disabledConfig = (_a = this.configs.getConfigValue('disabled_languages')) !== null && _a !== void 0 ? _a : '';\n\n      if (!isString(disabledConfig) || disabledConfig === '') {\n        return [];\n      }\n\n      return disabledConfig.replace(' ', '').split(',');\n    }\n    /**\n     * Get enabled languages\n     */\n\n\n    getEnabledLanguages() {\n      var _a;\n\n      const languages = (_a = this.configs.getConfigValue('languages')) !== null && _a !== void 0 ? _a : {};\n      const disabled = this.getDisabledLanguages();\n      const enabled = {};\n      const enabledKeys = Object.keys(languages).filter(value => !disabled.includes(value));\n      enabledKeys.forEach(key => {\n        enabled[key] = languages[key];\n      });\n      return enabled;\n    }\n    /**\n     * Get fist language in list\n     * @private\n     */\n\n\n    getFirstLanguage() {\n      var _a, _b;\n\n      const languages = (_a = this.configs.getConfigValue('languages')) !== null && _a !== void 0 ? _a : {};\n      const languageKeys = Object.keys(languages);\n      return (_b = languageKeys.sort()[0]) !== null && _b !== void 0 ? _b : '';\n    }\n    /**\n     * Initial Language Strings Load for given language and types if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} languageKey to load\n     * @param {string[]} types to load\n     * @param {boolean} reload\n     * @returns {object} Observable\n     */\n\n\n    load(languageKey, types, reload = false) {\n      const streams$ = {};\n      types.forEach(type => streams$[type] = this.getStrings(languageKey, type, reload));\n      return forkJoin(streams$).pipe(first(), tap(result => {\n        const stateUpdate = Object.assign(Object.assign({}, internalState$5), {\n          languageKey\n        });\n        types.forEach(type => {\n          stateUpdate[type] = result[type];\n          loadedLanguages[type] = true;\n        });\n        this.updateState(stateUpdate);\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    areAllCached() {\n      var _a, _b, _c;\n\n      let isCached = true;\n      isCached = isCached && !emptyObject((_a = cache$1 === null || cache$1 === void 0 ? void 0 : cache$1.appStrings) !== null && _a !== void 0 ? _a : {});\n      isCached = isCached && !emptyObject((_b = cache$1 === null || cache$1 === void 0 ? void 0 : cache$1.appListStrings) !== null && _b !== void 0 ? _b : {});\n      isCached = isCached && !emptyObject((_c = cache$1 === null || cache$1 === void 0 ? void 0 : cache$1.modStrings) !== null && _c !== void 0 ? _c : {});\n      return isCached;\n    }\n    /**\n     * Set pre-loaded strings and cache\n     */\n\n\n    set(languageKey, languageStrings) {\n      const stateUpdate = Object.assign(Object.assign({}, internalState$5), {\n        languageKey\n      });\n\n      if (languageStrings.appStrings && !emptyObject(languageStrings.appStrings)) {\n        cache$1['appStrings'][languageKey] = of(languageStrings.appStrings).pipe(shareReplay(1));\n        stateUpdate['appStrings'] = languageStrings.appStrings;\n        loadedLanguages['appStrings'] = true;\n      }\n\n      if (languageStrings.appListStrings && !emptyObject(languageStrings.appListStrings)) {\n        cache$1['appListStrings'][languageKey] = of(languageStrings.appListStrings).pipe(shareReplay(1));\n        stateUpdate['appListStrings'] = languageStrings.appListStrings;\n        loadedLanguages['appListStrings'] = true;\n      }\n\n      if (languageStrings.modStrings && !emptyObject(languageStrings.modStrings)) {\n        cache$1['modStrings'][languageKey] = of(languageStrings.modStrings).pipe(shareReplay(1));\n        stateUpdate['modStrings'] = languageStrings.modStrings;\n        loadedLanguages['modStrings'] = true;\n      }\n\n      this.updateState(stateUpdate);\n    }\n    /**\n     * Set session language\n     */\n\n\n    setSessionLanguage() {\n      const processType = 'set-session-language';\n      const options = {\n        language: internalState$5.languageKey\n      };\n      return this.processService.submit(processType, options).pipe(take(1));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update internal state cache and emit from store...\n     *\n     * @param {{}} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$5 = state);\n    }\n    /**\n     * Get given $type of strings Observable from cache  or call the backend\n     *\n     * @param {string} language to load\n     * @param {string} type load\n     * @param {boolean} reload\n     * @returns {object} Observable<any>\n     */\n\n\n    getStrings(language, type, reload = false) {\n      const stringsCache = cache$1[type];\n      const fetchMethod = this.config[type].fetch;\n\n      if (stringsCache[language] && reload === false) {\n        return stringsCache[language];\n      }\n\n      stringsCache[language] = this[fetchMethod](language).pipe(shareReplay(1));\n      return stringsCache[language];\n    }\n    /**\n     * Fetch the App strings from the backend\n     *\n     * @param {string} language to fetch\n     * @returns {{}} Observable<{}>\n     */\n\n\n    fetchAppStrings(language) {\n      const resourceName = this.config.appStrings.resourceName;\n      const fields = this.config.appStrings.metadata;\n      return this.recordGQL.fetch(resourceName, `/api/app-strings/${language}`, fields).pipe(map(({\n        data\n      }) => {\n        let items = {};\n\n        if (data.appStrings) {\n          items = data.appStrings.items;\n        }\n\n        return items;\n      }));\n    }\n    /**\n     * Fetch the App list strings from the backend\n     *\n     * @param {string} language to fetch\n     * @returns {{}} Observable<{}>\n     */\n\n\n    fetchAppListStrings(language) {\n      const resourceName = this.config.appListStrings.resourceName;\n      const fields = this.config.appListStrings.metadata;\n      return this.recordGQL.fetch(resourceName, `/api/app-list-strings/${language}`, fields).pipe(map(({\n        data\n      }) => {\n        let items = {};\n\n        if (data.appListStrings) {\n          items = data.appListStrings.items;\n        }\n\n        return items;\n      }));\n    }\n    /**\n     * Fetch the Mod strings from the backend\n     *\n     * @param {string} language to fetch\n     * @returns {{}} Observable<{}>\n     */\n\n\n    fetchModStrings(language) {\n      const resourceName = this.config.modStrings.resourceName;\n      const fields = this.config.modStrings.metadata;\n      return this.recordGQL.fetch(resourceName, `/api/mod-strings/${language}`, fields).pipe(map(({\n        data\n      }) => {\n        let items = {};\n\n        if (data.modStrings) {\n          items = data.modStrings.items;\n        }\n\n        return items;\n      }));\n    }\n\n  }\n\n  LanguageStore.ɵfac = function LanguageStore_Factory(t) {\n    return new (t || LanguageStore)(ɵngcc0.ɵɵinject(EntityGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LocalStorageService), ɵngcc0.ɵɵinject(ProcessService), ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  LanguageStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LanguageStore_Factory() {\n      return new LanguageStore(i0.ɵɵinject(EntityGQL), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LocalStorageService), i0.ɵɵinject(ProcessService), i0.ɵɵinject(SystemConfigStore));\n    },\n    token: LanguageStore,\n    providedIn: \"root\"\n  });\n  return LanguageStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GlobalSearch = /*#__PURE__*/(() => {\n  class GlobalSearch {\n    constructor(router) {\n      this.router = router;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Navigate to global search\n     *\n     * @param {string} searchTerm to search\n     * @returns {object} Promise<boolean>\n     */\n\n\n    navigateToSearch(searchTerm) {\n      const route = '/home/unified-search';\n      let queryString = '';\n\n      if (searchTerm) {\n        queryString = searchTerm;\n      }\n\n      return this.router.navigate([route], {\n        queryParams: {\n          // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n          query_string: queryString\n        }\n      });\n    }\n\n  }\n\n  GlobalSearch.ɵfac = function GlobalSearch_Factory(t) {\n    return new (t || GlobalSearch)(ɵngcc0.ɵɵinject(ɵngcc2.Router));\n  };\n\n  GlobalSearch.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function GlobalSearch_Factory() {\n      return new GlobalSearch(i0.ɵɵinject(i2.Router));\n    },\n    token: GlobalSearch,\n    providedIn: \"root\"\n  });\n  return GlobalSearch;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionBarUiComponent = /*#__PURE__*/(() => {\n  class ActionBarUiComponent {\n    constructor(languageStore, globalSearch) {\n      this.languageStore = languageStore;\n      this.globalSearch = globalSearch;\n      this.searchTerm = '';\n      this.actionBar = {\n        createLinks: [{\n          label: 'Accounts',\n          route: '/accounts/edit'\n        }, {\n          label: 'Contacts',\n          route: '/contacts/edit'\n        }, {\n          label: 'Leads',\n          route: '/leads/edit'\n        }, {\n          label: 'Opportunities',\n          route: '/opportunities/edit'\n        }, {\n          label: 'AOS_Quotes',\n          route: '/quotes/edit'\n        }, {\n          label: 'AOS_Contracts',\n          route: '/contracts/edit'\n        }],\n        favoriteRecords: []\n      };\n      this.languages$ = this.languageStore.vm$;\n      this.vm$ = combineLatest([this.languages$]).pipe(map(([languages]) => ({\n        appStrings: languages.appStrings || {},\n        appListStrings: languages.appListStrings || {}\n      })));\n    }\n\n    search() {\n      this.globalSearch.navigateToSearch(this.searchTerm).finally(() => {\n        this.clearSearchTerm();\n      });\n    }\n\n    clearSearchTerm() {\n      this.searchTerm = '';\n    }\n\n  }\n\n  ActionBarUiComponent.ɵfac = function ActionBarUiComponent_Factory(t) {\n    return new (t || ActionBarUiComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(GlobalSearch));\n  };\n\n  ActionBarUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ActionBarUiComponent,\n    selectors: [[\"scrm-action-bar-ui\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"global-action-bar row pb-2 pt-2 mr-0\", 4, \"ngIf\"], [1, \"global-action-bar\", \"row\", \"pb-2\", \"pt-2\", \"mr-0\"], [1, \"col-6\"], [\"name\", \"global-search\", 1, \"global-search\"], [1, \"input-group\"], [\"type\", \"text\", \"name\", \"global-search-term\", \"aria-label\", \"Search\", \"required\", \"\", 1, \"form-control\", \"global-search-term\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [1, \"input-group-append\"], [\"aria-label\", \"Search\", \"scrm-button-loading\", \"\", 1, \"btn\", \"btn-default\", \"search-button\", 3, \"click\"], [\"image\", \"search\", 1, \"search-icon\", \"sicon\"], [1, \"col\", \"justify-content-right\"], [1, \"action-group\"], [1, \"action-new\", \"dropdown\"], [\"type\", \"button\", \"aria-label\", \"Quick Create\", 1, \"quickcreate-button\", \"dropdown-toggle\"], [1, \"dropdown-menu\", \"dropdown-menu-right\"], [\"class\", \"new-list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"new-list-item\"], [3, \"routerLink\"], [\"image\", \"plus\", 1, \"action-btn-icon\"]],\n    template: function ActionBarUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ActionBarUiComponent_div_0_Template, 15, 4, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ɵngcc4.ɵNgNoValidate, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc4.DefaultValueAccessor, ɵngcc4.RequiredValidator, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ButtonLoadingDirective, ImageComponent, ɵngcc3.NgForOf, ɵngcc2.RouterLinkWithHref];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe];\n    },\n    encapsulation: 2\n  });\n  return ActionBarUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonLoadingDirective = /*#__PURE__*/(() => {\n  class ButtonLoadingDirective {\n    constructor(el, appStateStore) {\n      this.el = el;\n      this.appStateStore = appStateStore;\n      this.appLoading = false;\n    }\n\n    ngOnInit() {\n      this.subscription = this.appStateStore.loading$.pipe(tap(loading => {\n        this.appLoading = loading;\n        this.updateComponent();\n      })).subscribe();\n      this.updateComponent();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.state) {\n        this.updateComponent();\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    clickEvent() {\n      this.updateComponent();\n    }\n    /**\n     * Calculate loading state and update loading\n     */\n\n\n    updateComponent() {\n      const loading = this.isLoading();\n      this.setDisabledState(loading);\n    }\n    /**\n     * Calculate if is loading\n     *\n     * @returns {boolean} isLoading\n     */\n\n\n    isLoading() {\n      let loading = false;\n\n      if (this.state === true || this.appLoading === true) {\n        loading = true;\n      }\n\n      return loading;\n    }\n    /**\n     * Disable or enable button\n     *\n     * @param {boolean} state to set\n     */\n\n\n    setDisabledState(state) {\n      this.el.nativeElement.disabled = state;\n    }\n\n  }\n\n  ButtonLoadingDirective.ɵfac = function ButtonLoadingDirective_Factory(t) {\n    return new (t || ButtonLoadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AppStateStore));\n  };\n\n  ButtonLoadingDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonLoadingDirective,\n    selectors: [[\"\", \"scrm-button-loading\", \"\"]],\n    hostBindings: function ButtonLoadingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonLoadingDirective_click_HostBindingHandler() {\n          return ctx.clickEvent();\n        });\n      }\n    },\n    inputs: {\n      state: [\"scrm-button-loading\", \"state\"]\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return ButtonLoadingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonLoadingUiModule = /*#__PURE__*/(() => {\n  class ButtonLoadingUiModule {}\n\n  ButtonLoadingUiModule.ɵfac = function ButtonLoadingUiModule_Factory(t) {\n    return new (t || ButtonLoadingUiModule)();\n  };\n\n  ButtonLoadingUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonLoadingUiModule\n  });\n  ButtonLoadingUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ButtonLoadingUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonLoadingUiModule, {\n    declarations: function () {\n      return [ButtonLoadingDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ButtonLoadingDirective];\n    }\n  });\n})();\n\nconst initialState$g = {\n  theme: null,\n  images: {}\n};\nlet internalState$4 = deepClone(initialState$g);\nlet cachedTheme = null;\nlet cache$$3 = null;\nlet ThemeImagesStore = /*#__PURE__*/(() => {\n  class ThemeImagesStore {\n    constructor(recordGQL, appStateStore, iconRegistry) {\n      this.recordGQL = recordGQL;\n      this.appStateStore = appStateStore;\n      this.iconRegistry = iconRegistry;\n      this.store = new BehaviorSubject(internalState$4);\n      this.state$ = this.store.asObservable();\n      this.resourceName = 'themeImages';\n      this.frontendName = 'theme-images';\n      this.fieldsMetadata = {\n        fields: ['id', '_id', 'items']\n      };\n      this.images$ = this.state$.pipe(map(state => state.images), distinctUntilChanged());\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cachedTheme = null;\n      cache$$3 = null;\n      this.updateState(deepClone(initialState$g));\n    }\n\n    clearAuthBased() {}\n    /**\n     * Change the current theme\n     *\n     * @param {string} theme to set\n     */\n\n\n    changeTheme(theme) {\n      this.appStateStore.updateLoading('change-theme', true);\n      this.load(theme).pipe(tap(() => this.appStateStore.updateLoading('change-theme', false))).subscribe();\n    }\n    /**\n     * Returns the currently active image theme\n     *\n     * @returns {string} the theme\n     */\n\n\n    getTheme() {\n      return internalState$4.theme;\n    }\n    /**\n     * Initial ThemeImages load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} theme to load\n     * @returns {object} Observable<any>\n     */\n\n\n    load(theme) {\n      return this.getThemeImages(theme).pipe(tap(images => {\n        this.updateState(Object.assign(Object.assign({}, internalState$4), {\n          images,\n          theme\n        }));\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    isCached() {\n      return cache$$3 !== null;\n    }\n    /**\n     * Set pre-loaded theme images and cache\n     */\n\n\n    set(theme, images) {\n      cachedTheme = theme;\n      this.registerSvgs(images);\n      cache$$3 = of(images).pipe(shareReplay(1));\n      this.updateState(Object.assign(Object.assign({}, internalState$4), {\n        images\n      }));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$4 = state);\n    }\n    /**\n     * Get theme images cached Observable or call the backend\n     *\n     * @param {string} theme to retrieve\n     * @returns {object} Observable<any>\n     */\n\n\n    getThemeImages(theme) {\n      if (cachedTheme !== theme || cache$$3 === null) {\n        cachedTheme = theme;\n        cache$$3 = this.fetch(theme).pipe(shareReplay(1));\n      }\n\n      return cache$$3;\n    }\n\n    registerSvgs(images) {\n      Object.keys(images).forEach(key => {\n        var _a, _b;\n\n        const image = images[key];\n        const content = (_a = image['content']) !== null && _a !== void 0 ? _a : '';\n        const name = (_b = image['name']) !== null && _b !== void 0 ? _b : '';\n\n        if (content === '' || name === '') {\n          return;\n        }\n\n        this.iconRegistry.addSvg(name, content);\n      });\n    }\n    /**\n     * Fetch the theme images from the backend\n     *\n     * @param {string} theme to load\n     * @returns {object} Observable<any>\n     */\n\n\n    fetch(theme) {\n      return this.recordGQL.fetch(this.resourceName, `/api/${this.frontendName}/${theme}`, this.fieldsMetadata).pipe(map(({\n        data\n      }) => {\n        let images = {};\n\n        if (data && data.themeImages) {\n          images = data.themeImages.items;\n        }\n\n        if (!emptyObject(images)) {\n          const parsedImages = {};\n          this.registerSvgs(images);\n          Object.keys(images).forEach(key => {\n            var _a;\n\n            const _b = (_a = images[key]) !== null && _a !== void 0 ? _a : {},\n                  {\n              content\n            } = _b,\n                  image = __rest(_b, [\"content\"]);\n\n            parsedImages[key] = image;\n          });\n          return parsedImages;\n        }\n\n        return images;\n      }));\n    }\n\n  }\n\n  ThemeImagesStore.ɵfac = function ThemeImagesStore_Factory(t) {\n    return new (t || ThemeImagesStore)(ɵngcc0.ɵɵinject(EntityGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(ɵngcc5.SvgIconRegistryService));\n  };\n\n  ThemeImagesStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ThemeImagesStore_Factory() {\n      return new ThemeImagesStore(i0.ɵɵinject(EntityGQL), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(i3.SvgIconRegistryService));\n    },\n    token: ThemeImagesStore,\n    providedIn: \"root\"\n  });\n  return ThemeImagesStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ImageComponent = /*#__PURE__*/(() => {\n  class ImageComponent {\n    constructor(themeImagesStore) {\n      this.themeImagesStore = themeImagesStore;\n      this.klass = '';\n      this.title = '';\n      this.images$ = this.themeImagesStore.images$;\n      this.vm$ = combineLatest([this.images$]).pipe(map(([images]) => ({\n        images\n      })));\n    }\n    /**\n     * Get image from current view model and log if not existent\n     *\n     * @param vm\n     * @param image name\n     * @returns ThemeImage\n     */\n\n\n    getImage(vm, image) {\n      if (!vm || !vm.images || Object.keys(vm.images).length < 1) {\n        return null;\n      }\n\n      const img = vm.images[image];\n\n      if (!img) {\n        console.warn(`Image with name '${image}' not found`);\n      }\n\n      return img;\n    }\n\n  }\n\n  ImageComponent.ɵfac = function ImageComponent_Factory(t) {\n    return new (t || ImageComponent)(ɵngcc0.ɵɵdirectiveInject(ThemeImagesStore));\n  };\n\n  ImageComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ImageComponent,\n    selectors: [[\"scrm-image\"]],\n    inputs: {\n      klass: \"klass\",\n      title: \"title\",\n      image: \"image\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"class\", \"sicon\", 3, \"svgClass\", \"title\", \"name\", 4, \"ngIf\"], [\"alt\", \"\", 3, \"src\", \"class\", \"title\", 4, \"ngIf\"], [1, \"sicon\", 3, \"svgClass\", \"title\", \"name\"], [\"alt\", \"\", 3, \"src\", \"title\"]],\n    template: function ImageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ImageComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc5.SvgIconComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ImageComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ImageModule = /*#__PURE__*/(() => {\n  class ImageModule {}\n\n  ImageModule.ɵfac = function ImageModule_Factory(t) {\n    return new (t || ImageModule)();\n  };\n\n  ImageModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ImageModule\n  });\n  ImageModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule]]\n  });\n  return ImageModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImageModule, {\n    declarations: function () {\n      return [ImageComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [ImageComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionBarUiModule = /*#__PURE__*/(() => {\n  class ActionBarUiModule {}\n\n  ActionBarUiModule.ɵfac = function ActionBarUiModule_Factory(t) {\n    return new (t || ActionBarUiModule)();\n  };\n\n  ActionBarUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ActionBarUiModule\n  });\n  ActionBarUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule, RouterModule, FormsModule, ButtonLoadingUiModule]]\n  });\n  return ActionBarUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ActionBarUiModule, {\n    declarations: function () {\n      return [ActionBarUiComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule, RouterModule, FormsModule, ButtonLoadingUiModule];\n    },\n    exports: function () {\n      return [ActionBarUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nvar ScreenSize = /*#__PURE__*/(() => {\n  (function (ScreenSize) {\n    ScreenSize[\"XSmall\"] = \"XSmall\";\n    ScreenSize[\"Small\"] = \"Small\";\n    ScreenSize[\"Medium\"] = \"Medium\";\n    ScreenSize[\"Large\"] = \"Large\";\n    ScreenSize[\"XLarge\"] = \"XLarge\";\n  })(ScreenSize || (ScreenSize = {}));\n\n  return ScreenSize;\n})();\nlet ScreenSizeObserverService = /*#__PURE__*/(() => {\n  class ScreenSizeObserverService {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.screenSize = new BehaviorSubject(ScreenSize.Medium);\n      this.screenSize$ = this.screenSize.asObservable();\n      this.initScreenSizeObservable();\n    }\n\n    initScreenSizeObservable() {\n      merge(this.breakpointObserver.observe([Breakpoints.XSmall]).pipe(map(result => {\n        if (result.matches) {\n          return ScreenSize.XSmall;\n        }\n      })), this.breakpointObserver.observe([Breakpoints.Small]).pipe(map(result => {\n        if (result.matches) {\n          return ScreenSize.Small;\n        }\n      })), this.breakpointObserver.observe([Breakpoints.Medium]).pipe(map(result => {\n        if (result.matches) {\n          return ScreenSize.Medium;\n        }\n      })), this.breakpointObserver.observe([Breakpoints.Large]).pipe(map(result => {\n        if (result.matches) {\n          return ScreenSize.Large;\n        }\n      })), this.breakpointObserver.observe([Breakpoints.XLarge]).pipe(map(result => {\n        if (result.matches) {\n          return ScreenSize.XLarge;\n        }\n      }))).subscribe(value => {\n        if (value) {\n          this.screenSize.next(value);\n        }\n      });\n    }\n\n  }\n\n  ScreenSizeObserverService.ɵfac = function ScreenSizeObserverService_Factory(t) {\n    return new (t || ScreenSizeObserverService)(ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver));\n  };\n\n  ScreenSizeObserverService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ScreenSizeObserverService_Factory() {\n      return new ScreenSizeObserverService(i0.ɵɵinject(i1$1.BreakpointObserver));\n    },\n    token: ScreenSizeObserverService,\n    providedIn: \"root\"\n  });\n  return ScreenSizeObserverService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionGroupMenuComponent = /*#__PURE__*/(() => {\n  class ActionGroupMenuComponent {\n    constructor(languages, screenSize, systemConfigStore) {\n      this.languages = languages;\n      this.screenSize = screenSize;\n      this.systemConfigStore = systemConfigStore;\n      this.klass = '';\n      this.buttonClass = 'btn btn-sm';\n      this.configState = new BehaviorSubject({\n        buttons: []\n      });\n      this.config$ = this.configState.asObservable();\n      this.buttonGroupClass = 'dropdown-button-secondary';\n      this.screen = ScreenSize.Medium;\n      this.defaultBreakpoint = 3;\n    }\n\n    ngOnInit() {\n      this.vm$ = combineLatest([this.config.getActions(), this.screenSize.screenSize$, this.languages.vm$]).pipe(map(([actions, screenSize, languages]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        this.configState.next(this.getButtonGroupConfig(actions));\n        return {\n          actions,\n          screenSize,\n          languages\n        };\n      }));\n    }\n\n    isXSmallScreen() {\n      return this.screen === ScreenSize.XSmall;\n    }\n\n    getButtonGroupConfig(actions) {\n      const expanded = [];\n      const collapsed = [];\n      actions.forEach(action => {\n        const button = this.buildButton(action);\n\n        if (action.params && action.params.expanded) {\n          expanded.push(button);\n          return;\n        }\n\n        collapsed.push(button);\n      });\n      let breakpoint = this.getBreakpoint();\n\n      if (expanded.length < breakpoint) {\n        breakpoint = expanded.length;\n      }\n\n      const buttons = expanded.concat(collapsed);\n      return {\n        buttonKlass: [this.buttonClass],\n        dropdownLabel: this.languages.getAppString('LBL_ACTIONS') || '',\n        breakpoint,\n        dropdownOptions: {\n          placement: ['bottom-right'],\n          wrapperKlass: [this.buttonGroupClass]\n        },\n        buttons\n      };\n    }\n\n    getBreakpoint() {\n      const breakpointMap = this.systemConfigStore.getConfigValue('recordview_actions_limits');\n\n      if (this.screen && breakpointMap && breakpointMap[this.screen]) {\n        this.breakpoint = breakpointMap[this.screen];\n        return this.breakpoint;\n      }\n\n      if (this.breakpoint) {\n        return this.breakpoint;\n      }\n\n      return this.defaultBreakpoint;\n    }\n\n    buildButton(action) {\n      const button = {\n        label: action.label || '',\n        klass: this.buttonClass,\n        titleKey: action.titleKey || '',\n        onClick: () => {\n          this.config.runAction(action, this.actionContext);\n        }\n      };\n\n      if (action.icon) {\n        button.icon = action.icon;\n      }\n\n      if (action.status) {\n        Button.appendClasses(button, [action.status]);\n      }\n\n      if (action.klass) {\n        Button.appendClasses(button, action.klass);\n      }\n\n      return button;\n    }\n\n  }\n\n  ActionGroupMenuComponent.ɵfac = function ActionGroupMenuComponent_Factory(t) {\n    return new (t || ActionGroupMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ScreenSizeObserverService), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  ActionGroupMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ActionGroupMenuComponent,\n    selectors: [[\"scrm-action-group-menu\"]],\n    inputs: {\n      klass: \"klass\",\n      buttonClass: \"buttonClass\",\n      actionContext: \"actionContext\",\n      config: \"config\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [3, \"config$\", 4, \"ngIf\"], [3, \"config$\"]],\n    template: function ActionGroupMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ActionGroupMenuComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ButtonGroupComponent];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe];\n    },\n    encapsulation: 2\n  });\n  return ActionGroupMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownButtonComponent = /*#__PURE__*/(() => {\n  class DropdownButtonComponent {\n    constructor(language) {\n      this.language = language;\n      this.disabled = false;\n      this.autoClose = true;\n    }\n\n    isDropdown(item) {\n      if (!item) {\n        return false;\n      }\n\n      return 'items' in item;\n    }\n\n    click(onClick, dropdown) {\n      onClick();\n      dropdown.close();\n    }\n\n    close(dropdown) {\n      dropdown.close();\n    }\n\n    ngOnInit() {\n      if (this.config && !this.config.placement) {\n        this.config.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n      }\n    }\n\n    getPlacement() {\n      if (this.config && !this.config.placement) {\n        return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n      }\n\n      return this.config.placement;\n    }\n\n  }\n\n  DropdownButtonComponent.ɵfac = function DropdownButtonComponent_Factory(t) {\n    return new (t || DropdownButtonComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  DropdownButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropdownButtonComponent,\n    selectors: [[\"scrm-dropdown-button\"]],\n    inputs: {\n      disabled: \"disabled\",\n      autoClose: \"autoClose\",\n      config: \"config\"\n    },\n    ngContentSelectors: _c0,\n    decls: 9,\n    vars: 10,\n    consts: [[\"ngbDropdown\", \"\", 1, \"d-inline-block\", \"dropdown-button\", 3, \"autoClose\", \"placement\", \"ngClass\"], [\"dropDown\", \"ngbDropdown\"], [\"ngbDropdownToggle\", \"\", 3, \"disabled\", \"ngClass\", \"title\"], [3, \"image\", \"klass\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngbDropdownMenu\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"image\", \"klass\"], [3, \"labelKey\"], [\"ngbDropdownItem\", \"\", 3, \"ngClass\", \"click\"], [1, \"d-flex\", \"align-items-center\"], [1, \"flex-grow-1\"], [3, \"item\", \"item-clicked\"]],\n    template: function DropdownButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵtemplate(3, DropdownButtonComponent_scrm_image_3_Template, 1, 2, \"scrm-image\", 3);\n        ɵngcc0.ɵɵtemplate(4, DropdownButtonComponent_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n        ɵngcc0.ɵɵtemplate(5, DropdownButtonComponent_ng_container_5_Template, 2, 1, \"ng-container\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, DropdownButtonComponent_ng_container_8_Template, 3, 2, \"ng-container\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"autoClose\", ctx.autoClose)(\"placement\", ctx.getPlacement())(\"ngClass\", ctx.config.wrapperKlass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"ngClass\", ctx.config.klass)(\"title\", ctx.language.getFieldLabel(ctx.config.titleKey) || \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.label);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.config.label && ctx.config.labelKey);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.config.items);\n      }\n    },\n    directives: function () {\n      return [ɵngcc7.NgbDropdown, ɵngcc3.NgClass, ɵngcc7.NgbDropdownToggle, ɵngcc3.NgIf, ɵngcc7.NgbDropdownMenu, ɵngcc3.NgForOf, ImageComponent, LabelComponent, ɵngcc7.NgbDropdownItem, DropdownSubmenuComponent];\n    },\n    encapsulation: 2\n  });\n  return DropdownButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownSubmenuComponent = /*#__PURE__*/(() => {\n  class DropdownSubmenuComponent {\n    constructor() {\n      this.itemClicked = new EventEmitter();\n      this.isCollapsed = true;\n    }\n\n    ngOnInit() {}\n\n    click(item) {\n      if (item && item.onClick) {\n        item.onClick();\n      }\n\n      this.itemClicked.emit(true);\n    }\n\n  }\n\n  DropdownSubmenuComponent.ɵfac = function DropdownSubmenuComponent_Factory(t) {\n    return new (t || DropdownSubmenuComponent)();\n  };\n\n  DropdownSubmenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropdownSubmenuComponent,\n    selectors: [[\"scrm-dropdown-submenu\"]],\n    inputs: {\n      item: \"item\"\n    },\n    outputs: {\n      itemClicked: \"item-clicked\"\n    },\n    ngContentSelectors: _c0,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"dropdown-submenu-items-container\"], [1, \"dropdown-submenu-parent-button\", \"dropdown-item\", \"dropdown-toggle\", 3, \"click\"], [3, \"image\", 4, \"ngIf\"], [3, \"ngbCollapse\", 4, \"ngIf\"], [1, \"dropdown-submenu-extra\"], [3, \"image\"], [3, \"ngbCollapse\"], [1, \"dropdown-submenu\", \"pl-2\", \"mb-1\"], [\"class\", \"dropdown-submenu-item dropdown-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-submenu-item\", \"dropdown-item\"], [1, \"action-link\", \"dropdown-submenu-item-link\", 3, \"ngClass\", \"click\"]],\n    template: function DropdownSubmenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function DropdownSubmenuComponent_Template_a_click_2_listener() {\n          return ctx.isCollapsed = !ctx.isCollapsed;\n        });\n        ɵngcc0.ɵɵtemplate(3, DropdownSubmenuComponent_scrm_image_3_Template, 1, 1, \"scrm-image\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, DropdownSubmenuComponent_div_5_Template, 3, 2, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.item && ctx.item.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.item && ctx.item.label, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.item && ctx.item.items.length);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent, ɵngcc7.NgbCollapse, ɵngcc3.NgForOf, ɵngcc3.NgClass],\n    encapsulation: 2\n  });\n  return DropdownSubmenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownSubmenuModule = /*#__PURE__*/(() => {\n  class DropdownSubmenuModule {}\n\n  DropdownSubmenuModule.ɵfac = function DropdownSubmenuModule_Factory(t) {\n    return new (t || DropdownSubmenuModule)();\n  };\n\n  DropdownSubmenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownSubmenuModule\n  });\n  DropdownSubmenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule, NgbModule]]\n  });\n  return DropdownSubmenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownSubmenuModule, {\n    declarations: function () {\n      return [DropdownSubmenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule, NgbModule];\n    },\n    exports: function () {\n      return [DropdownSubmenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LabelComponent = /*#__PURE__*/(() => {\n  class LabelComponent {\n    constructor(language) {\n      this.language = language;\n      this.labelKey = '';\n      this.module = null;\n      this.listKey = null;\n      this.languages$ = this.language.vm$;\n    }\n\n  }\n\n  LabelComponent.ɵfac = function LabelComponent_Factory(t) {\n    return new (t || LabelComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  LabelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LabelComponent,\n    selectors: [[\"scrm-label\"]],\n    inputs: {\n      labelKey: \"labelKey\",\n      module: \"module\",\n      listKey: \"listKey\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"]],\n    template: function LabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LabelComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.languages$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return LabelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LabelModule = /*#__PURE__*/(() => {\n  class LabelModule {}\n\n  LabelModule.ɵfac = function LabelModule_Factory(t) {\n    return new (t || LabelModule)();\n  };\n\n  LabelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LabelModule\n  });\n  LabelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return LabelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LabelModule, {\n    declarations: function () {\n      return [LabelComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [LabelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownButtonModule = /*#__PURE__*/(() => {\n  class DropdownButtonModule {}\n\n  DropdownButtonModule.ɵfac = function DropdownButtonModule_Factory(t) {\n    return new (t || DropdownButtonModule)();\n  };\n\n  DropdownButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownButtonModule\n  });\n  DropdownButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgbDropdownModule, ImageModule, DropdownSubmenuModule, LabelModule, NgbTooltipModule]]\n  });\n  return DropdownButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownButtonModule, {\n    declarations: function () {\n      return [DropdownButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgbDropdownModule, ImageModule, DropdownSubmenuModule, LabelModule, NgbTooltipModule];\n    },\n    exports: function () {\n      return [DropdownButtonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor(language) {\n      this.language = language;\n      this.clickBuffer = new Subject();\n      this.clickBuffer$ = this.clickBuffer.asObservable();\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      var _a, _b, _c, _d;\n\n      const isToDebounce = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.debounceClick) !== null && _b !== void 0 ? _b : null;\n      this.clickCallBack = (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.onClick) !== null && _d !== void 0 ? _d : null;\n      const clickDebounceTime = this.getDebounceTime();\n\n      if (isToDebounce && this.clickCallBack) {\n        this.subs.push(this.clickBuffer$.pipe(debounceTime(clickDebounceTime)).subscribe(value => {\n          const input = value !== null && value !== void 0 ? value : null;\n          this.clickCallBack(input);\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    runClick(input) {\n      var _a, _b;\n\n      const isToDebounce = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.debounceClick) !== null && _b !== void 0 ? _b : null;\n\n      if (!this.clickCallBack) {\n        return;\n      }\n\n      if (isToDebounce && this.clickCallBack) {\n        this.clickBuffer.next(input !== null && input !== void 0 ? input : null);\n        return;\n      }\n\n      this.clickCallBack(input !== null && input !== void 0 ? input : null);\n    }\n    /**\n     * Get debounce time\n     * @return number\n     * @protected\n     */\n\n\n    getDebounceTime() {\n      var _a, _b;\n\n      let clickDebounceTime = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.clickDebounceTime) !== null && _b !== void 0 ? _b : 1000;\n\n      if (!isFinite(clickDebounceTime)) {\n        clickDebounceTime = 1000;\n      }\n\n      return clickDebounceTime;\n    }\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  ButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"scrm-button\"]],\n    inputs: {\n      config: \"config\"\n    },\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", 3, \"ngClass\", \"title\", \"click\"], [3, \"image\", \"klass\", \"title\", 4, \"ngIf\"], [3, \"labelKey\", 4, \"ngIf\"], [3, \"image\", \"klass\", \"title\"], [3, \"labelKey\"]],\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonComponent_Template_button_click_0_listener() {\n          return ctx.runClick();\n        });\n        ɵngcc0.ɵɵtemplate(1, ButtonComponent_scrm_image_1_Template, 1, 3, \"scrm-image\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵtemplate(3, ButtonComponent_scrm_label_3_Template, 1, 1, \"scrm-label\", 2);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.config.klass)(\"title\", ctx.language.getFieldLabel(ctx.config.titleKey) || \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.config.label || \"\", \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.labelKey);\n      }\n    },\n    directives: [ɵngcc3.NgClass, ɵngcc3.NgIf, ImageComponent, LabelComponent],\n    encapsulation: 2\n  });\n  return ButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonModule = /*#__PURE__*/(() => {\n  class ButtonModule {}\n\n  ButtonModule.ɵfac = function ButtonModule_Factory(t) {\n    return new (t || ButtonModule)();\n  };\n\n  ButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonModule\n  });\n  ButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule, LabelModule, NgbTooltipModule]]\n  });\n  return ButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonModule, {\n    declarations: function () {\n      return [ButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule, LabelModule, NgbTooltipModule];\n    },\n    exports: function () {\n      return [ButtonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonGroupComponent = /*#__PURE__*/(() => {\n  class ButtonGroupComponent {\n    constructor() {\n      this.buttons = {\n        expanded: [],\n        collapsed: []\n      };\n    }\n\n    ngOnInit() {\n      this.sub = this.config$.subscribe(config => {\n        this.internalConfig = Object.assign({}, config);\n        this.splitButtons();\n      });\n    }\n\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n\n    isDropdown(item) {\n      if (!item) {\n        return false;\n      }\n\n      return 'items' in item;\n    }\n\n    buildDropdownConfig() {\n      var _a, _b;\n\n      let buttonClasses = ['button-group-button'];\n\n      if (this.internalConfig.buttonKlass && this.internalConfig.buttonKlass.length > 0) {\n        buttonClasses = buttonClasses.concat(this.internalConfig.buttonKlass);\n      }\n\n      if ((_b = (_a = this === null || this === void 0 ? void 0 : this.internalConfig) === null || _a === void 0 ? void 0 : _a.dropdownOptions) === null || _b === void 0 ? void 0 : _b.klass) {\n        buttonClasses = buttonClasses.concat(this.internalConfig.dropdownOptions.klass);\n      }\n\n      let wrapperClasses = ['button-group-dropdown'];\n      const dropdownOptions = this.internalConfig.dropdownOptions;\n      const optionsWrapperKlass = dropdownOptions && dropdownOptions.wrapperKlass;\n\n      if (optionsWrapperKlass && optionsWrapperKlass.length > 0) {\n        wrapperClasses = wrapperClasses.concat(optionsWrapperKlass);\n      }\n\n      this.dropdownConfig = {\n        label: this.internalConfig.dropdownLabel,\n        klass: [...buttonClasses],\n        wrapperKlass: wrapperClasses,\n        items: this.buttons.collapsed\n      };\n\n      if (this.internalConfig.dropdownOptions && this.internalConfig.dropdownOptions.placement) {\n        this.dropdownConfig.placement = this.internalConfig.dropdownOptions.placement;\n      }\n\n      if (this.internalConfig.dropdownOptions && this.internalConfig.dropdownOptions.icon) {\n        this.dropdownConfig.icon = this.internalConfig.dropdownOptions.icon;\n      }\n    }\n\n    getBreakpoint() {\n      if (!this.internalConfig.breakpoint) {\n        return 4;\n      }\n\n      return this.internalConfig.breakpoint;\n    }\n\n    splitButtons() {\n      this.buttons.expanded = [];\n      this.buttons.collapsed = [];\n\n      if (!this.internalConfig.buttons || this.internalConfig.buttons.length < 1) {\n        return;\n      }\n\n      let count = 0;\n      this.internalConfig.buttons.forEach(button => {\n        if (!button) {\n          return;\n        }\n\n        if (count < this.getBreakpoint()) {\n          let classes = ['button-group-button'];\n\n          if (this.internalConfig.buttonKlass && this.internalConfig.buttonKlass.length > 0) {\n            classes = classes.concat(this.internalConfig.buttonKlass);\n          }\n\n          const newButton = Object.assign({}, button);\n          Button.appendClasses(newButton, [...classes]);\n          this.buttons.expanded.push(newButton);\n        } else {\n          this.buttons.collapsed.push(Object.assign({}, button));\n        }\n\n        count++;\n      });\n      this.buildDropdownConfig();\n    }\n\n  }\n\n  ButtonGroupComponent.ɵfac = function ButtonGroupComponent_Factory(t) {\n    return new (t || ButtonGroupComponent)();\n  };\n\n  ButtonGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ButtonGroupComponent,\n    selectors: [[\"scrm-button-group\"]],\n    inputs: {\n      config$: \"config$\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"autoClose\", \"outside\", 3, \"config\", 4, \"ngIf\"], [3, \"config\", 4, \"ngIf\"], [3, \"config\"], [\"autoClose\", \"outside\", 3, \"config\"]],\n    template: function ButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ButtonGroupComponent_div_0_Template, 3, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config$);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, ButtonComponent, DropdownButtonComponent],\n    encapsulation: 2\n  });\n  return ButtonGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonGroupModule = /*#__PURE__*/(() => {\n  class ButtonGroupModule {}\n\n  ButtonGroupModule.ɵfac = function ButtonGroupModule_Factory(t) {\n    return new (t || ButtonGroupModule)();\n  };\n\n  ButtonGroupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonGroupModule\n  });\n  ButtonGroupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, DropdownButtonModule]]\n  });\n  return ButtonGroupModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonGroupModule, {\n    declarations: function () {\n      return [ButtonGroupComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, DropdownButtonModule];\n    },\n    exports: function () {\n      return [ButtonGroupComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionGroupMenuModule = /*#__PURE__*/(() => {\n  class ActionGroupMenuModule {}\n\n  ActionGroupMenuModule.ɵfac = function ActionGroupMenuModule_Factory(t) {\n    return new (t || ActionGroupMenuModule)();\n  };\n\n  ActionGroupMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ActionGroupMenuModule\n  });\n  ActionGroupMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule, ButtonModule, ButtonGroupModule]]\n  });\n  return ActionGroupMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ActionGroupMenuModule, {\n    declarations: function () {\n      return [ActionGroupMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule, ButtonModule, ButtonGroupModule];\n    },\n    exports: function () {\n      return [ActionGroupMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BulkActionMenuComponent = /*#__PURE__*/(() => {\n  class BulkActionMenuComponent {\n    constructor(languageStore) {\n      this.languageStore = languageStore;\n      this.appStrings$ = this.languageStore.appStrings$;\n      this.vm$ = null;\n    }\n\n    ngOnInit() {\n      const status$ = this.selectionSource.getSelectionStatus();\n      const count$ = this.selectionSource.getSelectedCount();\n      const actions$ = this.actionSource.getBulkActions();\n      this.vm$ = combineLatest([this.appStrings$, status$, count$, actions$]).pipe(map(([appStrings, status, count, actions]) => ({\n        appStrings,\n        status,\n        count,\n        actions\n      })));\n    }\n\n    checked(status) {\n      return status === SelectionStatus.ALL;\n    }\n\n    intermediate(status) {\n      return status === SelectionStatus.SOME || status === SelectionStatus.PAGE;\n    }\n\n    selectPage() {\n      this.selectionSource.updateSelection(SelectionStatus.PAGE);\n    }\n\n    selectAll() {\n      this.selectionSource.updateSelection(SelectionStatus.ALL);\n    }\n\n    deselectAll() {\n      this.selectionSource.updateSelection(SelectionStatus.NONE);\n    }\n\n    toggleSelection(status) {\n      if (status === SelectionStatus.ALL) {\n        this.selectionSource.updateSelection(SelectionStatus.NONE);\n        return;\n      }\n\n      this.selectionSource.updateSelection(SelectionStatus.ALL);\n    }\n\n    getDropdownConfig(actions, appStrings) {\n      const label = appStrings && appStrings.LBL_BULK_ACTION_BUTTON_LABEL || '';\n      const dropdownConfig = {\n        label,\n        klass: ['bulk-action-button', 'btn', 'btn-sm'],\n        wrapperKlass: ['bulk-action-group', 'float-left'],\n        items: []\n      };\n      Object.keys(actions).forEach(actionKey => {\n        const action = actions[actionKey];\n        dropdownConfig.items.push({\n          label: appStrings && appStrings[action.labelKey] || '',\n          klass: [`${actionKey}-bulk-action`],\n          onClick: () => {\n            this.actionSource.executeBulkAction(action.key);\n          }\n        });\n      });\n      return dropdownConfig;\n    }\n\n  }\n\n  BulkActionMenuComponent.ɵfac = function BulkActionMenuComponent_Factory(t) {\n    return new (t || BulkActionMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  BulkActionMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BulkActionMenuComponent,\n    selectors: [[\"scrm-bulk-action-menu\"]],\n    inputs: {\n      selectionSource: \"selectionSource\",\n      actionSource: \"actionSource\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"bulk-action float-left\", 4, \"ngIf\"], [1, \"bulk-action\", \"float-left\"], [\"ngbDropdown\", \"\", 1, \"dropdown\", \"select-action-group\", \"float-left\"], [\"type\", \"button\", \"ngbDropdownToggle\", \"\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", \"aria-hidden\", \"true\", \"aria-label\", \"Select Action Menu\", 1, \"bulk-action-button\", \"dropdown-toggle\", \"btn\", \"btn-sm\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", \"aria-hidden\", \"true\", 3, \"checked\", \"indeterminate\", \"change\"], [1, \"checkmark\"], [1, \"bulk-action-selected-number\"], [\"ngbDropdownMenu\", \"\", \"aria-hidden\", \"true\", 1, \"dropdown-menu\"], [1, \"dropdown-item\", \"select-all\", 3, \"click\"], [1, \"dropdown-item\", \"select-page\", 3, \"click\"], [1, \"dropdown-item\", \"deselect-all\", 3, \"click\"], [3, \"disabled\", \"config\"]],\n    template: function BulkActionMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BulkActionMenuComponent_div_0_Template, 16, 9, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc7.NgbDropdown, ɵngcc7.NgbDropdownToggle, ɵngcc7.NgbDropdownMenu, DropdownButtonComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return BulkActionMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BulkActionMenuModule = /*#__PURE__*/(() => {\n  class BulkActionMenuModule {}\n\n  BulkActionMenuModule.ɵfac = function BulkActionMenuModule_Factory(t) {\n    return new (t || BulkActionMenuModule)();\n  };\n\n  BulkActionMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BulkActionMenuModule\n  });\n  BulkActionMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgbModule, DropdownButtonModule]]\n  });\n  return BulkActionMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BulkActionMenuModule, {\n    declarations: function () {\n      return [BulkActionMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgbModule, DropdownButtonModule];\n    },\n    exports: function () {\n      return [BulkActionMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ButtonUtils = /*#__PURE__*/(() => {\n  class ButtonUtils {\n    constructor() {}\n\n    addOnClickPartial(button, partialInput) {\n      const copy = Object.assign({}, button);\n\n      if (button && 'items' in copy) {\n        const items = copy.items;\n        copy.items = [];\n        items.forEach(item => {\n          copy.items.push(this.addOnClickPartial(item, partialInput));\n        });\n        return copy;\n      }\n\n      copy.onClick = copy.onClick && partial(copy.onClick, partialInput);\n      return copy;\n    }\n\n  }\n\n  ButtonUtils.ɵfac = function ButtonUtils_Factory(t) {\n    return new (t || ButtonUtils)();\n  };\n\n  ButtonUtils.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ButtonUtils_Factory() {\n      return new ButtonUtils();\n    },\n    token: ButtonUtils,\n    providedIn: \"root\"\n  });\n  return ButtonUtils;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseChartComponent = /*#__PURE__*/(() => {\n  class BaseChartComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.height = 300;\n      this.view = [300, this.height];\n    }\n\n    onResize() {\n      this.calculateView();\n    }\n\n    calculateView() {\n      let width;\n      const el = this.elementRef && this.elementRef.nativeElement || {};\n      const parentEl = el.parentElement && el.parentElement.parentElement || {};\n      const parentWidth = parentEl && parentEl.offsetWidth || 0;\n\n      if (parentWidth > 0) {\n        width = parentWidth;\n      } else {\n        width = window.innerWidth * 0.7;\n\n        if (window.innerWidth > 990) {\n          width = window.innerWidth * 0.23;\n        }\n      }\n\n      this.view = [width, this.height];\n    }\n\n  }\n\n  BaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n    return new (t || BaseChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  BaseChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseChartComponent,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      dataSource: \"dataSource\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function BaseChartComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseChartModule = /*#__PURE__*/(() => {\n  class BaseChartModule {}\n\n  BaseChartModule.ɵfac = function BaseChartModule_Factory(t) {\n    return new (t || BaseChartModule)();\n  };\n\n  BaseChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BaseChartModule\n  });\n  BaseChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return BaseChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BaseChartModule, {\n    declarations: function () {\n      return [BaseChartComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [BaseChartComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PieGridChartComponent = /*#__PURE__*/(() => {\n  class PieGridChartComponent extends BaseChartComponent {\n    constructor(language, elementRef) {\n      super(elementRef);\n      this.language = language;\n      this.elementRef = elementRef;\n      this.height = 700;\n      this.view = [300, this.height];\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (this.dataSource.options.height) {\n        this.height = this.dataSource.options.height;\n      }\n\n      this.calculateView();\n      this.subs.push(this.dataSource.getResults().subscribe(value => {\n        this.parseResults(value);\n        this.calculateHeightBasedOnResults();\n        this.calculateView();\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    get scheme() {\n      return this.dataSource.options.scheme || 'picnic';\n    }\n\n    get label() {\n      return this.dataSource.options.label || '';\n    }\n\n    onResize() {\n      this.calculateHeightBasedOnResults();\n      this.calculateView();\n    }\n\n    calculateHeightBasedOnResults() {\n      if (this.results && this.results.length) {\n        const perRow = Math.floor(this.view[0] / 170);\n        this.height = Math.floor(this.results.length / perRow) * 200;\n      } else {\n        this.height = 50;\n      }\n    }\n\n    parseResults(value) {\n      this.results = [];\n\n      if (value.singleSeries && value.singleSeries.length) {\n        value.singleSeries.forEach(entry => {\n          const parsedValue = parseFloat('' + entry.value);\n\n          if (!parsedValue) {\n            this.results.push(entry);\n            return;\n          }\n\n          this.results.push({\n            name: entry.name,\n            value: parsedValue\n          });\n        });\n      }\n    }\n\n  }\n\n  PieGridChartComponent.ɵfac = function PieGridChartComponent_Factory(t) {\n    return new (t || PieGridChartComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  PieGridChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PieGridChartComponent,\n    selectors: [[\"scrm-pie-grid-chart\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"labelKey\", \"LBL_NO_DATA\", 4, \"ngIf\"], [3, \"animations\", \"view\", \"scheme\", \"label\", \"results\", \"resize\", 4, \"ngIf\"], [\"labelKey\", \"LBL_NO_DATA\"], [3, \"animations\", \"view\", \"scheme\", \"label\", \"results\", \"resize\"]],\n    template: function PieGridChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, PieGridChartComponent_scrm_chart_message_area_0_Template, 1, 0, \"scrm-chart-message-area\", 0);\n        ɵngcc0.ɵɵtemplate(1, PieGridChartComponent_ngx_charts_pie_grid_1_Template, 1, 5, \"ngx-charts-pie-grid\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.results || !ctx.results.length || ctx.results.length < 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.results && ctx.results.length > 0);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ChartMessageAreaComponent, ɵngcc8.PieGridComponent];\n    },\n    encapsulation: 2\n  });\n  return PieGridChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VerticalBarChartComponent = /*#__PURE__*/(() => {\n  class VerticalBarChartComponent extends BaseChartComponent {\n    constructor(elementRef) {\n      super(elementRef);\n      this.elementRef = elementRef;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (this.dataSource.options.height) {\n        this.height = this.dataSource.options.height;\n      }\n\n      this.calculateView();\n      this.subs.push(this.dataSource.getResults().subscribe(value => {\n        this.results = value.singleSeries;\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    get scheme() {\n      return this.dataSource.options.scheme || 'picnic';\n    }\n\n    get gradient() {\n      return this.dataSource.options.gradient || false;\n    }\n\n    get xAxis() {\n      return this.dataSource.options.xAxis || false;\n    }\n\n    get yAxis() {\n      return !isFalse(this.dataSource.options.yAxis);\n    }\n\n    get legend() {\n      return !isFalse(this.dataSource.options.legend);\n    }\n\n    get showXAxisLabel() {\n      return this.dataSource.options.showXAxisLabel || false;\n    }\n\n    get showYAxisLabel() {\n      return this.dataSource.options.showYAxisLabel || false;\n    }\n\n    get xAxisLabel() {\n      return this.dataSource.options.xAxisLabel || '';\n    }\n\n    get yAxisLabel() {\n      return this.dataSource.options.yAxisLabel || '';\n    }\n\n    get yAxisTickFormatting() {\n      if (this.dataSource.options.yAxisTickFormatting) {\n        return this.dataSource.tickFormatting;\n      }\n\n      return null;\n    }\n\n    formatTooltipValue(value) {\n      if (!this.dataSource || !this.dataSource.tooltipFormatting) {\n        return value;\n      }\n\n      return this.dataSource.tooltipFormatting(value);\n    }\n\n  }\n\n  VerticalBarChartComponent.ɵfac = function VerticalBarChartComponent_Factory(t) {\n    return new (t || VerticalBarChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  VerticalBarChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: VerticalBarChartComponent,\n    selectors: [[\"scrm-vertical-bar-chart\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"labelKey\", \"LBL_NO_DATA\", 4, \"ngIf\"], [\"class\", \"vertical-bar-chart\", 3, \"animations\", \"results\", \"view\", \"scheme\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"legendPosition\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"yAxisTickFormatting\", \"resize\", 4, \"ngIf\"], [\"labelKey\", \"LBL_NO_DATA\"], [1, \"vertical-bar-chart\", 3, \"animations\", \"results\", \"view\", \"scheme\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"legendPosition\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"yAxisLabel\", \"yAxisTickFormatting\", \"resize\"], [\"tooltipTemplate\", \"\"]],\n    template: function VerticalBarChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, VerticalBarChartComponent_scrm_chart_message_area_0_Template, 1, 0, \"scrm-chart-message-area\", 0);\n        ɵngcc0.ɵɵtemplate(1, VerticalBarChartComponent_ngx_charts_bar_vertical_1_Template, 3, 14, \"ngx-charts-bar-vertical\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.results || !ctx.results.length || ctx.results.length < 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.results && ctx.results.length > 0);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ChartMessageAreaComponent, ɵngcc8.BarVerticalComponent];\n    },\n    encapsulation: 2\n  });\n  return VerticalBarChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartMessageAreaComponent = /*#__PURE__*/(() => {\n  class ChartMessageAreaComponent {\n    constructor(language) {\n      this.language = language;\n      this.labelKey = '';\n    }\n\n  }\n\n  ChartMessageAreaComponent.ɵfac = function ChartMessageAreaComponent_Factory(t) {\n    return new (t || ChartMessageAreaComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  ChartMessageAreaComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChartMessageAreaComponent,\n    selectors: [[\"scrm-chart-message-area\"]],\n    inputs: {\n      labelKey: \"labelKey\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"d-flex\", \"mb-4\", \"mt-4\", \"justify-content-center\"], [\"class\", \"lead\", 4, \"ngIf\"], [1, \"lead\"], [3, \"labelKey\"]],\n    template: function ChartMessageAreaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, ChartMessageAreaComponent_div_1_Template, 2, 1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.labelKey);\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent],\n    encapsulation: 2\n  });\n  return ChartMessageAreaComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartMessageAreaModule = /*#__PURE__*/(() => {\n  class ChartMessageAreaModule {}\n\n  ChartMessageAreaModule.ɵfac = function ChartMessageAreaModule_Factory(t) {\n    return new (t || ChartMessageAreaModule)();\n  };\n\n  ChartMessageAreaModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChartMessageAreaModule\n  });\n  ChartMessageAreaModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, LabelModule]]\n  });\n  return ChartMessageAreaModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartMessageAreaModule, {\n    declarations: function () {\n      return [ChartMessageAreaComponent];\n    },\n    imports: function () {\n      return [CommonModule, LabelModule];\n    },\n    exports: function () {\n      return [ChartMessageAreaComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VerticalBarChartModule = /*#__PURE__*/(() => {\n  class VerticalBarChartModule {}\n\n  VerticalBarChartModule.ɵfac = function VerticalBarChartModule_Factory(t) {\n    return new (t || VerticalBarChartModule)();\n  };\n\n  VerticalBarChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: VerticalBarChartModule\n  });\n  VerticalBarChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgxChartsModule, ChartMessageAreaModule]]\n  });\n  return VerticalBarChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VerticalBarChartModule, {\n    declarations: function () {\n      return [VerticalBarChartComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgxChartsModule, ChartMessageAreaModule];\n    },\n    exports: function () {\n      return [VerticalBarChartComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PieGridChartModule = /*#__PURE__*/(() => {\n  class PieGridChartModule {}\n\n  PieGridChartModule.ɵfac = function PieGridChartModule_Factory(t) {\n    return new (t || PieGridChartModule)();\n  };\n\n  PieGridChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PieGridChartModule\n  });\n  PieGridChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgxChartsModule, ChartMessageAreaModule]]\n  });\n  return PieGridChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PieGridChartModule, {\n    declarations: function () {\n      return [PieGridChartComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgxChartsModule, ChartMessageAreaModule];\n    },\n    exports: function () {\n      return [PieGridChartComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineChartComponent = /*#__PURE__*/(() => {\n  class LineChartComponent extends BaseChartComponent {\n    constructor(elementRef) {\n      super(elementRef);\n      this.elementRef = elementRef;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (this.dataSource.options.height) {\n        this.height = this.dataSource.options.height;\n      }\n\n      this.calculateView();\n      this.subs.push(this.dataSource.getResults().subscribe(value => {\n        this.results = value.multiSeries;\n      }));\n      this.scheme = this.getScheme();\n      this.gradient = this.getGradient();\n      this.xAxis = this.getXAxis();\n      this.yAxis = this.getYAxis();\n      this.legend = this.getLegend();\n      this.xScaleMin = this.getXScaleMin();\n      this.xScaleMax = this.getXScaleMax();\n      this.xAxisTicks = this.getXAxisTicks();\n      this.showXAxisLabel = this.getShowXAxisLabel();\n      this.showYAxisLabel = this.getShowYAxisLabel();\n      this.xAxisLabel = this.getXAxisLabel();\n      this.yAxisLabel = this.getYAxisLabel();\n      this.yAxisTickFormatting = this.getYAxisTickFormatting();\n      this.xAxisTickFormatting = this.getXAxisTickFormatting();\n      this.tooltipDisabled = this.getTooltipDisabled();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getScheme() {\n      return this.dataSource.options.scheme || 'picnic';\n    }\n\n    getGradient() {\n      return this.dataSource.options.gradient || false;\n    }\n\n    getXAxis() {\n      return !isFalse(this.dataSource.options.xAxis);\n    }\n\n    getYAxis() {\n      return !isFalse(this.dataSource.options.yAxis);\n    }\n\n    getLegend() {\n      return !isFalse(this.dataSource.options.legend);\n    }\n\n    getXScaleMin() {\n      return this.dataSource.options.xScaleMin || null;\n    }\n\n    getXScaleMax() {\n      return this.dataSource.options.xScaleMax || null;\n    }\n\n    getXAxisTicks() {\n      return this.dataSource.options.xAxisTicks || null;\n    }\n\n    getShowXAxisLabel() {\n      return !isFalse(this.dataSource.options.showXAxisLabel);\n    }\n\n    getShowYAxisLabel() {\n      return this.dataSource.options.showYAxisLabel || false;\n    }\n\n    getXAxisLabel() {\n      return this.dataSource.options.xAxisLabel || '';\n    }\n\n    getYAxisLabel() {\n      return this.dataSource.options.yAxisLabel || '';\n    }\n\n    getYAxisTickFormatting() {\n      if (!this.dataSource.options.yAxisTickFormatting) {\n        return null;\n      }\n\n      return this.dataSource.tickFormatting || null;\n    }\n\n    getXAxisTickFormatting() {\n      if (!this.dataSource.options.xAxisTickFormatting) {\n        return null;\n      }\n\n      return this.dataSource.tickFormatting || null;\n    }\n\n    getTooltipDisabled() {\n      return this.dataSource.options.tooltipDisabled || false;\n    }\n\n  }\n\n  LineChartComponent.ɵfac = function LineChartComponent_Factory(t) {\n    return new (t || LineChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  LineChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LineChartComponent,\n    selectors: [[\"scrm-line-chart\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"labelKey\", \"LBL_NO_DATA\", 4, \"ngIf\"], [\"class\", \"line-chart\", 3, \"animations\", \"results\", \"view\", \"scheme\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"xScaleMin\", \"xScaleMax\", \"xAxisTicks\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"legendPosition\", \"autoScale\", \"yAxisTickFormatting\", \"xAxisTickFormatting\", \"tooltipDisabled\", \"yAxisLabel\", \"resize\", 4, \"ngIf\"], [\"labelKey\", \"LBL_NO_DATA\"], [1, \"line-chart\", 3, \"animations\", \"results\", \"view\", \"scheme\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"xScaleMin\", \"xScaleMax\", \"xAxisTicks\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxisLabel\", \"legendPosition\", \"autoScale\", \"yAxisTickFormatting\", \"xAxisTickFormatting\", \"tooltipDisabled\", \"yAxisLabel\", \"resize\"]],\n    template: function LineChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LineChartComponent_scrm_chart_message_area_0_Template, 1, 0, \"scrm-chart-message-area\", 0);\n        ɵngcc0.ɵɵtemplate(1, LineChartComponent_ngx_charts_line_chart_1_Template, 1, 20, \"ngx-charts-line-chart\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.results || !ctx.results.length || ctx.results.length < 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.results && ctx.results.length > 0);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ChartMessageAreaComponent, ɵngcc8.LineChartComponent],\n    encapsulation: 2\n  });\n  return LineChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineChartModule = /*#__PURE__*/(() => {\n  class LineChartModule {}\n\n  LineChartModule.ɵfac = function LineChartModule_Factory(t) {\n    return new (t || LineChartModule)();\n  };\n\n  LineChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LineChartModule\n  });\n  LineChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgxChartsModule, ChartMessageAreaModule]]\n  });\n  return LineChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LineChartModule, {\n    declarations: function () {\n      return [LineChartComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgxChartsModule, ChartMessageAreaModule];\n    },\n    exports: function () {\n      return [LineChartComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst chartModules = [LineChartModule, PieGridChartModule, VerticalBarChartModule];\nconst chartTypeMap = {\n  'line-chart': LineChartComponent,\n  'pie-grid': PieGridChartComponent,\n  'vertical-bar': VerticalBarChartComponent\n};\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nlet ChartRegistry = /*#__PURE__*/(() => {\n  class ChartRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      Object.keys(chartTypeMap).forEach(key => {\n        this.register('default', key, chartTypeMap[key]);\n      });\n    }\n\n  }\n\n  ChartRegistry.ɵfac = function ChartRegistry_Factory(t) {\n    return new (t || ChartRegistry)();\n  };\n\n  ChartRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ChartRegistry_Factory() {\n      return new ChartRegistry();\n    },\n    token: ChartRegistry,\n    providedIn: \"root\"\n  });\n  return ChartRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartComponent = /*#__PURE__*/(() => {\n  class ChartComponent {\n    constructor(registry) {\n      this.registry = registry;\n      this.dataSource = null;\n    }\n\n    get chartType() {\n      return this.registry.get('default', this.type);\n    }\n\n    ngOnInit() {}\n\n    isConfigured() {\n      return !!(this.type && this.dataSource && this.chartType);\n    }\n\n  }\n\n  ChartComponent.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)(ɵngcc0.ɵɵdirectiveInject(ChartRegistry));\n  };\n\n  ChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"scrm-chart\"]],\n    inputs: {\n      dataSource: \"dataSource\",\n      type: \"type\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"labelKey\", \"LBL_BAD_CONFIG\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [\"labelKey\", \"LBL_BAD_CONFIG\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ChartComponent_scrm_chart_message_area_0_Template, 1, 0, \"scrm-chart-message-area\", 0);\n        ɵngcc0.ɵɵtemplate(1, ChartComponent_ndc_dynamic_1_Template, 1, 4, \"ndc-dynamic\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isConfigured());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isConfigured());\n      }\n    },\n    directives: [ɵngcc3.NgIf, ChartMessageAreaComponent, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return ChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartModule = /*#__PURE__*/(() => {\n  class ChartModule {}\n\n  ChartModule.ɵfac = function ChartModule_Factory(t) {\n    return new (t || ChartModule)();\n  };\n\n  ChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChartModule\n  });\n  ChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ...chartModules, DynamicModule, ChartMessageAreaModule]]\n  });\n  return ChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartModule, {\n    declarations: function () {\n      return [ChartComponent];\n    },\n    imports: function () {\n      return [CommonModule, LineChartModule, PieGridChartModule, VerticalBarChartModule, DynamicModule, ChartMessageAreaModule];\n    },\n    exports: function () {\n      return [ChartComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CloseButtonComponent = /*#__PURE__*/(() => {\n  class CloseButtonComponent {\n    constructor() {\n      this.buttonClasses = ['close-button'];\n    }\n\n    getConfig() {\n      const btn = Button.fromButton(this.config);\n      btn.addClasses(this.buttonClasses);\n      return btn;\n    }\n\n  }\n\n  CloseButtonComponent.ɵfac = function CloseButtonComponent_Factory(t) {\n    return new (t || CloseButtonComponent)();\n  };\n\n  CloseButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CloseButtonComponent,\n    selectors: [[\"scrm-close-button\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"config\", 4, \"ngIf\"], [3, \"config\"], [\"aria-hidden\", \"true\"]],\n    template: function CloseButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CloseButtonComponent_scrm_button_0_Template, 3, 1, \"scrm-button\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonComponent],\n    encapsulation: 2\n  });\n  return CloseButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CloseButtonModule = /*#__PURE__*/(() => {\n  class CloseButtonModule {}\n\n  CloseButtonModule.ɵfac = function CloseButtonModule_Factory(t) {\n    return new (t || CloseButtonModule)();\n  };\n\n  CloseButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CloseButtonModule\n  });\n  CloseButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule]]\n  });\n  return CloseButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CloseButtonModule, {\n    declarations: function () {\n      return [CloseButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule];\n    },\n    exports: function () {\n      return [CloseButtonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ColumnChooserComponent = /*#__PURE__*/(() => {\n  class ColumnChooserComponent {\n    constructor(appState, languageStore, modal) {\n      this.appState = appState;\n      this.languageStore = languageStore;\n      this.modal = modal;\n      this.titleKey = 'LBL_COLUMN_SELECTOR_MODAL_TITLE';\n    }\n\n    drop(event) {\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n      }\n    }\n\n    getHeaderLabel() {\n      return this.languageStore.getFieldLabel('LBL_COLUMN_SELECTOR_MODAL_TITLE');\n    }\n\n    getColumnLabel(label) {\n      return this.languageStore.getFieldLabel(label, this.appState.getModule());\n    }\n\n    ngOnInit() {\n      this.closeButtonIcon = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.modal.close({\n            type: 'close-button'\n          });\n        }\n      };\n      this.closeButton = {\n        klass: ['btn', 'modal-button-cancel'],\n        labelKey: 'LBL_COLUMN_SELECTOR_CLOSE_BUTTON',\n        onClick: () => {\n          this.modal.close({\n            type: 'close-button'\n          });\n        }\n      };\n      this.saveButton = {\n        klass: ['btn', 'modal-button-save'],\n        labelKey: 'LBL_COLUMN_SELECTOR_SAVE_BUTTON',\n        onClick: () => {\n          this.modal.close({\n            type: 'close-button',\n            displayed: this.displayed,\n            hidden: this.hidden\n          });\n        }\n      };\n    }\n\n  }\n\n  ColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) {\n    return new (t || ColumnChooserComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbActiveModal));\n  };\n\n  ColumnChooserComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ColumnChooserComponent,\n    selectors: [[\"scrm-columnchooser\"]],\n    inputs: {\n      displayed: \"displayed\",\n      hidden: \"hidden\"\n    },\n    decls: 19,\n    vars: 16,\n    consts: [[\"klass\", \"column-chooser-modal\", 3, \"closable\", \"close\", \"title\", \"titleKey\"], [\"modal-body\", \"\"], [1, \"d-flex\", \"bd-highlight\"], [1, \"p-2\", \"flex-fill\", \"bd-highlight\", \"column-chooser-container\"], [1, \"column-chooser-title\"], [\"labelKey\", \"LBL_COLUMN_SELECTOR_DISPLAYED_COLS\"], [\"cdkDropList\", \"\", 1, \"column-chooser-list\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [\"displayedList\", \"cdkDropList\"], [\"class\", \"column-chooser-item column-displayed\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"labelKey\", \"LBL_COLUMN_SELECTOR_HIDDEN_COLS\"], [\"hiddenList\", \"cdkDropList\"], [\"class\", \"column-chooser-item column-hidden\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"modal-footer\", \"\"], [1, \"modal-buttons\"], [\"data-dismiss\", \"modal\", 3, \"config\"], [3, \"config\"], [\"cdkDrag\", \"\", 1, \"column-chooser-item\", \"column-displayed\"], [\"cdkDrag\", \"\", 1, \"column-chooser-item\", \"column-hidden\"]],\n    template: function ColumnChooserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-modal\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"h2\", 4);\n        ɵngcc0.ɵɵelement(5, \"scrm-label\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵlistener(\"cdkDropListDropped\", function ColumnChooserComponent_Template_div_cdkDropListDropped_6_listener($event) {\n          return ctx.drop($event);\n        });\n        ɵngcc0.ɵɵtemplate(8, ColumnChooserComponent_div_8_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(10, \"h2\", 4);\n        ɵngcc0.ɵɵelement(11, \"scrm-label\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"div\", 6, 10);\n        ɵngcc0.ɵɵlistener(\"cdkDropListDropped\", function ColumnChooserComponent_Template_div_cdkDropListDropped_12_listener($event) {\n          return ctx.drop($event);\n        });\n        ɵngcc0.ɵɵtemplate(14, ColumnChooserComponent_div_14_Template, 2, 1, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"div\", 12);\n        ɵngcc0.ɵɵelementStart(16, \"div\", 13);\n        ɵngcc0.ɵɵelement(17, \"scrm-button\", 14);\n        ɵngcc0.ɵɵelement(18, \"scrm-button\", 15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(7);\n\n        const _r2 = ɵngcc0.ɵɵreference(13);\n\n        ɵngcc0.ɵɵproperty(\"closable\", true)(\"close\", ctx.closeButtonIcon)(\"title\", ctx.getHeaderLabel())(\"titleKey\", ctx.titleKey);\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵproperty(\"cdkDropListData\", ctx.displayed)(\"cdkDropListConnectedTo\", ɵngcc0.ɵɵpureFunction1(12, _c2, _r2));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.displayed);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkDropListData\", ctx.hidden)(\"cdkDropListConnectedTo\", ɵngcc0.ɵɵpureFunction1(14, _c2, _r0));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.hidden);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.closeButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.saveButton);\n      }\n    },\n    directives: function () {\n      return [ModalComponent, LabelComponent, ɵngcc10.CdkDropList, ɵngcc3.NgForOf, ButtonComponent, ɵngcc10.CdkDrag];\n    },\n    encapsulation: 2\n  });\n  return ColumnChooserComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModalComponent = /*#__PURE__*/(() => {\n  class ModalComponent {\n    constructor() {\n      this.klass = '';\n      this.headerKlass = '';\n      this.bodyKlass = '';\n      this.footerKlass = '';\n      this.titleKey = '';\n      this.closable = false;\n      this.close = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm']\n      };\n    }\n\n  }\n\n  ModalComponent.ɵfac = function ModalComponent_Factory(t) {\n    return new (t || ModalComponent)();\n  };\n\n  ModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModalComponent,\n    selectors: [[\"scrm-modal\"]],\n    inputs: {\n      klass: \"klass\",\n      headerKlass: \"headerKlass\",\n      bodyKlass: \"bodyKlass\",\n      footerKlass: \"footerKlass\",\n      titleKey: \"titleKey\",\n      closable: \"closable\",\n      close: \"close\"\n    },\n    ngContentSelectors: _c4,\n    decls: 9,\n    vars: 13,\n    consts: [[1, \"modal-title\"], [3, \"labelKey\", 4, \"ngIf\"], [3, \"config\", 4, \"ngIf\"], [3, \"labelKey\"], [3, \"config\"]],\n    template: function ModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(3, ModalComponent_scrm_label_3_Template, 1, 1, \"scrm-label\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, ModalComponent_scrm_close_button_4_Template, 1, 1, \"scrm-close-button\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\");\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\");\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.klass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"modal-header \", ctx.headerKlass, \" d-flex align-items-center\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.titleKey);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.closable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"modal-body \", ctx.bodyKlass, \"\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"modal-footer \", ctx.footerKlass, \"\");\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, CloseButtonComponent],\n    encapsulation: 2\n  });\n  return ModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModalModule = /*#__PURE__*/(() => {\n  class ModalModule {}\n\n  ModalModule.ɵfac = function ModalModule_Factory(t) {\n    return new (t || ModalModule)();\n  };\n\n  ModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ModalModule\n  });\n  ModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule, CloseButtonModule, LabelModule]]\n  });\n  return ModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, {\n    declarations: function () {\n      return [ModalComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule, CloseButtonModule, LabelModule];\n    },\n    exports: function () {\n      return [ModalComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ColumnChooserModule = /*#__PURE__*/(() => {\n  class ColumnChooserModule {}\n\n  ColumnChooserModule.ɵfac = function ColumnChooserModule_Factory(t) {\n    return new (t || ColumnChooserModule)();\n  };\n\n  ColumnChooserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ColumnChooserModule\n  });\n  ColumnChooserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, DragDropModule, CloseButtonModule, ModalModule, LabelModule, ButtonModule]]\n  });\n  return ColumnChooserModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColumnChooserModule, {\n    declarations: function () {\n      return [ColumnChooserComponent];\n    },\n    imports: function () {\n      return [CommonModule, DragDropModule, CloseButtonModule, ModalModule, LabelModule, ButtonModule];\n    },\n    exports: function () {\n      return [ColumnChooserComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$f = {\n  userPreferences: {},\n  loading: false\n};\nlet internalState$3 = deepClone(initialState$f);\nlet cache$$2 = null;\nlet UserPreferenceStore = /*#__PURE__*/(() => {\n  class UserPreferenceStore {\n    constructor(collectionGQL, config, processService, localStorage) {\n      var _a, _b;\n\n      this.collectionGQL = collectionGQL;\n      this.config = config;\n      this.processService = processService;\n      this.localStorage = localStorage;\n      this.store = new BehaviorSubject(internalState$3);\n      this.state$ = this.store.asObservable();\n      this.saveBufferStore = new BehaviorSubject(false);\n      this.subs = [];\n      this.resourceName = 'userPreferences';\n      this.fieldsMetadata = {\n        fields: ['id', '_id', 'value', 'items']\n      };\n      /**\n       * Public long-lived observable streams\n       */\n\n      this.userPreferences$ = this.state$.pipe(map(state => state.userPreferences), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n      const uiSettings = (_a = config.getConfigValue('ui')) !== null && _a !== void 0 ? _a : {};\n      const delay = (_b = uiSettings.user_preferences_save_delay) !== null && _b !== void 0 ? _b : 5000;\n      this.saveBuffer$ = this.saveBufferStore.asObservable().pipe(debounceTime(delay !== null && delay !== void 0 ? delay : 5000));\n      this.subs.push(this.saveBuffer$.subscribe(value => {\n        if (!value) {\n          return;\n        }\n\n        this.saveUiPreferences();\n      }));\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cache$$2 = null;\n      this.updateState(deepClone(initialState$f));\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Get user preferences value by key\n     *\n     * @param {string} key to retrieve\n     * @returns any users preference\n     */\n\n\n    getUserPreference(key) {\n      if (!internalState$3.userPreferences || !internalState$3.userPreferences[key]) {\n        return null;\n      }\n\n      return internalState$3.userPreferences[key];\n    }\n    /**\n     * Get ui user preferences value by key\n     *\n     * @param module\n     * @param {string} key to retrieve\n     * @returns any users preference\n     */\n\n\n    getUi(module, key) {\n      var _a, _b, _c;\n\n      const storageKey = module + '-' + key;\n      const value = this.storageLoad(module, storageKey);\n\n      if (value != null) {\n        return value;\n      }\n\n      const ui = (_b = (_a = internalState$3 === null || internalState$3 === void 0 ? void 0 : internalState$3.userPreferences) === null || _a === void 0 ? void 0 : _a.ui) !== null && _b !== void 0 ? _b : {};\n      return (_c = ui[storageKey]) !== null && _c !== void 0 ? _c : null;\n    }\n    /**\n     * Set user preferences value by key\n     *\n     * @param {string} module name\n     * @param {string} key to retrieve\n     * @param value\n     * @returns any users preference\n     */\n\n\n    setUi(module, key, value) {\n      var _a, _b;\n\n      const storageKey = module + '-' + key;\n      this.storageSave(module, storageKey, value);\n      const ui = (_b = (_a = internalState$3 === null || internalState$3 === void 0 ? void 0 : internalState$3.userPreferences) === null || _a === void 0 ? void 0 : _a.ui) !== null && _b !== void 0 ? _b : {};\n      ui[storageKey] = value;\n      internalState$3.userPreferences.ui = ui;\n      this.saveBufferStore.next(true);\n    }\n\n    saveUiPreferences() {\n      const processType = 'save-ui-user-preferences';\n      const options = {\n        preferences: internalState$3.userPreferences.ui\n      };\n      this.processService.submit(processType, options).pipe(take(1)).subscribe();\n    }\n    /**\n     * Store the data in local storage\n     *\n     * @param {string} module to store in\n     * @param {string} storageKey to store in\n     * @param {} data to store\n     */\n\n\n    storageSave(module, storageKey, data) {\n      let storage = this.localStorage.get(storageKey);\n\n      if (!storage) {\n        storage = {};\n      }\n\n      storage[module] = data;\n      this.localStorage.set(storageKey, storage);\n    }\n    /**\n     * Store the key in local storage\n     *\n     * @param {string} module to load from\n     * @param {string} storageKey from load from\n     */\n\n\n    storageLoad(module, storageKey) {\n      const storage = this.localStorage.get(storageKey);\n\n      if (!storage || !storage[module]) {\n        return null;\n      }\n\n      return storage[module];\n    }\n    /**\n     * Initial UserPreferences load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @returns {object} Observable<any>\n     */\n\n\n    load() {\n      this.updateState(Object.assign(Object.assign({}, internalState$3), {\n        loading: true\n      }));\n      return this.getUserPreferences().pipe(tap(userPreferences => {\n        this.updateState(Object.assign(Object.assign({}, internalState$3), {\n          userPreferences,\n          loading: false\n        }));\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    isCached() {\n      return cache$$2 !== null;\n    }\n    /**\n     * Set pre-loaded preferences and cache\n     */\n\n\n    set(userPreferences) {\n      cache$$2 = of(userPreferences).pipe(shareReplay(1));\n      this.updateState(Object.assign(Object.assign({}, internalState$3), {\n        userPreferences,\n        loading: false\n      }));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$3 = state);\n    }\n    /**\n     * Get UserPreferences cached Observable or call the backend\n     *\n     * @returns {object} Observable<any>\n     */\n\n\n    getUserPreferences() {\n      if (cache$$2 == null) {\n        cache$$2 = this.fetch().pipe(shareReplay(1));\n      }\n\n      return cache$$2;\n    }\n    /**\n     * Fetch the User Preferences from the backend\n     *\n     * @returns {object} Observable<any>\n     */\n\n\n    fetch() {\n      return this.collectionGQL.fetchAll(this.resourceName, this.fieldsMetadata).pipe(map(({\n        data\n      }) => {\n        const userPreferences = {};\n\n        if (data.userPreferences && data.userPreferences.edges) {\n          data.userPreferences.edges.forEach(edge => {\n            if (!edge.node.items) {\n              return;\n            }\n\n            Object.keys(edge.node.items).forEach(key => {\n              userPreferences[key] = edge.node.items[key];\n            });\n          });\n        }\n\n        return userPreferences;\n      }));\n    }\n\n  }\n\n  UserPreferenceStore.ɵfac = function UserPreferenceStore_Factory(t) {\n    return new (t || UserPreferenceStore)(ɵngcc0.ɵɵinject(CollectionGQL), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(ProcessService), ɵngcc0.ɵɵinject(LocalStorageService));\n  };\n\n  UserPreferenceStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function UserPreferenceStore_Factory() {\n      return new UserPreferenceStore(i0.ɵɵinject(CollectionGQL), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(ProcessService), i0.ɵɵinject(LocalStorageService));\n    },\n    token: UserPreferenceStore,\n    providedIn: \"root\"\n  });\n  return UserPreferenceStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FormControlUtils = /*#__PURE__*/(() => {\n  class FormControlUtils {\n    getTrimmedInputValue(inputValue) {\n      // Handle the cases, when input values are not string e.g. multienums: String[]\n      // Process the input, only when it's a string else return as it is\n      if (typeof inputValue !== 'string') {\n        return inputValue;\n      }\n\n      return inputValue.trim();\n    }\n\n    isEmptyInputValue(inputValue) {\n      // Handle the cases, when input value is an string, array, objects or any other type\n      return inputValue == null || typeof inputValue === 'undefined' || inputValue === '' || inputValue.length === 0;\n    }\n\n    isEmptyTrimmedInputValue(inputValue) {\n      return this.isEmptyInputValue(this.getTrimmedInputValue(inputValue));\n    }\n\n    isEmptyBooleanInputValue(inputValue) {\n      return this.isEmptyInputValue(inputValue) || inputValue === 'false' || inputValue === false || inputValue === '';\n    }\n\n  }\n\n  FormControlUtils.ɵfac = function FormControlUtils_Factory(t) {\n    return new (t || FormControlUtils)();\n  };\n\n  FormControlUtils.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FormControlUtils_Factory() {\n      return new FormControlUtils();\n    },\n    token: FormControlUtils,\n    providedIn: \"root\"\n  });\n  return FormControlUtils;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet NumberFormatter = /*#__PURE__*/(() => {\n  class NumberFormatter {\n    constructor(preferences, formUtils, locale) {\n      this.preferences = preferences;\n      this.formUtils = formUtils;\n      this.locale = locale;\n    }\n\n    toUserFormat(value) {\n      if (isVoid(value) || value === '') {\n        return '';\n      }\n\n      const formatted = formatNumber(Number(value), this.locale);\n      return this.replaceSeparators(formatted);\n    }\n\n    toInternalFormat(value) {\n      if (!value) {\n        return value;\n      }\n\n      const decimalSymbol = this.getDecimalsSymbol() || '.';\n      const groupSymbol = this.getGroupSymbol() || ',';\n      let decimalSymbolRegex = new RegExp(decimalSymbol, 'g');\n\n      if (decimalSymbol === '.') {\n        decimalSymbolRegex = new RegExp('\\\\.', 'g');\n      }\n\n      let groupSymbolRegex = new RegExp(groupSymbol, 'g');\n\n      if (groupSymbol === '.') {\n        groupSymbolRegex = new RegExp('\\\\.', 'g');\n      }\n\n      value = value.replace(groupSymbolRegex, 'group_separator');\n      value = value.replace(decimalSymbolRegex, 'decimal_separator');\n      value = value.replace(/decimal_separator/g, '.');\n      value = value.replace(/group_separator/g, '');\n      return value;\n    }\n\n    getFloatUserFormatPattern() {\n      const group = this.getGroupSymbol();\n      const decimals = this.getDecimalsSymbol();\n      let pattern = '^(';\n      pattern += '(\\\\d{1,3}(\\\\' + group + '\\\\d{3})*(\\\\' + decimals + '\\\\d+)?)|';\n      pattern += '\\\\d*|';\n      pattern += '(\\\\d+(\\\\' + decimals + '\\\\d+)?)|';\n      pattern += '(\\\\d+(\\\\.\\\\d+)?)';\n      pattern += ')$';\n      return pattern;\n    }\n\n    getIntUserFormatPattern() {\n      const group = this.getGroupSymbol();\n      let pattern = '^(';\n      pattern += '(\\\\d{1,3}(\\\\' + group + '\\\\d{3})*)|';\n      pattern += '\\\\d*';\n      pattern += ')$';\n      return pattern;\n    }\n\n    getGroupSymbol() {\n      const separator = this.preferences.getUserPreference('num_grp_sep');\n\n      if (separator) {\n        return separator;\n      }\n\n      return ',';\n    }\n\n    getDecimalsSymbol() {\n      const separator = this.preferences.getUserPreference('dec_sep');\n\n      if (separator) {\n        return separator;\n      }\n\n      return '.';\n    }\n\n    replaceSeparators(transformed) {\n      if (!transformed) {\n        return transformed;\n      }\n\n      transformed = transformed.replace(/,/g, 'group_separator');\n      transformed = transformed.replace(/\\./g, 'decimal_separator');\n      const decimalSymbol = this.getDecimalsSymbol() || '.';\n      const groupSymbol = this.getGroupSymbol() || ',';\n      transformed = transformed.replace(/decimal_separator/g, decimalSymbol);\n      transformed = transformed.replace(/group_separator/g, groupSymbol);\n      return transformed;\n    }\n\n    validateIntUserFormat(inputValue) {\n      const trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);\n\n      if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {\n        return false;\n      }\n\n      const regex = new RegExp(this.getIntUserFormatPattern());\n\n      if (regex.test(trimmedInputValue)) {\n        return false;\n      }\n    }\n\n    validateFloatUserFormat(inputValue) {\n      const trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);\n\n      if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {\n        return false;\n      }\n\n      const regex = new RegExp(this.getFloatUserFormatPattern());\n      return !regex.test(trimmedInputValue);\n    }\n\n  }\n\n  NumberFormatter.ɵfac = function NumberFormatter_Factory(t) {\n    return new (t || NumberFormatter)(ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(FormControlUtils), ɵngcc0.ɵɵinject(LOCALE_ID));\n  };\n\n  NumberFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NumberFormatter_Factory() {\n      return new NumberFormatter(i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(FormControlUtils), i0.ɵɵinject(i0.LOCALE_ID));\n    },\n    token: NumberFormatter,\n    providedIn: \"root\"\n  });\n  return NumberFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DatetimeFormatter = /*#__PURE__*/(() => {\n  class DatetimeFormatter {\n    constructor(preferences, formUtils, locale) {\n      this.preferences = preferences;\n      this.formUtils = formUtils;\n      this.locale = locale;\n      this.format$ = combineLatest([this.preferences.userPreferences$]).pipe(map(() => {\n        const date = this.getDateFormat();\n        const time = this.getTimeFormat();\n        return {\n          date,\n          time\n        };\n      }));\n    }\n\n    getDateFormat() {\n      const dateFormatPreference = this.preferences.getUserPreference('date_format');\n\n      if (dateFormatPreference) {\n        return dateFormatPreference;\n      }\n\n      return this.getInternalTimeFormat();\n    }\n\n    getTimeFormat() {\n      const timeFormatPreference = this.preferences.getUserPreference('time_format');\n\n      if (timeFormatPreference) {\n        let format = timeFormatPreference;\n\n        if (format.includes('aaaaaa')) {\n          format = format.replace('aaaaaa', 'aaaaa\\'m\\'');\n        }\n\n        return format;\n      }\n\n      return this.getInternalTimeFormat();\n    }\n\n    getDateTimeFormat() {\n      const dateFormat = this.getDateFormat();\n      const timeFormat = this.getTimeFormat();\n      return dateFormat + ' ' + timeFormat;\n    }\n\n    getInternalDateFormat() {\n      return 'yyyy-MM-dd';\n    }\n\n    getInternalTimeFormat() {\n      return 'HH:mm:ss';\n    }\n\n    getInternalDateTimeFormat() {\n      const dateFormat = this.getInternalDateFormat();\n      const timeFormat = this.getInternalTimeFormat();\n      return dateFormat + ' ' + timeFormat;\n    }\n\n    getInternalFormat() {\n      return this.getInternalDateTimeFormat();\n    }\n\n    getUserFormat() {\n      return this.getDateTimeFormat();\n    }\n\n    toUserFormat(dateString, options) {\n      const fromFormat = options && options.fromFormat || '';\n      return dateString ? this.formatDateTime(dateString, this.getUserFormat(), fromFormat) : '';\n    }\n\n    toInternalFormat(dateString, options) {\n      const fromFormat = options && options.fromFormat || '';\n      return dateString ? this.formatDateTime(dateString, this.getInternalFormat(), fromFormat) : '';\n    }\n\n    formatDateTime(dateString, format, fromFormat = '') {\n      const dateTime = this.toDateTime(dateString, fromFormat);\n\n      if (!dateTime.isValid) {\n        return dateString;\n      }\n\n      return formatDate(dateTime.toJSDate(), format, this.locale);\n    }\n\n    toDateTime(datetimeString, fromFormat = '') {\n      if (!datetimeString) {\n        return DateTime.invalid('empty');\n      }\n\n      if (fromFormat) {\n        return DateTime.fromFormat(datetimeString, fromFormat);\n      }\n\n      let dateTime = this.fromUserFormat(datetimeString);\n\n      if (!dateTime.isValid) {\n        dateTime = this.fromInternalFormat(datetimeString);\n      }\n\n      return dateTime;\n    }\n\n    userDateTimeFormatToStruct(datetime) {\n      if (!datetime) {\n        return null;\n      }\n\n      const dateTime = this.toDateTime(datetime);\n\n      if (!dateTime.isValid) {\n        return null;\n      }\n\n      return {\n        date: {\n          day: dateTime.day,\n          month: dateTime.month,\n          year: dateTime.year\n        },\n        time: {\n          hour: dateTime.hour,\n          minute: dateTime.minute,\n          second: dateTime.second\n        }\n      };\n    }\n\n    userDateFormatToStruct(datetime) {\n      if (!datetime) {\n        return null;\n      }\n\n      const dateTime = this.toDateTime(datetime);\n\n      if (!dateTime.isValid) {\n        return null;\n      }\n\n      return {\n        day: dateTime.day,\n        month: dateTime.month,\n        year: dateTime.year\n      };\n    }\n\n    userTimeFormatToStruct(datetime) {\n      if (!datetime) {\n        return null;\n      }\n\n      const dateTime = this.toDateTime(datetime);\n\n      if (!dateTime.isValid) {\n        return null;\n      }\n\n      return {\n        hour: dateTime.hour,\n        minute: dateTime.minute,\n        second: dateTime.second\n      };\n    }\n\n    fromUserFormat(datetime) {\n      datetime = datetime.toString();\n      datetime = datetime.replace('a', 'A');\n      datetime = datetime.replace('p', 'P');\n      datetime = datetime.replace('m', 'M');\n      let format = this.getUserFormat();\n      format = format.replace('aaaaa\\'m\\'', 'a');\n      return DateTime.fromFormat(datetime, format);\n    }\n\n    fromInternalFormat(datetime) {\n      const format = this.getInternalFormat();\n      return DateTime.fromFormat(datetime.toString(), format);\n    }\n\n    validateUserFormat(inputValue) {\n      const trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);\n\n      if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {\n        return false;\n      }\n\n      const dateTime = this.fromUserFormat(trimmedInputValue);\n      return !dateTime.isValid;\n    }\n\n  }\n\n  DatetimeFormatter.ɵfac = function DatetimeFormatter_Factory(t) {\n    return new (t || DatetimeFormatter)(ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(FormControlUtils), ɵngcc0.ɵɵinject(LOCALE_ID));\n  };\n\n  DatetimeFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DatetimeFormatter_Factory() {\n      return new DatetimeFormatter(i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(FormControlUtils), i0.ɵɵinject(i0.LOCALE_ID));\n    },\n    token: DatetimeFormatter,\n    providedIn: \"root\"\n  });\n  return DatetimeFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CurrencyFormatter = /*#__PURE__*/(() => {\n  class CurrencyFormatter {\n    constructor(preferences, numberFormatter, locale) {\n      this.preferences = preferences;\n      this.numberFormatter = numberFormatter;\n      this.locale = locale;\n    }\n\n    toUserFormat(value, options = null) {\n      if (isVoid(value) || value === '') {\n        return '';\n      }\n\n      const symbol = options && options.symbol || this.getSymbol();\n      const code = options && options.code || this.getCode();\n      let digits = null;\n\n      if (options && options.digits !== null && isFinite(options.digits)) {\n        digits = options.digits;\n      }\n\n      const digitsInfo = this.getDigitsInfo(digits);\n      let formatted;\n\n      if (options && options.mode === 'edit') {\n        formatted = formatNumber(Number(value), this.locale, digitsInfo);\n        return this.replaceSeparators(formatted);\n      }\n\n      formatted = formatCurrency(Number(value), this.locale, symbol, code, digitsInfo);\n      return this.replaceSeparators(formatted);\n    }\n\n    toInternalFormat(value) {\n      if (!value) {\n        return '';\n      }\n\n      const transformed = value.replace(this.getSymbol(), '');\n      return this.numberFormatter.toInternalFormat(transformed);\n    }\n\n    getCurrencyFormat() {\n      const currencyFormat = this.preferences.getUserPreference('currency');\n\n      if (currencyFormat) {\n        return currencyFormat;\n      }\n\n      return this.getDefaultFormat();\n    }\n\n    getDefaultFormat() {\n      return {\n        iso4217: 'USD',\n        name: 'US Dollars',\n        symbol: '$'\n      };\n    }\n\n    getCode() {\n      return this.getCurrencyFormat().iso4217;\n    }\n\n    getSymbol() {\n      return this.getCurrencyFormat().symbol;\n    }\n\n    getDigits() {\n      const digits = this.preferences.getUserPreference('default_currency_significant_digits');\n\n      if (digits) {\n        return digits;\n      }\n\n      return 2;\n    }\n\n    getDigitsInfo(definedDigits) {\n      let digitInfo = '1.2-2';\n      let digits = this.getDigits();\n\n      if (definedDigits !== null && isFinite(definedDigits)) {\n        digits = definedDigits;\n      }\n\n      if (digits !== null && isFinite(digits)) {\n        if (digits < 1) {\n          digitInfo = '1.0-0';\n        } else {\n          digitInfo = `1.${digits}-${digits}`;\n        }\n      }\n\n      return digitInfo;\n    }\n\n    replaceSeparators(transformed) {\n      return this.numberFormatter.replaceSeparators(transformed);\n    }\n\n  }\n\n  CurrencyFormatter.ɵfac = function CurrencyFormatter_Factory(t) {\n    return new (t || CurrencyFormatter)(ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(NumberFormatter), ɵngcc0.ɵɵinject(LOCALE_ID));\n  };\n\n  CurrencyFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CurrencyFormatter_Factory() {\n      return new CurrencyFormatter(i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(NumberFormatter), i0.ɵɵinject(i0.LOCALE_ID));\n    },\n    token: CurrencyFormatter,\n    providedIn: \"root\"\n  });\n  return CurrencyFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateFormatter = /*#__PURE__*/(() => {\n  class DateFormatter extends DatetimeFormatter {\n    getInternalFormat() {\n      return this.getInternalDateFormat();\n    }\n\n    getUserFormat() {\n      return this.getDateFormat();\n    }\n\n  }\n\n  DateFormatter.ɵfac = /*@__PURE__*/function () {\n    let ɵDateFormatter_BaseFactory;\n    return function DateFormatter_Factory(t) {\n      return (ɵDateFormatter_BaseFactory || (ɵDateFormatter_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(DateFormatter)))(t || DateFormatter);\n    };\n  }();\n\n  DateFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DateFormatter_Factory() {\n      return new DateFormatter(i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(FormControlUtils), i0.ɵɵinject(i0.LOCALE_ID));\n    },\n    token: DateFormatter,\n    providedIn: \"root\"\n  });\n  return DateFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PhoneFormatter = /*#__PURE__*/(() => {\n  class PhoneFormatter {\n    constructor(formUtils) {\n      this.formUtils = formUtils;\n    }\n\n    toUserFormat(value) {\n      return value;\n    }\n\n    toInternalFormat(value) {\n      return value;\n    }\n\n    getUserFormatPattern() {\n      return '^([\\\\+]?|00)((([(]{0,1}\\\\s*[0-9]{1,4}\\\\s*[)]{0,1})\\\\s*)*|([\\\\-\\\\s\\\\./0-9])*)+$';\n    }\n\n    validateUserFormat(inputValue) {\n      const trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);\n\n      if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {\n        return false;\n      }\n\n      const regex = new RegExp(this.getUserFormatPattern());\n      return !regex.test(trimmedInputValue);\n    }\n\n  }\n\n  PhoneFormatter.ɵfac = function PhoneFormatter_Factory(t) {\n    return new (t || PhoneFormatter)(ɵngcc0.ɵɵinject(FormControlUtils));\n  };\n\n  PhoneFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function PhoneFormatter_Factory() {\n      return new PhoneFormatter(i0.ɵɵinject(FormControlUtils));\n    },\n    token: PhoneFormatter,\n    providedIn: \"root\"\n  });\n  return PhoneFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DataTypeFormatter = /*#__PURE__*/(() => {\n  class DataTypeFormatter {\n    constructor(currencyFormatter, numberFormatter, dateFormatter, datetimeFormatter, phoneFormatter) {\n      this.currencyFormatter = currencyFormatter;\n      this.numberFormatter = numberFormatter;\n      this.dateFormatter = dateFormatter;\n      this.datetimeFormatter = datetimeFormatter;\n      this.phoneFormatter = phoneFormatter;\n      this.map = {};\n      this.map.int = numberFormatter;\n      this.map.float = numberFormatter;\n      this.map.date = dateFormatter;\n      this.map.datetime = datetimeFormatter;\n      this.map.currency = currencyFormatter;\n      this.map.phone = phoneFormatter;\n    }\n\n    toUserFormat(dataType, value, options) {\n      if (!dataType) {\n        return value;\n      }\n\n      const formatter = this.map[dataType];\n\n      if (!formatter) {\n        return value;\n      }\n\n      return formatter.toUserFormat(value, options);\n    }\n\n    toInternalFormat(dataType, value) {\n      if (!dataType) {\n        return value;\n      }\n\n      const formatter = this.map[dataType];\n\n      if (!formatter) {\n        return value;\n      }\n\n      return formatter.toInternalFormat(value);\n    }\n\n  }\n\n  DataTypeFormatter.ɵfac = function DataTypeFormatter_Factory(t) {\n    return new (t || DataTypeFormatter)(ɵngcc0.ɵɵinject(CurrencyFormatter), ɵngcc0.ɵɵinject(NumberFormatter), ɵngcc0.ɵɵinject(DateFormatter), ɵngcc0.ɵɵinject(DatetimeFormatter), ɵngcc0.ɵɵinject(PhoneFormatter));\n  };\n\n  DataTypeFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DataTypeFormatter_Factory() {\n      return new DataTypeFormatter(i0.ɵɵinject(CurrencyFormatter), i0.ɵɵinject(NumberFormatter), i0.ɵɵinject(DateFormatter), i0.ɵɵinject(DatetimeFormatter), i0.ɵɵinject(PhoneFormatter));\n    },\n    token: DataTypeFormatter,\n    providedIn: \"root\"\n  });\n  return DataTypeFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicLabelService = /*#__PURE__*/(() => {\n  class DynamicLabelService {\n    constructor(typeFormatter, language) {\n      this.typeFormatter = typeFormatter;\n      this.language = language;\n      this.valuePipes = {};\n      this.fieldPipes = {};\n\n      this.valuePipes.int = value => this.valueTypeFormat('int', value);\n\n      this.valuePipes.float = value => this.valueTypeFormat('float', value);\n\n      this.valuePipes.date = value => this.valueTypeFormat('date', value);\n\n      this.valuePipes.datetime = value => this.valueTypeFormat('datetime', value);\n\n      this.valuePipes.currency = value => this.valueTypeFormat('currency', value);\n\n      this.valuePipes.phone = value => this.valueTypeFormat('phone', value);\n\n      this.fieldPipes.int = value => this.fieldTypeFormat('int', value);\n\n      this.fieldPipes.float = value => this.fieldTypeFormat('float', value);\n\n      this.fieldPipes.date = value => this.fieldTypeFormat('date', value);\n\n      this.fieldPipes.datetime = value => this.fieldTypeFormat('datetime', value);\n\n      this.fieldPipes.currency = value => this.fieldTypeFormat('currency', value);\n\n      this.fieldPipes.phone = value => this.fieldTypeFormat('phone', value);\n\n      this.fieldPipes.enum = value => this.enumFormat(value);\n\n      this.fieldPipes.dynamicenum = value => this.enumFormat(value);\n\n      this.fieldPipes.multienum = value => this.multiEnumFormat(value);\n    }\n\n    addValuePipe(name, processor) {\n      this.valuePipes[name] = processor;\n    }\n\n    addFieldPipe(name, processor) {\n      this.fieldPipes[name] = processor;\n    }\n\n    parse(template, context, fields) {\n      if (!template) {\n        return template;\n      }\n\n      const regex = /({{[\\s\\S]+?}})/g;\n      const matches = template.match(regex);\n\n      if (!matches || matches.length < 1) {\n        return template;\n      }\n\n      let parsedTemplate = template;\n      const module = context && context.module || '';\n      matches.forEach(regexMatch => {\n        if (!parsedTemplate.includes(regexMatch)) {\n          return;\n        }\n\n        let filter = '';\n        let value = '';\n        let source = 'context';\n        let parts = [];\n        let variableName = '' + regexMatch;\n        variableName = variableName.replace('{{', '');\n        variableName = variableName.replace('}}', '');\n        variableName = variableName.trim();\n        let path = variableName;\n\n        if (variableName.includes('|')) {\n          const [name, pipe] = variableName.split('|');\n          filter = pipe.trim();\n          variableName = name.trim();\n          path = name.trim();\n        }\n\n        if (variableName.includes('.')) {\n          parts = variableName.split('.');\n          source = parts[0];\n          variableName = parts[1];\n        }\n\n        let sourceValues = context;\n\n        if (source === 'fields') {\n          sourceValues = fields;\n        }\n\n        if (!sourceValues || !(variableName in sourceValues)) {\n          parsedTemplate = parsedTemplate.replace(regexMatch, value);\n          return;\n        }\n\n        if (source === 'fields') {\n          const field = fields[variableName];\n\n          if (!field) {\n            parsedTemplate = parsedTemplate.replace(regexMatch, '');\n            return;\n          }\n\n          if (parts[2] && parts[2] === 'value' && field.type in this.fieldPipes) {\n            value = this.fieldPipes[field.type](field);\n            parsedTemplate = parsedTemplate.replace(regexMatch, value);\n            return;\n          }\n\n          if (parts[2] && parts[2] === 'label') {\n            value = this.getFieldLabel(field.labelKey, module);\n            parsedTemplate = parsedTemplate.replace(regexMatch, value);\n            return;\n          }\n\n          value = get({\n            fields\n          }, path, '');\n          parsedTemplate = parsedTemplate.replace(regexMatch, value);\n          return;\n        }\n\n        value = get({\n          context\n        }, path, '');\n\n        if (filter in this.valuePipes) {\n          value = this.valuePipes[filter](value);\n        }\n\n        parsedTemplate = parsedTemplate.replace(regexMatch, value);\n      });\n      return parsedTemplate;\n    }\n\n    valueTypeFormat(type, value) {\n      return this.typeFormatter.toUserFormat(type, value);\n    }\n\n    fieldTypeFormat(type, field) {\n      return this.typeFormatter.toUserFormat(type, field.value);\n    }\n\n    enumFormat(field) {\n      if (isVoid(field.definition.options) || isVoid(field.value)) {\n        return '';\n      }\n\n      return this.language.getListLabel(field.definition.options, field.value);\n    }\n\n    multiEnumFormat(field) {\n      if (isVoid(field.definition.options) || isVoid(field.valueList) || field.valueList.length < 1) {\n        return '';\n      }\n\n      const result = [];\n      field.valueList.forEach(value => {\n        if (isVoid(value)) {\n          return;\n        }\n\n        result.push(this.language.getListLabel(field.definition.options, value));\n      });\n      return result.join(', ');\n    }\n\n    getFieldLabel(labelKey, module = '') {\n      if (isVoid(labelKey)) {\n        return '';\n      }\n\n      return this.language.getFieldLabel(labelKey, module);\n    }\n\n  }\n\n  DynamicLabelService.ɵfac = function DynamicLabelService_Factory(t) {\n    return new (t || DynamicLabelService)(ɵngcc0.ɵɵinject(DataTypeFormatter), ɵngcc0.ɵɵinject(LanguageStore));\n  };\n\n  DynamicLabelService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DynamicLabelService_Factory() {\n      return new DynamicLabelService(i0.ɵɵinject(DataTypeFormatter), i0.ɵɵinject(LanguageStore));\n    },\n    token: DynamicLabelService,\n    providedIn: \"root\"\n  });\n  return DynamicLabelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicLabelComponent = /*#__PURE__*/(() => {\n  class DynamicLabelComponent {\n    constructor(dynamicLabels, language) {\n      this.dynamicLabels = dynamicLabels;\n      this.language = language;\n      this.template = '';\n      this.labelKey = '';\n      this.context = {};\n      this.fields = {};\n      this.module = null;\n      this.parsedLabel = '';\n    }\n\n    ngOnInit() {\n      this.vm$ = this.language.vm$.pipe(tap(() => {\n        if (this.labelKey) {\n          this.template = this.language.getFieldLabel(this.labelKey, this.module);\n        }\n\n        this.parseLabel();\n      }));\n    }\n\n    ngOnChanges(changes) {\n      if (changes.template || changes.context || changes.labelKey || changes.fields) {\n        this.parseLabel();\n      }\n    }\n\n    parseLabel() {\n      this.parsedLabel = this.dynamicLabels.parse(this.template, this.context, this.fields);\n    }\n\n  }\n\n  DynamicLabelComponent.ɵfac = function DynamicLabelComponent_Factory(t) {\n    return new (t || DynamicLabelComponent)(ɵngcc0.ɵɵdirectiveInject(DynamicLabelService), ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  DynamicLabelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DynamicLabelComponent,\n    selectors: [[\"scrm-dynamic-label\"]],\n    inputs: {\n      template: \"template\",\n      labelKey: \"labelKey\",\n      context: \"context\",\n      fields: \"fields\",\n      module: \"module\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"dynamic-label\"]],\n    template: function DynamicLabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DynamicLabelComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return DynamicLabelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicLabelModule = /*#__PURE__*/(() => {\n  class DynamicLabelModule {}\n\n  DynamicLabelModule.ɵfac = function DynamicLabelModule_Factory(t) {\n    return new (t || DynamicLabelModule)();\n  };\n\n  DynamicLabelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DynamicLabelModule\n  });\n  DynamicLabelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DynamicLabelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicLabelModule, {\n    declarations: function () {\n      return [DynamicLabelComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [DynamicLabelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseFieldGridComponent = /*#__PURE__*/(() => {\n  class BaseFieldGridComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.special = false;\n      this.actions = false;\n      this.appendActions = false;\n      this.labelDisplay = 'top';\n      this.labelClass = {};\n      this.inputClass = {};\n      this.rowClass = {};\n      this.colClass = {};\n      this.sizeMap = {\n        handset: 1,\n        tablet: 2,\n        web: 3,\n        wide: 4\n      };\n      this.baseColClass = {\n        col: true,\n        'form-group': true,\n        'm-1': true\n      };\n      this.baseRowClass = {\n        'form-row': true,\n        'align-items-center': true\n      };\n      this.baseLabelClass = {\n        'col-form-label-sm': true,\n        'mb-0': true\n      };\n      this.baseInputClass = {\n        'form-control': true,\n        'form-control-sm': true\n      };\n      this.currentSize = 'web';\n      this.subscriptions = [];\n    }\n\n    ngOnInit() {\n      this.initScreenSizeObserver(this.breakpointObserver);\n      this.buildGrid();\n      this.colClass = Object.assign(Object.assign({}, this.colClass), this.baseColClass);\n      this.rowClass = Object.assign(Object.assign({}, this.rowClass), this.baseRowClass);\n      this.labelClass = Object.assign(Object.assign({}, this.labelClass), this.baseLabelClass);\n      this.inputClass = Object.assign(Object.assign({}, this.inputClass), this.baseInputClass);\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    get colNumber() {\n      const max = this.sizeMap[this.currentSize];\n\n      if (this.maxColumns && max > this.maxColumns) {\n        return this.maxColumns;\n      }\n\n      return max;\n    }\n\n    addSpecialSlots(grid) {\n      if (!grid || grid.length === 0) {\n        return;\n      }\n\n      const neededSlots = this.getNeededExtraSlots();\n\n      if (neededSlots.length === 0) {\n        return;\n      }\n\n      if (this.colNumber === 1) {\n        neededSlots.reverse().forEach(type => {\n          const newRow = {\n            cols: []\n          };\n          this.fillRow(newRow);\n          grid.push(newRow);\n          newRow.cols[0][type] = true;\n        });\n      } else if (this.appendActions === true) {\n        const lastRow = grid[grid.length - 1];\n        const place = this.colNumber - 1;\n        neededSlots.forEach(type => {\n          lastRow.cols[place][type] = true;\n        });\n      } else {\n        const lastNeededCol = this.colNumber - neededSlots.length;\n        let lastRow = grid[grid.length - 1];\n\n        if (lastRow.cols[lastNeededCol].field) {\n          lastRow = {\n            cols: []\n          };\n          this.fillRow(lastRow);\n          grid.push(lastRow);\n        }\n\n        let place = this.colNumber - 1;\n        neededSlots.forEach(type => {\n          lastRow.cols[place][type] = true;\n          place--;\n        });\n      }\n    }\n\n    getNeededExtraSlots() {\n      const neededSlots = [];\n\n      if (this.actions) {\n        neededSlots.push('actionSlot');\n      }\n\n      if (this.special) {\n        neededSlots.push('specialSlot');\n      }\n\n      return neededSlots;\n    }\n\n    fillRow(row) {\n      const len = row.cols.length;\n\n      for (let i = len; i < this.colNumber; i++) {\n        row.cols.push({});\n      }\n    }\n\n    initScreenSizeObserver(breakpointObserver) {\n      this.subscriptions.push(breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe(result => {\n        if (result.matches) {\n          this.currentSize = 'handset';\n          this.buildGrid();\n        }\n      }));\n      this.subscriptions.push(breakpointObserver.observe([Breakpoints.TabletPortrait]).subscribe(result => {\n        if (result.matches) {\n          this.currentSize = 'tablet';\n          this.buildGrid();\n        }\n      }));\n      this.subscriptions.push(breakpointObserver.observe([Breakpoints.TabletLandscape, Breakpoints.WebPortrait, Breakpoints.WebLandscape]).subscribe(result => {\n        if (result.matches) {\n          this.currentSize = 'web';\n          this.buildGrid();\n        }\n      }));\n      this.subscriptions.push(breakpointObserver.observe([Breakpoints.XLarge]).subscribe(result => {\n        if (result.matches) {\n          this.currentSize = 'wide';\n          this.buildGrid();\n        }\n      }));\n    }\n\n  }\n\n  BaseFieldGridComponent.ɵfac = function BaseFieldGridComponent_Factory(t) {\n    return new (t || BaseFieldGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver));\n  };\n\n  BaseFieldGridComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BaseFieldGridComponent,\n    inputs: {\n      special: \"special\",\n      actions: \"actions\",\n      appendActions: \"appendActions\",\n      labelDisplay: \"labelDisplay\",\n      labelClass: \"labelClass\",\n      inputClass: \"inputClass\",\n      rowClass: \"rowClass\",\n      colClass: \"colClass\",\n      sizeMap: \"sizeMap\",\n      maxColumns: \"maxColumns\"\n    }\n  });\n  return BaseFieldGridComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldGridComponent = /*#__PURE__*/(() => {\n  class FieldGridComponent extends BaseFieldGridComponent {\n    constructor(breakpointObserver) {\n      super(breakpointObserver);\n      this.breakpointObserver = breakpointObserver;\n      this.fieldMode = 'detail';\n    }\n\n    ngOnChanges() {\n      this.buildGrid();\n    }\n\n    buildGrid() {\n      const grid = [];\n\n      if (!this.fields || this.fields.length === 0) {\n        this.fieldGrid = [];\n        return;\n      }\n\n      let col = 0;\n      let row = {\n        cols: []\n      };\n      grid.push(row);\n      this.fields.forEach(field => {\n        if (col >= this.colNumber) {\n          col = 0;\n          row = {\n            cols: []\n          };\n          grid.push(row);\n        }\n\n        row.cols.push({\n          field\n        });\n        col++;\n      });\n      const lastRow = grid[grid.length - 1];\n\n      if (col < this.colNumber) {\n        this.fillRow(lastRow);\n      }\n\n      this.addSpecialSlots(grid);\n      this.fieldGrid = grid;\n    }\n\n  }\n\n  FieldGridComponent.ɵfac = function FieldGridComponent_Factory(t) {\n    return new (t || FieldGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver));\n  };\n\n  FieldGridComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FieldGridComponent,\n    selectors: [[\"scrm-field-grid\"]],\n    inputs: {\n      fieldMode: \"fieldMode\",\n      fields: \"fields\",\n      record: \"record\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c6,\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [1, \"d-flex\"], [3, \"pr-3\", 4, \"ngIf\"], [3, \"flex-grow-1\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"labelKey\", \"ngClass\", 4, \"ngIf\"], [3, \"labelKey\", \"ngClass\"], [3, \"field\", \"klass\", \"mode\", \"record\", \"type\"]],\n    template: function FieldGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"form\");\n        ɵngcc0.ɵɵtemplate(1, FieldGridComponent_div_1_Template, 2, 2, \"div\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.fieldGrid);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc3.NgIf, LabelComponent, FieldComponent];\n    },\n    encapsulation: 2\n  });\n  return FieldGridComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseActionManager = /*#__PURE__*/(() => {\n  class BaseActionManager {\n    constructor() {\n      this.actions = {\n        edit: {},\n        create: {},\n        list: {},\n        detail: {},\n        massupdate: {},\n        filter: {}\n      };\n    }\n\n    run(action, mode, data) {\n      if (!this.actions || !this.actions[mode] || !this.actions[mode][action.key]) {\n        return;\n      }\n\n      this.actions[mode][action.key].run(data, action);\n    }\n\n    getHandler(action, mode) {\n      let handlerKey = action.key;\n\n      if (action && action.asyncProcess) {\n        handlerKey = 'async-process';\n      }\n\n      if (!this.actions || !this.actions[mode] || !this.actions[mode][handlerKey]) {\n        return null;\n      }\n\n      return this.actions[mode][handlerKey];\n    }\n\n    addHandler(action, mode, handler) {\n      if (!this.actions[mode]) {\n        this.actions[mode] = {};\n      }\n\n      this.actions[mode][action.key] = handler;\n    }\n\n  }\n\n  BaseActionManager.ɵfac = function BaseActionManager_Factory(t) {\n    return new (t || BaseActionManager)();\n  };\n\n  BaseActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BaseActionManager_Factory() {\n      return new BaseActionManager();\n    },\n    token: BaseActionManager,\n    providedIn: \"root\"\n  });\n  return BaseActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass FieldLogicActionHandler extends ActionHandler {\n  shouldDisplay(data) {\n    return true;\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DisplayTypeAction = /*#__PURE__*/(() => {\n  class DisplayTypeAction extends FieldLogicActionHandler {\n    constructor() {\n      super();\n      this.key = 'displayType';\n      this.modes = ['edit', 'detail', 'list', 'create', 'massupdate', 'filter'];\n    }\n\n    run(data, action) {\n      const record = data.record;\n      const field = data.field;\n\n      if (!record || !field) {\n        return;\n      }\n\n      const activeOnFields = action.params && action.params.activeOnFields || {};\n      const relatedFields = Object.keys(activeOnFields);\n      const activeOnAttributes = action.params && action.params.activeOnAttributes || {};\n      const relatedAttributesFields = Object.keys(activeOnAttributes);\n\n      if (!relatedFields.length && !relatedAttributesFields.length) {\n        return;\n      }\n\n      const targetDisplay = action.params && action.params.targetDisplayType;\n\n      if (!targetDisplay) {\n        return;\n      }\n\n      let isActive = this.isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes);\n      let display = data.field.defaultDisplay;\n\n      if (isActive) {\n        display = targetDisplay;\n      }\n\n      data.field.display = display;\n      const resetOn = action.params && action.params.resetOn || 'none';\n\n      if (resetOn === display) {\n        if (data.field.valueList && data.field.valueList.length) {\n          data.field.valueList = [];\n        }\n\n        if (data.field.value) {\n          data.field.value = '';\n        }\n      }\n    }\n    /**\n     * Check if any of the configured values is currently set\n     * @param {array} relatedFields\n     * @param {object} record\n     * @param {object} activeOnFields\n     * @param {array} relatedAttributesFields\n     * @param {object} activeOnAttributes\n     */\n\n\n    isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes) {\n      let isActive = this.areFieldsActive(relatedFields, record, activeOnFields);\n\n      if (!isActive) {\n        isActive = this.areAttributesActive(relatedAttributesFields, record, activeOnAttributes);\n      }\n\n      return isActive;\n    }\n    /**\n     * Are attributes active\n     * @param {array} relatedAttributesFields\n     * @param {object} record\n     * @param {object} activeOnAttributes\n     */\n\n\n    areAttributesActive(relatedAttributesFields, record, activeOnAttributes) {\n      return relatedAttributesFields.some(fieldKey => {\n        const fields = record.fields;\n        const field = fields && record.fields[fieldKey] || null;\n        const attributes = activeOnAttributes[fieldKey] && Object.keys(activeOnAttributes[fieldKey]);\n\n        if (!field || !attributes || !attributes.length) {\n          return;\n        }\n\n        return attributes.some(attributeKey => {\n          const activeValues = activeOnAttributes[fieldKey][attributeKey];\n          const attribute = field.attributes && field.attributes[attributeKey];\n\n          if (!activeValues || !activeValues.length || !attribute) {\n            return;\n          }\n\n          return this.isValueActive(attribute, activeValues);\n        });\n      });\n    }\n    /**\n     * Are fields active\n     * @param {array} relatedFields\n     * @param {object} record\n     * @param {object} activeOnFields\n     */\n\n\n    areFieldsActive(relatedFields, record, activeOnFields) {\n      return relatedFields.some(fieldKey => {\n        const fields = record.fields;\n        const field = fields && record.fields[fieldKey] || null;\n        const activeValues = activeOnFields[fieldKey];\n\n        if (!field || !activeValues || !activeValues.length) {\n          return;\n        }\n\n        return this.isValueActive(field, activeValues);\n      });\n    }\n    /**\n     * Is value active\n     * @param {object} field\n     * @param {array} activeValues\n     */\n\n\n    isValueActive(field, activeValues) {\n      let isActive = false;\n\n      if (field.valueList && field.valueList.length) {\n        field.valueList.some(value => {\n          return activeValues.some(activeValue => {\n            if (activeValue === value) {\n              isActive = true;\n              return true;\n            }\n          });\n        });\n        return isActive;\n      }\n\n      if (field.value) {\n        activeValues.some(activeValue => {\n          if (activeValue === field.value) {\n            isActive = true;\n          }\n        });\n      }\n\n      return isActive;\n    }\n\n  }\n\n  DisplayTypeAction.ɵfac = function DisplayTypeAction_Factory(t) {\n    return new (t || DisplayTypeAction)();\n  };\n\n  DisplayTypeAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DisplayTypeAction_Factory() {\n      return new DisplayTypeAction();\n    },\n    token: DisplayTypeAction,\n    providedIn: \"root\"\n  });\n  return DisplayTypeAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailPrimarySelectAction = /*#__PURE__*/(() => {\n  class EmailPrimarySelectAction extends FieldLogicActionHandler {\n    constructor() {\n      super();\n      this.key = 'emailPrimarySelect';\n      this.modes = ['edit', 'create', 'massupdate'];\n    }\n\n    run(data, action) {\n      const record = data.record;\n      const field = data.field;\n\n      if (!record || !field) {\n        return;\n      }\n\n      const items = field.items;\n\n      if (!field || !items || !items.length) {\n        return;\n      }\n\n      const activeItems = items.filter(item => !(item && item.attributes && item.attributes.deleted)); // Auto-select the primary, only when the number of displayed rows equal to one;\n      // This logic applies either via Add or Remove\n\n      if (activeItems && activeItems.length !== 1) {\n        return;\n      }\n\n      const item = activeItems[0];\n      const emailField = item.fields && item.fields['email-fields'] || {};\n      const primary = emailField.attributes && emailField.attributes['primary_address'] || null;\n\n      if (primary && !isTrue(primary.value)) {\n        primary.value = 'true';\n        primary.formControl.setValue('true'); // re-validate the parent form-control after value update\n\n        emailField.formControl.updateValueAndValidity({\n          onlySelf: true,\n          emitEvent: true\n        });\n      }\n    }\n\n  }\n\n  EmailPrimarySelectAction.ɵfac = function EmailPrimarySelectAction_Factory(t) {\n    return new (t || EmailPrimarySelectAction)();\n  };\n\n  EmailPrimarySelectAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function EmailPrimarySelectAction_Factory() {\n      return new EmailPrimarySelectAction();\n    },\n    token: EmailPrimarySelectAction,\n    providedIn: \"root\"\n  });\n  return EmailPrimarySelectAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst requiredValidator = utils => control => {\n  if (utils.isEmptyTrimmedInputValue(control.value)) {\n    return {\n      required: {\n        required: true,\n        message: {\n          labelKey: 'LBL_VALIDATION_ERROR_REQUIRED',\n          context: {\n            value: control.value\n          }\n        }\n      }\n    };\n  }\n\n  return null;\n};\n\nconst booleanRequiredValidator = utils => control => {\n  if (utils.isEmptyBooleanInputValue(control.value)) {\n    return {\n      required: {\n        required: true,\n        message: {\n          labelKey: 'LBL_VALIDATION_ERROR_REQUIRED',\n          context: {\n            value: control.value\n          }\n        }\n      }\n    };\n  }\n\n  return null;\n};\n\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator {\n    constructor(utils) {\n      this.utils = utils;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return !!viewField.fieldDefinition.required;\n    }\n\n    getValidator(viewField) {\n      if (viewField.type === 'boolean') {\n        return [booleanRequiredValidator(this.utils)];\n      }\n\n      return [requiredValidator(this.utils)];\n    }\n\n  }\n\n  RequiredValidator.ɵfac = function RequiredValidator_Factory(t) {\n    return new (t || RequiredValidator)(ɵngcc0.ɵɵinject(FormControlUtils));\n  };\n\n  RequiredValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RequiredValidator_Factory() {\n      return new RequiredValidator(i0.ɵɵinject(FormControlUtils));\n    },\n    token: RequiredValidator,\n    providedIn: \"root\"\n  });\n  return RequiredValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RequiredAction = /*#__PURE__*/(() => {\n  class RequiredAction extends FieldLogicActionHandler {\n    constructor(requiredValidator) {\n      super();\n      this.requiredValidator = requiredValidator;\n      this.key = 'required';\n      this.modes = ['edit', 'create', 'massupdate', 'filter'];\n    }\n\n    run(data, action) {\n      const record = data.record;\n      const field = data.field;\n\n      if (!record || !field) {\n        return;\n      }\n\n      const activeOnFields = action.params && action.params.activeOnFields || {};\n      const relatedFields = Object.keys(activeOnFields);\n      const activeOnAttributes = action.params && action.params.activeOnAttributes || {};\n      const relatedAttributesFields = Object.keys(activeOnAttributes);\n\n      if (!relatedFields.length && !relatedAttributesFields.length) {\n        return;\n      }\n\n      const isActive = this.isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes);\n      let required = false;\n      let validators = [...(data.field.validators || [])];\n\n      if (isActive) {\n        required = true;\n        validators = validators.concat(this.requiredValidator.getValidator(field));\n      }\n\n      data.field.definition.required = required;\n      data.field.formControl.setValidators(validators);\n      data.field.formControl.updateValueAndValidity({\n        onlySelf: true,\n        emitEvent: true\n      });\n      record.formGroup.updateValueAndValidity({\n        onlySelf: true,\n        emitEvent: true\n      });\n    }\n    /**\n     * Check if any of the configured values is currently set\n     * @param {array} relatedFields\n     * @param {object} record\n     * @param {object} activeOnFields\n     * @param {array} relatedAttributesFields\n     * @param {object} activeOnAttributes\n     */\n\n\n    isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes) {\n      let isActive = this.areFieldsActive(relatedFields, record, activeOnFields);\n\n      if (!isActive) {\n        isActive = this.areAttributesActive(relatedAttributesFields, record, activeOnAttributes);\n      }\n\n      return isActive;\n    }\n    /**\n     * Are attributes active\n     * @param {array} relatedAttributesFields\n     * @param {object} record\n     * @param {object} activeOnAttributes\n     */\n\n\n    areAttributesActive(relatedAttributesFields, record, activeOnAttributes) {\n      return relatedAttributesFields.some(fieldKey => {\n        const fields = record.fields;\n        const field = fields && record.fields[fieldKey] || null;\n        const attributes = activeOnAttributes[fieldKey] && Object.keys(activeOnAttributes[fieldKey]);\n\n        if (!field || !attributes || !attributes.length) {\n          return;\n        }\n\n        return attributes.some(attributeKey => {\n          const activeValues = activeOnAttributes[fieldKey][attributeKey];\n          const attribute = field.attributes && field.attributes[attributeKey];\n\n          if (!activeValues || !activeValues.length || !attribute) {\n            return;\n          }\n\n          return this.isValueActive(attribute, activeValues);\n        });\n      });\n    }\n    /**\n     * Are fields active\n     * @param {array} relatedFields\n     * @param {object} record\n     * @param {object} activeOnFields\n     */\n\n\n    areFieldsActive(relatedFields, record, activeOnFields) {\n      return relatedFields.some(fieldKey => {\n        const fields = record.fields;\n        const field = fields && record.fields[fieldKey] || null;\n        const activeValues = activeOnFields[fieldKey];\n\n        if (!field || !activeValues || !activeValues.length) {\n          return;\n        }\n\n        return this.isValueActive(field, activeValues);\n      });\n    }\n    /**\n     * Is value active\n     * @param {object} field\n     * @param {array} activeValues\n     */\n\n\n    isValueActive(field, activeValues) {\n      let isActive = false;\n\n      if (field.valueList && field.valueList.length) {\n        field.valueList.some(value => {\n          return activeValues.some(activeValue => {\n            if (activeValue === value) {\n              isActive = true;\n              return true;\n            }\n          });\n        });\n        return isActive;\n      }\n\n      if (field.value) {\n        activeValues.some(activeValue => {\n          if (activeValue === field.value) {\n            isActive = true;\n          }\n        });\n      }\n\n      return isActive;\n    }\n\n  }\n\n  RequiredAction.ɵfac = function RequiredAction_Factory(t) {\n    return new (t || RequiredAction)(ɵngcc0.ɵɵinject(RequiredValidator));\n  };\n\n  RequiredAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RequiredAction_Factory() {\n      return new RequiredAction(i0.ɵɵinject(RequiredValidator));\n    },\n    token: RequiredAction,\n    providedIn: \"root\"\n  });\n  return RequiredAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CurrencyService = /*#__PURE__*/(() => {\n  class CurrencyService {\n    constructor(config, preferences) {\n      this.config = config;\n      this.preferences = preferences;\n    }\n\n    getFieldCurrencyValue(field, record) {\n      const isBase = this.isBase(field);\n      const currencyId = this.getCurrencyId(record);\n\n      if (!isBase && currencyId !== null) {\n        return field.value;\n      }\n\n      const value = parseFloat(field.value);\n\n      if (!isFinite(value)) {\n        return field.value;\n      }\n\n      const userCurrency = this.getUserCurrency();\n      return this.baseToCurrency(userCurrency.id, value).toString();\n    }\n\n    baseToCurrency(currencyId, value) {\n      const conversionRate = this.getConversionRate(currencyId);\n\n      if (!isFinite(conversionRate)) {\n        return value;\n      }\n\n      return this.round(multiply(value, conversionRate));\n    }\n\n    currencyToBase(currencyId, value) {\n      const conversionRate = this.getConversionRate(currencyId);\n\n      if (!isFinite(conversionRate)) {\n        return value;\n      }\n\n      return this.round(divide(value, conversionRate));\n    }\n\n    round(value) {\n      const precision = this.getPrecision();\n      return round(value, precision);\n    }\n\n    getCurrencyId(record) {\n      var _a, _b, _c;\n\n      return (_c = (_b = (_a = record === null || record === void 0 ? void 0 : record.fields) === null || _a === void 0 ? void 0 : _a.currency_id) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : null;\n    }\n\n    isBase(field) {\n      var _a, _b;\n\n      return (_b = (_a = field === null || field === void 0 ? void 0 : field.metadata) === null || _a === void 0 ? void 0 : _a.isBaseCurrency) !== null && _b !== void 0 ? _b : false;\n    }\n\n    getCurrency(id) {\n      var _a;\n\n      const currencies = this.config.getConfigValue('currencies');\n      return (_a = currencies[id]) !== null && _a !== void 0 ? _a : [];\n    }\n\n    getBaseCurrency() {\n      return this.config.getConfigValue('currency');\n    }\n\n    getUserCurrency() {\n      return this.preferences.getUserPreference('currency');\n    }\n\n    getPrecision() {\n      const userPrecision = parseInt(this.preferences.getUserPreference('default_currency_significant_digits'));\n\n      if (isFinite(userPrecision)) {\n        return userPrecision;\n      }\n\n      const systemPrecision = parseInt(this.config.getConfigValue('default_currency_significant_digits'));\n\n      if (isFinite(systemPrecision)) {\n        return systemPrecision;\n      }\n\n      return 0;\n    }\n\n    getConversionRate(id) {\n      const currency = this.getCurrency(id);\n      return parseFloat(currency['conversion_rate']);\n    }\n\n    getCode(id) {\n      return this.getCurrency(id).iso4217;\n    }\n\n    getSymbol(id) {\n      return this.getCurrency(id).symbol;\n    }\n\n  }\n\n  CurrencyService.ɵfac = function CurrencyService_Factory(t) {\n    return new (t || CurrencyService)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  CurrencyService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CurrencyService_Factory() {\n      return new CurrencyService(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(UserPreferenceStore));\n    },\n    token: CurrencyService,\n    providedIn: \"root\"\n  });\n  return CurrencyService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UpdateBaseCurrencyAction = /*#__PURE__*/(() => {\n  class UpdateBaseCurrencyAction extends FieldLogicActionHandler {\n    constructor(currencyService) {\n      super();\n      this.currencyService = currencyService;\n      this.key = 'update-base-currency';\n      this.modes = ['edit', 'create', 'massupdate', 'filter'];\n    }\n\n    run(data, action) {\n      var _a, _b, _c, _d, _e, _f;\n\n      const record = data.record;\n      const field = data.field;\n\n      if (!record || !field) {\n        return;\n      }\n\n      const currencyIdFieldName = (_a = action.params.currencyIdField) !== null && _a !== void 0 ? _a : 'currency_id';\n      const currencyFieldName = (_b = action.params.currencyField) !== null && _b !== void 0 ? _b : 'amount';\n      const currencyId = (_d = (_c = record === null || record === void 0 ? void 0 : record.fields[currencyIdFieldName]) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : null;\n      let value = parseFloat((_f = (_e = record === null || record === void 0 ? void 0 : record.fields[currencyFieldName]) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : null);\n\n      if (!isFinite(value)) {\n        return;\n      }\n\n      if (currencyId === null) {\n        this.updateValue(field, value, record);\n      }\n\n      const baseValue = this.currencyService.currencyToBase(currencyId, value);\n\n      if (!isFinite(baseValue)) {\n        return;\n      }\n\n      this.updateValue(field, baseValue, record);\n    }\n\n    updateValue(field, baseValue, record) {\n      field.value = baseValue.toString();\n      field.formControl.setValue(baseValue.toString()); // re-validate the parent form-control after value update\n\n      record.formGroup.updateValueAndValidity({\n        onlySelf: true,\n        emitEvent: true\n      });\n    }\n\n  }\n\n  UpdateBaseCurrencyAction.ɵfac = function UpdateBaseCurrencyAction_Factory(t) {\n    return new (t || UpdateBaseCurrencyAction)(ɵngcc0.ɵɵinject(CurrencyService));\n  };\n\n  UpdateBaseCurrencyAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function UpdateBaseCurrencyAction_Factory() {\n      return new UpdateBaseCurrencyAction(i0.ɵɵinject(CurrencyService));\n    },\n    token: UpdateBaseCurrencyAction,\n    providedIn: \"root\"\n  });\n  return UpdateBaseCurrencyAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UpdateCurrencyAction = /*#__PURE__*/(() => {\n  class UpdateCurrencyAction extends FieldLogicActionHandler {\n    constructor(currencyService) {\n      super();\n      this.currencyService = currencyService;\n      this.key = 'update-currency';\n      this.modes = ['edit', 'create', 'massupdate', 'filter'];\n    }\n\n    run(data, action) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n      const record = data.record;\n      const field = data.field;\n      const isBaseCurrency = (_c = (_b = (_a = field === null || field === void 0 ? void 0 : field.definition) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.isBaseCurrency) !== null && _c !== void 0 ? _c : false;\n\n      if (!record || !field || isBaseCurrency) {\n        return;\n      }\n\n      const currencyIdFieldName = (_d = action.params.currencyIdField) !== null && _d !== void 0 ? _d : 'currency_id';\n      const baseCurrencyFieldName = (_e = action.params.baseCurrencyField) !== null && _e !== void 0 ? _e : 'amount_usdollar';\n      const currencyId = (_g = (_f = record === null || record === void 0 ? void 0 : record.fields[currencyIdFieldName]) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : null;\n      let value = parseFloat((_h = field === null || field === void 0 ? void 0 : field.value) !== null && _h !== void 0 ? _h : null);\n      let baseValue = parseFloat((_k = (_j = record === null || record === void 0 ? void 0 : record.fields[baseCurrencyFieldName]) === null || _j === void 0 ? void 0 : _j.value) !== null && _k !== void 0 ? _k : null);\n\n      if (!isFinite(value) || !isFinite(baseValue) || currencyId === null) {\n        return;\n      }\n\n      const newValue = this.currencyService.baseToCurrency(currencyId, baseValue);\n\n      if (!isFinite(newValue)) {\n        return;\n      }\n\n      this.updateValue(field, newValue, record);\n    }\n\n    updateValue(field, value, record) {\n      field.value = value.toString();\n      field.formControl.setValue(value.toString()); // re-validate the parent form-control after value update\n\n      record.formGroup.updateValueAndValidity({\n        onlySelf: true,\n        emitEvent: true\n      });\n    }\n\n  }\n\n  UpdateCurrencyAction.ɵfac = function UpdateCurrencyAction_Factory(t) {\n    return new (t || UpdateCurrencyAction)(ɵngcc0.ɵɵinject(CurrencyService));\n  };\n\n  UpdateCurrencyAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function UpdateCurrencyAction_Factory() {\n      return new UpdateCurrencyAction(i0.ɵɵinject(CurrencyService));\n    },\n    token: UpdateCurrencyAction,\n    providedIn: \"root\"\n  });\n  return UpdateCurrencyAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UpdateFlexRelateModuleAction = /*#__PURE__*/(() => {\n  class UpdateFlexRelateModuleAction extends FieldLogicActionHandler {\n    constructor() {\n      super();\n      this.key = 'update-flex-relate-module';\n      this.modes = ['edit', 'create', 'massupdate', 'filter'];\n    }\n\n    run(data, action) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      const record = data.record;\n      const field = data.field;\n\n      if (!record || !field) {\n        return;\n      }\n\n      const typeField = (_a = field.definition.type_name) !== null && _a !== void 0 ? _a : '';\n\n      if (typeField === '') {\n        return;\n      }\n\n      const type = (_c = (_b = record === null || record === void 0 ? void 0 : record.fields[typeField]) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : '';\n      const fieldModule = (_e = (_d = field === null || field === void 0 ? void 0 : field.definition) === null || _d === void 0 ? void 0 : _d.module) !== null && _e !== void 0 ? _e : '';\n\n      if (type !== fieldModule) {\n        field.definition.module = (_g = (_f = record === null || record === void 0 ? void 0 : record.fields[typeField]) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : '';\n        this.updateValue(field, {}, '', record);\n      }\n    }\n\n    updateValue(field, valueObject, value, record) {\n      field.value = value;\n      field.valueObject = valueObject;\n      field.formControl.setValue(value); // re-validate the parent form-control after value update\n\n      record.formGroup.updateValueAndValidity({\n        onlySelf: true,\n        emitEvent: true\n      });\n    }\n\n  }\n\n  UpdateFlexRelateModuleAction.ɵfac = function UpdateFlexRelateModuleAction_Factory(t) {\n    return new (t || UpdateFlexRelateModuleAction)();\n  };\n\n  UpdateFlexRelateModuleAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function UpdateFlexRelateModuleAction_Factory() {\n      return new UpdateFlexRelateModuleAction();\n    },\n    token: UpdateFlexRelateModuleAction,\n    providedIn: \"root\"\n  });\n  return UpdateFlexRelateModuleAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldLogicManager = /*#__PURE__*/(() => {\n  class FieldLogicManager extends BaseActionManager {\n    constructor(displayType, emailPrimarySelectAction, required, updateBaseCurrency, updateCurrency, updateFlexRelateModule) {\n      super();\n      displayType.modes.forEach(mode => this.actions[mode][displayType.key] = displayType);\n      emailPrimarySelectAction.modes.forEach(mode => this.actions[mode][emailPrimarySelectAction.key] = emailPrimarySelectAction);\n      required.modes.forEach(mode => this.actions[mode][required.key] = required);\n      updateBaseCurrency.modes.forEach(mode => this.actions[mode][updateBaseCurrency.key] = updateBaseCurrency);\n      updateCurrency.modes.forEach(mode => this.actions[mode][updateCurrency.key] = updateCurrency);\n      updateFlexRelateModule.modes.forEach(mode => this.actions[mode][updateFlexRelateModule.key] = updateFlexRelateModule);\n    }\n    /**\n     * Run logic for the given field\n     * @param {object} field\n     * @param {object} mode\n     * @param {object} record\n     */\n\n\n    runLogic(field, mode, record) {\n      if (!field.logic) {\n        return;\n      }\n\n      const actions = Object.keys(field.logic).map(key => field.logic[key]);\n      const modeActions = this.parseModeActions(actions, mode);\n      const context = {\n        record,\n        field,\n        module: record.module\n      };\n      modeActions.forEach(action => {\n        this.runAction(action, mode, context);\n      });\n    }\n    /**\n     * Run the action using given context\n     * @param action\n     * @param mode\n     * @param context\n     */\n\n\n    runAction(action, mode, context = null) {\n      this.runFrontEndAction(action, mode, context);\n    }\n    /**\n     * Run front end action\n     * @param {object} action\n     * @param {object} mode\n     * @param {object} context\n     */\n\n\n    runFrontEndAction(action, mode, context = null) {\n      const data = this.buildActionData(action, context);\n      this.run(action, mode, data);\n    }\n    /**\n     * Get module name\n     * @param {object} context\n     */\n\n\n    getModuleName(context) {\n      return context.module;\n    }\n\n    buildActionData(action, context) {\n      return {\n        field: context.field,\n        record: context && context.record || null\n      };\n    }\n    /**\n     * Parse mode actions\n     * @param declaredActions\n     * @param mode\n     */\n\n\n    parseModeActions(declaredActions, mode) {\n      if (!declaredActions) {\n        return [];\n      }\n\n      const availableActions = {\n        list: [],\n        detail: [],\n        edit: [],\n        create: [],\n        massupdate: [],\n        filter: []\n      };\n\n      if (declaredActions && declaredActions.length) {\n        declaredActions.forEach(action => {\n          if (!action.modes || !action.modes.length) {\n            return;\n          }\n\n          action.modes.forEach(actionMode => {\n            if (!availableActions[actionMode] && !action.asyncProcess) {\n              return;\n            }\n\n            availableActions[actionMode].push(action);\n          });\n        });\n      }\n\n      const actions = [];\n      availableActions[mode].forEach(action => {\n        actions.push(action);\n      });\n      return actions;\n    }\n\n  }\n\n  FieldLogicManager.ɵfac = function FieldLogicManager_Factory(t) {\n    return new (t || FieldLogicManager)(ɵngcc0.ɵɵinject(DisplayTypeAction), ɵngcc0.ɵɵinject(EmailPrimarySelectAction), ɵngcc0.ɵɵinject(RequiredAction), ɵngcc0.ɵɵinject(UpdateBaseCurrencyAction), ɵngcc0.ɵɵinject(UpdateCurrencyAction), ɵngcc0.ɵɵinject(UpdateFlexRelateModuleAction));\n  };\n\n  FieldLogicManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FieldLogicManager_Factory() {\n      return new FieldLogicManager(i0.ɵɵinject(DisplayTypeAction), i0.ɵɵinject(EmailPrimarySelectAction), i0.ɵɵinject(RequiredAction), i0.ɵɵinject(UpdateBaseCurrencyAction), i0.ɵɵinject(UpdateCurrencyAction), i0.ɵɵinject(UpdateFlexRelateModuleAction));\n    },\n    token: FieldLogicManager,\n    providedIn: \"root\"\n  });\n  return FieldLogicManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseFieldComponent = /*#__PURE__*/(() => {\n  class BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.klass = null;\n      this.dependentFields = [];\n      this.dependentAttributes = [];\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.baseInit();\n    }\n\n    baseInit() {\n      this.initDependencyHandlers();\n    }\n    /**\n     * Calculate and init dependency handlers\n     */\n\n\n    initDependencyHandlers() {\n      if (!this.record) {\n        return;\n      }\n\n      const fieldKeys = this.record.fields && Object.keys(this.record.fields) || [];\n\n      if (fieldKeys.length > 1) {\n        this.calculateDependentFields(fieldKeys);\n\n        if (this.field.valueChanges$ && (this.dependentFields.length || this.dependentAttributes.length)) {\n          this.subs.push(this.field.valueChanges$.pipe(debounceTime(500)).subscribe(() => {\n            this.dependentFields.forEach(fieldKey => {\n              const field = this.record.fields[fieldKey] || null;\n\n              if (!field) {\n                return;\n              }\n\n              this.logic.runLogic(field, this.mode, this.record);\n            });\n            this.dependentAttributes.forEach(dependency => {\n              const field = this.record.fields[dependency.field] || {};\n              const attribute = field && field.attributes && field.attributes[dependency.attribute] || null;\n\n              if (!attribute) {\n                return;\n              }\n\n              this.logic.runLogic(attribute, this.mode, this.record);\n            });\n          }));\n        }\n      }\n    }\n    /**\n     * Calculate dependent fields\n     * @param {array} fieldKeys\n     */\n\n\n    calculateDependentFields(fieldKeys) {\n      fieldKeys.forEach(key => {\n        if (this.field.source === 'field') {\n          this.addFieldDependency(key, this.dependentFields, this.dependentAttributes);\n          return;\n        }\n\n        if (this.field.source === 'attribute') {\n          this.addAttributeDependency(key, this.dependentFields, this.dependentAttributes);\n          return;\n        }\n      });\n    }\n    /**\n     * Add field dependency\n     * @param {string} fieldKey\n     * @param {array} dependentFields\n     * @param {object} dependentAttributes\n     */\n\n\n    addFieldDependency(fieldKey, dependentFields, dependentAttributes) {\n      const field = this.record.fields[fieldKey];\n      const name = this.field.name || this.field.definition.name || '';\n\n      if (fieldKey === name || !field) {\n        return;\n      }\n\n      if (field.fieldDependencies && field.fieldDependencies.length && this.isDependencyField(field.fieldDependencies)) {\n        dependentFields.push(fieldKey);\n      }\n\n      const attributeKeys = field.attributes && Object.keys(field.attributes) || [];\n      attributeKeys.forEach(attributeKey => {\n        const attribute = field.attributes[attributeKey];\n\n        if (!attribute || !attribute.fieldDependencies || !attribute.fieldDependencies.length) {\n          return;\n        }\n\n        if (this.isDependencyField(attribute.fieldDependencies)) {\n          dependentAttributes.push({\n            field: fieldKey,\n            attribute: attributeKey\n          });\n        }\n      });\n    }\n    /**\n     * Check if field is dependency\n     * @param dependencies\n     * @returns {boolean}\n     */\n\n\n    isDependencyField(dependencies) {\n      const name = this.field.name || this.field.definition.name || '';\n      return dependencies.some(dependency => name === dependency);\n    }\n    /**\n     * Add attribute dependency\n     * @param {string} fieldKey\n     * @param {array} dependentFields\n     * @param {object} dependentAttributes\n     */\n\n\n    addAttributeDependency(fieldKey, dependentFields, dependentAttributes) {\n      const field = this.record.fields[fieldKey];\n      const name = this.field.name || this.field.definition.name || '';\n\n      if (fieldKey === name || !field) {\n        return;\n      }\n\n      if (field.attributeDependencies && field.attributeDependencies.length && this.isDependencyAttribute(field.attributeDependencies)) {\n        dependentFields.push(fieldKey);\n      }\n\n      const attributeKeys = field.attributes && Object.keys(field.attributes) || [];\n      attributeKeys.forEach(attributeKey => {\n        const attribute = field.attributes[attributeKey];\n\n        if (!attribute || !attribute.attributeDependencies || !attribute.attributeDependencies.length) {\n          return;\n        }\n\n        if (this.isDependencyAttribute(attribute.attributeDependencies)) {\n          dependentAttributes.push({\n            field: fieldKey,\n            attribute: attributeKey\n          });\n        }\n      });\n    }\n    /**\n     * Check if attribute is dependency\n     * @param {object} attributeDependencies\n     * @returns {boolean}\n     */\n\n\n    isDependencyAttribute(attributeDependencies) {\n      const parentKey = this.field.parentKey || '';\n      const name = this.field.name || this.field.definition.name || '';\n      return attributeDependencies.some(dependency => parentKey === dependency.field && name === dependency.attribute);\n    }\n\n    subscribeValueChanges() {\n      if (this.field && this.field.formControl) {\n        this.subs.push(this.field.formControl.valueChanges.subscribe(value => {\n          if (!isVoid(value)) {\n            value = value.trim();\n          } else {\n            value = '';\n          }\n\n          if (this.typeFormatter && this.field.type) {\n            value = this.typeFormatter.toInternalFormat(this.field.type, value);\n          }\n\n          this.setFieldValue(value);\n        }));\n      }\n    }\n\n    setFieldValue(newValue) {\n      this.field.value = newValue;\n    }\n\n    unsubscribeAll() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  BaseFieldComponent.ɵfac = function BaseFieldComponent_Factory(t) {\n    return new (t || BaseFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseFieldComponent,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      klass: \"klass\",\n      mode: \"mode\",\n      field: \"field\",\n      record: \"record\",\n      parent: \"parent\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function BaseFieldComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PhoneDetailFieldComponent = /*#__PURE__*/(() => {\n  class PhoneDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    getTelLink(phone) {\n      if (!phone) {\n        return null;\n      }\n\n      return 'tel:' + this.getUnFormatted(phone);\n    }\n\n    getUnFormatted(phone) {\n      if (!phone) {\n        return '';\n      }\n\n      return phone.replace(/\\s+/g, '');\n    }\n\n  }\n\n  PhoneDetailFieldComponent.ɵfac = function PhoneDetailFieldComponent_Factory(t) {\n    return new (t || PhoneDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  PhoneDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PhoneDetailFieldComponent,\n    selectors: [[\"scrm-phone-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"href\"]],\n    template: function PhoneDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"href\", ctx.getTelLink(ctx.field.value), ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.field.value);\n      }\n    },\n    encapsulation: 2\n  });\n  return PhoneDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseEnumComponent = /*#__PURE__*/(() => {\n  class BaseEnumComponent extends BaseFieldComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.selectedValues = [];\n      this.valueLabel = '';\n      this.options = [];\n      this.subs = [];\n      this.isDynamicEnum = false;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n\n      if (this.field.metadata && this.field.metadata.options$) {\n        this.subs.push(this.field.metadata.options$.subscribe(options => {\n          this.buildProvidedOptions(options);\n          this.initValue();\n        }));\n        return;\n      }\n\n      if (this.field.definition && this.field.definition.options) {\n        this.subs.push(this.languages.vm$.subscribe(strings => {\n          this.buildAppStringListOptions(strings.appListStrings);\n          this.initValue();\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.isDynamicEnum = false;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getInvalidClass() {\n      if (this.field.formControl && this.field.formControl.invalid && this.field.formControl.touched) {\n        return 'is-invalid';\n      }\n\n      return '';\n    }\n\n    buildProvidedOptions(options) {\n      this.options = options;\n      this.optionsMap = {};\n      options.forEach(option => {\n        this.optionsMap[option.value] = option.label;\n      });\n    }\n\n    buildAppStringListOptions(appStrings) {\n      this.optionsMap = {};\n      this.addExtraOptions();\n\n      if (appStrings && this.field.definition.options && appStrings[this.field.definition.options]) {\n        const options = appStrings[this.field.definition.options];\n\n        if (this.options && Object.keys(this.options)) {\n          this.optionsMap = Object.assign(Object.assign({}, this.optionsMap), options);\n        }\n      }\n\n      this.buildOptionsArray(appStrings);\n    }\n\n    addExtraOptions() {\n      const extraOptions = this.field.metadata && this.field.metadata.extraOptions || [];\n      extraOptions.forEach(item => {\n        if (isVoid(item.value)) {\n          return;\n        }\n\n        let label = item.label || '';\n\n        if (item.labelKey) {\n          label = this.languages.getFieldLabel(item.labelKey);\n        }\n\n        this.optionsMap[item.value] = label;\n      });\n    }\n\n    buildOptionsArray(appStrings) {\n      this.options = [];\n      Object.keys(this.optionsMap).forEach(key => {\n        this.options.push({\n          value: key,\n          label: this.optionsMap[key]\n        });\n      });\n\n      if (this.isDynamicEnum) {\n        this.buildDynamicEnumOptions(appStrings);\n      }\n    }\n\n    initValue() {\n      this.selectedValues = [];\n\n      if (!this.field.value) {\n        this.initEnumDefault();\n        return;\n      }\n\n      if (typeof this.field.value !== 'string') {\n        return;\n      }\n\n      if (!this.optionsMap) {\n        return;\n      }\n\n      if (typeof this.optionsMap[this.field.value] !== 'string') {\n        return;\n      }\n\n      if (this.field.value) {\n        this.valueLabel = this.optionsMap[this.field.value];\n        this.selectedValues.push({\n          value: this.field.value,\n          label: this.valueLabel\n        });\n      }\n    }\n    /**\n     *  Initialize the default value for the enum\n     *\n     *  @returns {void}\n     *  @description set default enum value, if defined in vardefs\n     * */\n\n\n    initEnumDefault() {\n      var _a, _b, _c;\n\n      if (!isEmptyString((_a = this.record) === null || _a === void 0 ? void 0 : _a.id)) {\n        return;\n      }\n\n      let defaultVal = (_c = (_b = this.field) === null || _b === void 0 ? void 0 : _b.definition) === null || _c === void 0 ? void 0 : _c.default;\n\n      if (typeof defaultVal === 'string') {\n        defaultVal = defaultVal.trim();\n      }\n\n      if (!defaultVal) {\n        return;\n      }\n\n      this.selectedValues.push({\n        value: defaultVal,\n        label: this.optionsMap[defaultVal]\n      });\n      this.initEnumDefaultFieldValues(defaultVal);\n    }\n\n    initEnumDefaultFieldValues(defaultVal) {\n      if (this.field.type === 'multienum') {\n        const defaultValues = this.selectedValues.map(option => option.value);\n        this.field.valueList = defaultValues;\n        this.field.formControl.setValue(defaultValues);\n      } else {\n        this.field.value = defaultVal;\n        this.field.formControl.setValue(defaultVal);\n      }\n\n      this.field.formControl.markAsDirty();\n    }\n\n    checkAndInitAsDynamicEnum() {\n      const definition = this.field && this.field.definition || {};\n      const dynamic = definition && definition.dynamic || false;\n      const parentEnumKey = definition && definition.parentenum || '';\n      const fields = this.record && this.record.fields || null;\n\n      if (dynamic && parentEnumKey && fields) {\n        this.isDynamicEnum = true;\n        const parentEnum = fields[parentEnumKey];\n\n        if (parentEnum) {\n          this.subscribeToParentValueChanges(parentEnum);\n        }\n      }\n    }\n\n    buildDynamicEnumOptions(appStrings) {\n      const parentEnum = this.record.fields[this.field.definition.parentenum];\n\n      if (parentEnum) {\n        const parentOptionMap = appStrings[parentEnum.definition.options];\n\n        if (parentOptionMap && Object.keys(parentOptionMap).length !== 0) {\n          this.mappedOptions = this.createParentChildOptionsMap(parentOptionMap, this.options);\n          let parentValues = [];\n\n          if (parentEnum.definition.type === 'multienum') {\n            parentValues = parentEnum.valueList;\n          } else {\n            parentValues.push(parentEnum.value);\n          }\n\n          this.options = this.filterMatchingOptions(parentValues);\n        }\n      }\n    }\n\n    filterMatchingOptions(values) {\n      let filteredOptions = [];\n\n      if (!values || !values.length) {\n        return [];\n      }\n\n      values.forEach(value => {\n        if (!this.mappedOptions[value]) {\n          return;\n        }\n\n        filteredOptions = filteredOptions.concat([...this.mappedOptions[value]]);\n      });\n      return filteredOptions;\n    }\n\n    createParentChildOptionsMap(parentOptions, childOptions) {\n      const mappedOptions = {};\n      Object.keys(parentOptions).forEach(key => {\n        mappedOptions[key] = childOptions.filter(option => String(option.value).startsWith(parentOptions[key]));\n      });\n      return mappedOptions;\n    }\n\n    subscribeToParentValueChanges(parentEnum) {\n      if (parentEnum.formControl) {\n        this.subs.push(parentEnum.formControl.valueChanges.subscribe(values => {\n          if (typeof values === 'string') {\n            values = [values];\n          } // Reset selected values on Form Control\n\n\n          this.field.value = '';\n          this.field.formControl.setValue(''); // Rebuild available enum options\n\n          this.options = this.filterMatchingOptions(values);\n          this.initValue();\n        }));\n      }\n    }\n\n  }\n\n  BaseEnumComponent.ɵfac = function BaseEnumComponent_Factory(t) {\n    return new (t || BaseEnumComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseEnumComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseEnumComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseEnumComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseEnumComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMultiEnumComponent = /*#__PURE__*/(() => {\n  class BaseMultiEnumComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    initValue() {\n      this.selectedValues = [];\n\n      if (!this.field.valueList || this.field.valueList.length < 1) {\n        this.initEnumDefault();\n        return;\n      }\n\n      this.field.valueList.forEach(value => {\n        if (typeof this.optionsMap[value] !== 'string') {\n          return;\n        }\n\n        this.selectedValues.push({\n          value,\n          label: this.optionsMap[value]\n        });\n      });\n    }\n\n  }\n\n  BaseMultiEnumComponent.ɵfac = function BaseMultiEnumComponent_Factory(t) {\n    return new (t || BaseMultiEnumComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseMultiEnumComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMultiEnumComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseMultiEnumComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseMultiEnumComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumFilterFieldComponent = /*#__PURE__*/(() => {\n  class MultiEnumFilterFieldComponent extends BaseMultiEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      this.field.valueList = [];\n\n      if (this.field.criteria.values && this.field.criteria.values.length > 0) {\n        this.field.valueList = this.field.criteria.values;\n      }\n\n      super.ngOnInit();\n    }\n\n    onAdd() {\n      const value = this.selectedValues.map(option => option.value);\n      this.field.valueList = value;\n      this.field.formControl.setValue(value);\n      this.field.formControl.markAsDirty();\n      this.field.criteria.operator = '=';\n      this.field.criteria.values = value;\n      return;\n    }\n\n    onRemove() {\n      let value = this.selectedValues.map(option => option.value);\n\n      if (!value) {\n        value = [];\n      }\n\n      this.field.valueList = value;\n      this.field.formControl.setValue(value);\n      this.field.formControl.markAsDirty();\n      this.field.criteria.operator = '=';\n      this.field.criteria.values = value;\n      setTimeout(() => {\n        this.tag.focus(true, true);\n        this.tag.dropdown.show();\n      }, 200);\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_SELECT_ITEM') || '';\n    }\n\n    selectFirstElement() {\n      const filteredElements = this.tag.dropdown.items;\n\n      if (filteredElements.length !== 0) {\n        const firstElement = filteredElements[0];\n        this.selectedValues.push(firstElement);\n        this.onAdd();\n        this.tag.dropdown.hide();\n      }\n    }\n\n  }\n\n  MultiEnumFilterFieldComponent.ɵfac = function MultiEnumFilterFieldComponent_Factory(t) {\n    return new (t || MultiEnumFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  MultiEnumFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MultiEnumFilterFieldComponent,\n    selectors: [[\"scrm-multienum-filter\"]],\n    viewQuery: function MultiEnumFilterFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 13,\n    consts: [[3, \"ngModel\", \"onlyFromAutocomplete\", \"clearOnBlur\", \"displayBy\", \"identifyBy\", \"placeholder\", \"secondaryPlaceholder\", \"inputClass\", \"ngModelChange\", \"onAdd\", \"onRemove\", \"keyup.enter\"], [\"tag\", \"\"], [3, \"displayBy\", \"identifyBy\", \"showDropdownIfEmpty\", \"keepOpen\", \"autocompleteItems\"]],\n    template: function MultiEnumFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tag-input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function MultiEnumFilterFieldComponent_Template_tag_input_ngModelChange_0_listener($event) {\n          return ctx.selectedValues = $event;\n        })(\"onAdd\", function MultiEnumFilterFieldComponent_Template_tag_input_onAdd_0_listener() {\n          return ctx.onAdd();\n        })(\"onRemove\", function MultiEnumFilterFieldComponent_Template_tag_input_onRemove_0_listener() {\n          return ctx.onRemove();\n        })(\"keyup.enter\", function MultiEnumFilterFieldComponent_Template_tag_input_keyup_enter_0_listener() {\n          return ctx.selectFirstElement();\n        });\n        ɵngcc0.ɵɵelement(2, \"tag-input-dropdown\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedValues)(\"onlyFromAutocomplete\", true)(\"clearOnBlur\", true)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel())(\"inputClass\", ctx.getInvalidClass());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"showDropdownIfEmpty\", true)(\"keepOpen\", false)(\"autocompleteItems\", ctx.options);\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown],\n    encapsulation: 2\n  });\n  return MultiEnumFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EnumDetailFieldComponent = /*#__PURE__*/(() => {\n  class EnumDetailFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  EnumDetailFieldComponent.ɵfac = function EnumDetailFieldComponent_Factory(t) {\n    return new (t || EnumDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  EnumDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: EnumDetailFieldComponent,\n    selectors: [[\"scrm-enum-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function EnumDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.valueLabel, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return EnumDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EnumDetailFieldModule = /*#__PURE__*/(() => {\n  class EnumDetailFieldModule {}\n\n  EnumDetailFieldModule.ɵfac = function EnumDetailFieldModule_Factory(t) {\n    return new (t || EnumDetailFieldModule)();\n  };\n\n  EnumDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: EnumDetailFieldModule\n  });\n  EnumDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return EnumDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EnumDetailFieldModule, {\n    declarations: function () {\n      return [EnumDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [EnumDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseNameComponent = /*#__PURE__*/(() => {\n  class BaseNameComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    getNameField(field, record) {\n      if (!field.value || !record.attributes) {\n        return;\n      }\n\n      const format = field.value.split(' ');\n      const groupField = [];\n      format.forEach(item => {\n        if (record.attributes[item]) {\n          groupField.push(record.attributes[item]);\n        }\n      });\n      return groupField.join(' ');\n    }\n\n  }\n\n  BaseNameComponent.ɵfac = function BaseNameComponent_Factory(t) {\n    return new (t || BaseNameComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseNameComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseNameComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseNameComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseNameComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FullNameDetailFieldsComponent = /*#__PURE__*/(() => {\n  class FullNameDetailFieldsComponent extends BaseNameComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.data = this.getNameField(this.field, this.record);\n    }\n\n  }\n\n  FullNameDetailFieldsComponent.ɵfac = function FullNameDetailFieldsComponent_Factory(t) {\n    return new (t || FullNameDetailFieldsComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  FullNameDetailFieldsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FullNameDetailFieldsComponent,\n    selectors: [[\"scrm-fullname-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function FullNameDetailFieldsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.data, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return FullNameDetailFieldsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FullNameDetailFieldsModule = /*#__PURE__*/(() => {\n  class FullNameDetailFieldsModule {}\n\n  FullNameDetailFieldsModule.ɵfac = function FullNameDetailFieldsModule_Factory(t) {\n    return new (t || FullNameDetailFieldsModule)();\n  };\n\n  FullNameDetailFieldsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FullNameDetailFieldsModule\n  });\n  FullNameDetailFieldsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return FullNameDetailFieldsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FullNameDetailFieldsModule, {\n    declarations: function () {\n      return [FullNameDetailFieldsComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FullNameDetailFieldsComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharDetailFieldComponent = /*#__PURE__*/(() => {\n  class VarcharDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  VarcharDetailFieldComponent.ɵfac = function VarcharDetailFieldComponent_Factory(t) {\n    return new (t || VarcharDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  VarcharDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: VarcharDetailFieldComponent,\n    selectors: [[\"scrm-varchar-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function VarcharDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.field.value, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return VarcharDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UrlDetailFieldComponent = /*#__PURE__*/(() => {\n  class UrlDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    get target() {\n      if (this.field.metadata && this.field.metadata.target) {\n        return this.field.metadata.target;\n      }\n\n      return '_blank';\n    }\n\n  }\n\n  UrlDetailFieldComponent.ɵfac = function UrlDetailFieldComponent_Factory(t) {\n    return new (t || UrlDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  UrlDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: UrlDetailFieldComponent,\n    selectors: [[\"scrm-url-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"target\", \"href\"]],\n    template: function UrlDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵpropertyInterpolate(\"href\", ctx.field.value, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵproperty(\"target\", ctx.target);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.field.value);\n      }\n    },\n    encapsulation: 2\n  });\n  return UrlDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseDateTimeComponent = /*#__PURE__*/(() => {\n  class BaseDateTimeComponent extends BaseFieldComponent {\n    constructor(formatter, typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.vm$ = this.formatter.format$;\n    }\n\n    getDateFormat() {\n      return this.formatter.getDateFormat();\n    }\n\n    getDateTimeFormat() {\n      return this.formatter.getDateTimeFormat();\n    }\n\n  }\n\n  BaseDateTimeComponent.ɵfac = function BaseDateTimeComponent_Factory(t) {\n    return new (t || BaseDateTimeComponent)(ɵngcc0.ɵɵdirectiveInject(DatetimeFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseDateTimeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseDateTimeComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseDateTimeComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseDateTimeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateDetailFieldComponent = /*#__PURE__*/(() => {\n  class DateDetailFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, typeFormatter, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  DateDetailFieldComponent.ɵfac = function DateDetailFieldComponent_Factory(t) {\n    return new (t || DateDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DatetimeFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateDetailFieldComponent,\n    selectors: [[\"scrm-date-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"]],\n    template: function DateDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DateDetailFieldComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe, ɵngcc3.DatePipe],\n    encapsulation: 2\n  });\n  return DateDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateDetailFieldModule = /*#__PURE__*/(() => {\n  class DateDetailFieldModule {}\n\n  DateDetailFieldModule.ɵfac = function DateDetailFieldModule_Factory(t) {\n    return new (t || DateDetailFieldModule)();\n  };\n\n  DateDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateDetailFieldModule\n  });\n  DateDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DateDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateDetailFieldModule, {\n    declarations: function () {\n      return [DateDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [DateDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FormatCurrencyPipe = /*#__PURE__*/(() => {\n  class FormatCurrencyPipe {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    transform(value, options = null) {\n      return this.formatter.toUserFormat(value, options);\n    }\n\n  }\n\n  FormatCurrencyPipe.ɵfac = function FormatCurrencyPipe_Factory(t) {\n    return new (t || FormatCurrencyPipe)(ɵngcc0.ɵɵdirectiveInject(CurrencyFormatter, 16));\n  };\n\n  FormatCurrencyPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"formatCurrency\",\n    type: FormatCurrencyPipe,\n    pure: true\n  });\n  return FormatCurrencyPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FormatCurrencyModule = /*#__PURE__*/(() => {\n  class FormatCurrencyModule {}\n\n  FormatCurrencyModule.ɵfac = function FormatCurrencyModule_Factory(t) {\n    return new (t || FormatCurrencyModule)();\n  };\n\n  FormatCurrencyModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormatCurrencyModule\n  });\n  FormatCurrencyModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return FormatCurrencyModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormatCurrencyModule, {\n    declarations: function () {\n      return [FormatCurrencyPipe];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FormatCurrencyPipe];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseNumberComponent = /*#__PURE__*/(() => {\n  class BaseNumberComponent extends BaseFieldComponent {\n    constructor(userPreferences, systemConfig, typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.userPreferences = userPreferences;\n      this.systemConfig = systemConfig;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.preferences$ = this.userPreferences.userPreferences$;\n      this.configs$ = this.systemConfig.configs$;\n      this.vm$ = combineLatest([this.configs$, this.preferences$]).pipe(map(([configs, preferences]) => ({\n        configs,\n        preferences\n      })));\n    }\n\n    get format() {\n      if (!this.field.metadata) {\n        return true;\n      }\n\n      return this.field.metadata.format !== false;\n    }\n\n  }\n\n  BaseNumberComponent.ɵfac = function BaseNumberComponent_Factory(t) {\n    return new (t || BaseNumberComponent)(ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseNumberComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseNumberComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseNumberComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseNumberComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CurrencyDetailFieldComponent = /*#__PURE__*/(() => {\n  class CurrencyDetailFieldComponent extends BaseNumberComponent {\n    constructor(userPreferences, systemConfig, typeFormatter, logic, currencyService) {\n      super(userPreferences, systemConfig, typeFormatter, logic);\n      this.userPreferences = userPreferences;\n      this.systemConfig = systemConfig;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.currencyService = currencyService;\n    }\n\n    getOptions() {\n      let options = {};\n\n      if (this.field && this.field.metadata && this.field.metadata.digits !== null && isFinite(this.field.metadata.digits)) {\n        options = {\n          digits: this.field.metadata.digits\n        };\n      }\n\n      const isBase = this.currencyService.isBase(this.field);\n      let currencyId = this.currencyService.getCurrencyId(this.record);\n\n      if (isBase || currencyId === null) {\n        currencyId = this.currencyService.getUserCurrency().id;\n      }\n\n      options.symbol = this.currencyService.getSymbol(currencyId);\n      options.code = this.currencyService.getCode(currencyId);\n      return options;\n    }\n\n    getCurrencyValue() {\n      return this.currencyService.getFieldCurrencyValue(this.field, this.record);\n    }\n\n  }\n\n  CurrencyDetailFieldComponent.ɵfac = function CurrencyDetailFieldComponent_Factory(t) {\n    return new (t || CurrencyDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(CurrencyService));\n  };\n\n  CurrencyDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CurrencyDetailFieldComponent,\n    selectors: [[\"scrm-currency-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"]],\n    template: function CurrencyDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CurrencyDetailFieldComponent_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe, FormatCurrencyPipe],\n    encapsulation: 2\n  });\n  return CurrencyDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CurrencyDetailFieldModule = /*#__PURE__*/(() => {\n  class CurrencyDetailFieldModule {}\n\n  CurrencyDetailFieldModule.ɵfac = function CurrencyDetailFieldModule_Factory(t) {\n    return new (t || CurrencyDetailFieldModule)();\n  };\n\n  CurrencyDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CurrencyDetailFieldModule\n  });\n  CurrencyDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormatCurrencyModule]]\n  });\n  return CurrencyDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CurrencyDetailFieldModule, {\n    declarations: function () {\n      return [CurrencyDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormatCurrencyModule];\n    },\n    exports: function () {\n      return [CurrencyDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TextDetailFieldComponent = /*#__PURE__*/(() => {\n  class TextDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    get rows() {\n      if (this.field.metadata && this.field.metadata.rows) {\n        return this.field.metadata.rows;\n      }\n\n      return 6;\n    }\n\n    get cols() {\n      if (this.field.metadata && this.field.metadata.cols) {\n        return this.field.metadata.cols;\n      }\n\n      return 20;\n    }\n\n  }\n\n  TextDetailFieldComponent.ɵfac = function TextDetailFieldComponent_Factory(t) {\n    return new (t || TextDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  TextDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TextDetailFieldComponent,\n    selectors: [[\"scrm-text-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[\"readonly\", \"\", 3, \"rows\", \"cols\", \"ngClass\"]],\n    template: function TextDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"textarea\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"rows\", ctx.rows)(\"cols\", ctx.cols)(\"ngClass\", ctx.klass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.field.value);\n      }\n    },\n    directives: [ɵngcc3.NgClass],\n    encapsulation: 2\n  });\n  return TextDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharEditFieldComponent = /*#__PURE__*/(() => {\n  class VarcharEditFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n  }\n\n  VarcharEditFieldComponent.ɵfac = function VarcharEditFieldComponent_Factory(t) {\n    return new (t || VarcharEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  VarcharEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: VarcharEditFieldComponent,\n    selectors: [[\"scrm-varchar-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[\"type\", \"text\", 3, \"formControl\", \"value\", \"ngClass\"]],\n    template: function VarcharEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.field.formControl)(\"value\", ctx.field.value)(\"ngClass\", ctx.klass);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc3.NgClass],\n    encapsulation: 2\n  });\n  return VarcharEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass DateTimeModel {\n  constructor(init) {\n    this.hourStep = 1;\n    this.minuteStep = 15;\n    this.secondStep = 30;\n    this.displaySeconds = false;\n    Object.assign(this, init);\n  }\n\n  static toDateTimeStruct(formatter, dateString) {\n    if (!dateString) {\n      return null;\n    }\n\n    const dateTimeStruct = formatter.userDateTimeFormatToStruct(dateString);\n\n    if (!dateTimeStruct) {\n      return null;\n    }\n\n    const {\n      date,\n      time\n    } = dateTimeStruct;\n    return new DateTimeModel({\n      date: date,\n      time: time\n    });\n  }\n\n  toUserFormat(formatter) {\n    //prepare datetime string in yyyy-M-d H:m:s format (datetimepicker default)\n    const dateString = [this.date.year, this.date.month, this.date.day].join('-');\n    const timeString = [this.time.hour, this.time.minute, this.time.second].join(':');\n    const datetimeString = [dateString, timeString].join(' '); //convert from yyyy-M-d H:m:s format to user format\n\n    return formatter.toUserFormat(datetimeString, {\n      fromFormat: 'yyyy-M-d H:m:s'\n    });\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeEditFieldComponent = /*#__PURE__*/(() => {\n  class DateTimeEditFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, typeFormatter, calendar, config, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.calendar = calendar;\n      this.config = config;\n      this.logic = logic;\n      this.dateTimeModel = new DateTimeModel();\n      config.autoClose = \"outside\";\n      config.placement = this.getPlacement();\n    }\n\n    ngOnInit() {\n      // Note: handle NgbDatePicker default validation\n      // Note: convert empty form value to null for the ngb date validator to pass it\n      if (isEmptyString(this.field.value)) {\n        this.dateTimeModel.date = this.calendar.getToday();\n        this.dateTimeModel.time = {\n          hour: 0,\n          minute: 0,\n          second: 0\n        };\n        this.field.formControl.setValue(null);\n      } else {\n        this.dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, this.field.value);\n\n        if (this.dateTimeModel === null) {\n          this.field.formControl.setValue(null);\n          return;\n        }\n\n        this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n      } // enable seconds in timepicker\n\n\n      if (this.formatter.getTimeFormat().includes('ss')) {\n        this.dateTimeModel.displaySeconds = true;\n      }\n\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    setFormValues(dateTimeString) {\n      this.field.value = dateTimeString;\n      this.field.formControl.setValue(dateTimeString);\n      this.field.formControl.markAsDirty();\n    }\n\n    onDateChange(date) {\n      this.dateTimeModel.date = date;\n      this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n    }\n\n    onTimeChange(time) {\n      this.dateTimeModel.time = time;\n      this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n    }\n\n    onInputChange($event) {\n      const dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, $event.target.value);\n\n      if (!dateTimeModel) {\n        return;\n      }\n\n      this.dateTimeModel = dateTimeModel;\n    }\n\n    getOpenButton() {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        icon: 'calendar'\n      };\n    }\n\n    getPlacement() {\n      return ['bottom-right', 'top-right', 'bottom-left', 'top-left'];\n    }\n\n  }\n\n  DateTimeEditFieldComponent.ɵfac = function DateTimeEditFieldComponent_Factory(t) {\n    return new (t || DateTimeEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DatetimeFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbCalendar), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateTimeEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateTimeEditFieldComponent,\n    selectors: [[\"scrm-datetime-edit\"]],\n    viewQuery: function DateTimeEditFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgbPopover, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popover = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 7,\n    consts: [[1, \"input-group\", \"mr-2\"], [3, \"ngClass\", \"placeholder\", \"formControl\", \"change\"], [1, \"input-group-append\"], [3, \"config\", \"ngbPopover\"], [\"calendarContent\", \"\"], [\"name\", \"datepicker\", 3, \"ngModel\", \"startDate\", \"dateSelect\"], [1, \"d-flex\", \"justify-content-center\", \"mt-auto\"], [\"name\", \"timepicker\", 3, \"ngModel\", \"seconds\", \"hourStep\", \"minuteStep\", \"secondStep\", \"ngModelChange\"]],\n    template: function DateTimeEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function DateTimeEditFieldComponent_Template_input_change_1_listener($event) {\n          return ctx.onInputChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"scrm-button\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, DateTimeEditFieldComponent_ng_template_4_Template, 5, 7, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(5);\n\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.klass)(\"placeholder\", ctx.getDateTimeFormat().toLowerCase())(\"formControl\", ctx.field.formControl);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.getOpenButton())(\"ngbPopover\", _r0);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc3.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ButtonComponent, ɵngcc7.NgbPopover, ɵngcc7.NgbDatepicker, ɵngcc4.NgModel, ɵngcc7.NgbTimepicker],\n    encapsulation: 2\n  });\n  return DateTimeEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeEditFieldModule = /*#__PURE__*/(() => {\n  class DateTimeEditFieldModule {}\n\n  DateTimeEditFieldModule.ɵfac = function DateTimeEditFieldModule_Factory(t) {\n    return new (t || DateTimeEditFieldModule)();\n  };\n\n  DateTimeEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateTimeEditFieldModule\n  });\n  DateTimeEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, NgbDatepickerModule, NgbTimepickerModule, ImageModule, ButtonModule, ReactiveFormsModule, NgbModule]]\n  });\n  return DateTimeEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateTimeEditFieldModule, {\n    declarations: function () {\n      return [DateTimeEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, NgbDatepickerModule, NgbTimepickerModule, ImageModule, ButtonModule, ReactiveFormsModule, NgbModule];\n    },\n    exports: function () {\n      return [DateTimeEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateParserFormatter = /*#__PURE__*/(() => {\n  class DateParserFormatter extends NgbDateParserFormatter {\n    constructor(formatter) {\n      super();\n      this.formatter = formatter;\n    }\n\n    parse(value) {\n      if (!value) {\n        return null;\n      }\n\n      return this.formatter.userDateFormatToStruct(value);\n    }\n\n    format(date) {\n      if (!date) {\n        return null;\n      }\n\n      const dateString = [date.year, date.month, date.day].join('-');\n      return this.formatter.toUserFormat(dateString, {\n        fromFormat: 'yyyy-M-d'\n      });\n    }\n\n  }\n\n  DateParserFormatter.ɵfac = function DateParserFormatter_Factory(t) {\n    return new (t || DateParserFormatter)(ɵngcc0.ɵɵinject(DateFormatter));\n  };\n\n  DateParserFormatter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DateParserFormatter,\n    factory: DateParserFormatter.ɵfac\n  });\n  return DateParserFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateAdapter = /*#__PURE__*/(() => {\n  class DateAdapter extends NgbDateAdapter {\n    constructor(formatter) {\n      super();\n      this.formatter = formatter;\n    }\n\n    fromModel(value) {\n      if (!value) {\n        return null;\n      }\n\n      return this.formatter.userDateFormatToStruct(value);\n    }\n\n    toModel(date) {\n      if (!date) {\n        return null;\n      }\n\n      const dateString = [date.year, date.month, date.day].join('-');\n      return this.formatter.toUserFormat(dateString, {\n        fromFormat: 'yyyy-M-d'\n      });\n    }\n\n  }\n\n  DateAdapter.ɵfac = function DateAdapter_Factory(t) {\n    return new (t || DateAdapter)(ɵngcc0.ɵɵinject(DateFormatter));\n  };\n\n  DateAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: DateAdapter,\n    factory: DateAdapter.ɵfac\n  });\n  return DateAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateFilterFieldComponent = /*#__PURE__*/(() => {\n  class DateFilterFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, typeFormatter, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      let current = '';\n\n      if (this.field.criteria.values && this.field.criteria.values.length > 0) {\n        current = this.field.criteria.values[0];\n      }\n\n      let formattedValue = null;\n\n      if (!isEmptyString(current)) {\n        current = current.trim();\n        formattedValue = this.typeFormatter.toUserFormat(this.field.type, current, {\n          mode: 'edit'\n        });\n      }\n\n      this.field.value = current;\n      this.field.formControl.setValue(formattedValue);\n      this.field.formControl.markAsDirty();\n      this.setModel(current);\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    setModel($event) {\n      this.dateModel = this.formatter.userDateFormatToStruct($event);\n    }\n\n    getOpenButton(datepicker) {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        onClick: () => {\n          datepicker.toggle();\n          datepicker.navigateTo(this.dateModel);\n        },\n        icon: 'calendar'\n      };\n    }\n\n    getPlacement() {\n      return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n\n    setFieldValue(newValue) {\n      this.field.value = newValue;\n      this.field.criteria.operator = '=';\n      this.field.criteria.values = [newValue];\n    }\n\n  }\n\n  DateFilterFieldComponent.ɵfac = function DateFilterFieldComponent_Factory(t) {\n    return new (t || DateFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DateFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateFilterFieldComponent,\n    selectors: [[\"scrm-date-filter\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NgbDateAdapter,\n      useClass: DateAdapter\n    }, {\n      provide: NgbDateParserFormatter,\n      useClass: DateParserFormatter\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"input-group\"], [\"ngbDatepicker\", \"\", 3, \"ngClass\", \"placement\", \"placeholder\", \"formControl\", \"startDate\", \"ngModelChange\"], [\"datepicker\", \"ngbDatepicker\"], [1, \"input-group-append\", \"align-items-end\"], [3, \"config\"]],\n    template: function DateFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DateFilterFieldComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.setModel($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"scrm-button\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.klass)(\"placement\", ctx.getPlacement())(\"placeholder\", ctx.getDateFormat().toLowerCase())(\"formControl\", ctx.field.formControl)(\"startDate\", ctx.dateModel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.getOpenButton(_r0));\n      }\n    },\n    directives: [ɵngcc7.NgbInputDatepicker, ɵngcc4.DefaultValueAccessor, ɵngcc3.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ButtonComponent],\n    encapsulation: 2\n  });\n  return DateFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeDetailFieldComponent = /*#__PURE__*/(() => {\n  class DateTimeDetailFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, typeFormatter, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  DateTimeDetailFieldComponent.ɵfac = function DateTimeDetailFieldComponent_Factory(t) {\n    return new (t || DateTimeDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DatetimeFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateTimeDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateTimeDetailFieldComponent,\n    selectors: [[\"scrm-datetime-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"]],\n    template: function DateTimeDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DateTimeDetailFieldComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe, ɵngcc3.DatePipe],\n    encapsulation: 2\n  });\n  return DateTimeDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeDetailFieldModule = /*#__PURE__*/(() => {\n  class DateTimeDetailFieldModule {}\n\n  DateTimeDetailFieldModule.ɵfac = function DateTimeDetailFieldModule_Factory(t) {\n    return new (t || DateTimeDetailFieldModule)();\n  };\n\n  DateTimeDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateTimeDetailFieldModule\n  });\n  DateTimeDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DateTimeDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateTimeDetailFieldModule, {\n    declarations: function () {\n      return [DateTimeDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [DateTimeDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeFilterFieldComponent = /*#__PURE__*/(() => {\n  class DateTimeFilterFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, typeFormatter, calendar, config, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.typeFormatter = typeFormatter;\n      this.calendar = calendar;\n      this.config = config;\n      this.logic = logic;\n      this.dateTimeModel = new DateTimeModel();\n      config.autoClose = \"outside\";\n      config.placement = this.getPlacement();\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      const values = this.field && this.field.criteria && this.field.criteria.values || [];\n      let criteria = '';\n\n      if (values.length > 0) {\n        criteria = this.field.criteria.values[0];\n      } // Note: handle NgbDatePicker default validation\n      // Note: convert empty form value to null for the ngb date validator to pass it\n\n\n      if (isEmptyString(criteria)) {\n        this.dateTimeModel.date = this.calendar.getToday();\n        this.dateTimeModel.time = {\n          hour: 0,\n          minute: 0,\n          second: 0\n        };\n        this.field.formControl.setValue(null);\n      } else {\n        this.dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, criteria);\n\n        if (this.dateTimeModel === null) {\n          this.field.formControl.setValue(null);\n          return;\n        }\n\n        this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n      } // enable seconds in timepicker\n\n\n      if (this.formatter.getTimeFormat().includes('ss')) {\n        this.dateTimeModel.displaySeconds = true;\n      }\n\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    setFormValues(dateTimeString) {\n      this.field.formControl.setValue(dateTimeString);\n      this.field.formControl.markAsDirty();\n    }\n\n    setFieldValue(newValue) {\n      this.field.value = newValue;\n      this.field.criteria.operator = '=';\n      this.field.criteria.values = [newValue];\n    }\n\n    onDateChange(date) {\n      this.dateTimeModel.date = date;\n      this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n    }\n\n    onTimeChange(time) {\n      this.dateTimeModel.time = time;\n      this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));\n    }\n\n    onInputChange($event) {\n      const dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, $event.target.value);\n\n      if (!dateTimeModel) {\n        return;\n      }\n\n      this.dateTimeModel = dateTimeModel;\n    }\n\n    getOpenButton() {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        icon: 'calendar'\n      };\n    }\n\n    getPlacement() {\n      return ['bottom-right', 'top-right', 'bottom-left', 'top-left'];\n    }\n\n  }\n\n  DateTimeFilterFieldComponent.ɵfac = function DateTimeFilterFieldComponent_Factory(t) {\n    return new (t || DateTimeFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DatetimeFormatter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbCalendar), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateTimeFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateTimeFilterFieldComponent,\n    selectors: [[\"scrm-datetime-filter\"]],\n    viewQuery: function DateTimeFilterFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgbPopover, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popover = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 7,\n    consts: [[1, \"input-group\", \"mr-2\"], [3, \"ngClass\", \"placeholder\", \"formControl\", \"change\"], [1, \"input-group-append\"], [3, \"config\", \"ngbPopover\"], [\"calendarContent\", \"\"], [\"name\", \"datepicker\", 3, \"ngModel\", \"startDate\", \"dateSelect\"], [1, \"d-flex\", \"justify-content-center\", \"mt-auto\"], [\"name\", \"timepicker\", 3, \"ngModel\", \"seconds\", \"hourStep\", \"minuteStep\", \"secondStep\", \"ngModelChange\"]],\n    template: function DateTimeFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function DateTimeFilterFieldComponent_Template_input_change_1_listener($event) {\n          return ctx.onInputChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"scrm-button\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, DateTimeFilterFieldComponent_ng_template_4_Template, 5, 7, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(5);\n\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.klass)(\"placeholder\", ctx.getDateTimeFormat().toLowerCase())(\"formControl\", ctx.field.formControl);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.getOpenButton())(\"ngbPopover\", _r0);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc3.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ButtonComponent, ɵngcc7.NgbPopover, ɵngcc7.NgbDatepicker, ɵngcc4.NgModel, ɵngcc7.NgbTimepicker],\n    encapsulation: 2\n  });\n  return DateTimeFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateTimeFilterFieldModule = /*#__PURE__*/(() => {\n  class DateTimeFilterFieldModule {}\n\n  DateTimeFilterFieldModule.ɵfac = function DateTimeFilterFieldModule_Factory(t) {\n    return new (t || DateTimeFilterFieldModule)();\n  };\n\n  DateTimeFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateTimeFilterFieldModule\n  });\n  DateTimeFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, NgbDatepickerModule, NgbTimepickerModule, ImageModule, ButtonModule, ReactiveFormsModule, NgbModule]]\n  });\n  return DateTimeFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateTimeFilterFieldModule, {\n    declarations: function () {\n      return [DateTimeFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, NgbDatepickerModule, NgbTimepickerModule, ImageModule, ButtonModule, ReactiveFormsModule, NgbModule];\n    },\n    exports: function () {\n      return [DateTimeFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumDetailFieldComponent = /*#__PURE__*/(() => {\n  class MultiEnumDetailFieldComponent extends BaseMultiEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  MultiEnumDetailFieldComponent.ɵfac = function MultiEnumDetailFieldComponent_Factory(t) {\n    return new (t || MultiEnumDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  MultiEnumDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MultiEnumDetailFieldComponent,\n    selectors: [[\"scrm-multienum-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function MultiEnumDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\");\n        ɵngcc0.ɵɵtemplate(1, MultiEnumDetailFieldComponent_li_1_Template, 2, 1, \"li\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.selectedValues);\n      }\n    },\n    directives: [ɵngcc3.NgForOf],\n    encapsulation: 2\n  });\n  return MultiEnumDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EnumEditFieldComponent = /*#__PURE__*/(() => {\n  class EnumEditFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      this.checkAndInitAsDynamicEnum();\n      super.ngOnInit();\n    }\n\n    onAdd(item) {\n      if (item && item.value) {\n        this.field.value = item.value;\n        this.field.formControl.setValue(item.value);\n        this.field.formControl.markAsDirty();\n        return;\n      }\n\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      this.selectedValues = [];\n      return;\n    }\n\n    onRemove() {\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      setTimeout(() => {\n        this.tag.focus(true, true);\n        this.tag.dropdown.show();\n      }, 200);\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_SELECT_ITEM') || '';\n    }\n\n    selectFirstElement() {\n      const filteredElements = this.tag.dropdown.items;\n\n      if (filteredElements.length !== 0) {\n        const firstElement = filteredElements[0];\n        this.selectedValues.push(firstElement);\n        this.onAdd(firstElement);\n        this.tag.dropdown.hide();\n      }\n    }\n\n  }\n\n  EnumEditFieldComponent.ɵfac = function EnumEditFieldComponent_Factory(t) {\n    return new (t || EnumEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  EnumEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: EnumEditFieldComponent,\n    selectors: [[\"scrm-enum-edit\"]],\n    viewQuery: function EnumEditFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 15,\n    consts: [[\"maxItems\", \"1\", 3, \"ngModel\", \"onlyFromAutocomplete\", \"clearOnBlur\", \"displayBy\", \"identifyBy\", \"placeholder\", \"secondaryPlaceholder\", \"inputClass\", \"ngModelChange\", \"onAdd\", \"onRemove\", \"keyup.enter\"], [\"tag\", \"\"], [3, \"displayBy\", \"identifyBy\", \"showDropdownIfEmpty\", \"keepOpen\", \"autocompleteItems\"]],\n    template: function EnumEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tag-input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function EnumEditFieldComponent_Template_tag_input_ngModelChange_0_listener($event) {\n          return ctx.selectedValues = $event;\n        })(\"onAdd\", function EnumEditFieldComponent_Template_tag_input_onAdd_0_listener($event) {\n          return ctx.onAdd($event);\n        })(\"onRemove\", function EnumEditFieldComponent_Template_tag_input_onRemove_0_listener() {\n          return ctx.onRemove();\n        })(\"keyup.enter\", function EnumEditFieldComponent_Template_tag_input_keyup_enter_0_listener() {\n          return ctx.selectFirstElement();\n        });\n        ɵngcc0.ɵɵelement(2, \"tag-input-dropdown\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.getInvalidClass());\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedValues)(\"onlyFromAutocomplete\", true)(\"clearOnBlur\", true)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel())(\"inputClass\", ctx.getInvalidClass());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"showDropdownIfEmpty\", true)(\"keepOpen\", false)(\"autocompleteItems\", ctx.options);\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown],\n    encapsulation: 2\n  });\n  return EnumEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseBooleanComponent = /*#__PURE__*/(() => {\n  class BaseBooleanComponent extends BaseFieldComponent {\n    get checked() {\n      return isTrue(this.field.value);\n    }\n\n    toggle() {\n      let newValue = 'true';\n\n      if (this.checked) {\n        newValue = 'false';\n      }\n\n      this.field.value = newValue;\n      this.field.formControl.setValue(newValue);\n      this.field.formControl.markAsDirty();\n    }\n\n  }\n\n  BaseBooleanComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵBaseBooleanComponent_BaseFactory;\n    return function BaseBooleanComponent_Factory(t) {\n      return (ɵBaseBooleanComponent_BaseFactory || (ɵBaseBooleanComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BaseBooleanComponent)))(t || BaseBooleanComponent);\n    };\n  }();\n\n  BaseBooleanComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseBooleanComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseBooleanComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseBooleanComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanDetailFieldComponent = /*#__PURE__*/(() => {\n  class BooleanDetailFieldComponent extends BaseBooleanComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  BooleanDetailFieldComponent.ɵfac = function BooleanDetailFieldComponent_Factory(t) {\n    return new (t || BooleanDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BooleanDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BooleanDetailFieldComponent,\n    selectors: [[\"scrm-boolean-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"checkbox-container\"], [\"type\", \"checkbox\", \"disabled\", \"\", \"readonly\", \"\", \"aria-hidden\", \"true\", 3, \"checked\"], [1, \"checkmark\"]],\n    template: function BooleanDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵelement(1, \"input\", 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"checked\", ctx.checked);\n      }\n    },\n    encapsulation: 2\n  });\n  return BooleanDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModuleNameMapper = /*#__PURE__*/(() => {\n  class ModuleNameMapper {\n    constructor(systemConfig) {\n      this.systemConfig = systemConfig;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Map the legacy name to frontend\n     *\n     * @param {string} module the module name\n     * @returns {string} frontend name\n     */\n\n\n    toFrontend(module) {\n      const map = this.getLegacyToFrontendMap();\n\n      if (!map[module]) {\n        return module;\n      }\n\n      return map[module];\n    }\n    /**\n     * Map the frontend name to legacy\n     *\n     * @param {string} module the module name\n     * @returns {string} frontend name\n     */\n\n\n    toLegacy(module) {\n      const map = this.getFrontendToLegacyMap();\n\n      if (!map[module]) {\n        return module;\n      }\n\n      return map[module];\n    }\n    /**\n     * Check if module is valid\n     *\n     * @param {string} module the module name\n     * @returns {boolean} is valid\n     */\n\n\n    isValid(module) {\n      const map = this.getFrontendToLegacyMap();\n      let valid = false;\n\n      if (map[module]) {\n        valid = true;\n      }\n\n      return valid;\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Get the legacy to frontend map\n     *\n     * @returns {{}} map\n     */\n\n\n    getLegacyToFrontendMap() {\n      return this.systemConfig.getConfigValue('module_name_map');\n    }\n    /**\n     * Get the frontend to legacy map\n     *\n     * @returns {{}} map\n     */\n\n\n    getFrontendToLegacyMap() {\n      const map = this.systemConfig.getConfigValue('module_name_map');\n      const invertedMap = {};\n      Object.keys(map).forEach(legacyName => {\n        const frontendName = map[legacyName];\n        invertedMap[frontendName] = legacyName;\n      });\n      return invertedMap;\n    }\n\n  }\n\n  ModuleNameMapper.ɵfac = function ModuleNameMapper_Factory(t) {\n    return new (t || ModuleNameMapper)(ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  ModuleNameMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ModuleNameMapper_Factory() {\n      return new ModuleNameMapper(i0.ɵɵinject(SystemConfigStore));\n    },\n    token: ModuleNameMapper,\n    providedIn: \"root\"\n  });\n  return ModuleNameMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionNameMapper = /*#__PURE__*/(() => {\n  class ActionNameMapper {\n    constructor(systemConfig) {\n      this.systemConfig = systemConfig;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Map the legacy name to frontend\n     *\n     * @param {string} action the action name\n     * @returns {string} frontend name\n     */\n\n\n    toFrontend(action) {\n      const map = this.getLegacyToFrontendMap();\n\n      if (!map[action]) {\n        return action;\n      }\n\n      return map[action];\n    }\n    /**\n     * Map the frontend name to legacy\n     *\n     * @param {string} action the action name\n     * @returns {string} frontend name\n     */\n\n\n    toLegacy(action) {\n      const map = this.getFrontendToLegacyMap();\n\n      if (!map[action]) {\n        return action;\n      }\n\n      return map[action];\n    }\n    /**\n     * Check if action is valid\n     *\n     * @param {string} action the action name\n     * @returns {boolean} is valid\n     */\n\n\n    isValid(action) {\n      const map = this.getFrontendToLegacyMap();\n      let valid = false;\n\n      if (map[action]) {\n        valid = true;\n      }\n\n      return valid;\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Get the legacy to frontend map\n     *\n     * @returns {{}} legacy to frontend map\n     */\n\n\n    getLegacyToFrontendMap() {\n      return this.systemConfig.getConfigValue('action_name_map');\n    }\n    /**\n     * Get the frontend to legacy map\n     *\n     * @returns {{}} frontend to legacy map\n     */\n\n\n    getFrontendToLegacyMap() {\n      const map = this.systemConfig.getConfigValue('action_name_map');\n      const invertedMap = {};\n      Object.keys(map).forEach(legacyName => {\n        const frontendName = map[legacyName];\n        invertedMap[frontendName] = legacyName;\n      });\n      return invertedMap;\n    }\n\n  }\n\n  ActionNameMapper.ɵfac = function ActionNameMapper_Factory(t) {\n    return new (t || ActionNameMapper)(ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  ActionNameMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ActionNameMapper_Factory() {\n      return new ActionNameMapper(i0.ɵɵinject(SystemConfigStore));\n    },\n    token: ActionNameMapper,\n    providedIn: \"root\"\n  });\n  return ActionNameMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ROUTE_PREFIX$1 = './#';\nlet ModuleNavigation = /*#__PURE__*/(() => {\n  class ModuleNavigation {\n    constructor(router, moduleNameMapper, actionNameMapper) {\n      this.router = router;\n      this.moduleNameMapper = moduleNameMapper;\n      this.actionNameMapper = actionNameMapper;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Get module info\n     *\n     * @param {string} module name\n     * @param {object} navigation info\n     * @returns {object} module info\n     */\n\n\n    getModuleInfo(module, navigation) {\n      if (!navigation || !navigation.modules) {\n        return null;\n      }\n\n      return navigation.modules[module];\n    }\n    /**\n     * Get module label\n     *\n     * @param {object} module info\n     * @param {object} appListStrings map\n     * @returns {string} the module label\n     */\n\n\n    getModuleLabel(module, appListStrings) {\n      if (!appListStrings || !appListStrings.moduleList || !module) {\n        return '';\n      }\n\n      const labelKey = module && module.labelKey || '';\n      return appListStrings.moduleList[labelKey] || labelKey;\n    }\n    /**\n     * Get module route\n     *\n     * @param {object} module NavbarModule\n     * @returns {object} NavigationRoute\n     */\n\n\n    getModuleRoute(module) {\n      let url = module && module.defaultRoute || '';\n      let route = null;\n      const params = null;\n\n      if (url.startsWith(ROUTE_PREFIX$1)) {\n        route = url.replace(ROUTE_PREFIX$1, '');\n        url = null;\n      }\n\n      return {\n        route,\n        url,\n        params\n      };\n    }\n    /**\n     * Navigate using action information\n     *\n     * @param {object} item ModuleAction\n     * @returns {object} Promise<boolean>\n     */\n\n\n    navigate(item) {\n      const route = this.getActionRoute(item);\n      return this.router.navigate([route.route], {\n        queryParams: route.params\n      });\n    }\n    /**\n     * Get action route info\n     *\n     * @param {object} action ModuleAction\n     * @returns {object} NavigationRoute\n     */\n\n\n    getActionRoute(action) {\n      let url = action.url;\n      let route = null;\n      let params = null;\n\n      if (url.startsWith(ROUTE_PREFIX$1)) {\n        route = url.replace(ROUTE_PREFIX$1, '');\n        url = null;\n\n        if (action.params) {\n          params = action.params;\n        }\n      }\n\n      return {\n        route,\n        url,\n        params\n      };\n    }\n    /**\n     * Get label for module action item\n     *\n     * @param {string} module name\n     * @param {object} item action\n     * @param {object} languages map\n     * @param {string} labelKey to use\n     * @returns {string} label\n     */\n\n\n    getActionLabel(module, item, languages, labelKey = '') {\n      if (!languages || !languages.modStrings || !item || !module) {\n        return '';\n      }\n\n      let key = labelKey;\n\n      if (!key) {\n        key = item.labelKey;\n      }\n\n      let label = languages.modStrings[module] && languages.modStrings[module][key];\n\n      if (!label) {\n        label = languages.appStrings && languages.appStrings[key];\n      }\n\n      if (!label && item.module) {\n        label = languages.modStrings[item.module] && languages.modStrings[item.module][key];\n      }\n\n      if (!label) {\n        label = languages.modStrings.administration && languages.modStrings.administration[key];\n      }\n\n      return label || '';\n    }\n    /**\n     * Get record router link route info\n     *\n     * @param {string} module name\n     * @param {string} id fo the record\n     * @returns {string} router link\n     */\n\n\n    getRecordRouterLink(module, id) {\n      return `/${module}/record/${id}`;\n    }\n    /**\n     * Navigate back using return params\n     * @param record\n     * @param moduleName\n     * @param params\n     */\n\n\n    navigateBack(record, moduleName, params) {\n      let returnModule = this.getReturnModule(params);\n      let returnAction = this.getReturnAction(params);\n      const returnId = this.getReturnId(params);\n      let route = '';\n\n      if (returnModule) {\n        route += '/' + returnModule;\n      }\n\n      if (returnAction) {\n        route += '/' + returnAction;\n      }\n\n      if (returnId) {\n        route += '/' + returnId;\n      }\n\n      if (returnModule === moduleName && returnAction === 'record') {\n        const rid = !returnId ? record.id : returnId;\n        route = '/' + moduleName + '/record/' + rid;\n      }\n\n      if (!route && record && record.id) {\n        route = '/' + moduleName + '/record/' + record.id;\n      }\n\n      if (!route && record && record.id) {\n        route = '/' + moduleName;\n      }\n\n      this.router.navigate([route]).then();\n    }\n    /**\n     * Extract return id\n     * @param params\n     */\n\n\n    getReturnId(params) {\n      return params.return_id || '';\n    }\n    /**\n     * Extract and map return action\n     * @param params\n     */\n\n\n    getReturnAction(params) {\n      let returnAction = '';\n\n      if (params.return_action) {\n        returnAction = this.actionNameMapper.toFrontend(params.return_action);\n      }\n\n      return returnAction;\n    }\n    /**\n     * Extract and map return action\n     * @param params\n     */\n\n\n    getReturnModule(params) {\n      let returnModule = '';\n\n      if (params.return_module) {\n        returnModule = this.moduleNameMapper.toFrontend(params.return_module);\n      }\n\n      return returnModule;\n    }\n\n  }\n\n  ModuleNavigation.ɵfac = function ModuleNavigation_Factory(t) {\n    return new (t || ModuleNavigation)(ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ActionNameMapper));\n  };\n\n  ModuleNavigation.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ModuleNavigation_Factory() {\n      return new ModuleNavigation(i0.ɵɵinject(i2.Router), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(ActionNameMapper));\n    },\n    token: ModuleNavigation,\n    providedIn: \"root\"\n  });\n  return ModuleNavigation;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailListFieldsComponent = /*#__PURE__*/(() => {\n  class EmailListFieldsComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic, preferences, navigation, moduleNameMapper, actionNameMapper, appState, modalService, router) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.preferences = preferences;\n      this.navigation = navigation;\n      this.moduleNameMapper = moduleNameMapper;\n      this.actionNameMapper = actionNameMapper;\n      this.appState = appState;\n      this.modalService = modalService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.linkType = this.preferences.getUserPreference('email_link_type') || 'mailto';\n    }\n\n    openEmail() {\n      const view = this.actionNameMapper.toLegacy(this.appState.getView());\n      const module = this.moduleNameMapper.toLegacy(this.parent.module);\n      const parent_id = this.parent.id;\n      const parent_name = this.parent.attributes.name;\n      const email = this.field.value;\n      let return_id;\n\n      if (view !== 'ListView' && view !== 'index') {\n        return_id = parent_id;\n      }\n\n      this.router.navigate(['emails', 'compose'], {\n        queryParams: {\n          return_module: module,\n          return_action: view,\n          return_id,\n          to_addrs_names: email,\n          parent_type: module,\n          parent_name,\n          parent_id\n        }\n      });\n    }\n\n  }\n\n  EmailListFieldsComponent.ɵfac = function EmailListFieldsComponent_Factory(t) {\n    return new (t || EmailListFieldsComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(ActionNameMapper), ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router));\n  };\n\n  EmailListFieldsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: EmailListFieldsComponent,\n    selectors: [[\"scrm-email-list\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"mailto-field\"], [3, \"href\", 4, \"ngIf\"], [\"class\", \"clickable field-link\", 3, \"click\", 4, \"ngIf\"], [3, \"href\"], [1, \"clickable\", \"field-link\", 3, \"click\"]],\n    template: function EmailListFieldsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, EmailListFieldsComponent_a_1_Template, 2, 2, \"a\", 1);\n        ɵngcc0.ɵɵtemplate(2, EmailListFieldsComponent_a_2_Template, 2, 1, \"a\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.linkType === \"mailto\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.linkType === \"sugar\");\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    encapsulation: 2\n  });\n  return EmailListFieldsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailListFieldsModule = /*#__PURE__*/(() => {\n  class EmailListFieldsModule {}\n\n  EmailListFieldsModule.ɵfac = function EmailListFieldsModule_Factory(t) {\n    return new (t || EmailListFieldsModule)();\n  };\n\n  EmailListFieldsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: EmailListFieldsModule\n  });\n  EmailListFieldsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return EmailListFieldsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EmailListFieldsModule, {\n    declarations: function () {\n      return [EmailListFieldsComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [EmailListFieldsComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharFilterFieldComponent = /*#__PURE__*/(() => {\n  class VarcharFilterFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      let current = '';\n\n      if (this.field.criteria && this.field.criteria.values && this.field.criteria.values.length > 0) {\n        current = this.field.criteria.values[0];\n      }\n\n      if (!isVoid(current)) {\n        current = current.trim();\n      } else {\n        current = '';\n      }\n\n      this.field.value = current;\n      const formattedValue = this.typeFormatter.toUserFormat(this.field.type, current, {\n        mode: 'edit'\n      });\n      this.field.formControl.setValue(formattedValue);\n      this.field.formControl.markAsDirty();\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    setFieldValue(newValue) {\n      this.field.value = newValue;\n      this.field.criteria.operator = '=';\n      this.field.criteria.values = [newValue];\n    }\n\n  }\n\n  VarcharFilterFieldComponent.ɵfac = function VarcharFilterFieldComponent_Factory(t) {\n    return new (t || VarcharFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  VarcharFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: VarcharFilterFieldComponent,\n    selectors: [[\"scrm-varchar-filter\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[\"type\", \"text\", 3, \"formControl\", \"value\", \"ngClass\"]],\n    template: function VarcharFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.field.formControl)(\"value\", ctx.field.value)(\"ngClass\", ctx.klass);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc3.NgClass],\n    encapsulation: 2\n  });\n  return VarcharFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EnumEditFieldModule = /*#__PURE__*/(() => {\n  class EnumEditFieldModule {}\n\n  EnumEditFieldModule.ɵfac = function EnumEditFieldModule_Factory(t) {\n    return new (t || EnumEditFieldModule)();\n  };\n\n  EnumEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: EnumEditFieldModule\n  });\n  EnumEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TagInputModule, FormsModule]]\n  });\n  return EnumEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EnumEditFieldModule, {\n    declarations: function () {\n      return [EnumEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, TagInputModule, FormsModule];\n    },\n    exports: function () {\n      return [EnumEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumDetailFieldModule = /*#__PURE__*/(() => {\n  class MultiEnumDetailFieldModule {}\n\n  MultiEnumDetailFieldModule.ɵfac = function MultiEnumDetailFieldModule_Factory(t) {\n    return new (t || MultiEnumDetailFieldModule)();\n  };\n\n  MultiEnumDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MultiEnumDetailFieldModule\n  });\n  MultiEnumDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return MultiEnumDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MultiEnumDetailFieldModule, {\n    declarations: function () {\n      return [MultiEnumDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [MultiEnumDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FloatDetailFieldComponent = /*#__PURE__*/(() => {\n  class FloatDetailFieldComponent extends BaseNumberComponent {\n    constructor(userPreferences, systemConfig, typeFormatter, logic) {\n      super(userPreferences, systemConfig, typeFormatter, logic);\n      this.userPreferences = userPreferences;\n      this.systemConfig = systemConfig;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  FloatDetailFieldComponent.ɵfac = function FloatDetailFieldComponent_Factory(t) {\n    return new (t || FloatDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  FloatDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FloatDetailFieldComponent,\n    selectors: [[\"scrm-float-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"]],\n    template: function FloatDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FloatDetailFieldComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe, FormatNumberPipe];\n    },\n    encapsulation: 2\n  });\n  return FloatDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FormatNumberPipe = /*#__PURE__*/(() => {\n  class FormatNumberPipe extends DecimalPipe {\n    constructor(formatter, locale) {\n      super(locale);\n      this.formatter = formatter;\n      this.locale = locale;\n    } // eslint-disable-next-line no-dupe-class-members,@typescript-eslint/no-unused-vars\n\n\n    transform(value, digitsInfo, locale) {\n      if (!value) {\n        return null;\n      }\n\n      return this.formatter.toUserFormat('' + value);\n    }\n\n  }\n\n  FormatNumberPipe.ɵfac = function FormatNumberPipe_Factory(t) {\n    return new (t || FormatNumberPipe)(ɵngcc0.ɵɵdirectiveInject(NumberFormatter, 16), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID, 16));\n  };\n\n  FormatNumberPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"formatNumber\",\n    type: FormatNumberPipe,\n    pure: true\n  });\n  return FormatNumberPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FormatNumberModule = /*#__PURE__*/(() => {\n  class FormatNumberModule {}\n\n  FormatNumberModule.ɵfac = function FormatNumberModule_Factory(t) {\n    return new (t || FormatNumberModule)();\n  };\n\n  FormatNumberModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormatNumberModule\n  });\n  FormatNumberModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return FormatNumberModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormatNumberModule, {\n    declarations: function () {\n      return [FormatNumberPipe];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FormatNumberPipe];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FloatDetailFieldModule = /*#__PURE__*/(() => {\n  class FloatDetailFieldModule {}\n\n  FloatDetailFieldModule.ɵfac = function FloatDetailFieldModule_Factory(t) {\n    return new (t || FloatDetailFieldModule)();\n  };\n\n  FloatDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FloatDetailFieldModule\n  });\n  FloatDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormatNumberModule]]\n  });\n  return FloatDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FloatDetailFieldModule, {\n    declarations: function () {\n      return [FloatDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormatNumberModule];\n    },\n    exports: function () {\n      return [FloatDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateEditFieldComponent = /*#__PURE__*/(() => {\n  class DateEditFieldComponent extends BaseDateTimeComponent {\n    constructor(formatter, dateAdapter, typeFormatter, logic) {\n      super(formatter, typeFormatter, logic);\n      this.formatter = formatter;\n      this.dateAdapter = dateAdapter;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      // Note: handle NgbDatePicker default validation\n      // Note: convert empty form value to null for the ngb date validator to pass it\n      if (isEmptyString(this.field.value)) {\n        this.field.formControl.setValue(null);\n      }\n\n      this.setModel(this.field.value);\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    setModel($event) {\n      this.dateModel = this.formatter.userDateFormatToStruct($event);\n    }\n\n    getOpenButton(datepicker) {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        onClick: () => {\n          datepicker.toggle();\n          datepicker.navigateTo(this.dateModel);\n        },\n        icon: 'calendar'\n      };\n    }\n\n    getPlacement() {\n      return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n\n  }\n\n  DateEditFieldComponent.ɵfac = function DateEditFieldComponent_Factory(t) {\n    return new (t || DateEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DateFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DateEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DateEditFieldComponent,\n    selectors: [[\"scrm-date-edit\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NgbDateAdapter,\n      useClass: DateAdapter\n    }, {\n      provide: NgbDateParserFormatter,\n      useClass: DateParserFormatter\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"field-datetime-edit\", \"input-group\"], [\"ngbDatepicker\", \"\", 3, \"ngClass\", \"placement\", \"placeholder\", \"formControl\", \"startDate\", \"ngModelChange\"], [\"datepicker\", \"ngbDatepicker\"], [1, \"input-group-append\", \"align-items-end\"], [3, \"config\"]],\n    template: function DateEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DateEditFieldComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.setModel($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"scrm-button\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.klass)(\"placement\", ctx.getPlacement())(\"placeholder\", ctx.getDateFormat().toLowerCase())(\"formControl\", ctx.field.formControl)(\"startDate\", ctx.dateModel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.getOpenButton(_r0));\n      }\n    },\n    directives: [ɵngcc7.NgbInputDatepicker, ɵngcc4.DefaultValueAccessor, ɵngcc3.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ButtonComponent],\n    encapsulation: 2\n  });\n  return DateEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanFilterFieldComponent = /*#__PURE__*/(() => {\n  class BooleanFilterFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      this.field.value = '';\n\n      if (this.field.criteria.values && this.field.criteria.values.length > 0) {\n        this.field.value = this.field.criteria.values[0];\n      }\n\n      super.ngOnInit();\n    }\n\n    onAdd(item) {\n      if (item && item.value) {\n        this.field.value = item.value;\n        this.field.formControl.setValue(item.value);\n        this.field.formControl.markAsDirty();\n        this.field.criteria.operator = '=';\n        this.field.criteria.values = [item.value];\n        return;\n      }\n\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      this.selectedValues = [];\n      this.field.criteria.operator = '';\n      this.field.criteria.values = [];\n      return;\n    }\n\n    onRemove() {\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      this.field.criteria.operator = '';\n      this.field.criteria.values = [];\n      setTimeout(() => {\n        this.tag.focus(true, true);\n        this.tag.dropdown.show();\n      }, 200);\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_SELECT_ITEM') || '';\n    }\n\n  }\n\n  BooleanFilterFieldComponent.ɵfac = function BooleanFilterFieldComponent_Factory(t) {\n    return new (t || BooleanFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BooleanFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BooleanFilterFieldComponent,\n    selectors: [[\"scrm-boolean-filter\"]],\n    viewQuery: function BooleanFilterFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 15,\n    consts: [[\"maxItems\", \"1\", 3, \"ngModel\", \"clearOnBlur\", \"displayBy\", \"identifyBy\", \"inputClass\", \"onlyFromAutocomplete\", \"placeholder\", \"secondaryPlaceholder\", \"onAdd\", \"onRemove\", \"ngModelChange\"], [\"tag\", \"\"], [3, \"autocompleteItems\", \"displayBy\", \"identifyBy\", \"keepOpen\", \"showDropdownIfEmpty\"]],\n    template: function BooleanFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tag-input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"onAdd\", function BooleanFilterFieldComponent_Template_tag_input_onAdd_0_listener($event) {\n          return ctx.onAdd($event);\n        })(\"onRemove\", function BooleanFilterFieldComponent_Template_tag_input_onRemove_0_listener() {\n          return ctx.onRemove();\n        })(\"ngModelChange\", function BooleanFilterFieldComponent_Template_tag_input_ngModelChange_0_listener($event) {\n          return ctx.selectedValues = $event;\n        });\n        ɵngcc0.ɵɵelement(2, \"tag-input-dropdown\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.getInvalidClass());\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedValues)(\"clearOnBlur\", true)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"inputClass\", ctx.getInvalidClass())(\"onlyFromAutocomplete\", true)(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"autocompleteItems\", ctx.options)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"keepOpen\", false)(\"showDropdownIfEmpty\", true);\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown],\n    encapsulation: 2\n  });\n  return BooleanFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharFilterFieldModule = /*#__PURE__*/(() => {\n  class VarcharFilterFieldModule {}\n\n  VarcharFilterFieldModule.ɵfac = function VarcharFilterFieldModule_Factory(t) {\n    return new (t || VarcharFilterFieldModule)();\n  };\n\n  VarcharFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: VarcharFilterFieldModule\n  });\n  VarcharFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n  });\n  return VarcharFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VarcharFilterFieldModule, {\n    declarations: function () {\n      return [VarcharFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [VarcharFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanFilterFieldModule = /*#__PURE__*/(() => {\n  class BooleanFilterFieldModule {}\n\n  BooleanFilterFieldModule.ɵfac = function BooleanFilterFieldModule_Factory(t) {\n    return new (t || BooleanFilterFieldModule)();\n  };\n\n  BooleanFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BooleanFilterFieldModule\n  });\n  BooleanFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, TagInputModule]]\n  });\n  return BooleanFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BooleanFilterFieldModule, {\n    declarations: function () {\n      return [BooleanFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule, TagInputModule];\n    },\n    exports: function () {\n      return [BooleanFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateDetailFieldComponent = /*#__PURE__*/(() => {\n  class RelateDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  RelateDetailFieldComponent.ɵfac = function RelateDetailFieldComponent_Factory(t) {\n    return new (t || RelateDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  RelateDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RelateDetailFieldComponent,\n    selectors: [[\"scrm-relate-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function RelateDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.field.value, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return RelateDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModalRecordFilterAdapter = /*#__PURE__*/(() => {\n  class ModalRecordFilterAdapter {\n    getConfig(store) {\n      return {\n        klass: 'light-filter',\n        panelMode: 'collapsible',\n        isCollapsed: true,\n        collapseOnSearch: true,\n        savedFilterEdit: false,\n        module: store.recordList.getModule(),\n        filter$: store.recordList.criteria$.pipe(map(criteria => {\n          return {\n            key: 'default',\n            criteria\n          };\n        })),\n        savedFilters$: of([]),\n        searchFields$: store.searchMetadata$.pipe(map(searchMeta => {\n          if (!searchMeta) {\n            return {};\n          }\n\n          let type = 'advanced';\n\n          if (!searchMeta.layout.advanced) {\n            type = 'basic';\n          }\n\n          return searchMeta.layout[type];\n        })),\n        listFields: [],\n        onClose: () => {},\n        onSearch: () => {},\n        updateFilter: (filter, reload = true) => {\n          store.recordList.updateSearchCriteria(filter.criteria, reload);\n        },\n        resetFilter: reload => {\n          store.recordList.resetSearchCriteria(reload);\n        },\n        addSavedFilter: filter => {},\n        removeSavedFilter: filter => {},\n        setOpenFilter: filter => {}\n      };\n    }\n\n  }\n\n  ModalRecordFilterAdapter.ɵfac = function ModalRecordFilterAdapter_Factory(t) {\n    return new (t || ModalRecordFilterAdapter)();\n  };\n\n  ModalRecordFilterAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ModalRecordFilterAdapter,\n    factory: ModalRecordFilterAdapter.ɵfac\n  });\n  return ModalRecordFilterAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass ModalRecordListTableAdapter {\n  /**\n   * Get table config\n   *\n   * @param {object} store to use\n   * @returns {object} TableConfig\n   */\n  getTable(store) {\n    return {\n      showHeader: true,\n      showFooter: true,\n      klass: 'light-table',\n      module: store.recordList.getModule(),\n      columns: store.columns$.pipe(map(columns => this.mapColumns(store, columns))),\n      sort$: store.recordList.sort$,\n      maxColumns$: of(5),\n      loading$: store.recordList.loading$,\n      dataSource: store.recordList,\n      pagination: store.recordList,\n      toggleRecordSelection: id => {\n        store.recordList.toggleSelection(id);\n      },\n      updateSorting: (orderBy, sortOrder) => {\n        store.recordList.updateSorting(orderBy, sortOrder);\n        store.saveCurrentSort();\n      }\n    };\n  }\n  /**\n   * Parse and override column definitions\n   *\n   * @param {object} store to use\n   * @param {[]} columns to map\n   * @returns {[]} ColumnDefinition[]\n   */\n\n\n  mapColumns(store, columns) {\n    const mappedColumns = [];\n    columns.forEach(column => {\n      const mapped = Object.assign({}, column);\n      const metadata = column.metadata || {};\n      mapped.metadata = Object.assign({}, metadata);\n      this.disableRelateFieldsLink(mapped);\n      this.addLinkSelectHandler(store, mapped);\n      mappedColumns.push(mapped);\n    });\n    return mappedColumns;\n  }\n  /**\n   * Disable link for relate fields\n   *\n   * @param {object} definition to update\n   */\n\n\n  disableRelateFieldsLink(definition) {\n    if (definition.type !== 'relate') {\n      return;\n    }\n\n    definition.link = false;\n    definition.metadata.link = false;\n  }\n  /**\n   * Add onClick handler for link fields\n   *\n   * @param {object} store to use\n   * @param {object} definition to update\n   */\n\n\n  addLinkSelectHandler(store, definition) {\n    if (!definition.link) {\n      return;\n    }\n\n    definition.metadata.onClick = (field, record) => {\n      store.recordList.toggleSelection(record.id);\n    };\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListGQL = /*#__PURE__*/(() => {\n  class ListGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n      this.fieldsMetadata = {\n        fields: ['id', '_id', 'meta', 'records']\n      };\n    }\n    /**\n     * Fetch data either from backend\n     *\n     * @param {string} module to get from\n     * @param {number} limit  page limit\n     * @param {number} offset  current offset\n     * @param {object} criteria filter criteria\n     * @param {object} sort selection\n     * @param {object} metadata with the fields to ask for\n     * @returns {object} Observable<ApolloQueryResult<any>>\n     */\n\n\n    fetch(module, limit, offset, criteria, sort, metadata) {\n      const fields = metadata.fields;\n      const queryOptions = {\n        query: gql`\n              query getRecordList($module: String!, $limit: Int, $offset: Int, $criteria: Iterable, $sort: Iterable) {\n                getRecordList(module: $module, limit: $limit, offset: $offset, criteria: $criteria, sort: $sort) {\n                  ${fields.join('\\n')}\n                }\n              }\n            `,\n        variables: {\n          module,\n          limit,\n          offset,\n          criteria,\n          sort\n        }\n      };\n      return this.apollo.query(queryOptions);\n    }\n    /**\n     * Fetch the List records from the backend\n     *\n     * @param {string} module to use\n     * @param {object} criteria to use\n     * @param {object} sort to use\n     * @param {object} pagination to use\n     * @returns {object} Observable<any>\n     */\n\n\n    get(module, criteria, sort, pagination) {\n      const mappedSort = this.mapSort(sort);\n      return this.fetch(module, pagination.pageSize, pagination.current, criteria, mappedSort, this.fieldsMetadata).pipe(map(({\n        data\n      }) => {\n        const recordsList = {\n          records: [],\n          pagination: Object.assign({}, pagination)\n        };\n\n        if (!data || !data.getRecordList) {\n          return recordsList;\n        }\n\n        const listData = data.getRecordList;\n\n        if (listData.records) {\n          listData.records.forEach(record => {\n            recordsList.records.push(this.mapRecord(record));\n          });\n        }\n\n        if (!listData.meta) {\n          return recordsList;\n        }\n\n        if (listData.meta.offsets) {\n          const paginationFieldMap = {\n            current: 'current',\n            next: 'next',\n            prev: 'previous',\n            total: 'total',\n            end: 'last'\n          };\n          Object.keys(paginationFieldMap).forEach(key => {\n            if (key in listData.meta.offsets) {\n              const paginationField = paginationFieldMap[key];\n              recordsList.pagination[paginationField] = listData.meta.offsets[key];\n            }\n          });\n        }\n\n        return recordsList;\n      }));\n    }\n    /**\n     * Map sort.\n     * @param {object} sort to map\n     */\n\n\n    mapSort(sort) {\n      const sortOrderMap = {\n        NONE: '',\n        ASC: 'ASC',\n        DESC: 'DESC'\n      };\n      return {\n        sortOrder: sortOrderMap[sort.sortOrder],\n        orderBy: sort.orderBy\n      };\n    }\n    /**\n     * Map record. Allow for extensions\n     * @param record\n     */\n\n\n    mapRecord(record) {\n      return record;\n    }\n\n  }\n\n  ListGQL.ɵfac = function ListGQL_Factory(t) {\n    return new (t || ListGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  ListGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ListGQL_Factory() {\n      return new ListGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: ListGQL,\n    providedIn: \"root\"\n  });\n  return ListGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(config) {\n      this.config = config;\n      this.messages = [];\n      this.timeout = 3;\n      this.messagesStage = new BehaviorSubject([]);\n      this.messages$ = this.messagesStage.asObservable();\n      this.initTimeOut();\n    }\n\n    updateState(messages) {\n      this.messagesStage.next(this.messages = messages);\n    }\n\n    removeMessages() {\n      this.updateState([]);\n    }\n\n    contains(message, remove = false) {\n      let found = false;\n\n      for (let i = 0; i < this.messages.length; i++) {\n        if (message.text === this.messages[i].text) {\n          found = true;\n\n          if (remove) {\n            const messages = [...this.messages];\n            messages.splice(i, 1);\n            this.updateState(messages);\n          }\n\n          break;\n        }\n      }\n\n      return found;\n    }\n\n    addMessage(message) {\n      // push message only if it does not contains already...\n      let ret = -1;\n\n      if (!this.contains(message)) {\n        const newMessages = [...this.messages];\n        ret = newMessages.push(message);\n\n        if (message.type === MessageTypes.success || message.type === MessageTypes.warning) {\n          setTimeout(() => {\n            this.contains(message, true);\n          }, this.timeout * 1000);\n        }\n\n        this.updateState(newMessages);\n      }\n\n      return ret;\n    }\n\n    addPrimaryMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.primary,\n        text\n      });\n    }\n\n    addSecondaryMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.secondary,\n        text\n      });\n    }\n\n    addSuccessMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.success,\n        text\n      });\n    }\n\n    addSuccessMessageByKey(labelKey) {\n      return this.addMessage({\n        type: MessageTypes.success,\n        labelKey\n      });\n    }\n\n    addDangerMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.danger,\n        text\n      });\n    }\n\n    addDangerMessageByKey(labelKey) {\n      return this.addMessage({\n        type: MessageTypes.danger,\n        labelKey\n      });\n    }\n\n    addWarningMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.warning,\n        text\n      });\n    }\n\n    addWarningMessageByKey(labelKey) {\n      return this.addMessage({\n        type: MessageTypes.warning,\n        labelKey\n      });\n    }\n\n    addInfoMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.info,\n        text\n      });\n    }\n\n    addDarkMessage(text) {\n      return this.addMessage({\n        type: MessageTypes.dark,\n        text\n      });\n    } // --- LOG ---\n\n\n    log(...args) {\n      console.log.apply(console, args);\n    }\n\n    error(...args) {\n      console.error.apply(console, args);\n    }\n\n    initTimeOut() {\n      const ui = this.config.getConfigValue('ui');\n\n      if (ui && ui.alert_timeout) {\n        const parsed = parseInt(ui.alert_timeout, 10);\n\n        if (!isNaN(parsed)) {\n          this.timeout = parsed;\n        }\n      }\n    }\n\n  }\n\n  MessageService.ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)(ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  MessageService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MessageService_Factory() {\n      return new MessageService(i0.ɵɵinject(SystemConfigStore));\n    },\n    token: MessageService,\n    providedIn: \"root\"\n  });\n  return MessageService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialSearchCriteria = {\n  filters: {}\n};\nconst initialListSort = {\n  orderBy: '',\n  sortOrder: SortDirection.DESC\n};\nconst initialSelection = {\n  all: false,\n  status: SelectionStatus.NONE,\n  selected: {},\n  count: 0\n};\nconst initialState$e = {\n  module: '',\n  records: [],\n  criteria: deepClone(initialSearchCriteria),\n  sort: deepClone(initialListSort),\n  pagination: {\n    pageSize: 5,\n    current: 0,\n    previous: 0,\n    next: 5,\n    last: 0,\n    total: 0,\n    pageFirst: 0,\n    pageLast: 0\n  },\n  selection: deepClone(initialSelection),\n  loading: false\n};\nlet RecordListStore = /*#__PURE__*/(() => {\n  class RecordListStore {\n    constructor(listGQL, configStore, preferencesStore, appStateStore, languageStore, message) {\n      this.listGQL = listGQL;\n      this.configStore = configStore;\n      this.preferencesStore = preferencesStore;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.message = message;\n      /** Internal Properties */\n\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$e);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.records$ = this.state$.pipe(map(state => state.records), distinctUntilChanged());\n      this.criteria$ = this.state$.pipe(map(state => state.criteria), distinctUntilChanged());\n      this.sort$ = this.state$.pipe(map(state => state.sort), distinctUntilChanged());\n      this.pagination$ = this.state$.pipe(map(state => state.pagination), distinctUntilChanged());\n      this.selection$ = this.state$.pipe(map(state => state.selection), distinctUntilChanged());\n      this.selectedCount$ = this.state$.pipe(map(state => state.selection.count), distinctUntilChanged());\n      this.selectedStatus$ = this.state$.pipe(map(state => state.selection.status), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n    }\n\n    connect() {\n      return this.records$;\n    }\n\n    disconnect() {}\n\n    get criteria() {\n      if (!this.internalState.criteria) {\n        return deepClone(initialSearchCriteria);\n      }\n\n      return deepClone(this.internalState.criteria);\n    }\n\n    set criteria(criteria) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        criteria\n      }));\n    }\n\n    get sort() {\n      if (!this.internalState.sort) {\n        return deepClone(initialListSort);\n      }\n\n      return deepClone(this.internalState.sort);\n    }\n\n    set sort(sort) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        sort\n      }));\n    }\n\n    get selection() {\n      if (!this.internalState.selection) {\n        return deepClone(initialSelection);\n      }\n\n      return deepClone(this.internalState.selection);\n    }\n\n    get records() {\n      if (!this.internalState.records) {\n        return [];\n      }\n\n      return this.internalState.records;\n    }\n\n    getModule() {\n      return this.internalState.module;\n    }\n\n    getRecord(id) {\n      let record = null;\n      this.records.some(item => {\n        if (item.id === id) {\n          record = item;\n          return true;\n        }\n      });\n      return record;\n    }\n    /**\n     * Clean destroy\n     */\n\n\n    destroy() {\n      this.clear();\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @param {boolean} load if to load\n     * @param {string} pageSizeConfigKey string\n     * @returns {object} Observable<any>\n     */\n\n\n    init(module, load = true, pageSizeConfigKey = 'list_max_entries_per_page') {\n      this.internalState.module = module;\n      this.watchPageSize(pageSizeConfigKey);\n\n      if (load === false) {\n        return null;\n      }\n\n      return this.load();\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<ListViewState>\n     */\n\n\n    load(useCache = true) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        loading: true\n      }));\n      return this.getRecords(this.internalState.module, this.internalState.criteria, this.internalState.sort, this.internalState.pagination, useCache).pipe(catchError(() => {\n        this.message.addDangerMessageByKey('LBL_GET_RECORD_LIST_ERROR');\n        return of({\n          records: [],\n          criteria: deepClone(initialSearchCriteria),\n          sort: deepClone(initialListSort),\n          pagination: {\n            pageSize: 5,\n            current: 0,\n            previous: 0,\n            next: 5,\n            last: 0,\n            total: 0,\n            pageFirst: 0,\n            pageLast: 0\n          },\n          selection: deepClone(initialSelection)\n        });\n      }), tap(data => {\n        this.calculatePageCount(data.records, data.pagination);\n        this.updateState(Object.assign(Object.assign({}, this.internalState), {\n          records: data.records,\n          pagination: data.pagination,\n          loading: false\n        }));\n      }));\n    }\n    /**\n     * Update the search criteria\n     *\n     * @param {object} criteria to set\n     * @param {boolean} reload flag\n     */\n\n\n    updateSearchCriteria(criteria, reload = true) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        criteria\n      }));\n\n      if (reload) {\n        this.updateSelection(SelectionStatus.NONE); // Reset pagination to default first page\n\n        this.resetPagination();\n      }\n    }\n    /**\n     * Reset search criteria\n     * @param {boolean} reload flag\n     */\n\n\n    resetSearchCriteria(reload = true) {\n      this.updateSearchCriteria(deepClone(initialSearchCriteria), reload);\n    }\n    /**\n     * Update current list view sorting\n     *\n     * @param {string} orderBy to set\n     * @param {string} sortOrder to set\n     * @param {boolean} reload flag\n     */\n\n\n    updateSorting(orderBy, sortOrder, reload = true) {\n      if (sortOrder === SortDirection.NONE) {\n        orderBy = '';\n        sortOrder = SortDirection.DESC;\n      }\n\n      const sort = {\n        orderBy,\n        sortOrder\n      };\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        sort\n      }));\n\n      if (reload) {\n        this.load(false).pipe(take(1)).subscribe();\n      }\n    }\n    /**\n     * Map sort order to SortDirection enum\n     * @param {string} sortOrder to map\n     * @returns {string} SortDirection\n     */\n\n\n    mapSortOrder(sortOrder) {\n      let direction = SortDirection.NONE;\n      const sort = sortOrder.toLowerCase();\n\n      if (sort === 'asc') {\n        direction = SortDirection.ASC;\n      } else if (sort === 'desc') {\n        direction = SortDirection.DESC;\n      }\n\n      return direction;\n    }\n    /**\n     * Update the pagination\n     *\n     * @param {number} current to set\n     */\n\n\n    updatePagination(current) {\n      const pagination = Object.assign(Object.assign({}, this.internalState.pagination), {\n        current\n      });\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        pagination\n      }));\n      this.load(false).pipe(take(1)).subscribe();\n    }\n    /**\n     * Reset/Clear the pagination\n     */\n\n\n    resetPagination() {\n      this.updatePagination(0);\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clear() {\n      this.cache$ = null;\n      this.store.unsubscribe();\n      this.preferencesSub.unsubscribe();\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Selection public api\n     */\n\n\n    getSelectionStatus() {\n      return this.selectedStatus$;\n    }\n\n    getSelectedCount() {\n      return this.selectedCount$;\n    }\n\n    updateSelection(state) {\n      if (state === SelectionStatus.NONE) {\n        this.clearSelection();\n        return;\n      }\n\n      if (state === SelectionStatus.ALL) {\n        this.selectAll();\n        return;\n      }\n\n      if (state === SelectionStatus.PAGE) {\n        this.selectPage();\n        return;\n      }\n    }\n\n    clearSelection() {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        selection: deepClone(initialSelection)\n      }));\n    }\n\n    clearSort() {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        sort: deepClone(initialListSort)\n      }));\n    }\n\n    selectAll() {\n      const total = this.internalState.pagination.total;\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        selection: {\n          all: true,\n          status: SelectionStatus.ALL,\n          selected: {},\n          count: total\n        }\n      }));\n    }\n\n    selectPage() {\n      const selected = Object.assign({}, this.internalState.selection.selected);\n\n      if (this.internalState.records && this.internalState.records.length) {\n        this.internalState.records.forEach(value => {\n          if (value && value.id) {\n            selected[value.id] = value.id;\n          }\n        });\n      }\n\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        selection: {\n          all: false,\n          status: SelectionStatus.SOME,\n          selected,\n          count: Object.keys(selected).length\n        }\n      }));\n    }\n\n    toggleSelection(id) {\n      const selection = deepClone(this.internalState.selection);\n\n      if (selection.selected[id]) {\n        delete selection.selected[id];\n      } else {\n        selection.selected[id] = id;\n      }\n\n      selection.count = Object.keys(selection.selected).length;\n\n      if (selection.count === 0) {\n        selection.status = SelectionStatus.NONE;\n      } else {\n        selection.status = SelectionStatus.SOME;\n      }\n\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        selection\n      }));\n    }\n    /**\n     * Pagination Public API\n     */\n\n\n    getPaginationCount() {\n      return this.pagination$.pipe(map(pagination => ({\n        pageFirst: pagination.pageFirst,\n        pageLast: pagination.pageLast,\n        total: pagination.total\n      })), distinctUntilChanged());\n    }\n\n    getPagination() {\n      return this.store.value.pagination;\n    }\n\n    changePage(page) {\n      let pageToLoad = 0;\n      const pageMap = {};\n      pageMap[PageSelection.FIRST] = 0;\n      pageMap[PageSelection.PREVIOUS] = this.internalState.pagination.previous;\n      pageMap[PageSelection.NEXT] = this.internalState.pagination.next;\n      pageMap[PageSelection.LAST] = this.internalState.pagination.last;\n\n      if (page in pageMap && pageMap[page] >= 0) {\n        pageToLoad = pageMap[page];\n\n        if (pageToLoad > this.internalState.pagination.last) {\n          return;\n        }\n\n        if (pageToLoad < 0) {\n          return;\n        }\n\n        this.updatePagination(pageToLoad);\n      }\n    }\n    /**\n     * Set Pagination page size\n     *\n     * @param {number} pageSize to set\n     */\n\n\n    setPageSize(pageSize) {\n      const pagination = Object.assign(Object.assign({}, this.internalState.pagination), {\n        pageSize\n      });\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        pagination\n      }));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Subscribe to page size changes\n     *\n     * @param {string} pageSizeConfigKey key\n     */\n\n\n    watchPageSize(pageSizeConfigKey) {\n      const pageSizePreference = this.preferencesStore.getUserPreference(pageSizeConfigKey);\n      const pageSizeConfig = this.configStore.getConfigValue(pageSizeConfigKey);\n      this.determinePageSize(pageSizePreference, pageSizeConfig);\n      this.preferencesSub = combineLatest([this.configStore.configs$, this.preferencesStore.userPreferences$]).pipe(tap(([configs, preferences]) => {\n        const key = pageSizeConfigKey;\n        const sizePreference = preferences && preferences[key] || null;\n        const sizeConfig = configs && configs[key] && configs[key].value || null;\n        this.determinePageSize(sizePreference, sizeConfig);\n      })).subscribe();\n    }\n    /**\n     * Determine page size to use\n     *\n     * @param {} pageSizePreference to use\n     * @param {string} pageSizeConfig to use\n     */\n\n\n    determinePageSize(pageSizePreference, pageSizeConfig) {\n      let size = 0;\n\n      if (pageSizePreference) {\n        size = pageSizePreference;\n      } else if (pageSizeConfig) {\n        size = parseInt(pageSizeConfig, 10);\n      }\n\n      this.setPageSize(size);\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n    /**\n     * Calculate page count\n     *\n     * @param {object} records list\n     * @param {object} pagination info\n     */\n\n\n    calculatePageCount(records, pagination) {\n      const recordCount = records && records.length || 0;\n      let pageFirst = 0;\n      let pageLast = 0;\n\n      if (recordCount > 0) {\n        pageFirst = pagination.current + 1;\n        pageLast = pagination.current + recordCount;\n      }\n\n      pagination.pageFirst = pageFirst;\n      pagination.pageLast = pageLast;\n    }\n    /**\n     * Get records cached Observable or call the backend\n     *\n     * @param {string} module to use\n     * @param {object} criteria to use\n     * @param {object} sort to use\n     * @param {object} pagination to use\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<any>\n     */\n\n\n    getRecords(module, criteria, sort, pagination, useCache = true) {\n      if (this.cache$ == null || useCache === false) {\n        this.cache$ = this.listGQL.get(module, criteria, sort, pagination).pipe(shareReplay(1));\n      }\n\n      return this.cache$;\n    }\n\n  }\n\n  RecordListStore.ɵfac = function RecordListStore_Factory(t) {\n    return new (t || RecordListStore)(ɵngcc0.ɵɵinject(ListGQL), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  RecordListStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordListStore,\n    factory: RecordListStore.ɵfac\n  });\n  return RecordListStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordListStoreFactory = /*#__PURE__*/(() => {\n  class RecordListStoreFactory {\n    constructor(listGQL, configStore, preferencesStore, appStateStore, languageStore, message) {\n      this.listGQL = listGQL;\n      this.configStore = configStore;\n      this.preferencesStore = preferencesStore;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.message = message;\n    }\n\n    create() {\n      return new RecordListStore(this.listGQL, this.configStore, this.preferencesStore, this.appStateStore, this.languageStore, this.message);\n    }\n\n  }\n\n  RecordListStoreFactory.ɵfac = function RecordListStoreFactory_Factory(t) {\n    return new (t || RecordListStoreFactory)(ɵngcc0.ɵɵinject(ListGQL), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  RecordListStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordListStoreFactory_Factory() {\n      return new RecordListStoreFactory(i0.ɵɵinject(ListGQL), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MessageService));\n    },\n    token: RecordListStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordListStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$d = {\n  module: '',\n  detailView: {},\n  editView: {},\n  listView: {},\n  search: {},\n  recordView: {},\n  subPanel: {},\n  massUpdate: {},\n  recentlyViewed: [],\n  favorites: []\n};\nconst initialModuleMetadataState = {};\nlet internalState$2 = deepClone(initialState$d);\nlet allModulesState = deepClone(initialModuleMetadataState);\nconst initialCache = {};\nlet cache = deepClone(initialCache);\nlet MetadataStore = /*#__PURE__*/(() => {\n  class MetadataStore {\n    constructor(recordGQL, appState) {\n      this.recordGQL = recordGQL;\n      this.appState = appState;\n      this.typeKeys = {\n        listView: 'listView',\n        search: 'search',\n        recordView: 'recordView',\n        subPanel: 'subPanel',\n        massUpdate: 'massUpdate',\n        recentlyViewed: 'recentlyViewed',\n        favorites: 'favorites'\n      };\n      this.store = new BehaviorSubject(internalState$2);\n      this.state$ = this.store.asObservable();\n      this.allModuleStore = new BehaviorSubject(allModulesState);\n      this.allModulesState$ = this.allModuleStore.asObservable();\n      this.resourceName = 'moduleMetadata';\n      this.fieldsMetadata = {\n        fields: ['id', '_id']\n      };\n      this.types = ['listView', 'search', 'recordView', 'subPanel', 'massUpdate', 'recentlyViewed', 'favorites'];\n      this.baseTypes = ['listView', 'search', 'recordView', 'favorites'];\n      this.listViewColumns$ = this.state$.pipe(map(state => state.listView.fields), distinctUntilChanged());\n      this.listViewLineActions$ = this.state$.pipe(map(state => state.listView.lineActions), distinctUntilChanged());\n      this.listMetadata$ = this.state$.pipe(map(state => state.listView), distinctUntilChanged());\n      this.searchMetadata$ = this.state$.pipe(map(state => state.search), distinctUntilChanged());\n      this.recordViewMetadata$ = this.state$.pipe(map(state => state.recordView), distinctUntilChanged());\n      this.subPanelMetadata$ = this.state$.pipe(map(state => state.subPanel), distinctUntilChanged());\n      this.metadata$ = this.state$;\n      this.allModuleMetadata$ = this.allModulesState$;\n    }\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cache = deepClone(initialCache);\n      allModulesState = deepClone(initialModuleMetadataState);\n      this.updateState('', deepClone(initialState$d));\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Get all metadata types\n     *\n     * @returns {string[]} metadata types\n     */\n\n\n    getMetadataTypes() {\n      return this.types;\n    }\n\n    getModule() {\n      return internalState$2.module;\n    }\n\n    get() {\n      return internalState$2;\n    }\n\n    getModuleMeta(module) {\n      var _a;\n\n      const meta = (_a = allModulesState[module]) !== null && _a !== void 0 ? _a : {};\n      return Object.assign({}, meta);\n    }\n\n    setModuleMetadata(module, metadata) {\n      cache[module] = of(metadata).pipe(shareReplay(1));\n      this.updateAllModulesState(module, metadata);\n    }\n    /**\n     * Initial ListViewMeta load if not cached and update state.\n     *\n     * @param {string} moduleID to fetch\n     * @param {string[]} types to fetch\n     * @param useCache\n     * @returns any data\n     */\n\n\n    reloadModuleMetadata(moduleID, types, useCache = true) {\n      if (!types) {\n        types = this.getMetadataTypes();\n      }\n\n      return this.getMetadata(moduleID, types, useCache).pipe(tap(metadata => {\n        this.updateAllModulesState(moduleID, metadata);\n      }));\n    }\n    /**\n     * Initial ListViewMeta load if not cached and update state.\n     *\n     * @param {string} moduleID to fetch\n     * @param {string[]} types to fetch\n     * @param useCache\n     * @returns any data\n     */\n\n\n    load(moduleID, types, useCache = true) {\n      if (!types) {\n        types = this.getMetadataTypes();\n      }\n\n      return this.getMetadata(moduleID, types, useCache).pipe(tap(metadata => {\n        this.updateState(moduleID, metadata);\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    isCached(module) {\n      var _a;\n\n      return ((_a = cache[module]) !== null && _a !== void 0 ? _a : null) !== null;\n    }\n    /**\n     * Get empty Metadata\n     */\n\n\n    getEmpty() {\n      return deepClone(initialState$d);\n    }\n    /**\n     * Set pre-loaded navigation and cache\n     */\n\n\n    set(module, metadata) {\n      cache[module] = of(metadata).pipe(shareReplay(1));\n      this.updateState(module, metadata);\n    }\n    /**\n     * Get ListViewMeta cached Observable or call the backend\n     *\n     * @param {string} module to fetch\n     * @param {string[]} types to retrieve\n     * @param useCache\n     * @returns {object} Observable<any>\n     */\n\n\n    getMetadata(module, types = null, useCache = true) {\n      if (cache[module] == null || useCache === false) {\n        cache[module] = this.fetchMetadata(module, types).pipe(shareReplay(1));\n      }\n\n      return cache[module];\n    }\n    /**\n     * Internal API\n     */\n\n\n    mapMetadata(module, data) {\n      var _a;\n\n      const moduleMetadata = (_a = allModulesState[module]) !== null && _a !== void 0 ? _a : {};\n      const metadata = Object.assign({}, moduleMetadata);\n      this.parseListViewMetadata(data, metadata);\n      this.parseSearchMetadata(data, metadata);\n      this.parseRecordViewMetadata(data, metadata);\n      this.parseSubPanelMetadata(data, metadata);\n      this.parseMassUpdateMetadata(data, metadata);\n      this.parseRecentlyViewedMetadata(data, metadata);\n      this.parseFavoritesMetadata(data, metadata);\n      return metadata;\n    }\n    /**\n     * Update the state\n     *\n     * @param {string} module\n     * @param {object} state to set\n     */\n\n\n    updateState(module, state) {\n      this.updateAllModulesState(module, state);\n      this.store.next(internalState$2 = Object.assign(Object.assign({}, state), {\n        module\n      }));\n    }\n    /**\n     * Update the state\n     *\n     * @param {string} module\n     * @param {object} state to set\n     */\n\n\n    updateAllModulesState(module, state) {\n      if (module !== '') {\n        const newState = Object.assign({}, allModulesState);\n        newState[module] = Object.assign({}, state);\n        this.allModuleStore.next(allModulesState = newState);\n      }\n    }\n    /**\n     * Fetch the Metadata from the backend\n     *\n     * @param {string} module to fetch\n     * @param {string[]} types to retrieve\n     * @returns {object} Observable<{}>\n     */\n\n\n    fetchMetadata(module, types) {\n      const fieldsToRetrieve = {\n        fields: [...this.fieldsMetadata.fields, ...(types !== null && types !== void 0 ? types : this.baseTypes)]\n      };\n      return this.recordGQL.fetch(this.resourceName, `/api/module-metadata/${module}`, fieldsToRetrieve).pipe(map(({\n        data\n      }) => {\n        return this.mapMetadata(module, data.moduleMetadata);\n      }));\n    }\n\n    parseListViewMetadata(data, metadata) {\n      if (!data || !data.listView) {\n        return;\n      }\n\n      const listViewMeta = {\n        fields: [],\n        bulkActions: {},\n        lineActions: [],\n        chartTypes: {},\n        filters: []\n      };\n\n      if (data.listView.columns) {\n        data.listView.columns.forEach(field => {\n          listViewMeta.fields.push(field);\n        });\n      }\n\n      const entries = {\n        bulkActions: 'bulkActions',\n        lineActions: 'lineActions',\n        sidebarWidgets: 'sidebarWidgets',\n        availableFilters: 'filters'\n      };\n      this.addDefinedMeta(listViewMeta, data.listView, entries);\n      metadata.listView = listViewMeta;\n    }\n\n    parseSearchMetadata(data, metadata) {\n      if (data && data.search) {\n        metadata.search = data.search;\n      }\n    }\n\n    parseSubPanelMetadata(data, metadata) {\n      if (data && data.subPanel) {\n        metadata.subPanel = data.subPanel;\n      }\n    }\n\n    parseMassUpdateMetadata(data, metadata) {\n      if (data && data.massUpdate) {\n        metadata.massUpdate = data.massUpdate;\n      }\n    }\n\n    parseRecordViewMetadata(data, metadata) {\n      if (!data || !data.recordView) {\n        return;\n      }\n\n      const recordViewMeta = {\n        actions: [],\n        templateMeta: {},\n        panels: []\n      };\n      const receivedMeta = data.recordView;\n      const entries = {\n        templateMeta: 'templateMeta',\n        actions: 'actions',\n        panels: 'panels',\n        topWidget: 'topWidget',\n        sidebarWidgets: 'sidebarWidgets',\n        bottomWidgets: 'bottomWidgets',\n        summaryTemplates: 'summaryTemplates',\n        vardefs: 'vardefs'\n      };\n      this.addDefinedMeta(recordViewMeta, receivedMeta, entries);\n      metadata.recordView = recordViewMeta;\n    }\n\n    parseRecentlyViewedMetadata(data, metadata) {\n      if (data && data.recentlyViewed) {\n        metadata.recentlyViewed = data.recentlyViewed;\n      }\n    }\n\n    parseFavoritesMetadata(data, metadata) {\n      if (data && data.favorites) {\n        metadata.favorites = data.favorites;\n      }\n    }\n\n    addDefinedMeta(metadata, received, keyMap) {\n      Object.keys(keyMap).forEach(dataKey => {\n        const metadataKey = keyMap[dataKey];\n\n        if (received[dataKey]) {\n          metadata[metadataKey] = received[dataKey];\n        }\n      });\n    }\n\n  }\n\n  MetadataStore.ɵfac = function MetadataStore_Factory(t) {\n    return new (t || MetadataStore)(ɵngcc0.ɵɵinject(EntityGQL), ɵngcc0.ɵɵinject(AppStateStore));\n  };\n\n  MetadataStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MetadataStore_Factory() {\n      return new MetadataStore(i0.ɵɵinject(EntityGQL), i0.ɵɵinject(AppStateStore));\n    },\n    token: MetadataStore,\n    providedIn: \"root\"\n  });\n  return MetadataStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordListModalStore = /*#__PURE__*/(() => {\n  class RecordListModalStore {\n    constructor(listStoreFactory, meta, preferences) {\n      this.listStoreFactory = listStoreFactory;\n      this.meta = meta;\n      this.preferences = preferences;\n      this.module = '';\n      this.parentModule = '';\n      this.recordList = listStoreFactory.create();\n      this.loading$ = this.recordList.loading$;\n      this.metadataLoadingState = new BehaviorSubject(false);\n      this.metadataLoading$ = this.metadataLoadingState.asObservable();\n    }\n\n    clear() {\n      this.recordList.clear();\n      this.recordList = null;\n    }\n\n    clearAuthBased() {\n      this.recordList.clearAuthBased();\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module name\n     * @param {string} parentModule\n     */\n\n\n    init(module, parentModule = '') {\n      this.module = module;\n      this.parentModule = parentModule;\n      this.loadCurrentSort();\n      this.metadataLoadingState.next(true);\n      const meta$ = this.meta.getMetadata(module).pipe(tap(() => {\n        this.metadataLoadingState.next(false);\n        this.recordList.load().pipe(take(1)).subscribe();\n      }));\n      this.listMetadata$ = meta$.pipe(map(meta => meta.listView));\n      this.searchMetadata$ = meta$.pipe(map(meta => meta.search));\n      this.recordList.init(module, false, 'list_max_entries_per_subpanel');\n      this.columns$ = this.listMetadata$.pipe(map(metadata => metadata.fields));\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordList>\n     */\n\n\n    load(useCache = true) {\n      return this.recordList.load(useCache);\n    }\n    /**\n     * Load current sorting\n     */\n\n\n    loadCurrentSort() {\n      if (!this.parentModule) {\n        return;\n      }\n\n      const currentSort = this.loadPreference(this.parentModule, 'current-sort');\n\n      if (!currentSort || emptyObject(currentSort)) {\n        return;\n      }\n\n      this.recordList.sort = currentSort;\n    }\n    /**\n     * Load current sorting\n     */\n\n\n    saveCurrentSort() {\n      if (!this.parentModule) {\n        return;\n      }\n\n      this.savePreference(this.parentModule, 'current-sort', this.recordList.sort);\n    }\n    /**\n     * Build ui user preference key\n     * @param storageKey\n     * @protected\n     */\n\n\n    getPreferenceKey(storageKey) {\n      return this.module + '-record-list-modal-' + storageKey;\n    }\n    /**\n     * Save ui user preference\n     * @param module\n     * @param storageKey\n     * @param value\n     * @protected\n     */\n\n\n    savePreference(module, storageKey, value) {\n      this.preferences.setUi(module, this.getPreferenceKey(storageKey), value);\n    }\n    /**\n     * Load ui user preference\n     * @param parentModule\n     * @param storageKey\n     * @protected\n     */\n\n\n    loadPreference(parentModule, storageKey) {\n      return this.preferences.getUi(parentModule, this.getPreferenceKey(storageKey));\n    }\n\n  }\n\n  RecordListModalStore.ɵfac = function RecordListModalStore_Factory(t) {\n    return new (t || RecordListModalStore)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  RecordListModalStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordListModalStore,\n    factory: RecordListModalStore.ɵfac\n  });\n  return RecordListModalStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordListModalStoreFactory = /*#__PURE__*/(() => {\n  class RecordListModalStoreFactory {\n    constructor(listStoreFactory, metadataStore, preferences) {\n      this.listStoreFactory = listStoreFactory;\n      this.metadataStore = metadataStore;\n      this.preferences = preferences;\n    }\n\n    create() {\n      return new RecordListModalStore(this.listStoreFactory, this.metadataStore, this.preferences);\n    }\n\n  }\n\n  RecordListModalStoreFactory.ɵfac = function RecordListModalStoreFactory_Factory(t) {\n    return new (t || RecordListModalStoreFactory)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  RecordListModalStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordListModalStoreFactory_Factory() {\n      return new RecordListModalStoreFactory(i0.ɵɵinject(RecordListStoreFactory), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(UserPreferenceStore));\n    },\n    token: RecordListModalStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordListModalStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MaxColumnsCalculator = /*#__PURE__*/(() => {\n  class MaxColumnsCalculator {\n    constructor(screenSize, systemConfigStore) {\n      this.screenSize = screenSize;\n      this.systemConfigStore = systemConfigStore;\n      this.screen = ScreenSize.Medium;\n      this.maxColumns = 5;\n    }\n\n    getMaxColumns(sidebarActive$) {\n      return combineLatest([sidebarActive$, this.screenSize.screenSize$]).pipe(map(([sidebarActive, screenSize]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        return this.calculateMaxColumns(sidebarActive);\n      }), distinctUntilChanged());\n    }\n\n    calculateMaxColumns(sideBar = true) {\n      let sizeMap;\n      sizeMap = this.systemConfigStore.getConfigValue('listview_column_limits');\n\n      if (sideBar) {\n        sizeMap = sizeMap.with_sidebar;\n      } else {\n        sizeMap = sizeMap.without_sidebar;\n      }\n\n      if (this.screen && sizeMap) {\n        const maxCols = sizeMap[this.screen];\n\n        if (maxCols) {\n          this.maxColumns = maxCols;\n        }\n      }\n\n      return this.maxColumns;\n    }\n\n  }\n\n  MaxColumnsCalculator.ɵfac = function MaxColumnsCalculator_Factory(t) {\n    return new (t || MaxColumnsCalculator)(ɵngcc0.ɵɵinject(ScreenSizeObserverService), ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  MaxColumnsCalculator.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MaxColumnsCalculator,\n    factory: MaxColumnsCalculator.ɵfac\n  });\n  return MaxColumnsCalculator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordListModalComponent = /*#__PURE__*/(() => {\n  class RecordListModalComponent {\n    constructor(activeModal, storeFactory, languages, maxColumnCalculator) {\n      this.activeModal = activeModal;\n      this.storeFactory = storeFactory;\n      this.languages = languages;\n      this.maxColumnCalculator = maxColumnCalculator;\n      this.titleKey = '';\n      this.adapter = null;\n      this.filterAdapter = null;\n      this.subs = [];\n      this.store = this.storeFactory.create();\n    }\n\n    ngOnInit() {\n      this.closeButton = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.activeModal.close({\n            type: 'close-button'\n          });\n        }\n      };\n      this.init();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    init() {\n      if (!this.module) {\n        return;\n      }\n\n      this.initStore();\n      this.initTableAdapter();\n      this.initFilterAdapters();\n    }\n\n    getMaxColumns() {\n      return this.maxColumnCalculator.getMaxColumns(of(true));\n    }\n\n    initTableAdapter() {\n      if (this.adapter === null) {\n        this.adapter = new ModalRecordListTableAdapter();\n      }\n\n      this.tableConfig = this.adapter.getTable(this.store);\n      this.tableConfig.maxColumns$ = this.getMaxColumns();\n    }\n\n    initFilterAdapters() {\n      if (this.filterAdapter === null) {\n        this.filterAdapter = new ModalRecordFilterAdapter();\n      }\n\n      this.filterConfig = this.filterAdapter.getConfig(this.store);\n    }\n\n    initStore() {\n      var _a;\n\n      this.store.init(this.module, (_a = this.parentModule) !== null && _a !== void 0 ? _a : '');\n      this.loading$ = this.store.metadataLoading$;\n      this.subs.push(this.store.recordList.selection$.pipe(distinctUntilChanged(), skip(1)).subscribe(selection => {\n        if (!selection || !selection.selected || Object.keys(selection.selected).length < 1) {\n          return;\n        }\n\n        this.activeModal.close({\n          selection,\n          records: this.store.recordList.records\n        });\n      }));\n    }\n\n  }\n\n  RecordListModalComponent.ɵfac = function RecordListModalComponent_Factory(t) {\n    return new (t || RecordListModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbActiveModal), ɵngcc0.ɵɵdirectiveInject(RecordListModalStoreFactory), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(MaxColumnsCalculator));\n  };\n\n  RecordListModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordListModalComponent,\n    selectors: [[\"scrm-record-list-modal\"]],\n    inputs: {\n      titleKey: \"titleKey\",\n      adapter: \"adapter\",\n      filterAdapter: \"filterAdapter\",\n      module: \"module\",\n      parentModule: \"parentModule\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([MaxColumnsCalculator])],\n    decls: 4,\n    vars: 5,\n    consts: [[\"bodyKlass\", \"m-0 small-font\", \"footerKlass\", \"border-0\", \"headerKlass\", \"border-0\", \"klass\", \"record-list-modal\", 3, \"closable\", \"close\", \"title\"], [\"modal-body\", \"\"], [4, \"ngIf\"], [\"labelKey\", \"LBL_CONFIG_NO_CONFIG\"], [1, \"container-fluid\"], [1, \"row\", \"pb-3\"], [1, \"col\"], [3, \"config\", 4, \"ngIf\"], [1, \"row\"], [3, \"config\"], [3, \"overlay\", 4, \"ngIf\"], [3, \"overlay\"]],\n    template: function RecordListModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-modal\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, RecordListModalComponent_ng_container_2_Template, 2, 0, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, RecordListModalComponent_ng_container_3_Template, 11, 5, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"closable\", true)(\"close\", ctx.closeButton)(\"title\", ctx.titleKey);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.tableConfig);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.tableConfig);\n      }\n    },\n    directives: function () {\n      return [ModalComponent, ɵngcc3.NgIf, LabelComponent, TableComponent, ListFilterComponent, LoadingSpinnerComponent];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('modalFade', [transition('void <=> *', [animate('800ms')])])]\n    }\n  });\n  return RecordListModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateService = /*#__PURE__*/(() => {\n  class RelateService {\n    constructor(recordListStoreFactory) {\n      this.recordList = recordListStoreFactory.create();\n    }\n\n    init(module) {\n      this.recordList.init(module, false);\n    }\n\n    search(term, field) {\n      const criteria = this.recordList.criteria;\n      criteria.filters[field] = {\n        field,\n        operator: '=',\n        values: [term]\n      };\n      this.recordList.updateSearchCriteria(criteria, false);\n      return this.recordList.load(false).pipe(map(value => value.records), take(1), shareReplay(1));\n    }\n\n  }\n\n  RelateService.ɵfac = function RelateService_Factory(t) {\n    return new (t || RelateService)(ɵngcc0.ɵɵinject(RecordListStoreFactory));\n  };\n\n  RelateService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RelateService,\n    factory: RelateService.ɵfac\n  });\n  return RelateService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseRelateComponent = /*#__PURE__*/(() => {\n  class BaseRelateComponent extends BaseFieldComponent {\n    constructor(languages, typeFormatter, relateService, moduleNameMapper, logic) {\n      super(typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.relateService = relateService;\n      this.moduleNameMapper = moduleNameMapper;\n      this.logic = logic;\n      this.selectedValues = [];\n      this.status = '';\n      this.initModule = '';\n\n      this.search = text => {\n        this.status = 'searching';\n        return this.relateService.search(text, this.getRelateFieldName()).pipe(tap(() => this.status = 'found'), catchError(() => {\n          this.status = 'error';\n          return of([]);\n        }), map(records => {\n          if (!records || records.length < 1) {\n            this.status = 'not-found';\n            return [];\n          }\n\n          const flatRecords = [];\n          records.forEach(record => {\n            if (record && record.attributes) {\n              flatRecords.push(record.attributes);\n            }\n          });\n          this.status = '';\n          return flatRecords;\n        }));\n      };\n    }\n\n    get module() {\n      if (!this.record || !this.record.module) {\n        return null;\n      }\n\n      return this.record.module;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.init();\n      this.subs.push(this.field.valueChanges$.subscribe(() => {\n        this.onModuleChange();\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    onModuleChange() {\n      var _a, _b, _c;\n\n      const currentModule = this.initModule;\n      const newModule = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.field) === null || _a === void 0 ? void 0 : _a.definition) === null || _b === void 0 ? void 0 : _b.module) !== null && _c !== void 0 ? _c : '';\n\n      if (currentModule === newModule) {\n        return;\n      }\n\n      this.initModule = newModule;\n\n      if (currentModule === '' && currentModule !== newModule) {\n        this.init();\n      }\n\n      if (newModule === '') {\n        this.status = 'no-module';\n      } else {\n        this.status = '';\n      }\n    }\n\n    getRelateFieldName() {\n      return this.field && this.field.definition && this.field.definition.rname || 'name';\n    }\n\n    getRelateIdField() {\n      return this.field && this.field.definition && this.field.definition.id_name || '';\n    }\n\n    getRelatedModule() {\n      const legacyName = this.field && this.field.definition && this.field.definition.module || '';\n\n      if (!legacyName) {\n        return '';\n      }\n\n      return this.moduleNameMapper.toFrontend(legacyName);\n    }\n\n    getMessage() {\n      const messages = {\n        searching: 'LBL_SEARCHING',\n        'not-found': 'LBL_NOT_FOUND',\n        error: 'LBL_SEARCH_ERROR',\n        found: 'LBL_FOUND',\n        'no-module': 'LBL_NO_MODULE_SELECTED'\n      };\n\n      if (messages[this.status]) {\n        return messages[this.status];\n      }\n\n      return '';\n    }\n\n    getInvalidClass() {\n      if (this.field.formControl && this.field.formControl.invalid && this.field.formControl.touched) {\n        return 'is-invalid';\n      }\n\n      if (this.hasSearchError()) {\n        return 'is-invalid';\n      }\n\n      return '';\n    }\n\n    hasSearchError() {\n      return this.status === 'error' || this.status === 'not-found';\n    }\n\n    resetStatus() {\n      this.status = '';\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_TYPE_TO_SEARCH') || '';\n    }\n\n    init() {\n      var _a, _b, _c;\n\n      this.initModule = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.field) === null || _a === void 0 ? void 0 : _a.definition) === null || _b === void 0 ? void 0 : _b.module) !== null && _c !== void 0 ? _c : '';\n\n      if (this.relateService) {\n        this.relateService.init(this.getRelatedModule());\n      }\n    }\n\n    buildRelate(id, relateValue) {\n      const relate = {\n        id\n      };\n\n      if (this.getRelateFieldName()) {\n        relate[this.getRelateFieldName()] = relateValue;\n      }\n\n      return relate;\n    }\n\n  }\n\n  BaseRelateComponent.ɵfac = function BaseRelateComponent_Factory(t) {\n    return new (t || BaseRelateComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(RelateService), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseRelateComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseRelateComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseRelateComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseRelateComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateEditFieldComponent = /*#__PURE__*/(() => {\n  class RelateEditFieldComponent extends BaseRelateComponent {\n    /**\n     * Constructor\n     *\n     * @param {object} languages service\n     * @param {object} typeFormatter service\n     * @param {object} relateService service\n     * @param {object} moduleNameMapper service\n     * @param {object} modalService service\n     * @param {object} logic\n     */\n    constructor(languages, typeFormatter, relateService, moduleNameMapper, modalService, logic) {\n      super(languages, typeFormatter, relateService, moduleNameMapper, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.relateService = relateService;\n      this.moduleNameMapper = moduleNameMapper;\n      this.modalService = modalService;\n      this.logic = logic;\n      this.selectButton = {\n        klass: ['btn', 'btn-sm', 'btn-outline-secondary', 'select-button', 'm-0'],\n        onClick: () => {\n          this.showSelectModal();\n        },\n        icon: 'cursor'\n      };\n    }\n    /**\n     * On init handler\n     */\n\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.init();\n    }\n\n    init() {\n      super.init();\n      this.initValue();\n      const idFieldName = this.getRelateIdField();\n\n      if (idFieldName && this.record && this.record.fields && this.record.fields[idFieldName]) {\n        this.idField = this.record.fields[idFieldName];\n      }\n    }\n\n    initValue() {\n      if (!this.field.valueObject) {\n        this.selectedValues = [];\n        return;\n      }\n\n      if (!this.field.valueObject.id) {\n        this.selectedValues = [];\n        return;\n      }\n\n      this.selectedValues = [];\n      this.selectedValues.push(this.field.valueObject);\n    }\n    /**\n     * Handle newly added item\n     *\n     * @param {object} item added\n     */\n\n\n    onAdd(item) {\n      if (item) {\n        const relateName = this.getRelateFieldName();\n        this.setValue(item.id, item[relateName]);\n        return;\n      }\n\n      this.setValue('', '');\n      this.selectedValues = [];\n      return;\n    }\n    /**\n     * Handle item removal\n     */\n\n\n    onRemove() {\n      this.setValue('', '');\n      this.selectedValues = [];\n      setTimeout(() => {\n        this.tag.focus(true, true);\n      }, 200);\n    }\n    /**\n     * Set value on field\n     *\n     * @param {string} id to set\n     * @param {string} relateValue to set\n     */\n\n\n    setValue(id, relateValue) {\n      const relate = this.buildRelate(id, relateValue);\n      this.field.value = relateValue;\n      this.field.valueObject = relate;\n      this.field.formControl.setValue(relateValue);\n      this.field.formControl.markAsDirty();\n\n      if (this.idField) {\n        this.idField.value = id;\n        this.idField.formControl.setValue(id);\n        this.idField.formControl.markAsDirty();\n      }\n    }\n    /**\n     * Show record selection modal\n     */\n\n\n    showSelectModal() {\n      const modal = this.modalService.open(RecordListModalComponent, {\n        size: 'xl',\n        scrollable: true\n      });\n      modal.componentInstance.module = this.getRelatedModule();\n      modal.result.then(data => {\n        if (!data || !data.selection || !data.selection.selected) {\n          return;\n        }\n\n        const record = this.getSelectedRecord(data);\n        this.setItem(record);\n      });\n    }\n    /**\n     * Get Selected Record\n     *\n     * @param {object} data RecordListModalResult\n     * @returns {object} Record\n     */\n\n\n    getSelectedRecord(data) {\n      let id = '';\n      Object.keys(data.selection.selected).some(selected => {\n        id = selected;\n        return true;\n      });\n      let record = null;\n      data.records.some(rec => {\n        if (rec && rec.id === id) {\n          record = rec;\n          return true;\n        }\n      });\n      return record;\n    }\n    /**\n     * Set the record as the selected item\n     *\n     * @param {object} record to set\n     */\n\n\n    setItem(record) {\n      this.tag.writeValue([record.attributes]);\n      this.onAdd(record.attributes);\n    }\n\n    selectFirstElement() {\n      const filteredElements = this.tag.dropdown.items;\n\n      if (filteredElements.length !== 0) {\n        const firstElement = filteredElements[0];\n        this.selectedValues.push(firstElement);\n        this.onAdd(firstElement);\n        this.tag.dropdown.hide();\n      }\n    }\n\n  }\n\n  RelateEditFieldComponent.ɵfac = function RelateEditFieldComponent_Factory(t) {\n    return new (t || RelateEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(RelateService), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  RelateEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RelateEditFieldComponent,\n    selectors: [[\"scrm-relate-edit\"]],\n    viewQuery: function RelateEditFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([RelateService]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"d-flex\"], [4, \"ngIf\"], [\"class\", \"text-danger form-text text-muted\", 4, \"ngIf\"], [1, \"flex-grow-1\"], [\"maxItems\", \"1\", 3, \"ngModel\", \"clearOnBlur\", \"displayBy\", \"inputClass\", \"onTextChangeDebounce\", \"onlyFromAutocomplete\", \"placeholder\", \"secondaryPlaceholder\", \"keyup.enter\", \"onAdd\", \"onBlur\", \"onRemove\", \"ngModelChange\"], [\"tag\", \"\"], [3, \"autocompleteObservable\", \"displayBy\", \"keepOpen\", \"showDropdownIfEmpty\"], [1, \"relate-btn\"], [3, \"config\"], [1, \"text-danger\", \"form-text\", \"text-muted\"], [3, \"labelKey\", \"module\"]],\n    template: function RelateEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, RelateEditFieldComponent_ng_container_1_Template, 7, 15, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, RelateEditFieldComponent_small_2_Template, 2, 2, \"small\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.initModule);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getMessage());\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown, ButtonComponent, LabelComponent],\n    encapsulation: 2\n  });\n  return RelateEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InlineLoadingSpinnerComponent = /*#__PURE__*/(() => {\n  class InlineLoadingSpinnerComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  InlineLoadingSpinnerComponent.ɵfac = function InlineLoadingSpinnerComponent_Factory(t) {\n    return new (t || InlineLoadingSpinnerComponent)();\n  };\n\n  InlineLoadingSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: InlineLoadingSpinnerComponent,\n    selectors: [[\"scrm-inline-loading-spinner\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"inline-spinner\"], [1, \"bounce1\"], [1, \"bounce2\"], [1, \"bounce3\"]],\n    template: function InlineLoadingSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".inline-spinner[_ngcontent-%COMP%]{text-align:center}.inline-spinner[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{border-radius:100%;display:inline-block;-webkit-animation:sk-bouncedelay 1.4s infinite ease-in-out both;animation:sk-bouncedelay 1.4s infinite ease-in-out both}.inline-spinner[_ngcontent-%COMP%]   .bounce1[_ngcontent-%COMP%]{-webkit-animation-delay:-.32s;animation-delay:-.32s}.inline-spinner[_ngcontent-%COMP%]   .bounce2[_ngcontent-%COMP%]{-webkit-animation-delay:-.16s;animation-delay:-.16s}@-webkit-keyframes sk-bouncedelay{0%,80%,to{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes sk-bouncedelay{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}\"]\n  });\n  return InlineLoadingSpinnerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InlineLoadingSpinnerModule = /*#__PURE__*/(() => {\n  class InlineLoadingSpinnerModule {}\n\n  InlineLoadingSpinnerModule.ɵfac = function InlineLoadingSpinnerModule_Factory(t) {\n    return new (t || InlineLoadingSpinnerModule)();\n  };\n\n  InlineLoadingSpinnerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InlineLoadingSpinnerModule\n  });\n  InlineLoadingSpinnerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return InlineLoadingSpinnerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InlineLoadingSpinnerModule, {\n    declarations: function () {\n      return [InlineLoadingSpinnerComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [InlineLoadingSpinnerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateEditFieldModule = /*#__PURE__*/(() => {\n  class RelateEditFieldModule {}\n\n  RelateEditFieldModule.ɵfac = function RelateEditFieldModule_Factory(t) {\n    return new (t || RelateEditFieldModule)();\n  };\n\n  RelateEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RelateEditFieldModule\n  });\n  RelateEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TagInputModule, LabelModule, FormsModule, InlineLoadingSpinnerModule, ButtonModule]]\n  });\n  return RelateEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RelateEditFieldModule, {\n    declarations: function () {\n      return [RelateEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, TagInputModule, LabelModule, FormsModule, InlineLoadingSpinnerModule, ButtonModule];\n    },\n    exports: function () {\n      return [RelateEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateFilterFieldComponent = /*#__PURE__*/(() => {\n  class RelateFilterFieldComponent extends BaseRelateComponent {\n    /**\n     * Constructor\n     *\n     * @param {object} languages service\n     * @param {object} typeFormatter service\n     * @param {object} relateService service\n     * @param {object} moduleNameMapper service\n     * @param {object} modalService service\n     * @param {object} logic\n     */\n    constructor(languages, typeFormatter, relateService, moduleNameMapper, modalService, logic) {\n      super(languages, typeFormatter, relateService, moduleNameMapper, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.relateService = relateService;\n      this.moduleNameMapper = moduleNameMapper;\n      this.modalService = modalService;\n      this.logic = logic;\n      this.selectButton = {\n        klass: ['btn', 'btn-sm', 'btn-outline-secondary', 'select-button', 'm-0'],\n        onClick: () => {\n          this.showSelectModal();\n        },\n        icon: 'cursor'\n      };\n    }\n    /**\n     * On init handler\n     */\n\n\n    ngOnInit() {\n      const filter = this.record;\n      this.field.valueList = [];\n      this.field.valueObjectArray = [];\n      const values = this.field && this.field.criteria && this.field.criteria.values || [];\n\n      if (values.length > 0) {\n        this.field.valueList = values;\n        this.selectedTags = values;\n      }\n\n      const valueObjectArray = this.field && this.field.criteria && this.field.criteria.valueObjectArray || [];\n\n      if (valueObjectArray.length > 0) {\n        this.field.valueObjectArray = deepClone(valueObjectArray);\n        this.selectedTags = deepClone(valueObjectArray);\n      }\n\n      super.ngOnInit();\n      const idFieldName = this.getRelateIdField();\n\n      if (idFieldName && filter && filter.criteriaFields && filter.criteriaFields[idFieldName]) {\n        this.idField = filter.criteriaFields[idFieldName];\n        this.idField.valueList = [];\n        const idValues = this.idField && this.idField.criteria && this.idField.criteria.values || [];\n\n        if (idValues.length > 0) {\n          this.idField.valueList = deepClone(idValues);\n        }\n      }\n    }\n    /**\n     * Handle newly added item\n     *\n     * @param {object} item added\n     */\n\n\n    onAdd(item) {\n      if (item) {\n        this.setValue(item);\n        return;\n      }\n    }\n\n    onAdding(item) {\n      if (!item) {\n        return EMPTY;\n      }\n\n      if (this.idField && this.idField.valueList.includes(item.id)) {\n        return EMPTY;\n      }\n\n      const relateName = this.getRelateFieldName();\n\n      if (!this.idField && this.field.valueList.includes(item[relateName])) {\n        return EMPTY;\n      }\n\n      return of(item);\n    }\n    /**\n     * Handle item removal\n     */\n\n\n    onRemove(item) {\n      var _a, _b;\n\n      const id = (_a = item.id) !== null && _a !== void 0 ? _a : '';\n      const value = (_b = item.name) !== null && _b !== void 0 ? _b : '';\n      this.field.valueList = this.field.valueList.filter(element => element !== value);\n      this.field.valueObjectArray = this.field.valueObjectArray.filter(element => element.id !== id);\n      this.updateSearchCriteria(this.field);\n      this.field.criteria.valueObjectArray = deepClone(this.field.valueObjectArray);\n\n      if (this.idField && id) {\n        this.idField.valueList = this.idField.valueList.filter(element => element !== id);\n        this.updateSearchCriteria(this.idField);\n      }\n\n      setTimeout(() => {\n        this.tag.focus(true, true);\n      }, 200);\n    }\n\n    selectFirstElement() {\n      const filteredElements = this.tag.dropdown.items;\n\n      if (filteredElements.length !== 0) {\n        const firstElement = filteredElements[0];\n        this.tag.appendTag(firstElement);\n        this.onAdd(firstElement);\n        this.tag.dropdown.hide();\n      }\n    }\n    /**\n     * Set value on field\n     *\n     * @param item: any\n     */\n\n\n    setValue(item) {\n      const relateName = this.getRelateFieldName();\n      const id = item.id;\n      const relateValue = item[relateName];\n\n      if (this.idField && this.idField.valueList.includes(id)) {\n        return;\n      }\n\n      if (!this.idField && this.field.valueList.includes(relateValue)) {\n        return;\n      }\n\n      const valueObject = {};\n      valueObject.id = id;\n      valueObject[relateName] = relateValue;\n      this.field.valueObjectArray.push(valueObject);\n      this.field.valueList.push(relateValue);\n\n      if (this.idField) {\n        this.idField.valueList.push(id);\n        this.updateSearchCriteria(this.idField);\n      }\n\n      this.updateSearchCriteria(this.field);\n\n      if (!this.field.criteria.valueObjectArray) {\n        this.field.criteria.valueObjectArray = [];\n      }\n\n      this.field.criteria.valueObjectArray.push(valueObject);\n    }\n    /**\n     * Set value on field criteria and form\n     */\n\n\n    updateSearchCriteria(field) {\n      field.criteria.operator = '=';\n      field.criteria.values = field.valueList;\n      field.formControl.setValue(field.valueList);\n      field.formControl.markAsDirty();\n    }\n    /**\n     * Show record selection modal\n     */\n\n\n    showSelectModal() {\n      const modal = this.modalService.open(RecordListModalComponent, {\n        size: 'xl',\n        scrollable: true\n      });\n      modal.componentInstance.module = this.getRelatedModule();\n      modal.result.then(data => {\n        if (!data || !data.selection || !data.selection.selected) {\n          return;\n        }\n\n        const record = this.getSelectedRecord(data);\n        const found = this.field.valueObjectArray.find(element => element.id === record.id);\n\n        if (found) {\n          return;\n        }\n\n        this.setItem(record);\n      });\n    }\n    /**\n     * Get Selected Record\n     *\n     * @param {object} data RecordListModalResult\n     * @returns {object} Record\n     */\n\n\n    getSelectedRecord(data) {\n      let id = '';\n      Object.keys(data.selection.selected).some(selected => {\n        id = selected;\n        return true;\n      });\n      let record = null;\n      data.records.some(rec => {\n        if (rec && rec.id === id) {\n          record = rec;\n          return true;\n        }\n      });\n      return record;\n    }\n    /**\n     * Set the record as the selected item\n     *\n     * @param {object} record to set\n     */\n\n\n    setItem(record) {\n      this.tag.appendTag(record.attributes);\n      this.onAdd(record.attributes);\n    }\n\n  }\n\n  RelateFilterFieldComponent.ɵfac = function RelateFilterFieldComponent_Factory(t) {\n    return new (t || RelateFilterFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(RelateService), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  RelateFilterFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RelateFilterFieldComponent,\n    selectors: [[\"scrm-relate-filter\"]],\n    viewQuery: function RelateFilterFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([RelateService]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 18,\n    consts: [[1, \"d-flex\"], [1, \"flex-grow-1\"], [3, \"ngModel\", \"clearOnBlur\", \"identifyBy\", \"displayBy\", \"inputClass\", \"onTextChangeDebounce\", \"onlyFromAutocomplete\", \"placeholder\", \"secondaryPlaceholder\", \"keyup.enter\", \"onAdd\", \"onBlur\", \"onRemove\", \"ngModelChange\"], [\"tag\", \"\"], [3, \"autocompleteObservable\", \"identifyBy\", \"displayBy\", \"keepOpen\", \"showDropdownIfEmpty\"], [1, \"relate-btn\"], [3, \"config\"], [\"class\", \"text-danger form-text text-muted\", 4, \"ngIf\"], [1, \"text-danger\", \"form-text\", \"text-muted\"], [3, \"labelKey\", \"module\"]],\n    template: function RelateFilterFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tag-input\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"keyup.enter\", function RelateFilterFieldComponent_Template_tag_input_keyup_enter_2_listener() {\n          return ctx.selectFirstElement();\n        })(\"onAdd\", function RelateFilterFieldComponent_Template_tag_input_onAdd_2_listener($event) {\n          return ctx.onAdd($event);\n        })(\"onBlur\", function RelateFilterFieldComponent_Template_tag_input_onBlur_2_listener() {\n          return ctx.resetStatus();\n        })(\"onRemove\", function RelateFilterFieldComponent_Template_tag_input_onRemove_2_listener($event) {\n          return ctx.onRemove($event);\n        })(\"ngModelChange\", function RelateFilterFieldComponent_Template_tag_input_ngModelChange_2_listener($event) {\n          return ctx.selectedTags = $event;\n        });\n        ɵngcc0.ɵɵelement(4, \"tag-input-dropdown\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"scrm-button\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, RelateFilterFieldComponent_small_7_Template, 2, 2, \"small\", 7);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ctx.getInvalidClass());\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedTags)(\"clearOnBlur\", true)(\"identifyBy\", \"id\")(\"displayBy\", ctx.getRelateFieldName())(\"inputClass\", ctx.getInvalidClass())(\"onTextChangeDebounce\", 500)(\"onlyFromAutocomplete\", true)(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"autocompleteObservable\", ctx.search)(\"identifyBy\", \"id\")(\"displayBy\", ctx.getRelateFieldName())(\"keepOpen\", false)(\"showDropdownIfEmpty\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.selectButton);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getMessage());\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown, ButtonComponent, ɵngcc3.NgIf, LabelComponent],\n    encapsulation: 2\n  });\n  return RelateFilterFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TextDetailFieldModule = /*#__PURE__*/(() => {\n  class TextDetailFieldModule {}\n\n  TextDetailFieldModule.ɵfac = function TextDetailFieldModule_Factory(t) {\n    return new (t || TextDetailFieldModule)();\n  };\n\n  TextDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TextDetailFieldModule\n  });\n  TextDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return TextDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextDetailFieldModule, {\n    declarations: function () {\n      return [TextDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [TextDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PhoneDetailFieldModule = /*#__PURE__*/(() => {\n  class PhoneDetailFieldModule {}\n\n  PhoneDetailFieldModule.ɵfac = function PhoneDetailFieldModule_Factory(t) {\n    return new (t || PhoneDetailFieldModule)();\n  };\n\n  PhoneDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PhoneDetailFieldModule\n  });\n  PhoneDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return PhoneDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PhoneDetailFieldModule, {\n    declarations: function () {\n      return [PhoneDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [PhoneDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateEditFieldModule = /*#__PURE__*/(() => {\n  class DateEditFieldModule {}\n\n  DateEditFieldModule.ɵfac = function DateEditFieldModule_Factory(t) {\n    return new (t || DateEditFieldModule)();\n  };\n\n  DateEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateEditFieldModule\n  });\n  DateEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, NgbDatepickerModule, ButtonModule, ReactiveFormsModule]]\n  });\n  return DateEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateEditFieldModule, {\n    declarations: function () {\n      return [DateEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, NgbDatepickerModule, ButtonModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [DateEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumFilterFieldModule = /*#__PURE__*/(() => {\n  class MultiEnumFilterFieldModule {}\n\n  MultiEnumFilterFieldModule.ɵfac = function MultiEnumFilterFieldModule_Factory(t) {\n    return new (t || MultiEnumFilterFieldModule)();\n  };\n\n  MultiEnumFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MultiEnumFilterFieldModule\n  });\n  MultiEnumFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, TagInputModule]]\n  });\n  return MultiEnumFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MultiEnumFilterFieldModule, {\n    declarations: function () {\n      return [MultiEnumFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule, TagInputModule];\n    },\n    exports: function () {\n      return [MultiEnumFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateDetailFieldsModule = /*#__PURE__*/(() => {\n  class RelateDetailFieldsModule {}\n\n  RelateDetailFieldsModule.ɵfac = function RelateDetailFieldsModule_Factory(t) {\n    return new (t || RelateDetailFieldsModule)();\n  };\n\n  RelateDetailFieldsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RelateDetailFieldsModule\n  });\n  RelateDetailFieldsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return RelateDetailFieldsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RelateDetailFieldsModule, {\n    declarations: function () {\n      return [RelateDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [RelateDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RelateFilterFieldModule = /*#__PURE__*/(() => {\n  class RelateFilterFieldModule {}\n\n  RelateFilterFieldModule.ɵfac = function RelateFilterFieldModule_Factory(t) {\n    return new (t || RelateFilterFieldModule)();\n  };\n\n  RelateFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RelateFilterFieldModule\n  });\n  RelateFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TagInputModule, LabelModule, FormsModule, InlineLoadingSpinnerModule, ButtonModule, TagInputModule]]\n  });\n  return RelateFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RelateFilterFieldModule, {\n    declarations: function () {\n      return [RelateFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, TagInputModule, LabelModule, FormsModule, InlineLoadingSpinnerModule, ButtonModule, TagInputModule];\n    },\n    exports: function () {\n      return [RelateFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanEditFieldComponent = /*#__PURE__*/(() => {\n  class BooleanEditFieldComponent extends BaseBooleanComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  BooleanEditFieldComponent.ɵfac = function BooleanEditFieldComponent_Factory(t) {\n    return new (t || BooleanEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BooleanEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BooleanEditFieldComponent,\n    selectors: [[\"scrm-boolean-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"pb-4\", \"checkbox-field\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", \"aria-hidden\", \"true\", 3, \"checked\", \"change\"], [1, \"checkmark\"]],\n    template: function BooleanEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"label\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"input\", 2);\n        ɵngcc0.ɵɵlistener(\"change\", function BooleanEditFieldComponent_Template_input_change_2_listener() {\n          return ctx.toggle();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"checked\", ctx.checked);\n      }\n    },\n    encapsulation: 2\n  });\n  return BooleanEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanEditFieldModule = /*#__PURE__*/(() => {\n  class BooleanEditFieldModule {}\n\n  BooleanEditFieldModule.ɵfac = function BooleanEditFieldModule_Factory(t) {\n    return new (t || BooleanEditFieldModule)();\n  };\n\n  BooleanEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BooleanEditFieldModule\n  });\n  BooleanEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return BooleanEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BooleanEditFieldModule, {\n    declarations: function () {\n      return [BooleanEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [BooleanEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharEditFieldModule = /*#__PURE__*/(() => {\n  class VarcharEditFieldModule {}\n\n  VarcharEditFieldModule.ɵfac = function VarcharEditFieldModule_Factory(t) {\n    return new (t || VarcharEditFieldModule)();\n  };\n\n  VarcharEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: VarcharEditFieldModule\n  });\n  VarcharEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, LabelModule]]\n  });\n  return VarcharEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VarcharEditFieldModule, {\n    declarations: function () {\n      return [VarcharEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule, LabelModule];\n    },\n    exports: function () {\n      return [VarcharEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BooleanDetailFieldModule = /*#__PURE__*/(() => {\n  class BooleanDetailFieldModule {}\n\n  BooleanDetailFieldModule.ɵfac = function BooleanDetailFieldModule_Factory(t) {\n    return new (t || BooleanDetailFieldModule)();\n  };\n\n  BooleanDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BooleanDetailFieldModule\n  });\n  BooleanDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return BooleanDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BooleanDetailFieldModule, {\n    declarations: function () {\n      return [BooleanDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [BooleanDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UrlDetailFieldModule = /*#__PURE__*/(() => {\n  class UrlDetailFieldModule {}\n\n  UrlDetailFieldModule.ɵfac = function UrlDetailFieldModule_Factory(t) {\n    return new (t || UrlDetailFieldModule)();\n  };\n\n  UrlDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: UrlDetailFieldModule\n  });\n  UrlDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return UrlDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UrlDetailFieldModule, {\n    declarations: function () {\n      return [UrlDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [UrlDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumEditFieldComponent = /*#__PURE__*/(() => {\n  class MultiEnumEditFieldComponent extends BaseMultiEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      this.checkAndInitAsDynamicEnum();\n      super.ngOnInit();\n    }\n\n    onAdd() {\n      const value = this.selectedValues.map(option => option.value);\n      this.field.valueList = value;\n      this.field.formControl.setValue(value);\n      this.field.formControl.markAsDirty();\n      return;\n    }\n\n    onRemove() {\n      const value = this.selectedValues.map(option => option.value);\n      this.field.valueList = value;\n      this.field.formControl.setValue(value);\n      this.field.formControl.markAsDirty();\n      setTimeout(() => {\n        this.tag.focus(true, true);\n        this.tag.dropdown.show();\n      }, 200);\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_SELECT_ITEM') || '';\n    }\n\n    selectFirstElement() {\n      const filteredElements = this.tag.dropdown.items;\n\n      if (filteredElements.length !== 0) {\n        const firstElement = filteredElements[0];\n        this.selectedValues.push(firstElement);\n        this.onAdd();\n        this.tag.dropdown.hide();\n      }\n    }\n\n  }\n\n  MultiEnumEditFieldComponent.ɵfac = function MultiEnumEditFieldComponent_Factory(t) {\n    return new (t || MultiEnumEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  MultiEnumEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MultiEnumEditFieldComponent,\n    selectors: [[\"scrm-multienum-edit\"]],\n    viewQuery: function MultiEnumEditFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 13,\n    consts: [[3, \"ngModel\", \"onlyFromAutocomplete\", \"clearOnBlur\", \"displayBy\", \"identifyBy\", \"placeholder\", \"secondaryPlaceholder\", \"inputClass\", \"ngModelChange\", \"onAdd\", \"onRemove\", \"keyup.enter\"], [\"tag\", \"\"], [3, \"displayBy\", \"identifyBy\", \"showDropdownIfEmpty\", \"keepOpen\", \"autocompleteItems\"]],\n    template: function MultiEnumEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tag-input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function MultiEnumEditFieldComponent_Template_tag_input_ngModelChange_0_listener($event) {\n          return ctx.selectedValues = $event;\n        })(\"onAdd\", function MultiEnumEditFieldComponent_Template_tag_input_onAdd_0_listener() {\n          return ctx.onAdd();\n        })(\"onRemove\", function MultiEnumEditFieldComponent_Template_tag_input_onRemove_0_listener() {\n          return ctx.onRemove();\n        })(\"keyup.enter\", function MultiEnumEditFieldComponent_Template_tag_input_keyup_enter_0_listener() {\n          return ctx.selectFirstElement();\n        });\n        ɵngcc0.ɵɵelement(2, \"tag-input-dropdown\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedValues)(\"onlyFromAutocomplete\", true)(\"clearOnBlur\", true)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel())(\"inputClass\", ctx.getInvalidClass());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"showDropdownIfEmpty\", true)(\"keepOpen\", false)(\"autocompleteItems\", ctx.options);\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown],\n    encapsulation: 2\n  });\n  return MultiEnumEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet IntDetailFieldComponent = /*#__PURE__*/(() => {\n  class IntDetailFieldComponent extends BaseNumberComponent {\n    constructor(userPreferences, systemConfig, typeFormatter, logic) {\n      super(userPreferences, systemConfig, typeFormatter, logic);\n      this.userPreferences = userPreferences;\n      this.systemConfig = systemConfig;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  IntDetailFieldComponent.ɵfac = function IntDetailFieldComponent_Factory(t) {\n    return new (t || IntDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  IntDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: IntDetailFieldComponent,\n    selectors: [[\"scrm-int-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 4,\n    consts: [[4, \"ngIf\"]],\n    template: function IntDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, IntDetailFieldComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, IntDetailFieldComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.format);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.format && ɵngcc0.ɵɵpipeBind1(2, 2, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe, FormatNumberPipe],\n    encapsulation: 2\n  });\n  return IntDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MultiEnumEditFieldModule = /*#__PURE__*/(() => {\n  class MultiEnumEditFieldModule {}\n\n  MultiEnumEditFieldModule.ɵfac = function MultiEnumEditFieldModule_Factory(t) {\n    return new (t || MultiEnumEditFieldModule)();\n  };\n\n  MultiEnumEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MultiEnumEditFieldModule\n  });\n  MultiEnumEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TagInputModule, FormsModule]]\n  });\n  return MultiEnumEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MultiEnumEditFieldModule, {\n    declarations: function () {\n      return [MultiEnumEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, TagInputModule, FormsModule];\n    },\n    exports: function () {\n      return [MultiEnumEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet IntDetailFieldModule = /*#__PURE__*/(() => {\n  class IntDetailFieldModule {}\n\n  IntDetailFieldModule.ɵfac = function IntDetailFieldModule_Factory(t) {\n    return new (t || IntDetailFieldModule)();\n  };\n\n  IntDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: IntDetailFieldModule\n  });\n  IntDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormatNumberModule]]\n  });\n  return IntDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IntDetailFieldModule, {\n    declarations: function () {\n      return [IntDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormatNumberModule];\n    },\n    exports: function () {\n      return [IntDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet VarcharDetailFieldModule = /*#__PURE__*/(() => {\n  class VarcharDetailFieldModule {}\n\n  VarcharDetailFieldModule.ɵfac = function VarcharDetailFieldModule_Factory(t) {\n    return new (t || VarcharDetailFieldModule)();\n  };\n\n  VarcharDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: VarcharDetailFieldModule\n  });\n  VarcharDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return VarcharDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VarcharDetailFieldModule, {\n    declarations: function () {\n      return [VarcharDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [VarcharDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TextEditFieldComponent = /*#__PURE__*/(() => {\n  class TextEditFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    get rows() {\n      if (this.field.metadata && this.field.metadata.rows) {\n        return this.field.metadata.rows;\n      }\n\n      return 6;\n    }\n\n    get cols() {\n      if (this.field.metadata && this.field.metadata.cols) {\n        return this.field.metadata.cols;\n      }\n\n      return 20;\n    }\n\n  }\n\n  TextEditFieldComponent.ɵfac = function TextEditFieldComponent_Factory(t) {\n    return new (t || TextEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  TextEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TextEditFieldComponent,\n    selectors: [[\"scrm-text-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 6,\n    consts: [[3, \"rows\", \"cols\", \"ngClass\", \"formControl\"]],\n    template: function TextEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"textarea\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx.rows)(\"cols\", ctx.cols)(\"ngClass\", ctx.klass)(\"formControl\", ctx.field.formControl);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc3.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective],\n    encapsulation: 2\n  });\n  return TextEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DateFilterFieldModule = /*#__PURE__*/(() => {\n  class DateFilterFieldModule {}\n\n  DateFilterFieldModule.ɵfac = function DateFilterFieldModule_Factory(t) {\n    return new (t || DateFilterFieldModule)();\n  };\n\n  DateFilterFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DateFilterFieldModule\n  });\n  DateFilterFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, NgbDatepickerModule, ButtonModule, ReactiveFormsModule]]\n  });\n  return DateFilterFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateFilterFieldModule, {\n    declarations: function () {\n      return [DateFilterFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, NgbDatepickerModule, ButtonModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [DateFilterFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TextEditFieldModule = /*#__PURE__*/(() => {\n  class TextEditFieldModule {}\n\n  TextEditFieldModule.ɵfac = function TextEditFieldModule_Factory(t) {\n    return new (t || TextEditFieldModule)();\n  };\n\n  TextEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TextEditFieldModule\n  });\n  TextEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n  });\n  return TextEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextEditFieldModule, {\n    declarations: function () {\n      return [TextEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [TextEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownEnumEditFieldComponent = /*#__PURE__*/(() => {\n  class DropdownEnumEditFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscribeValueChanges();\n\n      if (this.record && this.record.formGroup) {\n        this.formGroup = this.record.formGroup;\n      } else {\n        this.formGroup = new FormGroup({});\n        this.formGroup.addControl(this.field.name, this.field.formControl);\n      }\n    }\n\n    getId(item) {\n      return this.field.name + '-' + item.value;\n    }\n\n  }\n\n  DropdownEnumEditFieldComponent.ɵfac = function DropdownEnumEditFieldComponent_Factory(t) {\n    return new (t || DropdownEnumEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DropdownEnumEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropdownEnumEditFieldComponent,\n    selectors: [[\"scrm-dropdownenum-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"dropdownenum\"], [1, \"custom-select\", \"custom-select-sm\", 3, \"formControl\"], [4, \"ngIf\"], [3, \"class\", \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n    template: function DropdownEnumEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"select\", 1);\n        ɵngcc0.ɵɵtemplate(2, DropdownEnumEditFieldComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.field.formControl);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options && ctx.options.length);\n      }\n    },\n    directives: [ɵngcc4.SelectControlValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc4.NgSelectOption, ɵngcc4.ɵNgSelectMultipleOption],\n    encapsulation: 2\n  });\n  return DropdownEnumEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownEnumEditFieldModule = /*#__PURE__*/(() => {\n  class DropdownEnumEditFieldModule {}\n\n  DropdownEnumEditFieldModule.ɵfac = function DropdownEnumEditFieldModule_Factory(t) {\n    return new (t || DropdownEnumEditFieldModule)();\n  };\n\n  DropdownEnumEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownEnumEditFieldModule\n  });\n  DropdownEnumEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n  });\n  return DropdownEnumEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownEnumEditFieldModule, {\n    declarations: function () {\n      return [DropdownEnumEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [DropdownEnumEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownEnumDetailFieldComponent = /*#__PURE__*/(() => {\n  class DropdownEnumDetailFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  DropdownEnumDetailFieldComponent.ɵfac = function DropdownEnumDetailFieldComponent_Factory(t) {\n    return new (t || DropdownEnumDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DropdownEnumDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropdownEnumDetailFieldComponent,\n    selectors: [[\"scrm-dropdownenum-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function DropdownEnumDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.valueLabel, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return DropdownEnumDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DropdownEnumDetailFieldModule = /*#__PURE__*/(() => {\n  class DropdownEnumDetailFieldModule {}\n\n  DropdownEnumDetailFieldModule.ɵfac = function DropdownEnumDetailFieldModule_Factory(t) {\n    return new (t || DropdownEnumDetailFieldModule)();\n  };\n\n  DropdownEnumDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownEnumDetailFieldModule\n  });\n  DropdownEnumDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return DropdownEnumDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownEnumDetailFieldModule, {\n    declarations: function () {\n      return [DropdownEnumDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [DropdownEnumDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RadioEnumDetailFieldComponent = /*#__PURE__*/(() => {\n  class RadioEnumDetailFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  RadioEnumDetailFieldComponent.ɵfac = function RadioEnumDetailFieldComponent_Factory(t) {\n    return new (t || RadioEnumDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  RadioEnumDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RadioEnumDetailFieldComponent,\n    selectors: [[\"scrm-radioenum-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function RadioEnumDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.valueLabel, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return RadioEnumDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RadioEnumDetailFieldModule = /*#__PURE__*/(() => {\n  class RadioEnumDetailFieldModule {}\n\n  RadioEnumDetailFieldModule.ɵfac = function RadioEnumDetailFieldModule_Factory(t) {\n    return new (t || RadioEnumDetailFieldModule)();\n  };\n\n  RadioEnumDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RadioEnumDetailFieldModule\n  });\n  RadioEnumDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return RadioEnumDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RadioEnumDetailFieldModule, {\n    declarations: function () {\n      return [RadioEnumDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [RadioEnumDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RadioEnumEditFieldComponent = /*#__PURE__*/(() => {\n  class RadioEnumEditFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    get displayDirection() {\n      if (!this.field || !this.field.definition || !this.field.definition.displayDirection) {\n        return '';\n      }\n\n      return this.field.definition.displayDirection;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscribeValueChanges();\n\n      if (this.record && this.record.formGroup) {\n        this.formGroup = this.record.formGroup;\n      } else {\n        this.formGroup = new FormGroup({});\n        this.formGroup.addControl(this.field.name, this.field.formControl);\n      }\n    }\n\n    getId(item) {\n      return this.field.name + '-' + item.value;\n    }\n\n  }\n\n  RadioEnumEditFieldComponent.ɵfac = function RadioEnumEditFieldComponent_Factory(t) {\n    return new (t || RadioEnumEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  RadioEnumEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RadioEnumEditFieldComponent,\n    selectors: [[\"scrm-radioenum-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"radioenum\"], [3, \"form-check-inline\", \"class\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"checked\", \"formControl\", \"value\", \"id\"], [1, \"form-check-label\", 3, \"for\"]],\n    template: function RadioEnumEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, RadioEnumEditFieldComponent_div_1_Template, 4, 11, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.options);\n      }\n    },\n    directives: [ɵngcc3.NgForOf, ɵngcc4.RadioControlValueAccessor, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective],\n    encapsulation: 2\n  });\n  return RadioEnumEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RadioEnumEditFieldModule = /*#__PURE__*/(() => {\n  class RadioEnumEditFieldModule {}\n\n  RadioEnumEditFieldModule.ɵfac = function RadioEnumEditFieldModule_Factory(t) {\n    return new (t || RadioEnumEditFieldModule)();\n  };\n\n  RadioEnumEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RadioEnumEditFieldModule\n  });\n  RadioEnumEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule]]\n  });\n  return RadioEnumEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RadioEnumEditFieldModule, {\n    declarations: function () {\n      return [RadioEnumEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [RadioEnumEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HtmlDetailFieldComponent = /*#__PURE__*/(() => {\n  class HtmlDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  HtmlDetailFieldComponent.ɵfac = function HtmlDetailFieldComponent_Factory(t) {\n    return new (t || HtmlDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  HtmlDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HtmlDetailFieldComponent,\n    selectors: [[\"scrm-html-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[1, \"field-html\", \"text-break\", 3, \"innerHTML\"]],\n    template: function HtmlDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.field.value, ɵngcc0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2\n  });\n  return HtmlDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HtmlDetailFieldModule = /*#__PURE__*/(() => {\n  class HtmlDetailFieldModule {}\n\n  HtmlDetailFieldModule.ɵfac = function HtmlDetailFieldModule_Factory(t) {\n    return new (t || HtmlDetailFieldModule)();\n  };\n\n  HtmlDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HtmlDetailFieldModule\n  });\n  HtmlDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return HtmlDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HtmlDetailFieldModule, {\n    declarations: function () {\n      return [HtmlDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [HtmlDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PasswordDetailFieldComponent = /*#__PURE__*/(() => {\n  class PasswordDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  PasswordDetailFieldComponent.ɵfac = function PasswordDetailFieldComponent_Factory(t) {\n    return new (t || PasswordDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  PasswordDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PasswordDetailFieldComponent,\n    selectors: [[\"scrm-password-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    template: function PasswordDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1, \"*****\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return PasswordDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PasswordDetailFieldModule = /*#__PURE__*/(() => {\n  class PasswordDetailFieldModule {}\n\n  PasswordDetailFieldModule.ɵfac = function PasswordDetailFieldModule_Factory(t) {\n    return new (t || PasswordDetailFieldModule)();\n  };\n\n  PasswordDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PasswordDetailFieldModule\n  });\n  PasswordDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return PasswordDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PasswordDetailFieldModule, {\n    declarations: function () {\n      return [PasswordDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [PasswordDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PasswordEditFieldComponent = /*#__PURE__*/(() => {\n  class PasswordEditFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.subscribeValueChanges();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n  }\n\n  PasswordEditFieldComponent.ɵfac = function PasswordEditFieldComponent_Factory(t) {\n    return new (t || PasswordEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  PasswordEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PasswordEditFieldComponent,\n    selectors: [[\"scrm-password-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[\"type\", \"password\", 3, \"formControl\", \"ngClass\", \"value\"]],\n    template: function PasswordEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-invalid\", ctx.field.formControl.invalid && ctx.field.formControl.touched);\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.field.formControl)(\"ngClass\", ctx.klass)(\"value\", ctx.field.value);\n      }\n    },\n    directives: [ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc3.NgClass],\n    encapsulation: 2\n  });\n  return PasswordEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PasswordEditFieldModule = /*#__PURE__*/(() => {\n  class PasswordEditFieldModule {}\n\n  PasswordEditFieldModule.ɵfac = function PasswordEditFieldModule_Factory(t) {\n    return new (t || PasswordEditFieldModule)();\n  };\n\n  PasswordEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PasswordEditFieldModule\n  });\n  PasswordEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, LabelModule]]\n  });\n  return PasswordEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PasswordEditFieldModule, {\n    declarations: function () {\n      return [PasswordEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule, LabelModule];\n    },\n    exports: function () {\n      return [PasswordEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TinymceDetailFieldComponent = /*#__PURE__*/(() => {\n  class TinymceDetailFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic, config) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.config = config;\n      this.settings = {};\n      this.initialValue = '';\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.initSettings();\n      this.initialValue = this.field.value;\n    }\n\n    initSettings() {\n      var _a, _b, _c, _d, _e, _f;\n\n      const defaults = {\n        toolbar: false,\n        menubar: false,\n        readonly: true,\n        deprecation_warnings: false\n      };\n      const ui = this.config.getConfigValue('ui');\n      const systemDefaults = (_b = (_a = ui === null || ui === void 0 ? void 0 : ui.tinymce) === null || _a === void 0 ? void 0 : _a.detail) !== null && _b !== void 0 ? _b : {};\n      const fieldConfig = (_f = (_e = (_d = (_c = this.field) === null || _c === void 0 ? void 0 : _c.metadata) === null || _d === void 0 ? void 0 : _d.tinymce) === null || _e === void 0 ? void 0 : _e.detail) !== null && _f !== void 0 ? _f : {};\n      let settings = {};\n      settings = merge$1(settings, defaults, systemDefaults, fieldConfig);\n      this.settings = settings;\n    }\n\n  }\n\n  TinymceDetailFieldComponent.ɵfac = function TinymceDetailFieldComponent_Factory(t) {\n    return new (t || TinymceDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  TinymceDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TinymceDetailFieldComponent,\n    selectors: [[\"scrm-tinymce-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[1, \"field-html\", \"text-break\", 3, \"initialValue\", \"init\", \"disabled\"]],\n    template: function TinymceDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"editor\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"initialValue\", ctx.initialValue)(\"init\", ctx.settings)(\"disabled\", true);\n      }\n    },\n    directives: [ɵngcc12.EditorComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TinymceDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TinymceDetailFieldModule = /*#__PURE__*/(() => {\n  class TinymceDetailFieldModule {}\n\n  TinymceDetailFieldModule.ɵfac = function TinymceDetailFieldModule_Factory(t) {\n    return new (t || TinymceDetailFieldModule)();\n  };\n\n  TinymceDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TinymceDetailFieldModule\n  });\n  TinymceDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: TINYMCE_SCRIPT_SRC,\n      useValue: 'tinymce/tinymce.min.js'\n    }],\n    imports: [[CommonModule, FormsModule, EditorModule, ReactiveFormsModule]]\n  });\n  return TinymceDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TinymceDetailFieldModule, {\n    declarations: function () {\n      return [TinymceDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, EditorModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [TinymceDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TinymceEditFieldComponent = /*#__PURE__*/(() => {\n  class TinymceEditFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic, config) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n      this.config = config;\n      this.settings = {};\n      this.modelEvents = 'change';\n      this.ignoreEvents = \"onKeyDown,onKeyPress,onKeyUp,onSelectionChange\";\n      this.value = '';\n    }\n\n    ngOnInit() {\n      var _a;\n\n      super.ngOnInit();\n      this.initSettings();\n      this.subscribeValueChanges();\n      this.value = (_a = this.field.value) !== null && _a !== void 0 ? _a : '';\n    }\n\n    ngOnDestroy() {\n      this.unsubscribeAll();\n    }\n\n    initSettings() {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      const defaults = {\n        height: 300,\n        menubar: false,\n        deprecation_warnings: false,\n        plugins: ['advlist autolink lists link image charmap print preview anchor', 'searchreplace visualblocks code fullscreen', 'insertdatetime media table paste code help wordcount'],\n        toolbar: 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify |  bullist numlist outdent indent | removeformat | help',\n        toolbar_mode: 'floating'\n      };\n      const ui = this.config.getConfigValue('ui');\n      const systemDefaults = (_b = (_a = ui === null || ui === void 0 ? void 0 : ui.tinymce) === null || _a === void 0 ? void 0 : _a.edit) !== null && _b !== void 0 ? _b : {};\n      const fieldConfig = (_f = (_e = (_d = (_c = this === null || this === void 0 ? void 0 : this.field) === null || _c === void 0 ? void 0 : _c.metadata) === null || _d === void 0 ? void 0 : _d.tinymce) === null || _e === void 0 ? void 0 : _e.edit) !== null && _f !== void 0 ? _f : {};\n      let settings = {};\n      settings = merge$1(settings, defaults, systemDefaults, fieldConfig);\n      this.modelEvents = (_g = settings === null || settings === void 0 ? void 0 : settings.modelEvents) !== null && _g !== void 0 ? _g : 'change';\n      this.ignoreEvents = (_h = settings === null || settings === void 0 ? void 0 : settings.ignoreEvents) !== null && _h !== void 0 ? _h : \"onKeyDown,onKeyPress,onKeyUp,onSelectionChange\";\n      this.settings = settings;\n    }\n\n    setModel() {\n      this.field.formControl.setValue(this.value);\n    }\n\n  }\n\n  TinymceEditFieldComponent.ɵfac = function TinymceEditFieldComponent_Factory(t) {\n    return new (t || TinymceEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  TinymceEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TinymceEditFieldComponent,\n    selectors: [[\"scrm-tinymce-edit\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 4,\n    consts: [[1, \"field-html\", 3, \"init\", \"modelEvents\", \"ignoreEvents\", \"formControl\"]],\n    template: function TinymceEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"editor\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"init\", ctx.settings)(\"modelEvents\", ctx.modelEvents)(\"ignoreEvents\", ctx.ignoreEvents)(\"formControl\", ctx.field.formControl);\n      }\n    },\n    directives: [ɵngcc12.EditorComponent, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TinymceEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TinymceEditFieldModule = /*#__PURE__*/(() => {\n  class TinymceEditFieldModule {}\n\n  TinymceEditFieldModule.ɵfac = function TinymceEditFieldModule_Factory(t) {\n    return new (t || TinymceEditFieldModule)();\n  };\n\n  TinymceEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TinymceEditFieldModule\n  });\n  TinymceEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: TINYMCE_SCRIPT_SRC,\n      useValue: 'tinymce/tinymce.min.js'\n    }],\n    imports: [[CommonModule, FormsModule, EditorModule, ReactiveFormsModule]]\n  });\n  return TinymceEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TinymceEditFieldModule, {\n    declarations: function () {\n      return [TinymceEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, EditorModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [TinymceEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst baseFieldModules = [VarcharDetailFieldModule, VarcharEditFieldModule, VarcharFilterFieldModule, PasswordDetailFieldModule, PasswordEditFieldModule, IntDetailFieldModule, FloatDetailFieldModule, PhoneDetailFieldModule, DateDetailFieldModule, DateEditFieldModule, DateFilterFieldModule, DateTimeDetailFieldModule, DateTimeEditFieldModule, DateTimeFilterFieldModule, UrlDetailFieldModule, CurrencyDetailFieldModule, EmailListFieldsModule, TextDetailFieldModule, TextEditFieldModule, RelateDetailFieldsModule, RelateEditFieldModule, RelateFilterFieldModule, FullNameDetailFieldsModule, EnumDetailFieldModule, EnumEditFieldModule, DropdownEnumDetailFieldModule, DropdownEnumEditFieldModule, RadioEnumDetailFieldModule, RadioEnumEditFieldModule, MultiEnumDetailFieldModule, MultiEnumEditFieldModule, MultiEnumFilterFieldModule, BooleanDetailFieldModule, BooleanEditFieldModule, BooleanFilterFieldModule, HtmlDetailFieldModule, TinymceDetailFieldModule, TinymceEditFieldModule];\nconst baseFieldComponents = [VarcharDetailFieldComponent, VarcharEditFieldComponent, VarcharFilterFieldComponent, PasswordDetailFieldComponent, PasswordEditFieldComponent, IntDetailFieldComponent, FloatDetailFieldComponent, PhoneDetailFieldComponent, DateDetailFieldComponent, DateEditFieldComponent, DateFilterFieldComponent, DateTimeDetailFieldComponent, DateTimeEditFieldComponent, DateTimeFilterFieldComponent, UrlDetailFieldComponent, CurrencyDetailFieldComponent, EmailListFieldsComponent, TextDetailFieldComponent, TextEditFieldComponent, RelateDetailFieldComponent, RelateEditFieldComponent, RelateFilterFieldComponent, FullNameDetailFieldsComponent, EnumDetailFieldComponent, EnumEditFieldComponent, DropdownEnumDetailFieldComponent, DropdownEnumEditFieldComponent, RadioEnumDetailFieldComponent, RadioEnumEditFieldComponent, MultiEnumDetailFieldComponent, MultiEnumEditFieldComponent, MultiEnumFilterFieldComponent, BooleanDetailFieldComponent, BooleanEditFieldComponent, BooleanFilterFieldComponent, HtmlDetailFieldComponent, TinymceDetailFieldComponent, TinymceEditFieldComponent];\nconst baseViewFieldsMap = {\n  'varchar.list': VarcharDetailFieldComponent,\n  'varchar.detail': VarcharDetailFieldComponent,\n  'varchar.edit': VarcharEditFieldComponent,\n  'varchar.filter': VarcharFilterFieldComponent,\n  'password.list': PasswordDetailFieldComponent,\n  'password.detail': PasswordDetailFieldComponent,\n  'password.edit': PasswordEditFieldComponent,\n  'char.list': VarcharDetailFieldComponent,\n  'char.detail': VarcharDetailFieldComponent,\n  'int.list': IntDetailFieldComponent,\n  'int.detail': IntDetailFieldComponent,\n  'float.list': FloatDetailFieldComponent,\n  'float.detail': FloatDetailFieldComponent,\n  'phone.list': PhoneDetailFieldComponent,\n  'phone.detail': PhoneDetailFieldComponent,\n  'date.list': DateDetailFieldComponent,\n  'date.detail': DateDetailFieldComponent,\n  'date.edit': DateEditFieldComponent,\n  'date.filter': DateFilterFieldComponent,\n  'datetime.list': DateTimeDetailFieldComponent,\n  'datetime.detail': DateTimeDetailFieldComponent,\n  'datetime.edit': DateTimeEditFieldComponent,\n  'datetime.filter': DateFilterFieldComponent,\n  'url.list': UrlDetailFieldComponent,\n  'url.detail': UrlDetailFieldComponent,\n  'link.list': UrlDetailFieldComponent,\n  'link.detail': UrlDetailFieldComponent,\n  'currency.list': CurrencyDetailFieldComponent,\n  'currency.detail': CurrencyDetailFieldComponent,\n  'email.list': EmailListFieldsComponent,\n  'email.detail': EmailListFieldsComponent,\n  'text.detail': TextDetailFieldComponent,\n  'text.edit': TextEditFieldComponent,\n  'relate.list': RelateDetailFieldComponent,\n  'relate.edit': RelateEditFieldComponent,\n  'relate.detail': RelateDetailFieldComponent,\n  'relate.filter': RelateFilterFieldComponent,\n  'fullname.list': FullNameDetailFieldsComponent,\n  'fullname.detail': FullNameDetailFieldsComponent,\n  'enum-radio.list': RadioEnumDetailFieldComponent,\n  'enum-radio.detail': RadioEnumDetailFieldComponent,\n  'enum-radio.edit': RadioEnumEditFieldComponent,\n  'enum-dropdown.list': DropdownEnumDetailFieldComponent,\n  'enum-dropdown.detail': DropdownEnumDetailFieldComponent,\n  'enum-dropdown.edit': DropdownEnumEditFieldComponent,\n  'enum-chips.list': EnumDetailFieldComponent,\n  'enum-chips.detail': EnumDetailFieldComponent,\n  'enum-chips.edit': EnumEditFieldComponent,\n  'enum.list': EnumDetailFieldComponent,\n  'enum.detail': EnumDetailFieldComponent,\n  'enum.edit': EnumEditFieldComponent,\n  'enum.filter': MultiEnumFilterFieldComponent,\n  'multienum.list': MultiEnumDetailFieldComponent,\n  'multienum.detail': MultiEnumDetailFieldComponent,\n  'multienum.edit': MultiEnumEditFieldComponent,\n  'multienum.filter': MultiEnumFilterFieldComponent,\n  'dynamicenum.list': EnumDetailFieldComponent,\n  'dynamicenum.detail': EnumDetailFieldComponent,\n  'dynamicenum.edit': EnumEditFieldComponent,\n  'dynamicenum.filter': MultiEnumEditFieldComponent,\n  'boolean.list': BooleanDetailFieldComponent,\n  'boolean.detail': BooleanDetailFieldComponent,\n  'boolean.edit': BooleanEditFieldComponent,\n  'boolean.filter': BooleanFilterFieldComponent,\n  'bool.list': BooleanDetailFieldComponent,\n  'bool.detail': BooleanDetailFieldComponent,\n  'bool.edit': BooleanEditFieldComponent,\n  'bool.filter': BooleanFilterFieldComponent,\n  'html.detail': TinymceDetailFieldComponent,\n  'html.edit': TinymceEditFieldComponent\n};\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nclass BaseFieldRegistry {\n  constructor() {\n    this.init();\n  }\n\n  register(module, type, mode, component) {\n    this.map.addEntry(module, BaseFieldRegistry.getKey(type, mode), component);\n  }\n\n  exclude(module, key) {\n    this.map.excludeEntry(module, key);\n  }\n\n  getDisplayType(module, type, displayType, mode) {\n    const displayTypeKey = this.getDisplayTypeKey(type, displayType);\n\n    if (displayType && this.has(module, displayTypeKey, mode)) {\n      return this.get(module, displayTypeKey, mode);\n    }\n\n    return this.get(module, type, mode);\n  }\n\n  get(module, type, mode) {\n    const moduleFields = this.map.getGroupEntries(module);\n    let key = BaseFieldRegistry.getKey(type, mode);\n\n    if (moduleFields[key]) {\n      return moduleFields[key];\n    }\n\n    if (mode === 'massupdate') {\n      key = BaseFieldRegistry.getKey(type, 'edit');\n\n      if (moduleFields[key]) {\n        return moduleFields[key];\n      }\n    }\n\n    const defaultKey = BaseFieldRegistry.getKey('varchar', mode);\n    return moduleFields[defaultKey];\n  }\n\n  has(module, type, mode) {\n    const moduleFields = this.map.getGroupEntries(module);\n    const key = BaseFieldRegistry.getKey(type, mode);\n    return !!moduleFields[key];\n  }\n\n  static getKey(type, mode) {\n    return type + '.' + mode;\n  }\n\n  getDisplayTypeKey(type, displayType) {\n    if (!type || !displayType) {\n      return '';\n    }\n\n    return type + '-' + displayType;\n  }\n\n  init() {\n    this.map = new OverridableMap();\n    Object.keys(this.getDefaultMap()).forEach(key => {\n      const [type, mode] = key.split('.', 2);\n      this.register('default', type, mode, this.getDefaultMap()[key]);\n    });\n  }\n\n  getDefaultMap() {\n    return {};\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StandardFieldRegistry = /*#__PURE__*/(() => {\n  class StandardFieldRegistry extends BaseFieldRegistry {\n    constructor() {\n      super();\n    }\n\n    getDefaultMap() {\n      return baseViewFieldsMap;\n    }\n\n  }\n\n  StandardFieldRegistry.ɵfac = function StandardFieldRegistry_Factory(t) {\n    return new (t || StandardFieldRegistry)();\n  };\n\n  StandardFieldRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function StandardFieldRegistry_Factory() {\n      return new StandardFieldRegistry();\n    },\n    token: StandardFieldRegistry,\n    providedIn: \"root\"\n  });\n  return StandardFieldRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GroupFieldComponent = /*#__PURE__*/(() => {\n  class GroupFieldComponent extends BaseFieldComponent {\n    constructor(typeFormatter, registry, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.registry = registry;\n      this.logic = logic;\n    }\n\n    getComponentType(type, definition) {\n      let module = this.record && this.record.module || 'default';\n      const displayType = definition && definition.displayType || '';\n      return this.registry.getDisplayType(module, type, displayType, this.mode);\n    }\n    /**\n     * Get the group fields from the record\n     *\n     * @returns {object} Field[]\n     */\n\n\n    getFields() {\n      const fields = [];\n      this.field.definition.layout.forEach(name => {\n        if (!this.record.fields[name] || this.record.fields[name].display === 'none') {\n          return;\n        }\n\n        fields.push(this.record.fields[name]);\n      });\n      return fields;\n    }\n\n    getModule() {\n      if (!this.record) {\n        return null;\n      }\n\n      return this.record.module;\n    }\n    /**\n     * Get flex direction to be used\n     *\n     * @returns {string} direction\n     */\n\n\n    getDirection() {\n      let direction = 'flex-column';\n\n      if (this.field.definition.display === 'inline') {\n        direction = 'flex-row';\n      }\n\n      return direction;\n    }\n    /**\n     * Check if is configured\n     *\n     * @returns {boolean} is configured\n     */\n\n\n    isConfigured() {\n      return this.hasDisplay() && this.hasLayout() && this.hasGroupFields();\n    }\n\n    showLabel(fieldName) {\n      const definition = this.field.definition || null;\n      const showLabel = definition.showLabel || null;\n\n      if (!definition || !showLabel) {\n        return false;\n      }\n\n      const showLabelOptions = definition.showLabel[this.mode] || null; // showLabel > viewMode not defined || defined without any values e.g. edit:\n\n      if (!showLabelOptions || typeof showLabelOptions === 'undefined') {\n        return false;\n      }\n\n      return showLabelOptions.includes('*') || showLabelOptions.includes(fieldName);\n    }\n\n    isModeEnabled(mode, groupField) {\n      const modes = groupField.definition.modes;\n\n      if (!modes || modes.length < 1) {\n        return true;\n      }\n\n      return modes.includes(mode);\n    }\n    /**\n     * Check if groupFields are configured\n     *\n     * @returns {boolean} has groupFields\n     */\n\n\n    hasGroupFields() {\n      return !!(this.field.definition.groupFields && Object.keys(this.field.definition.groupFields).length);\n    }\n    /**\n     * Check if layout is configured\n     *\n     * @returns {boolean} has layout\n     */\n\n\n    hasLayout() {\n      return !!(this.field.definition.layout && this.field.definition.layout.length);\n    }\n    /**\n     * Check if display is configured\n     *\n     * @returns {boolean} has display\n     */\n\n\n    hasDisplay() {\n      return !!this.field.definition.display;\n    }\n\n  }\n\n  GroupFieldComponent.ɵfac = function GroupFieldComponent_Factory(t) {\n    return new (t || GroupFieldComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(StandardFieldRegistry), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  GroupFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GroupFieldComponent,\n    selectors: [[\"scrm-group-field\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"labelKey\", \"LBL_BAD_GROUP_FIELD_CONFIG\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"field-group-item d-flex flex-column justify-content-end h-100 w-100\", 3, \"flex-fill\", 4, \"ngIf\"], [1, \"field-group-item\", \"d-flex\", \"flex-column\", \"justify-content-end\", \"h-100\", \"w-100\"], [\"class\", \"field-group-label pt-2 pr-1\", 4, \"ngIf\"], [\"class\", \"field-group-field pr-1\", 4, \"ngIf\"], [1, \"field-group-label\", \"pt-2\", \"pr-1\"], [3, \"labelKey\", \"module\"], [1, \"field-group-field\", \"pr-1\"], [3, \"componentType\", \"field\", \"klass\", \"mode\", \"record\", \"parent\", \"type\"]],\n    template: function GroupFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, GroupFieldComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, GroupFieldComponent_ng_container_1_Template, 3, 4, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isConfigured());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isConfigured());\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, DynamicFieldComponent];\n    },\n    encapsulation: 2\n  });\n  return GroupFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicFieldComponent = /*#__PURE__*/(() => {\n  class DynamicFieldComponent {\n    constructor(navigation, moduleNameMapper, router) {\n      this.navigation = navigation;\n      this.moduleNameMapper = moduleNameMapper;\n      this.router = router;\n      this.record = null;\n      this.parent = null;\n      this.klass = null;\n      this.class = 'dynamic-field';\n    }\n\n    get getRelateLink() {\n      if (this.field.definition.id_name && this.field.definition.module) {\n        const moduleName = this.moduleNameMapper.toFrontend(this.field.definition.module);\n        return this.navigation.getRecordRouterLink(moduleName, this.record.attributes[this.field.definition.id_name]);\n      }\n\n      return '';\n    }\n\n    ngOnInit() {\n      this.setHostClass();\n    }\n\n    isLink() {\n      if (this.mode !== 'detail' && this.mode !== 'list') {\n        return false;\n      }\n\n      if (!this.field || !this.record) {\n        return false;\n      }\n\n      if (this.type === 'relate' && this.field.metadata && this.field.metadata.link !== false) {\n        return true;\n      }\n\n      return !!(this.field.metadata && this.field.metadata.link);\n    }\n\n    hasOnClick() {\n      return !!(this.field && this.field.metadata && this.field.metadata.onClick);\n    }\n\n    isEdit() {\n      return this.mode === 'edit' || this.mode === 'filter';\n    }\n\n    getLink() {\n      if (this.type === 'relate') {\n        return this.getRelateLink;\n      }\n\n      return this.navigation.getRecordRouterLink(this.record.module, this.record.id);\n    }\n\n    getMessageContext(item, record) {\n      const context = item && item.message && item.message.context || {};\n      context.module = record && record.module || '';\n      return context;\n    }\n\n    getMessageLabelKey(item) {\n      return item && item.message && item.message.labelKey || '';\n    }\n\n    onClick() {\n      if (this.field.metadata.onClick) {\n        this.field.metadata.onClick(this.field, this.record);\n        return;\n      }\n\n      this.router.navigateByUrl(this.getLink()).then();\n      return false;\n    }\n\n    setHostClass() {\n      const classes = [];\n      classes.push('dynamic-field');\n\n      if (this.mode) {\n        classes.push('dynamic-field-mode-' + this.mode);\n      }\n\n      if (this.type) {\n        classes.push('dynamic-field-type-' + this.type);\n      }\n\n      if (this.field && this.field.name) {\n        classes.push('dynamic-field-name-' + this.field.name);\n      }\n\n      this.class = classes.join(' ');\n    }\n\n  }\n\n  DynamicFieldComponent.ɵfac = function DynamicFieldComponent_Factory(t) {\n    return new (t || DynamicFieldComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router));\n  };\n\n  DynamicFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DynamicFieldComponent,\n    selectors: [[\"scrm-dynamic-field\"]],\n    hostVars: 2,\n    hostBindings: function DynamicFieldComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.class);\n      }\n    },\n    inputs: {\n      record: \"record\",\n      parent: \"parent\",\n      klass: \"klass\",\n      mode: \"mode\",\n      type: \"type\",\n      field: \"field\",\n      componentType: \"componentType\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [1, \"clickable\", \"field-link\", 3, \"click\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"], [1, \"field-link\", 3, \"routerLink\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngFor\", \"ngForOf\"], [1, \"invalid-feedback\", \"d-block\"], [3, \"context\", \"fields\", \"labelKey\"]],\n    template: function DynamicFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, DynamicFieldComponent_ng_container_0_Template, 3, 8, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, DynamicFieldComponent_ng_container_1_Template, 3, 9, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(2, DynamicFieldComponent_ng_container_2_Template, 2, 8, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(3, DynamicFieldComponent_ng_container_3_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasOnClick());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLink() && !ctx.hasOnClick());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isLink() && !ctx.hasOnClick());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isEdit() && ctx.field.formControl && ctx.field.formControl.errors);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective, ɵngcc2.RouterLinkWithHref, ɵngcc3.NgForOf, DynamicLabelComponent],\n    pipes: [ɵngcc3.KeyValuePipe],\n    encapsulation: 2\n  });\n  return DynamicFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicFieldModule = /*#__PURE__*/(() => {\n  class DynamicFieldModule {}\n\n  DynamicFieldModule.ɵfac = function DynamicFieldModule_Factory(t) {\n    return new (t || DynamicFieldModule)();\n  };\n\n  DynamicFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DynamicFieldModule\n  });\n  DynamicFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, RouterModule, DynamicLabelModule, DynamicModule]]\n  });\n  return DynamicFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFieldModule, {\n    declarations: function () {\n      return [DynamicFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, RouterModule, DynamicLabelModule, DynamicModule];\n    },\n    exports: function () {\n      return [DynamicFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GroupFieldModule = /*#__PURE__*/(() => {\n  class GroupFieldModule {}\n\n  GroupFieldModule.ɵfac = function GroupFieldModule_Factory(t) {\n    return new (t || GroupFieldModule)();\n  };\n\n  GroupFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: GroupFieldModule\n  });\n  GroupFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, LabelModule, DynamicFieldModule]]\n  });\n  return GroupFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GroupFieldModule, {\n    declarations: function () {\n      return [GroupFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, LabelModule, DynamicFieldModule];\n    }\n  });\n})();\n\nconst currencyValidator = formatter => control => {\n  const invalid = formatter.validateFloatUserFormat(control.value);\n  return invalid ? {\n    currencyValidator: {\n      valid: false,\n      format: formatter.getFloatUserFormatPattern(),\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_CURRENCY_FORMAT',\n        context: {\n          value: control.value,\n          expected: formatter.toUserFormat('1000.50')\n        }\n      }\n    }\n  } : null;\n};\n\nlet CurrencyValidator = /*#__PURE__*/(() => {\n  class CurrencyValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'currency';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [currencyValidator(this.formatter)];\n    }\n\n  }\n\n  CurrencyValidator.ɵfac = function CurrencyValidator_Factory(t) {\n    return new (t || CurrencyValidator)(ɵngcc0.ɵɵinject(NumberFormatter));\n  };\n\n  CurrencyValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CurrencyValidator_Factory() {\n      return new CurrencyValidator(i0.ɵɵinject(NumberFormatter));\n    },\n    token: CurrencyValidator,\n    providedIn: \"root\"\n  });\n  return CurrencyValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst dateValidator = formatter => control => {\n  const invalid = formatter.validateUserFormat(control.value);\n  return invalid ? {\n    invalidDate: {\n      value: control.value,\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_DATE_FORMAT',\n        context: {\n          value: control.value,\n          expected: formatter.toUserFormat('2020-01-23')\n        }\n      }\n    }\n  } : null;\n};\n\nlet DateValidator = /*#__PURE__*/(() => {\n  class DateValidator {\n    constructor(formatter, utils) {\n      this.formatter = formatter;\n      this.utils = utils;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'date';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [dateValidator(this.formatter)];\n    }\n\n  }\n\n  DateValidator.ɵfac = function DateValidator_Factory(t) {\n    return new (t || DateValidator)(ɵngcc0.ɵɵinject(DateFormatter), ɵngcc0.ɵɵinject(FormControlUtils));\n  };\n\n  DateValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DateValidator_Factory() {\n      return new DateValidator(i0.ɵɵinject(DateFormatter), i0.ɵɵinject(FormControlUtils));\n    },\n    token: DateValidator,\n    providedIn: \"root\"\n  });\n  return DateValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst dateTimeValidator = formatter => control => {\n  const invalid = formatter.validateUserFormat(control.value);\n  return invalid ? {\n    dateTimeValidator: {\n      value: control.value,\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_DATETIME_FORMAT',\n        context: {\n          value: control.value,\n          expected: formatter.toUserFormat('2020-01-23 12:30:40')\n        }\n      }\n    }\n  } : null;\n};\n\nlet DateTimeValidator = /*#__PURE__*/(() => {\n  class DateTimeValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'datetime';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [dateTimeValidator(this.formatter)];\n    }\n\n  }\n\n  DateTimeValidator.ɵfac = function DateTimeValidator_Factory(t) {\n    return new (t || DateTimeValidator)(ɵngcc0.ɵɵinject(DatetimeFormatter));\n  };\n\n  DateTimeValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DateTimeValidator_Factory() {\n      return new DateTimeValidator(i0.ɵɵinject(DatetimeFormatter));\n    },\n    token: DateTimeValidator,\n    providedIn: \"root\"\n  });\n  return DateTimeValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst floatValidator = formatter => control => {\n  const invalid = formatter.validateFloatUserFormat(control.value);\n  return invalid ? {\n    floatValidator: {\n      valid: false,\n      format: formatter.getFloatUserFormatPattern(),\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_FLOAT_FORMAT',\n        context: {\n          value: control.value,\n          expected: formatter.toUserFormat('1000.50')\n        }\n      }\n    }\n  } : null;\n};\n\nlet FloatValidator = /*#__PURE__*/(() => {\n  class FloatValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'float';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [floatValidator(this.formatter)];\n    }\n\n  }\n\n  FloatValidator.ɵfac = function FloatValidator_Factory(t) {\n    return new (t || FloatValidator)(ɵngcc0.ɵɵinject(NumberFormatter));\n  };\n\n  FloatValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FloatValidator_Factory() {\n      return new FloatValidator(i0.ɵɵinject(NumberFormatter));\n    },\n    token: FloatValidator,\n    providedIn: \"root\"\n  });\n  return FloatValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst intValidator = formatter => control => {\n  const invalid = formatter.validateIntUserFormat(control.value);\n  return invalid ? {\n    intValidator: {\n      valid: false,\n      format: formatter.getIntUserFormatPattern(),\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_INT_FORMAT',\n        context: {\n          value: control.value,\n          expected: formatter.toUserFormat('1000')\n        }\n      }\n    }\n  } : null;\n};\n\nlet IntValidator = /*#__PURE__*/(() => {\n  class IntValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'int';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [intValidator(this.formatter)];\n    }\n\n  }\n\n  IntValidator.ɵfac = function IntValidator_Factory(t) {\n    return new (t || IntValidator)(ɵngcc0.ɵɵinject(NumberFormatter));\n  };\n\n  IntValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function IntValidator_Factory() {\n      return new IntValidator(i0.ɵɵinject(NumberFormatter));\n    },\n    token: IntValidator,\n    providedIn: \"root\"\n  });\n  return IntValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailFormatter = /*#__PURE__*/(() => {\n  class EmailFormatter {\n    constructor(formUtils) {\n      this.formUtils = formUtils;\n    }\n\n    toUserFormat(value) {\n      return value;\n    }\n\n    toInternalFormat(value) {\n      return value;\n    }\n\n    getUserFormatPattern() {\n      // eslint-disable-next-line max-len\n      return /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    }\n\n    validateUserFormat(inputValue) {\n      const trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);\n\n      if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {\n        return false;\n      }\n\n      const regex = new RegExp(this.getUserFormatPattern());\n      return !regex.test(trimmedInputValue);\n    }\n\n  }\n\n  EmailFormatter.ɵfac = function EmailFormatter_Factory(t) {\n    return new (t || EmailFormatter)(ɵngcc0.ɵɵinject(FormControlUtils));\n  };\n\n  EmailFormatter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function EmailFormatter_Factory() {\n      return new EmailFormatter(i0.ɵɵinject(FormControlUtils));\n    },\n    token: EmailFormatter,\n    providedIn: \"root\"\n  });\n  return EmailFormatter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst emailValidator = formatter => control => {\n  const invalid = formatter.validateUserFormat(control.value);\n  return invalid ? {\n    emailValidator: {\n      valid: false,\n      format: formatter.getUserFormatPattern(),\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_EMAIL_FORMAT',\n        context: {\n          value: control.value,\n          expected: 'example@example.org'\n        }\n      }\n    }\n  } : null;\n};\n\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'email';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [emailValidator(this.formatter)];\n    }\n\n  }\n\n  EmailValidator.ɵfac = function EmailValidator_Factory(t) {\n    return new (t || EmailValidator)(ɵngcc0.ɵɵinject(EmailFormatter));\n  };\n\n  EmailValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function EmailValidator_Factory() {\n      return new EmailValidator(i0.ɵɵinject(EmailFormatter));\n    },\n    token: EmailValidator,\n    providedIn: \"root\"\n  });\n  return EmailValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst phoneValidator = formatter => control => {\n  const invalid = formatter.validateUserFormat(control.value);\n  return invalid ? {\n    phoneValidator: {\n      valid: false,\n      format: formatter.getUserFormatPattern(),\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_PHONE_FORMAT',\n        context: {\n          value: control.value\n        }\n      }\n    }\n  } : null;\n};\n\nlet PhoneValidator = /*#__PURE__*/(() => {\n  class PhoneValidator {\n    constructor(formatter) {\n      this.formatter = formatter;\n    }\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      return viewField.type === 'phone';\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      return [phoneValidator(this.formatter)];\n    }\n\n  }\n\n  PhoneValidator.ɵfac = function PhoneValidator_Factory(t) {\n    return new (t || PhoneValidator)(ɵngcc0.ɵɵinject(PhoneFormatter));\n  };\n\n  PhoneValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function PhoneValidator_Factory() {\n      return new PhoneValidator(i0.ɵɵinject(PhoneFormatter));\n    },\n    token: PhoneValidator,\n    providedIn: \"root\"\n  });\n  return PhoneValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst minValidator = min => control => {\n  const result = Validators.min(min)(control);\n\n  if (result === null) {\n    return null;\n  }\n\n  return {\n    emailValidator: Object.assign(Object.assign({}, result), {\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_MIN',\n        context: {\n          value: control.value,\n          min: '' + min\n        }\n      }\n    })\n  };\n};\n\nconst maxValidator = max => control => {\n  const result = Validators.max(max)(control);\n\n  if (result === null) {\n    return null;\n  }\n\n  return {\n    emailValidator: Object.assign(Object.assign({}, result), {\n      message: {\n        labelKey: 'LBL_VALIDATION_ERROR_MAX',\n        context: {\n          value: control.value,\n          max: '' + max\n        }\n      }\n    })\n  };\n};\n\nlet RangeValidator = /*#__PURE__*/(() => {\n  class RangeValidator {\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      const definition = viewField.fieldDefinition;\n      return this.getRangeValidation(definition) !== null;\n    }\n\n    getValidator(viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return [];\n      }\n\n      const validation = this.getRangeValidation(viewField.fieldDefinition);\n\n      if (!validation) {\n        return [];\n      }\n\n      const min = validation.min && parseInt('' + validation.min, 10);\n      const max = validation.max && parseInt('' + validation.max, 10);\n      const validations = [];\n\n      if (isFinite(min)) {\n        validations.push(minValidator(min));\n      }\n\n      if (isFinite(max)) {\n        validations.push(maxValidator(max));\n      }\n\n      return validations;\n    }\n\n    getRangeValidation(definition) {\n      if (this.isRangeValidation(definition.validation)) {\n        return definition.validation;\n      }\n\n      if (!definition.validations || !definition.validations.length) {\n        return null;\n      }\n\n      let validation = null;\n      definition.validations.some(entry => {\n        validation = entry;\n        return this.isRangeValidation(entry);\n      });\n      return validation;\n    }\n\n    isRangeValidation(validation) {\n      return validation && validation.type === 'range';\n    }\n\n  }\n\n  RangeValidator.ɵfac = function RangeValidator_Factory(t) {\n    return new (t || RangeValidator)();\n  };\n\n  RangeValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RangeValidator_Factory() {\n      return new RangeValidator();\n    },\n    token: RangeValidator,\n    providedIn: \"root\"\n  });\n  return RangeValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst primaryEmailValidator = (viewField, record) => control => {\n  const name = viewField.name || '';\n\n  if (!name || !record || !record.fields) {\n    return null;\n  }\n\n  const field = record.fields[name] || {};\n  const items = field.items;\n\n  if (!field || !items || !items.length) {\n    return null;\n  }\n\n  let count = 0;\n  const activeItems = items.filter(item => !(item && item.attributes && item.attributes.deleted));\n\n  if (activeItems && activeItems.length < 1) {\n    return null;\n  }\n\n  activeItems.some(item => {\n    const emailField = item.fields && item.fields['email-fields'] || {};\n    const primary = emailField.attributes && emailField.attributes['primary_address'] || null;\n\n    if (!primary) {\n      return false;\n    }\n\n    if (isTrue(primary.value)) {\n      count++;\n    }\n\n    return count > 1;\n  });\n\n  if (count == 1) {\n    return null;\n  }\n\n  if (count == 0) {\n    return {\n      primaryEmailValidation: {\n        valid: false,\n        message: {\n          labelKey: 'LBL_NO_PRIMARY_EMAIL_VALIDATION_ERROR',\n          context: {}\n        }\n      }\n    };\n  }\n\n  return {\n    primaryEmailValidation: {\n      valid: false,\n      message: {\n        labelKey: 'LBL_MULTIPLE_PRIMARY_EMAIL_VALIDATION_ERROR',\n        context: {}\n      }\n    }\n  };\n};\n\nlet PrimaryEmailValidator = /*#__PURE__*/(() => {\n  class PrimaryEmailValidator {\n    constructor() {}\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      const type = viewField.type || viewField.fieldDefinition.type || '';\n      const name = viewField.name || viewField.fieldDefinition.name || '';\n      return type === 'line-items' && name === 'email_addresses';\n    }\n\n    getValidator(viewField, record) {\n      if (!viewField || !viewField.fieldDefinition || !record) {\n        return [];\n      }\n\n      return [primaryEmailValidator(viewField, record)];\n    }\n\n  }\n\n  PrimaryEmailValidator.ɵfac = function PrimaryEmailValidator_Factory(t) {\n    return new (t || PrimaryEmailValidator)();\n  };\n\n  PrimaryEmailValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function PrimaryEmailValidator_Factory() {\n      return new PrimaryEmailValidator();\n    },\n    token: PrimaryEmailValidator,\n    providedIn: \"root\"\n  });\n  return PrimaryEmailValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst duplicateEmailValidator = (viewField, record) => control => {\n  const name = viewField.name || '';\n\n  if (!name || !record || !record.fields) {\n    return null;\n  }\n\n  const field = record.fields[name] || {};\n  const items = field.items;\n\n  if (!field || !items || !items.length) {\n    return null;\n  }\n\n  const addresses = {};\n  let count = 0;\n  const activeItems = items.filter(item => !(item && item.attributes && item.attributes.deleted));\n\n  if (activeItems && activeItems.length < 1) {\n    return null;\n  }\n\n  activeItems.some(item => {\n    const emailField = item.fields && item.fields['email-fields'] || {};\n    const emailAddress = emailField.attributes && emailField.attributes['email_address'] || null;\n\n    if (!emailAddress.value) {\n      return false;\n    }\n\n    const upperCaseValue = (\"\" + emailAddress.value).toUpperCase();\n\n    if (addresses[upperCaseValue]) {\n      count++;\n      return true;\n    }\n\n    addresses[upperCaseValue] = true;\n    return count > 1;\n  });\n\n  if (count == 0) {\n    return null;\n  }\n\n  return {\n    duplicateEmailValidation: {\n      valid: false,\n      message: {\n        labelKey: 'LBL_DUPLICATE_EMAIL_VALIDATION_ERROR',\n        context: {}\n      }\n    }\n  };\n};\n\nlet DuplicateEmailValidator = /*#__PURE__*/(() => {\n  class DuplicateEmailValidator {\n    constructor() {}\n\n    applies(record, viewField) {\n      if (!viewField || !viewField.fieldDefinition) {\n        return false;\n      }\n\n      const type = viewField.type || viewField.fieldDefinition.type || '';\n      const name = viewField.name || viewField.fieldDefinition.name || '';\n      return type === 'line-items' && name === 'email_addresses';\n    }\n\n    getValidator(viewField, record) {\n      if (!viewField || !viewField.fieldDefinition || !record) {\n        return [];\n      }\n\n      return [duplicateEmailValidator(viewField, record)];\n    }\n\n  }\n\n  DuplicateEmailValidator.ɵfac = function DuplicateEmailValidator_Factory(t) {\n    return new (t || DuplicateEmailValidator)();\n  };\n\n  DuplicateEmailValidator.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DuplicateEmailValidator_Factory() {\n      return new DuplicateEmailValidator();\n    },\n    token: DuplicateEmailValidator,\n    providedIn: \"root\"\n  });\n  return DuplicateEmailValidator;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ValidationManager = /*#__PURE__*/(() => {\n  class ValidationManager {\n    constructor(requiredValidator, rangeValidator, currencyValidator, dateValidator, datetimeValidator, emailValidator, floatValidator, intValidator, phoneValidator, primaryEmailValidator, duplicateEmailValidator) {\n      this.requiredValidator = requiredValidator;\n      this.rangeValidator = rangeValidator;\n      this.currencyValidator = currencyValidator;\n      this.dateValidator = dateValidator;\n      this.datetimeValidator = datetimeValidator;\n      this.emailValidator = emailValidator;\n      this.floatValidator = floatValidator;\n      this.intValidator = intValidator;\n      this.phoneValidator = phoneValidator;\n      this.primaryEmailValidator = primaryEmailValidator;\n      this.duplicateEmailValidator = duplicateEmailValidator;\n      this.filterFieldExclusion = {\n        default: {}\n      };\n      this.saveFieldExclusions = {\n        default: {}\n      };\n      this.saveValidators = new OverridableMap();\n      this.asyncSaveValidators = new OverridableMap();\n      this.filterValidators = new OverridableMap();\n      this.saveValidators.addEntry('default', this.getKey('required', 'all'), requiredValidator);\n      this.saveValidators.addEntry('default', this.getKey('range', 'all'), rangeValidator);\n      this.saveValidators.addEntry('default', this.getKey('currency', 'all'), currencyValidator);\n      this.saveValidators.addEntry('default', this.getKey('date', 'all'), dateValidator);\n      this.saveValidators.addEntry('default', this.getKey('datetime', 'all'), datetimeValidator);\n      this.saveValidators.addEntry('default', this.getKey('email', 'all'), emailValidator);\n      this.saveValidators.addEntry('default', this.getKey('float', 'all'), floatValidator);\n      this.saveValidators.addEntry('default', this.getKey('int', 'all'), intValidator);\n      this.saveValidators.addEntry('default', this.getKey('phone', 'all'), phoneValidator);\n      this.saveValidators.addEntry('default', this.getKey('primary-email', 'all'), primaryEmailValidator);\n      this.saveValidators.addEntry('default', this.getKey('duplicate-email', 'all'), duplicateEmailValidator);\n      this.filterValidators.addEntry('default', this.getKey('date', 'all'), dateValidator);\n      this.filterValidators.addEntry('default', this.getKey('datetime', 'all'), datetimeValidator);\n      this.filterValidators.addEntry('default', this.getKey('float', 'all'), floatValidator);\n      this.filterValidators.addEntry('default', this.getKey('currency', 'all'), currencyValidator);\n      this.filterValidators.addEntry('default', this.getKey('int', 'all'), intValidator);\n      this.filterValidators.addEntry('default', this.getKey('phone', 'all'), phoneValidator);\n    }\n\n    registerFieldSaveValidator(module, type, field, validator) {\n      this.saveValidators.addEntry(module, this.getKey(type, field), validator);\n    }\n\n    registerSaveValidator(module, type, validator) {\n      this.saveValidators.addEntry(module, this.getKey(type, 'all'), validator);\n    }\n\n    registerFieldFilterValidator(module, type, field, validator) {\n      this.filterValidators.addEntry(module, this.getKey(type, field), validator);\n    }\n\n    registerFilterValidator(module, type, validator) {\n      this.filterValidators.addEntry(module, this.getKey(type, 'all'), validator);\n    }\n\n    excludeFieldSaveValidator(module, type, field) {\n      const moduleExclusions = this.saveFieldExclusions[module] || {};\n      const key = this.getKey(type, field);\n      moduleExclusions[key] = key;\n      this.saveFieldExclusions[module] = moduleExclusions;\n    }\n\n    excludeSaveValidator(module, type) {\n      this.saveValidators.excludeEntry(module, this.getKey(type, 'all'));\n    }\n\n    excludeFieldFilterValidator(module, type, field) {\n      const moduleExclusions = this.filterFieldExclusion[module] || {};\n      const key = this.getKey(type, field);\n      moduleExclusions[key] = key;\n      this.filterFieldExclusion[module] = moduleExclusions;\n    }\n\n    excludeFilterValidator(module, type) {\n      this.filterValidators.excludeEntry(module, this.getKey(type, 'all'));\n    }\n\n    registerAsyncSaveValidator(module, type, validator) {\n      this.asyncSaveValidators.addEntry(module, this.getKey(type, 'all'), validator);\n    }\n\n    excludeAsyncSaveValidator(module, type) {\n      this.saveValidators.excludeEntry(module, this.getKey(type, 'all'));\n    }\n\n    getSaveValidations(module, viewField, record) {\n      const entries = this.saveValidators.getGroupEntries(module);\n      const exclusions = this.getExclusions(module, this.saveFieldExclusions);\n      return this.filterValidations(entries, exclusions, record, viewField);\n    }\n\n    getFilterValidations(module, viewField, record) {\n      const entries = this.filterValidators.getGroupEntries(module);\n      const exclusions = this.getExclusions(module, this.filterFieldExclusion);\n      return this.filterValidations(entries, exclusions, record, viewField);\n    }\n\n    getAsyncSaveValidations(module, viewField, record) {\n      const validations = [];\n      const entries = this.asyncSaveValidators.getGroupEntries(module);\n      Object.keys(entries).forEach(validatorKey => {\n        const validator = entries[validatorKey];\n\n        if (validator.applies(record, viewField)) {\n          validations.push(validator.getValidator(viewField, record));\n        }\n      });\n      return validations;\n    }\n\n    getKey(type, field) {\n      return `${type}.${field}`;\n    }\n\n    parseType(key) {\n      const partsType = key.split('.') || [];\n      return partsType[0] || '';\n    }\n\n    getExclusions(module, exclusionMap) {\n      const defaultExclusions = exclusionMap['default'] || {};\n      const moduleExclusions = exclusionMap[module] || {};\n      return Object.assign(Object.assign({}, defaultExclusions), moduleExclusions);\n    }\n\n    filterValidations(entries, fieldExclusions, record, viewField) {\n      let validations = [];\n      Object.keys(entries).forEach(validatorKey => {\n        const defaultTypeKey = this.getKey(this.parseType(validatorKey), viewField.name);\n\n        if (fieldExclusions[validatorKey] || fieldExclusions[defaultTypeKey]) {\n          return;\n        }\n\n        const validator = entries[validatorKey];\n\n        if (validator.applies(record, viewField)) {\n          validations = validations.concat(validator.getValidator(viewField, record));\n        }\n      });\n      return validations;\n    }\n\n  }\n\n  ValidationManager.ɵfac = function ValidationManager_Factory(t) {\n    return new (t || ValidationManager)(ɵngcc0.ɵɵinject(RequiredValidator), ɵngcc0.ɵɵinject(RangeValidator), ɵngcc0.ɵɵinject(CurrencyValidator), ɵngcc0.ɵɵinject(DateValidator), ɵngcc0.ɵɵinject(DateTimeValidator), ɵngcc0.ɵɵinject(EmailValidator), ɵngcc0.ɵɵinject(FloatValidator), ɵngcc0.ɵɵinject(IntValidator), ɵngcc0.ɵɵinject(PhoneValidator), ɵngcc0.ɵɵinject(PrimaryEmailValidator), ɵngcc0.ɵɵinject(DuplicateEmailValidator));\n  };\n\n  ValidationManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ValidationManager_Factory() {\n      return new ValidationManager(i0.ɵɵinject(RequiredValidator), i0.ɵɵinject(RangeValidator), i0.ɵɵinject(CurrencyValidator), i0.ɵɵinject(DateValidator), i0.ɵɵinject(DateTimeValidator), i0.ɵɵinject(EmailValidator), i0.ɵɵinject(FloatValidator), i0.ɵɵinject(IntValidator), i0.ɵɵinject(PhoneValidator), i0.ɵɵinject(PrimaryEmailValidator), i0.ɵɵinject(DuplicateEmailValidator));\n    },\n    token: ValidationManager,\n    providedIn: \"root\"\n  });\n  return ValidationManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldBuilder = /*#__PURE__*/(() => {\n  class FieldBuilder {\n    constructor(validationManager, typeFormatter) {\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Build field\n     *\n     * @param {object} record Record\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object}Field\n     */\n\n\n    buildField(record, viewField, language = null) {\n      const definition = viewField && viewField.fieldDefinition || {};\n      const {\n        value,\n        valueList,\n        valueObject\n      } = this.parseValue(viewField, definition, record);\n      const {\n        validators,\n        asyncValidators\n      } = this.getSaveValidators(record, viewField);\n      return this.setupField(record.module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language);\n    }\n\n    getFieldLabel(label, module, language) {\n      const languages = language.getLanguageStrings();\n      return language.getFieldLabel(label, module, languages);\n    }\n    /**\n     * Parse value from record\n     *\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} definition FieldDefinition\n     * @param {object} record Record\n     * @returns {object} value object\n     */\n\n\n    parseValue(viewField, definition, record) {\n      const type = viewField && viewField.type || '';\n      const source = definition && definition.source || '';\n      const rname = definition && definition.rname || 'name';\n      const viewName = viewField.name || '';\n      let value = null;\n      let valueList = null;\n\n      if (!viewName || !record.attributes[viewName]) {\n        value = '';\n      } else if (type === 'relate' && source === 'non-db' && rname !== '') {\n        value = record.attributes[viewName][rname];\n        const valueObject = record.attributes[viewName];\n        return {\n          value,\n          valueList,\n          valueObject\n        };\n      } else {\n        value = record.attributes[viewName];\n      }\n\n      if (type === 'line-items') {\n        return {\n          value: null,\n          valueList\n        };\n      }\n\n      if (Array.isArray(value)) {\n        valueList = value;\n        value = null;\n      }\n\n      if (!value && definition.default) {\n        value = definition.default;\n      } else if (value === null) {\n        value = '';\n      }\n\n      return {\n        value,\n        valueList\n      };\n    }\n    /**\n     * Build and initialize field object\n     *\n     * @param {string} module to use\n     * @param {object} viewField ViewFieldDefinition\n     * @param {string} value string\n     * @param {[]} valueList string[]\n     * @param {} valueObject value object\n     * @param {object} record Record\n     * @param {object} definition FieldDefinition\n     * @param {[]} validators ValidatorFn[]\n     * @param {[]} asyncValidators AsyncValidatorFn[]\n     * @param {object} language LanguageStore\n     * @returns {object} BaseField\n     */\n\n\n    setupField(module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language) {\n      const formattedValue = this.typeFormatter.toUserFormat(viewField.type, value, {\n        mode: 'edit'\n      });\n      const metadata = viewField.metadata || definition.metadata || {};\n\n      if (viewField.link) {\n        metadata.link = viewField.link;\n      }\n\n      const field = new BaseField();\n      field.type = viewField.type || definition.type;\n      field.name = viewField.name || definition.name || '';\n      field.display = viewField.display || definition.display || 'default';\n      field.defaultDisplay = field.display;\n      field.value = value;\n      field.metadata = metadata;\n      field.definition = definition;\n      field.labelKey = viewField.label || definition.vname || '';\n      field.validators = validators;\n      field.asyncValidators = asyncValidators;\n\n      if (field.type === 'line-items') {\n        field.valueObjectArray = record.attributes[field.name];\n        field.itemFormArray = new FormArray([], validators, asyncValidators);\n        field.formControl = new FormControl(formattedValue);\n      } else {\n        field.formControl = new FormControl(formattedValue, validators, asyncValidators);\n      }\n\n      field.attributes = {};\n      field.source = 'field';\n      field.logic = viewField.logic || definition.logic || null;\n\n      if (field.logic && Object.keys(field.logic).length) {\n        const attributeDependencies = {};\n        const fieldDependencies = {};\n        Object.keys(field.logic).forEach(logicKey => {\n          const entry = field.logic[logicKey] || {};\n\n          if (!entry.params) {\n            return;\n          }\n\n          if (entry.params && entry.params.attributeDependencies) {\n            entry.params.attributeDependencies.forEach(dependency => {\n              const dependencyKey = dependency.field + '.' + dependency.attribute;\n              attributeDependencies[dependencyKey] = dependency;\n            });\n          }\n\n          if (entry.params && entry.params.fieldDependencies) {\n            entry.params.fieldDependencies.forEach(dependency => {\n              fieldDependencies[dependency] = dependency;\n            });\n          }\n        });\n        field.attributeDependencies = Object.keys(attributeDependencies).map(key => attributeDependencies[key]);\n        field.fieldDependencies = Object.keys(fieldDependencies);\n      }\n\n      if (valueList) {\n        field.valueList = valueList;\n      }\n\n      if (valueObject) {\n        field.valueObject = valueObject;\n      }\n\n      if (language) {\n        field.label = this.getFieldLabel(viewField.label, module, language);\n      }\n\n      if (!field.labelKey && viewField.label) {\n        field.labelKey = viewField.label;\n      }\n\n      return field;\n    }\n    /**\n     * Get save validators for the given field definition\n     *\n     * @param {object} record Record\n     * @param {object} viewField ViewFieldDefinition\n     * @returns {object} Validator map\n     */\n\n\n    getSaveValidators(record, viewField) {\n      const validators = this.validationManager.getSaveValidations(record.module, viewField, record);\n      const asyncValidators = this.validationManager.getAsyncSaveValidations(record.module, viewField, record);\n      return {\n        validators,\n        asyncValidators\n      };\n    }\n    /**\n     * Set attribute value on parent\n     *\n     * @param {object} record Record\n     * @param {object} field Field\n     * @param {string} name String\n     * @param {object} definition FieldDefinition\n     * @returns any\n     */\n\n\n    getParentValue(record, field, name, definition) {\n      var _a;\n\n      const valueParent = (_a = definition.valueParent) !== null && _a !== void 0 ? _a : 'field';\n      const parent = valueParent === 'record' ? record : field;\n\n      if (definition.valuePath) {\n        return get(parent, definition.valuePath, '');\n      }\n\n      if (valueParent === 'record') {\n        return get(record.attributes, name, '');\n      }\n\n      return get(field.valueObject, name, '');\n    }\n\n  }\n\n  FieldBuilder.ɵfac = function FieldBuilder_Factory(t) {\n    return new (t || FieldBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  FieldBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FieldBuilder_Factory() {\n      return new FieldBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: FieldBuilder,\n    providedIn: \"root\"\n  });\n  return FieldBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GroupFieldBuilder = /*#__PURE__*/(() => {\n  class GroupFieldBuilder extends FieldBuilder {\n    constructor(validationManager, typeFormatter) {\n      super(validationManager, typeFormatter);\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Create and add group fields to record\n     *\n     * @param {object} record Record\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @param {function} isInitializedFunction\n     * @param {function} buildFieldFunction\n     * @param {function} addRecordFunction\n     */\n\n\n    addGroupFields(record, viewField, language, isInitializedFunction, buildFieldFunction, addRecordFunction) {\n      const definition = viewField && viewField.fieldDefinition || {};\n      const groupFields = definition.groupFields || {};\n      const groupFieldsKeys = Object.keys(groupFields);\n      groupFieldsKeys.forEach(key => {\n        const fieldDefinition = groupFields[key];\n\n        if (isInitializedFunction(record, key)) {\n          return;\n        }\n\n        const groupViewField = {\n          name: fieldDefinition.name,\n          label: fieldDefinition.vname,\n          type: fieldDefinition.type,\n          fieldDefinition\n        };\n        const groupField = buildFieldFunction(record, groupViewField, language);\n        addRecordFunction(record, fieldDefinition.name, groupField);\n      });\n    }\n\n  }\n\n  GroupFieldBuilder.ɵfac = function GroupFieldBuilder_Factory(t) {\n    return new (t || GroupFieldBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  GroupFieldBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function GroupFieldBuilder_Factory() {\n      return new GroupFieldBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: GroupFieldBuilder,\n    providedIn: \"root\"\n  });\n  return GroupFieldBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AttributeBuilder = /*#__PURE__*/(() => {\n  class AttributeBuilder extends FieldBuilder {\n    constructor(validationManager, typeFormatter) {\n      super(validationManager, typeFormatter);\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Create and add attributes fields to field\n     *\n     * @param {object} record Record\n     * @param {object} fields FieldMap\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @param {function} buildAttributeFunction\n     * @param {function} addAttributeFunction\n     */\n\n\n    addAttributes(record, fields, viewField, language, buildAttributeFunction, addAttributeFunction) {\n      const fieldKeys = Object.keys(fields) || [];\n\n      if (fieldKeys.length < 1) {\n        return;\n      }\n\n      fieldKeys.forEach(key => {\n        const field = fields[key];\n        this.addFieldAttributes(record, field, language, buildAttributeFunction, addAttributeFunction);\n      });\n    }\n    /**\n     * Create and add attributes fields to field\n     *\n     * @param {object} record Record\n     * @param {object} field Field\n     * @param {object} language LanguageStore\n     * @param {function} buildAttributeFunction\n     * @param {function} addAttributeFunction\n     */\n\n\n    addFieldAttributes(record, field, language, buildAttributeFunction, addAttributeFunction) {\n      const definition = field && field.definition || {};\n      const attributes = definition.attributeFields || {};\n      const attributeKeys = Object.keys(attributes);\n      attributeKeys.forEach(key => {\n        const attributeDefinition = attributes[key];\n\n        if (!!field.attributes[key]) {\n          return;\n        }\n\n        const attributeViewField = {\n          name: attributeDefinition.name,\n          label: attributeDefinition.vname,\n          type: attributeDefinition.type,\n          fieldDefinition: attributeDefinition\n        };\n        const attributeField = buildAttributeFunction(record, field, attributeViewField, language);\n        addAttributeFunction(record, field, attributeDefinition.name, attributeField);\n      });\n    }\n    /**\n     * Build field\n     *\n     * @param {object} record Record\n     * @param {object} parentField Field\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object} FieldAttribute\n     */\n\n\n    buildAttribute(record, parentField, viewField, language = null) {\n      const definition = viewField && viewField.fieldDefinition || {};\n      const {\n        value,\n        valueList,\n        valueObject\n      } = this.parseAttributeValue(viewField, definition, record, parentField);\n      const {\n        validators,\n        asyncValidators\n      } = this.getSaveValidators(record, viewField);\n      const field = this.setupField(record.module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language);\n      const fieldAttribute = field;\n      fieldAttribute.valuePath = definition.valuePath;\n      fieldAttribute.valueParent = definition.valueParent;\n      fieldAttribute.source = 'attribute';\n      fieldAttribute.parentKey = parentField.name;\n      return fieldAttribute;\n    }\n    /**\n     * Add attribute to record\n     *\n     * @param {object} record Record\n     * @param {object} field Field\n     * @param {string} name string\n     * @param {object} attribute FieldAttribute\n     */\n\n\n    addAttributeToRecord(record, field, name, attribute) {\n      if (!record || !name || !field || !attribute) {\n        return;\n      }\n\n      field.attributes = field.attributes || {};\n      field.attributes[name] = attribute;\n\n      if (record.formGroup && attribute.formControl) {\n        record.formGroup.addControl(name, attribute.formControl);\n      }\n    }\n    /**\n     * Parse attribute from field\n     *\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} definition FieldDefinition\n     * @param {object} record Record\n     * @param {object} field Field\n     * @returns {object} value object\n     */\n\n\n    parseAttributeValue(viewField, definition, record, field) {\n      const type = viewField && viewField.type || '';\n      const source = definition && definition.source || '';\n      const rname = definition && definition.rname || 'name';\n      const viewName = viewField.name || '';\n      let value;\n      let valueList = null;\n\n      if (type === 'relate' && source === 'non-db' && rname !== '') {\n        value = this.getParentValue(record, field, viewName, definition)[rname];\n        const valueObject = this.getParentValue(record, field, viewName, definition);\n        return {\n          value,\n          valueList,\n          valueObject\n        };\n      }\n\n      if (!viewName) {\n        value = '';\n      } else {\n        value = this.getParentValue(record, field, viewName, definition);\n      }\n\n      value = this.getParentValue(record, field, viewName, definition);\n\n      if (Array.isArray(value)) {\n        return {\n          value: null,\n          valueList: value,\n          valueObject: null\n        };\n      }\n\n      if (isObjectLike(value)) {\n        return {\n          value: null,\n          valueList: null,\n          valueObject: value\n        };\n      }\n\n      return {\n        value,\n        valueList: null,\n        valueObject: null\n      };\n    }\n\n  }\n\n  AttributeBuilder.ɵfac = function AttributeBuilder_Factory(t) {\n    return new (t || AttributeBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  AttributeBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AttributeBuilder_Factory() {\n      return new AttributeBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: AttributeBuilder,\n    providedIn: \"root\"\n  });\n  return AttributeBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterFieldBuilder = /*#__PURE__*/(() => {\n  class FilterFieldBuilder extends FieldBuilder {\n    constructor(validationManager, typeFormatter) {\n      super(validationManager, typeFormatter);\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Build filter field\n     *\n     * @param {object} savedFilter SavedFilter\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object} Field\n     */\n\n\n    buildFilterField(savedFilter, viewField, language = null) {\n      const definition = viewField && viewField.fieldDefinition || {};\n      const {\n        validators,\n        asyncValidators\n      } = this.getFilterValidators(savedFilter, viewField);\n      const field = this.setupField(savedFilter.searchModule, viewField, null, null, null, savedFilter, definition, validators, asyncValidators, language);\n      field.criteria = this.initFieldFilter(savedFilter.criteria, viewField, field);\n      return field;\n    }\n    /**\n     * Get Filter Validators for given field definition\n     *\n     * @param {object} record  Record\n     * @param {object} viewField ViewFieldDefinition\n     * @returns {object} validator map\n     */\n\n\n    getFilterValidators(record, viewField) {\n      const validators = this.validationManager.getFilterValidations(record.searchModule, viewField, record);\n      const asyncValidators = [];\n      return {\n        validators,\n        asyncValidators\n      };\n    }\n    /**\n     * Init filter fields\n     *\n     * @param {object} searchCriteria to use\n     * @param {object} viewField to init\n     * @param {object} field to init\n     * @returns {object} SearchCriteriaFieldFilter\n     */\n\n\n    initFieldFilter(searchCriteria, viewField, field) {\n      let fieldCriteria;\n      const fieldName = viewField.name;\n      let fieldType = viewField.type;\n\n      if (fieldType === 'composite') {\n        fieldType = field.definition.type;\n      }\n\n      if (searchCriteria.filters[fieldName]) {\n        fieldCriteria = deepClone(searchCriteria.filters[fieldName]);\n      } else {\n        fieldCriteria = {\n          field: fieldName,\n          fieldType,\n          operator: '',\n          values: []\n        };\n      }\n\n      return fieldCriteria;\n    }\n    /**\n     * Is criteria field initialized in record\n     *\n     * @param {object} record Record\n     * @param {string} fieldName field\n     * @returns {boolean} isInitialized\n     */\n\n\n    isCriteriaFieldInitialized(record, fieldName) {\n      return !!record.criteriaFields[fieldName];\n    }\n    /**\n     * Add field to SavedFilter\n     *\n     * @param {object} savedFilter SavedFilter\n     * @param {string} name string\n     * @param {object} field Field\n     */\n\n\n    addToSavedFilter(savedFilter, name, field) {\n      if (!savedFilter || !name || !field) {\n        return;\n      }\n\n      if (!savedFilter.criteriaFields) {\n        savedFilter.criteriaFields = {};\n      }\n\n      savedFilter.criteriaFields[name] = field;\n\n      if (!savedFilter.criteria.filters) {\n        savedFilter.criteria.filters = {};\n      }\n\n      savedFilter.criteria.filters[name] = field.criteria;\n\n      if (savedFilter.criteriaFormGroup && field.formControl) {\n        savedFilter.criteriaFormGroup.addControl(name, field.formControl);\n      }\n    }\n\n  }\n\n  FilterFieldBuilder.ɵfac = function FilterFieldBuilder_Factory(t) {\n    return new (t || FilterFieldBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  FilterFieldBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FilterFieldBuilder_Factory() {\n      return new FilterFieldBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: FilterFieldBuilder,\n    providedIn: \"root\"\n  });\n  return FilterFieldBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterAttributeBuilder = /*#__PURE__*/(() => {\n  class FilterAttributeBuilder extends FilterFieldBuilder {\n    constructor(validationManager, typeFormatter) {\n      super(validationManager, typeFormatter);\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Build filter attribute\n     *\n     * @param {object} savedFilter SavedFilter\n     * @param {object} parentField Field\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object} FieldAttribute\n     */\n\n\n    buildFilterAttribute(savedFilter, parentField, viewField, language = null) {\n      const definition = viewField && viewField.fieldDefinition || {};\n\n      if (!definition.valuePath) {\n        definition.valuePath = 'criteria.' + (viewField.name || definition.name);\n      }\n\n      const {\n        value,\n        valueList,\n        valueObject\n      } = this.parseFilterAttributeValue(viewField, definition, savedFilter, parentField);\n      const {\n        validators,\n        asyncValidators\n      } = this.getFilterValidators(savedFilter, viewField);\n      const field = this.setupField(savedFilter.searchModule, viewField, value, valueList, valueObject, savedFilter, definition, validators, asyncValidators, language);\n      const fieldAttribute = field;\n      fieldAttribute.valuePath = definition.valuePath;\n      fieldAttribute.source = 'attribute';\n      fieldAttribute.parentKey = parentField.definition.name;\n      return fieldAttribute;\n    }\n    /**\n     * Add attribute to SavedFilter\n     *\n     * @param {object} savedFilter SavedFilter\n     * @param {object} field Field\n     * @param {string} name string\n     * @param {object} attribute FieldAttribute\n     */\n\n\n    addAttributeToSavedFilter(savedFilter, field, name, attribute) {\n      if (!savedFilter || !name || !field || !attribute) {\n        return;\n      }\n\n      field.attributes = field.attributes || {};\n      field.attributes[name] = attribute;\n\n      if (savedFilter.criteriaFormGroup && attribute.formControl) {\n        savedFilter.criteriaFormGroup.addControl(name, attribute.formControl);\n      }\n    }\n    /**\n     * Parse filter attribute from field\n     *\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} definition FieldDefinition\n     * @param {object} record Record\n     * @param {object} field Field\n     * @returns {object} value object\n     */\n\n\n    parseFilterAttributeValue(viewField, definition, record, field) {\n      const viewName = viewField.name || '';\n      let value;\n\n      if (!viewName) {\n        value = '';\n      } else {\n        value = this.getParentValue(record, field, viewName, definition);\n      }\n\n      if (Array.isArray(value)) {\n        return {\n          value: null,\n          valueList: value,\n          valueObject: null\n        };\n      }\n\n      if (isObjectLike(value)) {\n        return {\n          value: null,\n          valueList: null,\n          valueObject: value\n        };\n      }\n\n      return {\n        value,\n        valueList: null,\n        valueObject: null\n      };\n    }\n\n  }\n\n  FilterAttributeBuilder.ɵfac = function FilterAttributeBuilder_Factory(t) {\n    return new (t || FilterAttributeBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  FilterAttributeBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FilterAttributeBuilder_Factory() {\n      return new FilterAttributeBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: FilterAttributeBuilder,\n    providedIn: \"root\"\n  });\n  return FilterAttributeBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineItemBuilder = /*#__PURE__*/(() => {\n  class LineItemBuilder extends AttributeBuilder {\n    constructor(validationManager, typeFormatter) {\n      super(validationManager, typeFormatter);\n      this.validationManager = validationManager;\n      this.typeFormatter = typeFormatter;\n    }\n    /**\n     * Create and add attributes fields to field\n     *\n     * @param {object} record Record\n     * @param {object} fields FieldMap\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @param {function} buildLineItemFunction\n     */\n\n\n    addLineItems(record, fields, viewField, language, buildLineItemFunction) {\n      const fieldKeys = Object.keys(fields) || [];\n\n      if (fieldKeys.length < 1) {\n        return;\n      }\n\n      fieldKeys.forEach(key => {\n        const field = fields[key];\n        this.addFieldLineItems(record, field, language, buildLineItemFunction);\n      });\n    }\n    /**\n     * Create and add attributes fields to field\n     *\n     * @param {object} record Record\n     * @param {object} field Field\n     * @param {object} language LanguageStore\n     * @param {function} buildLineItemFunction\n     */\n\n\n    addFieldLineItems(record, field, language, buildLineItemFunction) {\n      const definition = field && field.definition || {};\n      const type = field && field.type || '';\n      const items = field.valueObjectArray && field.valueObjectArray || [];\n\n      if (type !== 'line-items' || !items.length) {\n        return;\n      }\n\n      const itemDefinition = definition.lineItems && definition.lineItems.definition || {};\n      field.items = [];\n      items.forEach(item => {\n        this.addLineItem(itemDefinition, item, buildLineItemFunction, language, record, field);\n      });\n    }\n    /**\n     * Build line item and and to record\n     * @param {object} itemDefinition\n     * @param {object }item\n     * @param {object} buildLineItemFunction\n     * @param {object} language\n     * @param {object} parentRecord\n     * @param {object} parentField\n     */\n\n\n    addLineItem(itemDefinition, item, buildLineItemFunction, language, parentRecord, parentField) {\n      const itemViewField = {\n        name: itemDefinition.name,\n        label: itemDefinition.vname,\n        type: itemDefinition.type,\n        fieldDefinition: deepClone(itemDefinition)\n      };\n      const itemRecord = {\n        id: item.id || '',\n        type: item.type || '',\n        module: item.module || '',\n        attributes: item.attributes || {},\n        fields: {},\n        formGroup: new FormGroup({})\n      };\n      buildLineItemFunction(itemRecord, itemViewField, language);\n      parentField.itemFormArray.push(itemRecord.formGroup);\n      parentField.items.push(itemRecord);\n    }\n\n  }\n\n  LineItemBuilder.ɵfac = function LineItemBuilder_Factory(t) {\n    return new (t || LineItemBuilder)(ɵngcc0.ɵɵinject(ValidationManager), ɵngcc0.ɵɵinject(DataTypeFormatter));\n  };\n\n  LineItemBuilder.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LineItemBuilder_Factory() {\n      return new LineItemBuilder(i0.ɵɵinject(ValidationManager), i0.ɵɵinject(DataTypeFormatter));\n    },\n    token: LineItemBuilder,\n    providedIn: \"root\"\n  });\n  return LineItemBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FieldManager = /*#__PURE__*/(() => {\n  class FieldManager {\n    constructor(fieldBuilder, groupFieldBuilder, attributeBuilder, filterFieldBuilder, filterAttributeBuilder, lineItemBuilder, languageStore) {\n      this.fieldBuilder = fieldBuilder;\n      this.groupFieldBuilder = groupFieldBuilder;\n      this.attributeBuilder = attributeBuilder;\n      this.filterFieldBuilder = filterFieldBuilder;\n      this.filterAttributeBuilder = filterAttributeBuilder;\n      this.lineItemBuilder = lineItemBuilder;\n      this.languageStore = languageStore;\n    }\n    /**\n     * Build minimally initialised field object\n     *\n     * @param {string} type field type\n     * @param {string} value field value\n     * @returns {object} Field\n     */\n\n\n    buildShallowField(type, value) {\n      return {\n        type,\n        value,\n        definition: {\n          type\n        }\n      };\n    }\n    /**\n     * Build and add field to record\n     *\n     * @param {object} record Record\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object}Field\n     */\n\n\n    addField(record, viewField, language = null) {\n      const field = this.fieldBuilder.buildField(record, viewField, language);\n      this.addToRecord(record, viewField.name, field);\n      this.groupFieldBuilder.addGroupFields(record, viewField, language, this.isFieldInitialized.bind(this), this.fieldBuilder.buildField.bind(this.fieldBuilder), this.addToRecord.bind(this));\n      this.attributeBuilder.addAttributes(record, record.fields, viewField, language, this.attributeBuilder.buildAttribute.bind(this.attributeBuilder), this.attributeBuilder.addAttributeToRecord.bind(this.attributeBuilder));\n      this.lineItemBuilder.addLineItems(record, record.fields, viewField, language, this.addField.bind(this));\n      return field;\n    }\n    /**\n     * Build and add filter field to record\n     *\n     * @param {object} record Record\n     * @param {object} viewField ViewFieldDefinition\n     * @param {object} language LanguageStore\n     * @returns {object}Field\n     */\n\n\n    addFilterField(record, viewField, language = null) {\n      const field = this.filterFieldBuilder.buildFilterField(record, viewField, language);\n      this.filterFieldBuilder.addToSavedFilter(record, viewField.name, field);\n      this.groupFieldBuilder.addGroupFields(record, viewField, language, this.filterFieldBuilder.isCriteriaFieldInitialized.bind(this.filterFieldBuilder), this.filterFieldBuilder.buildFilterField.bind(this.filterFieldBuilder), this.filterFieldBuilder.addToSavedFilter.bind(this.filterFieldBuilder));\n      this.attributeBuilder.addAttributes(record, record.criteriaFields, viewField, language, this.filterAttributeBuilder.buildFilterAttribute.bind(this.filterAttributeBuilder), this.filterAttributeBuilder.addAttributeToSavedFilter.bind(this.filterAttributeBuilder));\n      return field;\n    }\n    /**\n     * Build line item and add to record\n     * @param {object} itemDefinition\n     * @param {object }item\n     * @param {object} parentRecord\n     * @param {object} parentField\n     */\n\n\n    addLineItem(itemDefinition, parentRecord, parentField, item = null) {\n      if (!item) {\n        item = {\n          id: '',\n          module: parentField.definition.module || '',\n          attributes: {},\n          fields: {},\n          formGroup: new FormGroup({})\n        };\n      }\n\n      this.lineItemBuilder.addLineItem(itemDefinition, item, this.addField.bind(this), this.languageStore, parentRecord, parentField);\n      parentField.itemFormArray.updateValueAndValidity();\n    }\n    /**\n     * Remove line item\n     * @param {object} parentField\n     * @param index\n     */\n\n\n    removeLineItem(parentField, index) {\n      const item = parentField.items[index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item.id) {\n        item.attributes.deleted = 1;\n      } else {\n        parentField.items = index > -1 ? [...parentField.items.slice(0, index), ...parentField.items.slice(index + 1)] : parentField.items;\n      }\n\n      parentField.itemFormArray.clear();\n      parentField.items.forEach(item => {\n        const deleted = item && item.attributes && item.attributes.deleted;\n\n        if (!item || deleted) {\n          return;\n        }\n\n        parentField.itemFormArray.push(item.formGroup);\n      });\n      parentField.itemFormArray.updateValueAndValidity();\n    }\n    /**\n     * Add field to record\n     *\n     * @param {object} record Record\n     * @param {string} name string\n     * @param {object} field Field\n     */\n\n\n    addToRecord(record, name, field) {\n      if (!record || !name || !field) {\n        return;\n      }\n\n      if (!record.fields) {\n        record.fields = {};\n      }\n\n      record.fields[name] = field;\n\n      if (record.formGroup && field.itemFormArray) {\n        record.formGroup.addControl(name + '-items', field.itemFormArray);\n      }\n\n      if (record.formGroup && field.formControl) {\n        record.formGroup.addControl(name, field.formControl);\n      }\n    }\n    /**\n     * Is field initialized in record\n     *\n     * @param {object} record Record\n     * @param {string} fieldName field\n     * @returns {boolean} isInitialized\n     */\n\n\n    isFieldInitialized(record, fieldName) {\n      return !!record.fields[fieldName];\n    }\n\n  }\n\n  FieldManager.ɵfac = function FieldManager_Factory(t) {\n    return new (t || FieldManager)(ɵngcc0.ɵɵinject(FieldBuilder), ɵngcc0.ɵɵinject(GroupFieldBuilder), ɵngcc0.ɵɵinject(AttributeBuilder), ɵngcc0.ɵɵinject(FilterFieldBuilder), ɵngcc0.ɵɵinject(FilterAttributeBuilder), ɵngcc0.ɵɵinject(LineItemBuilder), ɵngcc0.ɵɵinject(LanguageStore));\n  };\n\n  FieldManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FieldManager_Factory() {\n      return new FieldManager(i0.ɵɵinject(FieldBuilder), i0.ɵɵinject(GroupFieldBuilder), i0.ɵɵinject(AttributeBuilder), i0.ɵɵinject(FilterFieldBuilder), i0.ɵɵinject(FilterAttributeBuilder), i0.ɵɵinject(LineItemBuilder), i0.ɵɵinject(LanguageStore));\n    },\n    token: FieldManager,\n    providedIn: \"root\"\n  });\n  return FieldManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordManager = /*#__PURE__*/(() => {\n  class RecordManager {\n    constructor(fieldManager, language) {\n      this.fieldManager = fieldManager;\n      this.language = language;\n    }\n    /**\n     * Get empty record\n     *\n     * @param {string} module string\n     * @returns {object} Record\n     */\n\n\n    buildEmptyRecord(module) {\n      return {\n        id: '',\n        module,\n        attributes: {\n          id: ''\n        },\n        fields: {},\n        formGroup: new FormGroup({})\n      };\n    }\n    /**\n     * Init Fields\n     *\n     * @param {object} record to use\n     * @param {object} viewFieldDefinitions to use\n     * @returns {object} fields\n     */\n\n\n    initFields(record, viewFieldDefinitions) {\n      if (!record.fields) {\n        record.fields = {};\n      }\n\n      if (!record.formGroup) {\n        record.formGroup = new FormGroup({});\n      }\n\n      viewFieldDefinitions.forEach(viewField => {\n        if (!viewField || !viewField.name) {\n          return;\n        }\n\n        this.fieldManager.addField(record, viewField, this.language);\n      });\n      return record.fields;\n    }\n    /**\n     * Inject param fields\n     *\n     * @param {object} params Params\n     * @param {object} record Record\n     * @param {object} vardefs FieldDefinitionMap\n     */\n\n\n    injectParamFields(params, record, vardefs) {\n      Object.keys(params).forEach(paramKey => {\n        var _a;\n\n        const definition = vardefs[paramKey];\n\n        if (!isVoid(definition)) {\n          const type = definition.type || '';\n          let idName = definition.id_name || '';\n          const name = definition.name || '';\n          let rname = definition.rname || '';\n\n          if (type === 'relate' && idName === name) {\n            record.attributes[paramKey] = params[paramKey];\n            return;\n          }\n\n          if (type === 'parent') {\n            const relate = {};\n            let rname = 'name';\n            let idName = 'parent_id';\n            const groupFieldKey = paramKey + '-group';\n            const groupField = (_a = vardefs[groupFieldKey]) !== null && _a !== void 0 ? _a : {};\n            const parentName = groupField.groupFields[paramKey];\n\n            if (parentName && parentName.rname) {\n              rname = parentName.rname;\n            }\n\n            if (rname) {\n              relate[rname] = params[paramKey];\n            }\n\n            if (idName && params[idName]) {\n              relate.id = params[idName];\n            }\n\n            record.attributes[paramKey] = relate;\n            return;\n          }\n\n          if (type === 'relate') {\n            const relate = {};\n\n            if (rname) {\n              relate[rname] = params[paramKey];\n            }\n\n            if (idName && params[idName]) {\n              relate.id = params[idName];\n            }\n\n            record.attributes[paramKey] = relate;\n            return;\n          }\n\n          record.attributes[paramKey] = params[paramKey];\n          return;\n        }\n\n        this.handleLinkTypeRelationship(paramKey, params, vardefs, record);\n      });\n    }\n\n    handleLinkTypeRelationship(paramKey, params, vardefs, record) {\n      if (paramKey === 'return_relationship') {\n        const returnRelationship = params.return_relationship;\n\n        if (!returnRelationship) {\n          return;\n        } // check, on vardefs, if there is a field of type = link\n        // with relationship equal to the value of return_relationship param\n\n\n        Object.keys(vardefs).forEach(key => {\n          var _a, _b, _c, _d;\n\n          const vardef = vardefs[key];\n          const type = vardef.type || '';\n\n          if (type !== 'link') {\n            return;\n          }\n\n          const relationship = vardef.relationship || '';\n\n          if (!relationship) {\n            return;\n          }\n\n          if (relationship === returnRelationship) {\n            const linkFieldName = vardef.name;\n            const module = (_b = (_a = vardef.module) !== null && _a !== void 0 ? _a : params.return_module) !== null && _b !== void 0 ? _b : '';\n\n            if (!module) {\n              return;\n            }\n\n            const parentName = params.parent_name;\n\n            if (!parentName) {\n              return;\n            } // name of the related parent field e.g. contact_id as injected\n            // in to field definition from its metadata definition\n\n\n            const relateId = (_c = vardef === null || vardef === void 0 ? void 0 : vardef.relationshipMetadata) === null || _c === void 0 ? void 0 : _c.related_id;\n            const parentId = (_d = params[relateId]) !== null && _d !== void 0 ? _d : '';\n\n            if (!parentId) {\n              return;\n            } // add link type fields as line items to base record\n\n\n            record.attributes[linkFieldName] = [{\n              id: parentId,\n              module,\n              attributes: {\n                id: parentId,\n                name: parentName\n              }\n            }];\n            return;\n          }\n        });\n      }\n    }\n\n  }\n\n  RecordManager.ɵfac = function RecordManager_Factory(t) {\n    return new (t || RecordManager)(ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(LanguageStore));\n  };\n\n  RecordManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordManager_Factory() {\n      return new RecordManager(i0.ɵɵinject(FieldManager), i0.ɵɵinject(LanguageStore));\n    },\n    token: RecordManager,\n    providedIn: \"root\"\n  });\n  return RecordManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseComposite = /*#__PURE__*/(() => {\n  class BaseComposite extends BaseFieldComponent {\n    constructor(typeFormatter, registry, recordManager, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.registry = registry;\n      this.recordManager = recordManager;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.initUpdateParentSubscription();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getComponentType(type, definition) {\n      let module = this.record && this.record.module || 'default';\n      const displayType = definition && definition.displayType || '';\n      return this.registry.getDisplayType(module, type, displayType, this.getMode());\n    }\n    /**\n     * Get the attribute fields from the field\n     *\n     * @returns {object} Field[]\n     */\n\n\n    getAttributes() {\n      const fields = [];\n      this.field.definition.layout.forEach(name => {\n        if (!this.field.attributes[name] || this.field.attributes[name].display === 'none') {\n          return;\n        }\n\n        fields.push(this.field.attributes[name]);\n      });\n      return fields;\n    }\n\n    getModule() {\n      if (!this.record) {\n        return null;\n      }\n\n      return this.record.module;\n    }\n\n    getMode() {\n      if (this.mode === 'filter') {\n        return 'edit';\n      }\n\n      return this.mode;\n    }\n    /**\n     * Get flex direction to be used\n     *\n     * @returns {string} direction\n     */\n\n\n    getDirection() {\n      let direction = 'flex-column';\n\n      if (this.field.definition.display === 'inline') {\n        direction = 'flex-row';\n      }\n\n      return direction;\n    }\n    /**\n     * Check if is configured\n     *\n     * @returns {boolean} is configured\n     */\n\n\n    isConfigured() {\n      return this.hasDisplay() && this.hasLayout() && this.hasAttributes();\n    }\n    /**\n     * Show label\n     * @param attribute\n     */\n\n\n    showLabel(attribute) {\n      const definition = attribute.definition || null;\n      const showLabel = definition.showLabel || null;\n      const labelDisplay = attribute.metadata && attribute.metadata.labelDisplay || '';\n\n      if (!definition || !showLabel || labelDisplay === 'hide') {\n        return false;\n      }\n\n      return showLabel.includes('*') || showLabel.includes(this.mode);\n    }\n    /**\n     * Check if groupFields are configured\n     *\n     * @returns {boolean} has groupFields\n     */\n\n\n    hasAttributes() {\n      return !!(this.field.definition.attributeFields && !emptyObject(this.field.definition.attributeFields));\n    }\n    /**\n     * Check if layout is configured\n     *\n     * @returns {boolean} has layout\n     */\n\n\n    hasLayout() {\n      return !!(this.field.definition.layout && this.field.definition.layout.length);\n    }\n    /**\n     * Check if display is configured\n     *\n     * @returns {boolean} has display\n     */\n\n\n    hasDisplay() {\n      return !!this.field.definition.display;\n    }\n    /**\n     * Init Update parent subscription\n     */\n\n\n    initUpdateParentSubscription() {\n      if (!this.field.attributes) {\n        return;\n      }\n\n      Object.keys(this.field.attributes).forEach(attributeKey => {\n        const attribute = this.field.attributes[attributeKey];\n\n        if (!attribute.valueChanges$) {\n          return;\n        }\n\n        this.subs.push(attribute.valueChanges$.subscribe(value => {\n          const val = value.valueObject || value.valueList || value.value;\n          this.setValueOnParent(attribute, val);\n        }));\n      });\n    }\n    /**\n     * Set attribute value on parent\n     *\n     * @param {object} attribute\n     * @param {} value\n     */\n\n\n    setValueOnParent(attribute, value) {\n      var _a;\n\n      const valueParent = (_a = attribute.valueParent) !== null && _a !== void 0 ? _a : 'field';\n      const parent = valueParent === 'record' ? this.record : this.field;\n\n      if (attribute.valuePath) {\n        set(parent, attribute.valuePath, value);\n        return;\n      }\n\n      if (valueParent === 'record') {\n        set(this.record.attributes, attribute.name, value);\n      } else {\n        set(this.field.valueObject, attribute.name, value);\n      }\n    }\n\n  }\n\n  BaseComposite.ɵfac = function BaseComposite_Factory(t) {\n    return new (t || BaseComposite)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(StandardFieldRegistry), ɵngcc0.ɵɵdirectiveInject(RecordManager), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  BaseComposite.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseComposite,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseComposite_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseComposite;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CompositeComponent = /*#__PURE__*/(() => {\n  class CompositeComponent extends BaseComposite {\n    constructor(typeFormatter, registry, recordManager, logic) {\n      super(typeFormatter, registry, recordManager, logic);\n      this.typeFormatter = typeFormatter;\n      this.registry = registry;\n      this.recordManager = recordManager;\n      this.logic = logic;\n    }\n\n  }\n\n  CompositeComponent.ɵfac = function CompositeComponent_Factory(t) {\n    return new (t || CompositeComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(StandardFieldRegistry), ɵngcc0.ɵɵdirectiveInject(RecordManager), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  CompositeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CompositeComponent,\n    selectors: [[\"scrm-composite-field\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"labelKey\", \"LBL_BAD_GROUP_FIELD_CONFIG\"], [\"class\", \"field-group-item d-flex flex-column justify-content-end h-100 w-100\", 3, \"flex-fill\", \"align-self-start\", 4, \"ngFor\", \"ngForOf\"], [1, \"field-group-item\", \"d-flex\", \"flex-column\", \"justify-content-end\", \"h-100\", \"w-100\"], [1, \"field-group-label\", \"pt-2\", \"pr-1\"], [\"class\", \"field-group-field pr-1 pb-1 composite-field\", 4, \"ngIf\"], [3, \"labelKey\", \"module\"], [1, \"field-group-field\", \"pr-1\", \"pb-1\", \"composite-field\"], [3, \"componentType\", \"field\", \"klass\", \"mode\", \"record\", \"parent\", \"type\"]],\n    template: function CompositeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CompositeComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, CompositeComponent_ng_container_1_Template, 3, 4, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isConfigured());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isConfigured());\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, DynamicFieldComponent],\n    encapsulation: 2\n  });\n  return CompositeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CompositeModule = /*#__PURE__*/(() => {\n  class CompositeModule {}\n\n  CompositeModule.ɵfac = function CompositeModule_Factory(t) {\n    return new (t || CompositeModule)();\n  };\n\n  CompositeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CompositeModule\n  });\n  CompositeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, LabelModule, DynamicFieldModule]]\n  });\n  return CompositeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CompositeModule, {\n    declarations: function () {\n      return [CompositeComponent, BaseComposite];\n    },\n    imports: function () {\n      return [CommonModule, LabelModule, DynamicFieldModule];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst fieldModules = [...baseFieldModules, GroupFieldModule, CompositeModule];\nconst fieldComponents = [...baseFieldComponents, GroupFieldComponent, CompositeComponent];\nconst viewFieldsMap = Object.assign(Object.assign({}, baseViewFieldsMap), {\n  'grouped-field.list': GroupFieldComponent,\n  'grouped-field.detail': GroupFieldComponent,\n  'grouped-field.edit': GroupFieldComponent,\n  'grouped-field.filter': GroupFieldComponent,\n  'composite.list': CompositeComponent,\n  'composite.detail': CompositeComponent,\n  'composite.edit': CompositeComponent,\n  'composite.filter': CompositeComponent\n});\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nlet FieldRegistry = /*#__PURE__*/(() => {\n  class FieldRegistry extends BaseFieldRegistry {\n    constructor() {\n      super();\n    }\n\n    getDefaultMap() {\n      return viewFieldsMap;\n    }\n\n  }\n\n  FieldRegistry.ɵfac = function FieldRegistry_Factory(t) {\n    return new (t || FieldRegistry)();\n  };\n\n  FieldRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FieldRegistry_Factory() {\n      return new FieldRegistry();\n    },\n    token: FieldRegistry,\n    providedIn: \"root\"\n  });\n  return FieldRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldComponent = /*#__PURE__*/(() => {\n  class FieldComponent {\n    constructor(registry) {\n      this.registry = registry;\n      this.record = null;\n      this.klass = null;\n      this.class = 'field';\n      this.map = viewFieldsMap;\n    }\n\n    ngOnInit() {\n      this.setHostClass();\n    }\n\n    get componentMode() {\n      let mode = this.mode;\n\n      if (mode === 'create') {\n        mode = 'edit';\n      }\n\n      if (mode === 'edit' && this.field.display && this.field.display === 'readonly') {\n        mode = 'detail';\n      }\n\n      return mode;\n    }\n\n    get componentType() {\n      let module = this.record && this.record.module || 'default';\n      const displayType = this.field.definition && this.field.definition.displayType || '';\n      return this.registry.getDisplayType(module, this.type, displayType, this.componentMode);\n    }\n\n    setHostClass() {\n      const classes = [];\n      classes.push('field');\n\n      if (this.mode) {\n        classes.push('field-mode-' + this.mode);\n      }\n\n      if (this.type) {\n        classes.push('field-type-' + this.type);\n      }\n\n      if (this.field && this.field.name) {\n        classes.push('field-name-' + this.field.name);\n      }\n\n      this.class = classes.join(' ');\n    }\n\n  }\n\n  FieldComponent.ɵfac = function FieldComponent_Factory(t) {\n    return new (t || FieldComponent)(ɵngcc0.ɵɵdirectiveInject(FieldRegistry));\n  };\n\n  FieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FieldComponent,\n    selectors: [[\"scrm-field\"]],\n    hostVars: 2,\n    hostBindings: function FieldComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.class);\n      }\n    },\n    inputs: {\n      record: \"record\",\n      klass: \"klass\",\n      mode: \"mode\",\n      type: \"type\",\n      field: \"field\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"componentType\", \"field\", \"klass\", \"mode\", \"record\", \"parent\", \"type\", 4, \"ngIf\"], [3, \"field\", \"klass\", \"mode\", \"record\", \"parent\", 4, \"ngIf\"], [3, \"componentType\", \"field\", \"klass\", \"mode\", \"record\", \"parent\", \"type\"], [3, \"field\", \"klass\", \"mode\", \"record\", \"parent\"]],\n    template: function FieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FieldComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.field && ctx.field.display !== \"none\");\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, DynamicFieldComponent, LineItemsComponent];\n    },\n    encapsulation: 2\n  });\n  return FieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseLineItemsComponent = /*#__PURE__*/(() => {\n  class BaseLineItemsComponent extends BaseFieldComponent {\n    constructor(typeFormatter, registry, recordManager, logic, fieldManager) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.registry = registry;\n      this.recordManager = recordManager;\n      this.logic = logic;\n      this.fieldManager = fieldManager;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.initUpdateParentSubscription();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n    /**\n     * Get component type\n     * @param {string} type\n     * @param {FieldDefinition} definition\n     * @returns {}\n     */\n\n\n    getComponentType(type, definition) {\n      const module = this.record && this.record.module || 'default';\n      const displayType = definition && definition.displayType || '';\n      return this.registry.getDisplayType(module, type, displayType, this.getMode());\n    }\n    /**\n     * Get the list of items\n     *\n     * @returns {object} Record[]\n     */\n\n\n    getItems() {\n      this.field.items = this.field.items || [];\n      const definition = this.field && this.field.definition && this.field.definition.lineItems || {};\n      const items = this.field.items || [];\n      const activeItems = items && items.filter(item => !(item && item.attributes && item.attributes.deleted));\n      activeItems.forEach((item, index) => {\n        let show = true;\n\n        if (definition.labelOnFirstLine && index > 0) {\n          show = false;\n        }\n\n        this.setAttributeLabelDisplay(item, show);\n      });\n      return this.field.items;\n    }\n    /**\n     * Get the fields for the item record\n     *\n     * @param {Record} item\n     * @returns {object} Field[]\n     */\n\n\n    getItemFields(item) {\n      const fields = item.fields || {};\n      return Object.keys(fields).map(key => fields[key]);\n    }\n    /**\n     * Remove item from array\n     *\n     * @param {number} index\n     * @return {void}\n     */\n\n\n    removeItem(index) {\n      this.fieldManager.removeLineItem(this.field, index);\n      this.updateItems(this.field.items);\n      this.triggerLineActionEvents(LineActionEvent.onLineItemRemove);\n    }\n    /**\n     * Add item to array\n     *\n     * @return {void}\n     */\n\n\n    addEmptyItem() {\n      const itemDefinition = this.field.definition.lineItems && this.field.definition.lineItems.definition || {};\n      this.fieldManager.addLineItem(itemDefinition, this.record, this.field);\n      this.triggerLineActionEvents(LineActionEvent.onLineItemAdd);\n    }\n    /**\n     * Update items\n     *\n     * @param {Record[]} items\n     * @return {void}\n     */\n\n\n    updateItems(items) {\n      this.field.items = items;\n    }\n    /**\n     * Get module\n     *\n     * @return {string}\n     */\n\n\n    getModule() {\n      if (!this.record) {\n        return null;\n      }\n\n      return this.record.module;\n    }\n    /**\n     * Get Mode\n     *\n     * @return {string}\n     */\n\n\n    getMode() {\n      if (this.mode === 'filter') {\n        return 'edit';\n      }\n\n      return this.mode;\n    }\n    /**\n     * Get flex direction to be used\n     *\n     * @returns {string} direction\n     */\n\n\n    getDirection() {\n      let direction = 'flex-column';\n\n      if (this.field.definition.display === 'inline') {\n        direction = 'flex-row';\n      }\n\n      return direction;\n    }\n    /**\n     * Check if is configured\n     *\n     * @returns {boolean} is configured\n     */\n\n\n    isConfigured() {\n      return this.hasItemConfig();\n    }\n    /**\n     * Check if its editable\n     */\n\n\n    isEditable() {\n      return isEditable(this.mode);\n    }\n    /**\n     * Show label\n     *\n     * @param {FieldAttribute} attribute\n     * @returns {boolean}\n     */\n\n\n    showLabel(attribute) {\n      const definition = attribute.definition || null;\n      const showLabel = definition.showLabel || null;\n\n      if (!definition || !showLabel) {\n        return false;\n      }\n\n      return showLabel.includes('*') || showLabel.includes(this.mode);\n    }\n    /**\n     * Get message context\n     *\n     * @param {} item\n     * @param {Record} record\n     * @return {object} StringMap\n     */\n\n\n    getMessageContext(item, record) {\n      const context = item && item.message && item.message.context || {};\n      context.module = record && record.module || '';\n      return context;\n    }\n    /**\n     * Get message label key\n     *\n     * @param {} item\n     * @return {string}\n     */\n\n\n    getMessageLabelKey(item) {\n      return item && item.message && item.message.labelKey || '';\n    }\n    /**\n     * Check if groupFields are configured\n     *\n     * @returns {boolean} has groupFields\n     */\n\n\n    hasItemConfig() {\n      return !!(this.field.definition.lineItems && this.field.definition.lineItems.definition);\n    }\n    /**\n     * Init Update parent subscription\n     */\n\n\n    initUpdateParentSubscription() {\n      if (!this.field.attributes) {\n        return;\n      }\n\n      Object.keys(this.field.attributes).forEach(attributeKey => {\n        const attribute = this.field.attributes[attributeKey];\n\n        if (!attribute.valueChanges$) {\n          return;\n        }\n\n        this.subs.push(attribute.valueChanges$.subscribe(value => {\n          const val = value.valueObject || value.valueList || value.value;\n          this.setValueOnParent(attribute, val);\n        }));\n      });\n    }\n    /**\n     * Set attribute value on parent\n     *\n     * @param {object} attribute\n     * @param {} value\n     * @returns {void}\n     */\n\n\n    setValueOnParent(attribute, value) {\n      if (attribute.valuePath) {\n        set(this.field, attribute.valuePath, value);\n        return;\n      }\n\n      set(this.field.valueObject, attribute.name, value);\n    }\n    /**\n     * Set attribute label display\n     *\n     * @param {object} itemRecord\n     * @param {boolean} showLabel\n     * @returns {void}\n     */\n\n\n    setAttributeLabelDisplay(itemRecord, showLabel) {\n      const subfields = itemRecord.fields || {};\n      Object.keys(subfields).forEach(subFieldKey => {\n        const subField = subfields[subFieldKey];\n\n        if (subField.type !== 'composite') {\n          return;\n        }\n\n        const subFieldAttributes = subField.attributes || {};\n        Object.keys(subFieldAttributes).forEach(subFieldAttributeKey => {\n          const subFieldAttribute = subFieldAttributes[subFieldAttributeKey];\n          const metadata = subFieldAttribute.metadata || {};\n          metadata.labelDisplay = !showLabel ? 'hide' : 'default';\n          subFieldAttribute.metadata = metadata;\n        });\n      });\n    }\n    /**\n     * Check and if enabled, Run custom field logic on line action events\n     * e.g. on line items row add/remove and so on as required\n     *\n     * @param {LineActionEvent} lineActionEvent\n     * @returns {void}\n     */\n\n\n    triggerLineActionEvents(lineActionEvent) {\n      var _a;\n\n      const fieldLogics = ((_a = this.field) === null || _a === void 0 ? void 0 : _a.logic) || {};\n\n      if (emptyObject(fieldLogics)) {\n        return;\n      }\n\n      Object.keys(fieldLogics).forEach(logicKey => {\n        var _a, _b;\n\n        const fieldLogic = fieldLogics[logicKey] || null;\n        const onEvent = (_b = (_a = fieldLogic === null || fieldLogic === void 0 ? void 0 : fieldLogic.params) === null || _a === void 0 ? void 0 : _a.triggerOnEvents) === null || _b === void 0 ? void 0 : _b[lineActionEvent];\n\n        if (isTrue(onEvent)) {\n          this.logic.runLogic(this.field, this.mode, this.record);\n        }\n      });\n    }\n\n  }\n\n  BaseLineItemsComponent.ɵfac = function BaseLineItemsComponent_Factory(t) {\n    return new (t || BaseLineItemsComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldRegistry), ɵngcc0.ɵɵdirectiveInject(RecordManager), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(FieldManager));\n  };\n\n  BaseLineItemsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseLineItemsComponent,\n    selectors: [[\"ng-component\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseLineItemsComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseLineItemsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineItemsComponent = /*#__PURE__*/(() => {\n  class LineItemsComponent extends BaseLineItemsComponent {\n    constructor(typeFormatter, registry, recordManager, logic, fieldManager) {\n      super(typeFormatter, registry, recordManager, logic, fieldManager);\n      this.typeFormatter = typeFormatter;\n      this.registry = registry;\n      this.recordManager = recordManager;\n      this.logic = logic;\n      this.fieldManager = fieldManager;\n    }\n    /**\n     * Add item button config\n     * @returns {object} ButtonInterface\n     */\n\n\n    getAddItemButton() {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        icon: 'plus',\n        onClick: () => {\n          this.addEmptyItem();\n        }\n      };\n    }\n    /**\n     * Remove item button config\n     * @param {object} item\n     * @param {number} index\n     * @returns {object} ButtonInterface\n     */\n\n\n    getRemoveItemButton(item, index) {\n      return {\n        klass: 'btn btn-sm btn-outline-secondary m-0 border-0',\n        icon: 'minimise',\n        onClick: () => {\n          this.removeItem(index);\n        }\n      };\n    }\n\n  }\n\n  LineItemsComponent.ɵfac = function LineItemsComponent_Factory(t) {\n    return new (t || LineItemsComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldRegistry), ɵngcc0.ɵɵdirectiveInject(RecordManager), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager), ɵngcc0.ɵɵdirectiveInject(FieldManager));\n  };\n\n  LineItemsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LineItemsComponent,\n    selectors: [[\"scrm-line-items-field\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"labelKey\", \"LBL_LINE_ITEMS_FIELD_CONFIG\"], [4, \"ngFor\", \"ngForOf\"], [1, \"line-item-buttons\", \"d-flex\", \"justify-content-end\", \"mt-1\"], [3, \"config\", 4, \"ngIf\"], [\"class\", \"d-flex flex-row line-item-entry w-100 align-items-end\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-row\", \"line-item-entry\", \"w-100\", \"align-items-end\"], [1, \"flex-grow-1\", \"line-item-entry-composite\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"line-item-entry-buttons\", \"mb-1\"], [3, \"componentType\", \"field\", \"klass\", \"mode\", \"record\", \"parent\", \"type\"], [3, \"config\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngFor\", \"ngForOf\"], [1, \"invalid-feedback\", \"d-block\"], [3, \"context\", \"fields\", \"labelKey\"]],\n    template: function LineItemsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LineItemsComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, LineItemsComponent_ng_container_1_Template, 7, 10, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isConfigured());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isConfigured());\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, DynamicFieldComponent, ButtonComponent, DynamicLabelComponent],\n    pipes: [ɵngcc3.KeyValuePipe],\n    encapsulation: 2\n  });\n  return LineItemsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineItemsModule = /*#__PURE__*/(() => {\n  class LineItemsModule {}\n\n  LineItemsModule.ɵfac = function LineItemsModule_Factory(t) {\n    return new (t || LineItemsModule)();\n  };\n\n  LineItemsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LineItemsModule\n  });\n  LineItemsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, LabelModule, DynamicFieldModule, ButtonModule, DynamicLabelModule]]\n  });\n  return LineItemsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LineItemsModule, {\n    declarations: function () {\n      return [LineItemsComponent, BaseLineItemsComponent];\n    },\n    imports: function () {\n      return [CommonModule, LabelModule, DynamicFieldModule, ButtonModule, DynamicLabelModule];\n    },\n    exports: function () {\n      return [LineItemsComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldModule = /*#__PURE__*/(() => {\n  class FieldModule {}\n\n  FieldModule.ɵfac = function FieldModule_Factory(t) {\n    return new (t || FieldModule)();\n  };\n\n  FieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FieldModule\n  });\n  FieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...fieldModules, CommonModule, DynamicFieldModule, LineItemsModule]]\n  });\n  return FieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FieldModule, {\n    declarations: function () {\n      return [FieldComponent];\n    },\n    imports: function () {\n      return [VarcharDetailFieldModule, VarcharEditFieldModule, VarcharFilterFieldModule, PasswordDetailFieldModule, PasswordEditFieldModule, IntDetailFieldModule, FloatDetailFieldModule, PhoneDetailFieldModule, DateDetailFieldModule, DateEditFieldModule, DateFilterFieldModule, DateTimeDetailFieldModule, DateTimeEditFieldModule, DateTimeFilterFieldModule, UrlDetailFieldModule, CurrencyDetailFieldModule, EmailListFieldsModule, TextDetailFieldModule, TextEditFieldModule, RelateDetailFieldsModule, RelateEditFieldModule, RelateFilterFieldModule, FullNameDetailFieldsModule, EnumDetailFieldModule, EnumEditFieldModule, DropdownEnumDetailFieldModule, DropdownEnumEditFieldModule, RadioEnumDetailFieldModule, RadioEnumEditFieldModule, MultiEnumDetailFieldModule, MultiEnumEditFieldModule, MultiEnumFilterFieldModule, BooleanDetailFieldModule, BooleanEditFieldModule, BooleanFilterFieldModule, HtmlDetailFieldModule, TinymceDetailFieldModule, TinymceEditFieldModule, GroupFieldModule, CompositeModule, CommonModule, DynamicFieldModule, LineItemsModule];\n    },\n    exports: function () {\n      return [FieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldGridModule = /*#__PURE__*/(() => {\n  class FieldGridModule {}\n\n  FieldGridModule.ɵfac = function FieldGridModule_Factory(t) {\n    return new (t || FieldGridModule)();\n  };\n\n  FieldGridModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FieldGridModule\n  });\n  FieldGridModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, FieldModule, LabelModule]]\n  });\n  return FieldGridModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FieldGridModule, {\n    declarations: function () {\n      return [FieldGridComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, FieldModule, LabelModule];\n    },\n    exports: function () {\n      return [FieldGridComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldLayoutComponent = /*#__PURE__*/(() => {\n  class FieldLayoutComponent extends BaseFieldGridComponent {\n    constructor(breakpointObserver) {\n      super(breakpointObserver);\n      this.breakpointObserver = breakpointObserver;\n      this.baseColClass = {\n        col: true,\n        'form-group': true,\n        'm-1': false,\n        'm-0': true,\n        'pl-3': true,\n        'pb-2': true,\n        'pr-3': true,\n        'd-flex': true,\n        'flex-column': true,\n        'justify-content-between': true\n      };\n      this.baseRowClass = {\n        'form-row': true,\n        'align-items-stretch': true\n      };\n    }\n\n    ngOnInit() {\n      this.subscriptions.push(this.dataSource.getConfig().subscribe(config => {\n        this.config = Object.assign({}, config);\n      }));\n      this.subscriptions.push(this.dataSource.getLayout().subscribe(layout => {\n        this.layout = Object.assign({}, layout);\n      }));\n      this.subscriptions.push(this.dataSource.getFields().subscribe(fields => {\n        this.fields = Object.assign({}, fields);\n      }));\n      this.subscriptions.push(this.dataSource.getRecord().subscribe(record => {\n        this.record = Object.assign({}, record);\n      }));\n      super.ngOnInit();\n    }\n\n    buildGrid() {\n      const grid = [];\n\n      if (!this.fields || Object.keys(this.fields).length === 0) {\n        this.fieldGrid = [];\n        return;\n      }\n\n      this.layout.rows.forEach(layoutRow => {\n        let row = {\n          cols: []\n        };\n        layoutRow.cols.forEach((layoutCol, colIndex) => {\n          const fieldName = layoutCol.name;\n          const field = this.fields[fieldName] || null;\n\n          if (!field) {\n            row.cols.push({});\n            return;\n          }\n\n          row.cols.push({\n            field\n          });\n\n          if (this.colNumber === 1 && colIndex < layoutRow.cols.length - 1) {\n            grid.push(row);\n            row = {\n              cols: []\n            };\n          }\n        });\n\n        if (row.cols.length < this.colNumber) {\n          this.fillRow(row);\n        }\n\n        grid.push(row);\n      });\n      this.addSpecialSlots(grid);\n      this.fieldGrid = grid;\n    }\n\n    get colNumber() {\n      const size = this.sizeMap[this.currentSize];\n\n      if (size === 1) {\n        return 1;\n      }\n\n      return this.config.maxColumns;\n    }\n\n  }\n\n  FieldLayoutComponent.ɵfac = function FieldLayoutComponent_Factory(t) {\n    return new (t || FieldLayoutComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver));\n  };\n\n  FieldLayoutComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FieldLayoutComponent,\n    selectors: [[\"scrm-field-layout\"]],\n    inputs: {\n      dataSource: \"dataSource\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c12,\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"field-column-bordered\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"field-separation mt-2\", 4, \"ngIf\"], [1, \"label-container\"], [1, \"d-flex\", \"flex-grow-1\"], [1, \"flex-grow-1\", \"text-break\"], [3, \"type\", \"mode\", \"klass\", \"field\", \"record\"], [\"type\", \"button\", \"class\", \"record-action-button\", 3, \"click\", 4, \"ngIf\"], [1, \"required\"], [\"type\", \"button\", 1, \"record-action-button\", 3, \"click\"], [\"image\", \"pencil\", 1, \"sicon\"], [1, \"field-separation\", \"mt-2\"]],\n    template: function FieldLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c11);\n        ɵngcc0.ɵɵelementStart(0, \"form\");\n        ɵngcc0.ɵɵtemplate(1, FieldLayoutComponent_div_1_Template, 2, 2, \"div\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate1(\"field-layout \", ctx.config.mode, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.fieldGrid);\n      }\n    },\n    directives: [ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc3.NgIf, FieldComponent, ImageComponent],\n    pipes: [ɵngcc3.UpperCasePipe],\n    encapsulation: 2\n  });\n  return FieldLayoutComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FieldLayoutModule = /*#__PURE__*/(() => {\n  class FieldLayoutModule {}\n\n  FieldLayoutModule.ɵfac = function FieldLayoutModule_Factory(t) {\n    return new (t || FieldLayoutModule)();\n  };\n\n  FieldLayoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FieldLayoutModule\n  });\n  FieldLayoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, FieldGridModule, ImageModule]]\n  });\n  return FieldLayoutModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FieldLayoutModule, {\n    declarations: function () {\n      return [FieldLayoutComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, FieldGridModule, ImageModule];\n    },\n    exports: function () {\n      return [FieldLayoutComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterUiComponent = /*#__PURE__*/(() => {\n  class FilterUiComponent {\n    constructor(modalService) {\n      this.modalService = modalService;\n      this.filterModal = true;\n      this.modalTitle = 'Quick Filter';\n      this.quickFilter = true;\n      this.advancedFilter = false;\n    }\n\n    toggleQuickFilter() {\n      this.modalTitle = 'Quick Filter';\n      this.advancedFilter = !this.advancedFilter;\n      this.quickFilter = !this.quickFilter;\n    }\n\n    toggleAdvancedFilter() {\n      this.modalTitle = 'Advanced Filter';\n      this.advancedFilter = !this.advancedFilter;\n      this.quickFilter = !this.quickFilter;\n    }\n\n    open(modal) {\n      this.modalService.open(modal, {\n        ariaLabelledBy: 'modal-basic-title',\n        centered: true,\n        size: 'lg',\n        windowClass: 'filter-modal'\n      }).result.then(result => {\n        this.closeResult = `Closed with: ${result}`;\n      }, reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n    }\n\n    getDismissReason(reason) {\n      if (reason === ModalDismissReasons.ESC) {\n        return 'by pressing ESC';\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n        return 'by clicking on a backdrop';\n      } else {\n        return `with: ${reason}`;\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  FilterUiComponent.ɵfac = function FilterUiComponent_Factory(t) {\n    return new (t || FilterUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal));\n  };\n\n  FilterUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FilterUiComponent,\n    selectors: [[\"scrm-filter-ui\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[\"filtermodal\", \"\"], [\"type\", \"button\", 1, \"settings-button\", 3, \"click\"], [\"image\", \"filter\", 1, \"sicon\"], [1, \"filter-modal\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close Filter Modal\", 1, \"close\", 3, \"click\"], [\"image\", \"close_modal\", 1, \"sicon\"], [1, \"modal-body\"], [3, \"ngIf\"], [1, \"modal-footer\"], [1, \"row\", \"w-100\"], [1, \"col-lg-3\"], [1, \"col-lg-9\"], [1, \"modal-buttons\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"modal-button-cancel\"], [\"type\", \"button\", 1, \"btn\", \"modal-button-save\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"modal-label\"], [\"type\", \"text\", \"placeholder\", \"Lorem Ipsum\", 1, \"modal-input\"], [1, \"filter-checkbox-container\"], [\"type\", \"filter-checkbox\"], [1, \"filter-checkmark\"], [1, \"quick-filter-options\"], [\"type\", \"text\", \"placeholder\", \"Lorem Ipsum\", 1, \"modal-input\", \"modal-input-large\"], [1, \"relate-input-group\"], [\"type\", \"button\", 1, \"create-popup-button\", \"create-popup-arrow\"], [\"image\", \"cursor\", 1, \"sicon\"], [\"type\", \"button\", 1, \"create-popup-button\", \"create-popup-cross\"], [\"image\", \"cross\", 1, \"sicon\"], [1, \"select\"], [\"type\", \"text\", \"placeholder\", \"0\", 1, \"modal-input\", \"modal-input-small\"], [1, \"col-lg-8\"], [1, \"col-lg-4\"], [\"type\", \"text\", \"placeholder\", \"dd/mm/yy\", 1, \"modal-input\", \"modal-date-input\"], [\"type\", \"button\", 1, \"create-popup-button\", \"create-popup-calendar\"], [\"image\", \"calendar\", 1, \"sicon\"], [1, \"save-filter-button\"], [\"type\", \"button\", 1, \"modal-button-save\", \"dropdown-toggle\"], [\"type\", \"button\", 1, \"btn\", \"modal-button-save\", 3, \"click\"]],\n    template: function FilterUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵtemplate(0, FilterUiComponent_ng_template_0_Template, 21, 6, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function FilterUiComponent_Template_button_click_2_listener() {\n          ɵngcc0.ɵɵrestoreView(_r13);\n\n          const _r0 = ɵngcc0.ɵɵreference(1);\n\n          return ctx.open(_r0);\n        });\n        ɵngcc0.ɵɵelement(3, \"scrm-image\", 2);\n        ɵngcc0.ɵɵtext(4, \" Filter\\n\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    directives: [ImageComponent, ɵngcc3.NgIf],\n    encapsulation: 2\n  });\n  return FilterUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterUiModule = /*#__PURE__*/(() => {\n  class FilterUiModule {}\n\n  FilterUiModule.ɵfac = function FilterUiModule_Factory(t) {\n    return new (t || FilterUiModule)();\n  };\n\n  FilterUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FilterUiModule\n  });\n  FilterUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return FilterUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterUiModule, {\n    declarations: function () {\n      return [FilterUiComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [FilterUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$c = {\n  tabs: [],\n  groupedTabs: [],\n  modules: {},\n  userActionMenu: [],\n  maxTabs: 0\n};\nlet internalState$1 = deepClone(initialState$c);\nlet cache$$1 = null;\nlet NavigationStore = /*#__PURE__*/(() => {\n  class NavigationStore {\n    constructor(recordGQL) {\n      this.recordGQL = recordGQL;\n      this.store = new BehaviorSubject(internalState$1);\n      this.state$ = this.store.asObservable();\n      this.resourceName = 'navbar';\n      this.fieldsMetadata = {\n        fields: ['tabs', 'groupedTabs', 'modules', 'userActionMenu', 'maxTabs']\n      };\n      this.tabs$ = this.state$.pipe(map(state => state.tabs), distinctUntilChanged());\n      this.groupedTabs$ = this.state$.pipe(map(state => state.groupedTabs), distinctUntilChanged());\n      this.modules$ = this.state$.pipe(map(state => state.modules), distinctUntilChanged());\n      this.userActionMenu$ = this.state$.pipe(map(state => state.userActionMenu), distinctUntilChanged());\n      this.maxTabs$ = this.state$.pipe(map(state => state.maxTabs), distinctUntilChanged());\n      this.vm$ = combineLatest([this.tabs$, this.groupedTabs$, this.modules$, this.userActionMenu$, this.maxTabs$]).pipe(map(([tabs, groupedTabs, modules, userActionMenu, maxTabs]) => ({\n        tabs,\n        groupedTabs,\n        modules,\n        userActionMenu,\n        maxTabs\n      })));\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cache$$1 = null;\n      this.updateState(deepClone(initialState$c));\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Initial Navigation load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @returns {{}} Observable<any>\n     */\n\n\n    load() {\n      return this.getNavigation().pipe(tap(navigation => {\n        this.updateState(Object.assign(Object.assign({}, internalState$1), {\n          tabs: navigation.tabs,\n          groupedTabs: navigation.groupedTabs,\n          userActionMenu: navigation.userActionMenu,\n          modules: navigation.modules,\n          maxTabs: navigation.maxTabs\n        }));\n      }));\n    }\n    /**\n     * Check if loaded\n     */\n\n\n    isCached() {\n      return cache$$1 !== null;\n    }\n    /**\n     * Set pre-loaded navigation and cache\n     */\n\n\n    set(navigation) {\n      cache$$1 = of(navigation).pipe(shareReplay(1));\n      this.updateState(Object.assign(Object.assign({}, internalState$1), {\n        tabs: navigation.tabs,\n        groupedTabs: navigation.groupedTabs,\n        userActionMenu: navigation.userActionMenu,\n        modules: navigation.modules,\n        maxTabs: navigation.maxTabs\n      }));\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {{}} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState$1 = state);\n    }\n    /**\n     * Get Navigation cached Observable or call the backend\n     *\n     * @returns {{}} Observable<any>\n     */\n\n\n    getNavigation() {\n      const user = '1';\n\n      if (cache$$1 === null) {\n        cache$$1 = this.fetch(user).pipe(shareReplay(1));\n      }\n\n      return cache$$1;\n    }\n    /**\n     * Fetch the Navigation from the backend\n     *\n     * @param {string} userId to use\n     * @returns {{}} Observable<any>\n     */\n\n\n    fetch(userId) {\n      return this.recordGQL.fetch(this.resourceName, `/api/navbars/${userId}`, this.fieldsMetadata).pipe(map(({\n        data\n      }) => {\n        let navigation = null;\n\n        if (data && data.navbar) {\n          navigation = {\n            tabs: data.navbar.tabs,\n            groupedTabs: data.navbar.groupedTabs,\n            userActionMenu: data.navbar.userActionMenu,\n            modules: data.navbar.modules,\n            maxTabs: data.navbar.maxTabs\n          };\n        }\n\n        return navigation;\n      }));\n    }\n\n  }\n\n  NavigationStore.ɵfac = function NavigationStore_Factory(t) {\n    return new (t || NavigationStore)(ɵngcc0.ɵɵinject(EntityGQL));\n  };\n\n  NavigationStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NavigationStore_Factory() {\n      return new NavigationStore(i0.ɵɵinject(EntityGQL));\n    },\n    token: NavigationStore,\n    providedIn: \"root\"\n  });\n  return NavigationStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$b = {\n  systemConfig: false,\n  userPreferences: false,\n  appStrings: false,\n  appListStrings: false,\n  modStrings: false,\n  themeImages: false,\n  navigation: false,\n  moduleMetadata: false\n};\nlet internalState = deepClone(initialState$b);\nlet cache$ = null;\nlet AppMetadataStore = /*#__PURE__*/(() => {\n  class AppMetadataStore {\n    constructor(recordGQL, appState, metadata, language, themeImages, config, preferences, navigation) {\n      this.recordGQL = recordGQL;\n      this.appState = appState;\n      this.metadata = metadata;\n      this.language = language;\n      this.themeImages = themeImages;\n      this.config = config;\n      this.preferences = preferences;\n      this.navigation = navigation;\n      this.store = new BehaviorSubject(internalState);\n      this.state$ = this.store.asObservable();\n      this.resourceName = 'appMetadata';\n      this.fieldsMetadata = {\n        fields: ['id', '_id']\n      };\n      this.types = ['systemConfig', 'userPreferences', 'language', 'themeImages', 'navigation', 'moduleMetadata'];\n      this.metadata$ = this.state$;\n    }\n    /**\n     * Clear state\n     */\n\n\n    clear() {\n      cache$ = null;\n      this.updateState(deepClone(initialState$b));\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n\n    get() {\n      return internalState;\n    }\n    /**\n     * Initial AppMetadata load if not cached and update state.\n     *\n     * @returns any data\n     */\n\n\n    load(module = 'login', types = [], useCache = true) {\n      const notLoaded = this.getNotLoadedTypes();\n      useCache = useCache && notLoaded.length < 1;\n\n      if (!types || types.length < 1) {\n        types = notLoaded;\n        types.push('minimalModuleMetadata');\n      }\n\n      return this.getMetadata(module, types, useCache).pipe(tap(metadata => {\n        this.updateState(metadata);\n      }));\n    }\n    /**\n     * Initial AppMetadata load if not cached and update state.\n     *\n     * @returns any data\n     */\n\n\n    loadModuleMetadata(module = 'login', useCache = true) {\n      var _a;\n\n      let isLoaded = (_a = internalState === null || internalState === void 0 ? void 0 : internalState.moduleMetadata) !== null && _a !== void 0 ? _a : false;\n      useCache = useCache && isLoaded;\n      return this.getMetadata(module, ['moduleMetadata'], useCache).pipe(tap(metadata => {\n        this.updateState(metadata);\n      }));\n    }\n    /**\n     * Get metadata cached Observable or call the backend\n     *\n     * @returns {object} Observable<AppMetadataFlags>\n     */\n\n\n    getMetadata(module = 'app', types = [], useCache = true) {\n      if (!types || types.length < 1) {\n        types = [...this.types];\n      }\n\n      if (cache$ == null || useCache !== true) {\n        cache$ = this.fetch(module, types).pipe(shareReplay(1));\n      }\n\n      return cache$;\n    }\n\n    getNotLoadedTypes() {\n      const types = [];\n\n      if (!this.isNavigationLoaded()) {\n        types.push('navigation');\n      }\n\n      if (!this.arePreferencesLoaded()) {\n        types.push('userPreferences');\n      }\n\n      if (!this.areSystemConfigsLoaded()) {\n        types.push('systemConfig');\n      }\n\n      if (!this.areAllLanguageStringsLoaded()) {\n        types.push('language');\n      }\n\n      if (!this.areThemeImagesLoaded()) {\n        types.push('themeImages');\n      }\n\n      return types;\n    }\n\n    areAllLanguageStringsLoaded() {\n      return this.language.areAllCached();\n    }\n\n    arePreferencesLoaded() {\n      return this.preferences.isCached();\n    }\n\n    areSystemConfigsLoaded() {\n      return this.config.isCached();\n    }\n\n    areThemeImagesLoaded() {\n      return this.themeImages.isCached();\n    }\n\n    isNavigationLoaded() {\n      return this.navigation.isCached();\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(internalState = state);\n    }\n    /**\n     * Fetch the Metadata from the backend\n     *\n     * @returns {object} Observable<{}>\n     */\n\n\n    fetch(module, types = []) {\n      const fieldsToRetrieve = {\n        fields: [...this.fieldsMetadata.fields, ...types]\n      };\n      return this.recordGQL.fetch(this.resourceName, `/api/app-metadata/${module}`, fieldsToRetrieve).pipe(catchError(() => {\n        return of({});\n      }), map(({\n        data\n      }) => {\n        const result = data === null || data === void 0 ? void 0 : data.appMetadata;\n        const appMetadata = Object.assign({}, internalState);\n\n        if (emptyObject(result)) {\n          return appMetadata;\n        }\n\n        this.setConfig(appMetadata, result);\n        this.setPreferences(appMetadata, result);\n        this.setThemeImages(appMetadata, result);\n        this.setNavigation(appMetadata, result);\n        this.setLanguages(appMetadata, result);\n        this.setModuleMetadata(appMetadata, result);\n        return appMetadata;\n      }));\n    }\n\n    setModuleMetadata(currentMetadata, appMetadata) {\n      var _a, _b;\n\n      let moduleMetadata = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.moduleMetadata) !== null && _a !== void 0 ? _a : {};\n      let metaKey = 'moduleMetadata';\n\n      if (emptyObject(moduleMetadata)) {\n        moduleMetadata = (_b = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.minimalModuleMetadata) !== null && _b !== void 0 ? _b : {};\n        metaKey = 'minimalModuleMetadata';\n      }\n\n      if (!emptyObject(moduleMetadata)) {\n        currentMetadata[metaKey] = true;\n        Object.keys(moduleMetadata).forEach(module => {\n          var _a;\n\n          const meta = (_a = moduleMetadata[module]) !== null && _a !== void 0 ? _a : {};\n\n          if (!emptyObject(meta)) {\n            const parsedMeta = this.metadata.mapMetadata(module, moduleMetadata[module]);\n\n            if (this.metadata.getModule() !== module) {\n              this.metadata.setModuleMetadata(module, parsedMeta);\n            } else if (!this.metadata.isCached(module)) {\n              this.metadata.set(module, parsedMeta);\n            }\n          }\n        });\n      }\n    }\n\n    setLanguages(currentMetadata, appMetadata) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      const lang = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.language) !== null && _a !== void 0 ? _a : {};\n\n      if (!emptyObject(lang)) {\n        const languageStrings = {};\n        languageStrings.languageKey = (_b = lang.id) !== null && _b !== void 0 ? _b : '';\n        languageStrings.appStrings = (_d = (_c = lang === null || lang === void 0 ? void 0 : lang.appStrings) === null || _c === void 0 ? void 0 : _c.items) !== null && _d !== void 0 ? _d : {};\n        languageStrings.appListStrings = (_f = (_e = lang === null || lang === void 0 ? void 0 : lang.appListStrings) === null || _e === void 0 ? void 0 : _e.items) !== null && _f !== void 0 ? _f : {};\n        languageStrings.modStrings = (_h = (_g = lang === null || lang === void 0 ? void 0 : lang.modStrings) === null || _g === void 0 ? void 0 : _g.items) !== null && _h !== void 0 ? _h : {};\n        currentMetadata.appStrings = !emptyObject(languageStrings.appStrings);\n        currentMetadata.appListStrings = !emptyObject(languageStrings.appListStrings);\n        currentMetadata.modStrings = !emptyObject(languageStrings.modStrings);\n        this.language.set(languageStrings.languageKey, languageStrings);\n      }\n    }\n\n    setNavigation(currentMetadata, appMetadata) {\n      var _a;\n\n      const navigation = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.navigation) !== null && _a !== void 0 ? _a : {};\n\n      if (!emptyObject(navigation)) {\n        currentMetadata.navigation = true;\n        this.navigation.set(navigation);\n      }\n    }\n\n    setThemeImages(currentMetadata, appMetadata) {\n      var _a, _b;\n\n      const themeImages = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.themeImages) !== null && _a !== void 0 ? _a : {};\n      const images = (_b = themeImages === null || themeImages === void 0 ? void 0 : themeImages.items) !== null && _b !== void 0 ? _b : {};\n\n      if (!emptyObject(themeImages) && !emptyObject(images)) {\n        currentMetadata.themeImages = true;\n        const theme = themeImages.id;\n        this.themeImages.set(theme, images);\n      }\n    }\n\n    setPreferences(currentMetadata, appMetadata) {\n      var _a;\n\n      const prefs = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.userPreferences) !== null && _a !== void 0 ? _a : {};\n\n      if (!emptyObject(prefs)) {\n        currentMetadata.userPreferences = true;\n        const userPreferences = this.mapPreferences(prefs);\n        this.preferences.set(userPreferences);\n      }\n    }\n\n    setConfig(currentMetadata, appMetadata) {\n      var _a;\n\n      const configs = (_a = appMetadata === null || appMetadata === void 0 ? void 0 : appMetadata.systemConfig) !== null && _a !== void 0 ? _a : {};\n\n      if (!emptyObject(configs)) {\n        currentMetadata.systemConfig = true;\n        this.config.set(configs);\n      }\n    }\n\n    mapPreferences(preferences) {\n      const userPreferences = {};\n      Object.keys(preferences).forEach(prefKey => {\n        if (!preferences[prefKey].items) {\n          return;\n        }\n\n        Object.keys(preferences[prefKey].items).forEach(key => {\n          userPreferences[key] = preferences[prefKey].items[key];\n        });\n      });\n      return userPreferences;\n    }\n\n  }\n\n  AppMetadataStore.ɵfac = function AppMetadataStore_Factory(t) {\n    return new (t || AppMetadataStore)(ɵngcc0.ɵɵinject(EntityGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(NavigationStore));\n  };\n\n  AppMetadataStore.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AppMetadataStore_Factory() {\n      return new AppMetadataStore(i0.ɵɵinject(EntityGQL), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(NavigationStore));\n    },\n    token: AppMetadataStore,\n    providedIn: \"root\"\n  });\n  return AppMetadataStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StateManager = /*#__PURE__*/(() => {\n  class StateManager {\n    constructor(appStore, languageStore, metadataStore, navigationStore, systemConfigStore, themeImagesStore, userPreferenceStore, appMetadataStore) {\n      this.appStore = appStore;\n      this.languageStore = languageStore;\n      this.metadataStore = metadataStore;\n      this.navigationStore = navigationStore;\n      this.systemConfigStore = systemConfigStore;\n      this.themeImagesStore = themeImagesStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.appMetadataStore = appMetadataStore;\n      this.stateStores = {};\n      this.stateStores.appStore = this.buildMapEntry(appStore, false);\n      this.stateStores.navigationStore = this.buildMapEntry(navigationStore, true);\n      this.stateStores.languageStore = this.buildMapEntry(languageStore, true);\n      this.stateStores.metadataStore = this.buildMapEntry(metadataStore, false);\n      this.stateStores.systemConfigStore = this.buildMapEntry(systemConfigStore, false);\n      this.stateStores.themeImagesStore = this.buildMapEntry(themeImagesStore, false);\n      this.stateStores.userPreferenceStore = this.buildMapEntry(userPreferenceStore, true);\n      this.stateStores.appMetadataStore = this.buildMapEntry(appMetadataStore, true);\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Clear all state\n     */\n\n\n    clear() {\n      Object.keys(this.stateStores).forEach(key => {\n        this.stateStores[key].store.clear();\n      });\n    }\n    /**\n     * Clear all state\n     */\n\n\n    clearAuthBased() {\n      Object.keys(this.stateStores).forEach(key => {\n        if (this.stateStores[key].authBased) {\n          this.stateStores[key].store.clearAuthBased();\n        }\n      });\n    }\n    /**\n     * Internal api\n     */\n\n    /**\n     * Build Map entry\n     *\n     * @param {{}} store to use\n     * @param {boolean} authBased flag\n     * @returns {{}} StateStoreMapEntry\n     */\n\n\n    buildMapEntry(store, authBased) {\n      return {\n        store,\n        authBased\n      };\n    }\n\n  }\n\n  StateManager.ɵfac = function StateManager_Factory(t) {\n    return new (t || StateManager)(ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AppMetadataStore));\n  };\n\n  StateManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function StateManager_Factory() {\n      return new StateManager(i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(NavigationStore), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(AppMetadataStore));\n    },\n    token: StateManager,\n    providedIn: \"root\"\n  });\n  return StateManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router, message, stateManager, languageStore, bnIdle, appStateStore, localStorage, configs) {\n      this.http = http;\n      this.router = router;\n      this.message = message;\n      this.stateManager = stateManager;\n      this.languageStore = languageStore;\n      this.bnIdle = bnIdle;\n      this.appStateStore = appStateStore;\n      this.localStorage = localStorage;\n      this.configs = configs;\n      this.isUserLoggedIn = new BehaviorSubject(false);\n      this.defaultTimeout = '3600';\n      this.timerSet = false;\n      this.currentUserSubject = new BehaviorSubject({});\n      this.currentUser$ = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\n    }\n\n    isLoggedIn() {\n      return this.isUserLoggedIn.value;\n    }\n\n    getCurrentUser() {\n      return this.currentUserSubject.value;\n    }\n\n    setCurrentUser(data) {\n      this.currentUserSubject.next(data);\n      this.isUserLoggedIn.next(true);\n    }\n\n    doLogin(username, password, onSuccess, onError) {\n      const loginUrl = 'login';\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(loginUrl, {\n        username,\n        password\n      }, {\n        headers\n      }).subscribe(response => {\n        this.appStateStore.updateInitialAppLoading(true);\n        onSuccess(response);\n        this.isUserLoggedIn.next(true);\n        this.setCurrentUser(response);\n        const duration = response.duration;\n\n        if (duration === 0 || duration === '0') {\n          return;\n        }\n\n        if (duration) {\n          this.defaultTimeout = duration;\n        }\n\n        this.bnIdle.startWatching(this.defaultTimeout).subscribe(res => {\n          if (res && this.isUserLoggedIn.value === true) {\n            this.message.removeMessages();\n            this.logout('LBL_SESSION_EXPIRED');\n          }\n        });\n        this.timerSet = true;\n      }, error => {\n        onError(error);\n      });\n    }\n    /**\n     * Logout user\n     *\n     * @param {string} messageKey of message to display\n     * @param {boolean} redirect to home\n     */\n\n\n    logout(messageKey = 'LBL_LOGOUT_SUCCESS', redirect = true) {\n      this.appStateStore.updateLoading('logout', true, false);\n      const logoutUrl = 'logout';\n      const body = new HttpParams();\n      const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n\n      if (this.appStateStore.getActiveRequests() < 1) {\n        this.callLogout(logoutUrl, body, headers, redirect, messageKey);\n      } else {\n        this.appStateStore.activeRequests$.pipe(filter(value => value < 1), take(1)).subscribe(() => {\n          this.callLogout(logoutUrl, body, headers, redirect, messageKey);\n        });\n      }\n    }\n    /**\n     * Call logout\n     * @param logoutUrl\n     * @param body\n     * @param headers\n     * @param redirect\n     * @param messageKey\n     * @protected\n     */\n\n\n    callLogout(logoutUrl, body, headers, redirect, messageKey) {\n      this.resetState();\n      this.http.post(logoutUrl, body.toString(), {\n        headers,\n        responseType: 'text'\n      }).pipe(take(1), catchError(err => {\n        this.message.log('Logout failed');\n        return throwError(err);\n      }), finalize(() => {\n        this.appStateStore.updateInitialAppLoading(true);\n        this.appStateStore.updateLoading('logout', false, false);\n        this.stateManager.clearAuthBased();\n        this.configs.clear();\n\n        if (redirect === true) {\n          this.router.navigate(['/Login']).finally();\n        }\n      })).subscribe(() => {\n        if (this.timerSet) {\n          this.bnIdle.resetTimer();\n          this.bnIdle.stopTimer();\n          this.timerSet = false;\n        }\n\n        this.message.log('Logout success');\n\n        if (!isEmptyString(messageKey)) {\n          this.message.addSuccessMessageByKey(messageKey);\n        }\n      }, () => {\n        this.message.log('Error on logout');\n\n        if (!isEmptyString(messageKey)) {\n          this.message.addSuccessMessageByKey(messageKey);\n        }\n      });\n    }\n    /**\n     * On logout state reset\n     */\n\n\n    resetState() {\n      this.stateManager.clearAuthBased();\n      this.localStorage.clear();\n      this.isUserLoggedIn.next(false);\n    }\n    /**\n     * Fetch session status from backend\n     *\n     * @returns {{}} Observable<SessionStatus>\n     */\n\n\n    fetchSessionStatus() {\n      const Url = 'session-status';\n      const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n      return this.http.get(Url, {\n        headers\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(ɵngcc0.ɵɵinject(ɵngcc13.HttpClient), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(StateManager), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(ɵngcc14.BnNgIdleService), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LocalStorageService), ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  AuthService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AuthService_Factory() {\n      return new AuthService(i0.ɵɵinject(i1$2.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(MessageService), i0.ɵɵinject(StateManager), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(i6.BnNgIdleService), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LocalStorageService), i0.ɵɵinject(SystemConfigStore));\n    },\n    token: AuthService,\n    providedIn: \"root\"\n  });\n  return AuthService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FooterUiComponent = /*#__PURE__*/(() => {\n  class FooterUiComponent {\n    constructor(modalService, authService) {\n      this.modalService = modalService;\n      this.authService = authService;\n    }\n\n    openSugarCopyright(sugarcopyright) {\n      this.modalService.open(sugarcopyright, {\n        ariaLabelledBy: 'modal-basic-title',\n        centered: true,\n        size: 'lg'\n      }).result.then(result => {\n        this.closeResult = `Closed with: ${result}`;\n      }, reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n    }\n\n    openSuiteCopyright(suitecopyright) {\n      this.modalService.open(suitecopyright, {\n        ariaLabelledBy: 'modal-basic-title',\n        centered: true,\n        size: 'lg'\n      }).result.then(result => {\n        this.closeResult = `Closed with: ${result}`;\n      }, reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n    }\n\n    getDismissReason(reason) {\n      if (reason === ModalDismissReasons.ESC) {\n        return 'by pressing ESC';\n      } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n        return 'by clicking on a backdrop';\n      } else {\n        return `with: ${reason}`;\n      }\n    }\n\n    backToTop() {\n      document.body.scrollTop = 0; // For Safari\n\n      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    ngOnInit() {\n      this.authSub = this.authService.isUserLoggedIn.subscribe(value => {\n        this.isUserLoggedIn = value;\n      });\n    }\n\n    ngOnDestroy() {\n      this.authSub.unsubscribe();\n    }\n\n  }\n\n  FooterUiComponent.ɵfac = function FooterUiComponent_Factory(t) {\n    return new (t || FooterUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal), ɵngcc0.ɵɵdirectiveInject(AuthService));\n  };\n\n  FooterUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FooterUiComponent,\n    selectors: [[\"scrm-footer-ui\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"footer\"], [1, \"copyright-links\"], [\"data-toggle\", \"modal\", \"data-target\", \".copyright-suitecrm\", 1, \"footer-link\", 3, \"click\"], [\"data-toggle\", \"modal\", \"data-target\", \".copyright-sugarcrm\", 1, \"footer-link\", 3, \"click\"], [4, \"ngIf\"], [1, \"copyright\"], [\"sugarcopyright\", \"\"], [\"suitecopyright\", \"\"], [1, \"back-to-top\"], [1, \"footer-link\", 3, \"click\"], [\"image\", \"arrow_up_filled\", 1, \"sicon\", \"back-top-icon\"], [\"role\", \"dialog\", \"aria-hidden\", \"true\", 1, \"copyright-sugarcrm\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"image\", \"icon_modal_close\", 1, \"sicon\"], [1, \"modal-body\"], [\"role\", \"dialog\", \"aria-hidden\", \"true\", 1, \"copyright-suitecrm\"]],\n    template: function FooterUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function FooterUiComponent_Template_a_click_2_listener() {\n          ɵngcc0.ɵɵrestoreView(_r11);\n\n          const _r3 = ɵngcc0.ɵɵreference(11);\n\n          return ctx.openSuiteCopyright(_r3);\n        });\n        ɵngcc0.ɵɵtext(3, \" \\u00A9 Supercharged by SuiteCRM \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"a\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function FooterUiComponent_Template_a_click_4_listener() {\n          ɵngcc0.ɵɵrestoreView(_r11);\n\n          const _r1 = ɵngcc0.ɵɵreference(9);\n\n          return ctx.openSugarCopyright(_r1);\n        });\n        ɵngcc0.ɵɵtext(5, \" \\u00A9 Powered By SugarCRM \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, FooterUiComponent_ng_container_6_Template, 6, 0, \"ng-container\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, FooterUiComponent_ng_template_8_Template, 13, 0, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(10, FooterUiComponent_ng_template_10_Template, 13, 0, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isUserLoggedIn);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent],\n    encapsulation: 2\n  });\n  return FooterUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FooterUiModule = /*#__PURE__*/(() => {\n  class FooterUiModule {}\n\n  FooterUiModule.ɵfac = function FooterUiModule_Factory(t) {\n    return new (t || FooterUiModule)();\n  };\n\n  FooterUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FooterUiModule\n  });\n  FooterUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return FooterUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FooterUiModule, {\n    declarations: function () {\n      return [FooterUiComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [FooterUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FullPageSpinnerComponent = /*#__PURE__*/(() => {\n  class FullPageSpinnerComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  FullPageSpinnerComponent.ɵfac = function FullPageSpinnerComponent_Factory(t) {\n    return new (t || FullPageSpinnerComponent)();\n  };\n\n  FullPageSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FullPageSpinnerComponent,\n    selectors: [[\"app-full-page-spinner\"]],\n    decls: 20,\n    vars: 0,\n    consts: [[1, \"app-overlay\"], [\"id\", \"overlay-spinner\"], [1, \"app-loading\"], [1, \"sk-cube-grid\"], [1, \"sk-cube\", \"sk-cube1\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube2\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube3\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube4\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube5\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube6\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube7\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube8\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube9\", \"sk-cube-primary\"]],\n    template: function FullPageSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n        ɵngcc0.ɵɵelement(9, \"div\", 7);\n        ɵngcc0.ɵɵelement(10, \"div\", 8);\n        ɵngcc0.ɵɵelement(11, \"div\", 9);\n        ɵngcc0.ɵɵelement(12, \"div\", 10);\n        ɵngcc0.ɵɵelement(13, \"div\", 10);\n        ɵngcc0.ɵɵelement(14, \"div\", 11);\n        ɵngcc0.ɵɵelement(15, \"div\", 12);\n        ɵngcc0.ɵɵelement(16, \"div\", 10);\n        ɵngcc0.ɵɵelement(17, \"div\", 10);\n        ɵngcc0.ɵɵelement(18, \"div\", 11);\n        ɵngcc0.ɵɵelement(19, \"div\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".app-overlay[_ngcontent-%COMP%]{position:fixed;display:flex;justify-content:center;align-items:center;flex-direction:column;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:#fff9;z-index:4000;cursor:default}.app-loading[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%}.app-loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%]{height:200px;width:200px;-webkit-animation:scaleIn 4s linear infinite;animation:scaleIn 4s linear infinite;transform-origin:center center;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto}.app-loading[_ngcontent-%COMP%]   .spinner[_ngcontent-%COMP%]   .path[_ngcontent-%COMP%]{stroke-dasharray:1,200;stroke-dashoffset:0;-webkit-animation:dash 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite;stroke-linecap:round;stroke:#ddd}.sk-cube-primary[_ngcontent-%COMP%]{background-color:#276ecd}.sk-cube-secondary[_ngcontent-%COMP%]{background-color:#132a46}.sk-cube-grid[_ngcontent-%COMP%]{width:100px;height:100px}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube[_ngcontent-%COMP%]{width:25%;height:25%;float:left;-webkit-animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out;animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube1[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube2[_ngcontent-%COMP%]{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube3[_ngcontent-%COMP%]{-webkit-animation-delay:.4s;animation-delay:.4s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube4[_ngcontent-%COMP%]{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube5[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube6[_ngcontent-%COMP%]{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube7[_ngcontent-%COMP%]{-webkit-animation-delay:0s;animation-delay:0s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube8[_ngcontent-%COMP%]{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube9[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}@-webkit-keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}@keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\"]\n  });\n  return FullPageSpinnerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FullPageSpinnerModule = /*#__PURE__*/(() => {\n  class FullPageSpinnerModule {}\n\n  FullPageSpinnerModule.ɵfac = function FullPageSpinnerModule_Factory(t) {\n    return new (t || FullPageSpinnerModule)();\n  };\n\n  FullPageSpinnerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FullPageSpinnerModule\n  });\n  FullPageSpinnerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule]]\n  });\n  return FullPageSpinnerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FullPageSpinnerModule, {\n    declarations: function () {\n      return [FullPageSpinnerComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [FullPageSpinnerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsFetchGQL = /*#__PURE__*/(() => {\n  class StatisticsFetchGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Fetch statistics data from backend\n     *\n     * @param {string} module name\n     * @param {object} queries to use\n     * @returns {object} Observable<ApolloQueryResult<any>>\n     */\n\n\n    fetch(module, queries) {\n      const queryOptions = {\n        query: gql`\n            query getBatchedStatistics($module: String!, $queries: Iterable!){\n              getBatchedStatistics(module: $module, queries: $queries) {\n                  _id\n                  id\n                  items\n              }\n            }\n        `,\n        variables: {\n          module,\n          queries\n        }\n      };\n      return this.apollo.query(queryOptions).pipe(map(result => {\n        const statistics = {};\n        const response = result.data && result.data.getBatchedStatistics || {};\n        const items = response.items || {};\n        const itemKeys = Object.keys(items);\n\n        if (itemKeys && itemKeys.length) {\n          itemKeys.forEach(itemKey => {\n            const item = items[itemKey]; // eslint-disable-next-line no-underscore-dangle\n\n            const key = itemKey || item._id;\n            statistics[key] = {\n              // eslint-disable-next-line no-underscore-dangle\n              id: item._id,\n              data: item.data,\n              metadata: item.metadata\n            };\n          });\n        }\n\n        return statistics;\n      }));\n    }\n\n  }\n\n  StatisticsFetchGQL.ɵfac = function StatisticsFetchGQL_Factory(t) {\n    return new (t || StatisticsFetchGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  StatisticsFetchGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function StatisticsFetchGQL_Factory() {\n      return new StatisticsFetchGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: StatisticsFetchGQL,\n    providedIn: \"root\"\n  });\n  return StatisticsFetchGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ɵ0$3 = {};\nconst initialState$a = {\n  module: '',\n  query: {},\n  statistic: {\n    id: '',\n    data: ɵ0$3\n  },\n  loading: false\n};\nlet StatisticsStore = /*#__PURE__*/(() => {\n  class StatisticsStore {\n    constructor(fetchGQL) {\n      this.fetchGQL = fetchGQL;\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$a);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.statistic$ = this.state$.pipe(map(state => state.statistic), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading), distinctUntilChanged());\n    }\n\n    clear() {\n      this.store.unsubscribe();\n      this.cache$ = null;\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Get Statistic query\n     *\n     * @returns {object} StatisticsQuery\n     */\n\n\n    getQuery() {\n      return deepClone(this.internalState.query);\n    }\n\n    get context() {\n      return this.internalState.query.context;\n    }\n\n    set context(context) {\n      const query = deepClone(this.internalState.query);\n      query.context = context;\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        query\n      }));\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @param {object} query to use\n     * @param {boolean} load if to load\n     * @returns {object} Observable<any>\n     */\n\n\n    init(module, query, load = true) {\n      this.internalState.module = module;\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        module,\n        query\n      }));\n\n      if (load === false) {\n        return null;\n      }\n\n      return this.load();\n    }\n    /**\n     * Load / reload statistics\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<ListViewState>\n     */\n\n\n    load(useCache = true) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        loading: true\n      }));\n      return this.fetchStatistics(this.internalState.module, this.getQuery(), useCache).pipe(map(data => this.mapStatistics(data)), tap(statistic => {\n        this.addNewState(statistic);\n      }));\n    }\n    /**\n     * Set loading\n     *\n     * @param {boolean} loading bool\n     */\n\n\n    setLoading(loading) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        loading\n      }));\n    }\n    /**\n     * Set Statistic value\n     *\n     * @param {string} key string\n     * @param {object} statistic Statistic\n     * @param {boolean} cache bool\n     */\n\n\n    setStatistic(key, statistic, cache = false) {\n      this.addNewState(statistic);\n\n      if (!cache) {\n        return;\n      }\n\n      const statMap = {};\n      statMap[key] = statistic;\n      this.cache$ = of(statMap).pipe(shareReplay(1));\n    }\n\n    addNewState(statistic) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        statistic,\n        loading: false\n      }));\n    }\n\n    mapStatistics(data) {\n      const keys = Object.keys(data);\n      const key = keys && keys.length && keys[0];\n      let statistic = {\n        id: '',\n        data: {}\n      };\n\n      if (key) {\n        statistic = data[key];\n      }\n\n      return statistic;\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n    /**\n     * Get records cached Observable or call the backend\n     *\n     * @param {string} module to use\n     * @param {object} query to use\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<any>\n     */\n\n\n    fetchStatistics(module, query, useCache = true) {\n      const queries = {};\n      queries[query.key] = query;\n\n      if (this.cache$ == null || useCache === false) {\n        this.cache$ = this.fetchGQL.fetch(module, queries).pipe(shareReplay(1));\n      }\n\n      return this.cache$;\n    }\n\n  }\n\n  StatisticsStore.ɵfac = function StatisticsStore_Factory(t) {\n    return new (t || StatisticsStore)(ɵngcc0.ɵɵinject(StatisticsFetchGQL));\n  };\n\n  StatisticsStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: StatisticsStore,\n    factory: StatisticsStore.ɵfac\n  });\n  return StatisticsStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ɵ0$2 = {};\nconst initialState$9 = {\n  module: '',\n  query: {},\n  statistic: {\n    id: '',\n    data: ɵ0$2\n  },\n  loading: false\n};\nlet SingleValueStatisticsStore = /*#__PURE__*/(() => {\n  class SingleValueStatisticsStore extends StatisticsStore {\n    constructor(fetchGQL, fieldManager) {\n      super(fetchGQL);\n      this.fetchGQL = fetchGQL;\n      this.fieldManager = fieldManager;\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$9);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.statistic$ = this.state$.pipe(map(state => state.statistic), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading), distinctUntilChanged());\n    }\n\n    addNewState(statistic) {\n      if (!statistic.metadata || !statistic.metadata.dataType) {\n        return;\n      }\n\n      const field = this.fieldManager.buildShallowField(statistic.metadata.dataType, statistic.data.value);\n      field.metadata = {\n        digits: 0\n      };\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        statistic,\n        field,\n        loading: false\n      }));\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      super.updateState(state);\n    }\n\n  }\n\n  SingleValueStatisticsStore.ɵfac = function SingleValueStatisticsStore_Factory(t) {\n    return new (t || SingleValueStatisticsStore)(ɵngcc0.ɵɵinject(StatisticsFetchGQL), ɵngcc0.ɵɵinject(FieldManager));\n  };\n\n  SingleValueStatisticsStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SingleValueStatisticsStore,\n    factory: SingleValueStatisticsStore.ɵfac\n  });\n  return SingleValueStatisticsStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SingleValueStatisticsStoreFactory = /*#__PURE__*/(() => {\n  class SingleValueStatisticsStoreFactory {\n    constructor(fetchGQL, fieldManager) {\n      this.fetchGQL = fetchGQL;\n      this.fieldManager = fieldManager;\n    }\n\n    create() {\n      return new SingleValueStatisticsStore(this.fetchGQL, this.fieldManager);\n    }\n\n  }\n\n  SingleValueStatisticsStoreFactory.ɵfac = function SingleValueStatisticsStoreFactory_Factory(t) {\n    return new (t || SingleValueStatisticsStoreFactory)(ɵngcc0.ɵɵinject(StatisticsFetchGQL), ɵngcc0.ɵɵinject(FieldManager));\n  };\n\n  SingleValueStatisticsStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SingleValueStatisticsStoreFactory_Factory() {\n      return new SingleValueStatisticsStoreFactory(i0.ɵɵinject(StatisticsFetchGQL), i0.ɵɵinject(FieldManager));\n    },\n    token: SingleValueStatisticsStoreFactory,\n    providedIn: \"root\"\n  });\n  return SingleValueStatisticsStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GridWidgetComponent = /*#__PURE__*/(() => {\n  class GridWidgetComponent {\n    constructor(language, factory) {\n      this.language = language;\n      this.factory = factory;\n      this.loading = true;\n      this.subs = [];\n      this.statistics = {};\n    }\n\n    ngOnInit() {\n      const isValid = this.validateConfig();\n\n      if (!isValid) {\n        return;\n      }\n\n      this.gridWidgetInput = this.config;\n      this.buildStatistics();\n      this.setupLoading$();\n      this.setupVM();\n      this.setupReload();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    validateConfig() {\n      if (!this.config || !this.config.layout) {\n        this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';\n        return false;\n      }\n\n      if (!this.config.queryArgs.context || !this.config.queryArgs.module) {\n        this.messageLabelKey = 'LBL_CONFIG_BAD_CONTEXT';\n        return false;\n      }\n\n      if (!this.config.widgetConfig) {\n        this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';\n        return false;\n      }\n\n      if (!this.config.layout || !this.config.layout.rows) {\n        this.messageLabelKey = 'LBL_CONFIG_NO_STATISTICS_KEY';\n        return false;\n      }\n\n      return true;\n    }\n\n    getRowClass() {\n      return this.gridWidgetInput.rowClass;\n    }\n\n    getColClass() {\n      return this.gridWidgetInput.columnClass;\n    }\n\n    getContextModule() {\n      return this.gridWidgetInput.queryArgs.context.module;\n    }\n\n    getMessageContext() {\n      const module = this.getContextModule();\n\n      if (!module) {\n        return {};\n      }\n\n      return {\n        module\n      };\n    }\n\n    getMessageFields(statistics) {\n      if (!statistics || !Object.keys(statistics).length) {\n        return {};\n      }\n\n      const fields = {};\n      Object.keys(statistics).forEach(key => {\n        const statistic = statistics[key];\n        fields[key] = statistic.field;\n      });\n      return fields;\n    }\n\n    getSizeClass(size) {\n      const sizeMap = {\n        regular: 'text-regular',\n        medium: 'text-medium',\n        large: 'text-large',\n        'x-large': 'text-x-large',\n        'xx-large': 'text-xx-large',\n        huge: 'text-huge'\n      };\n      return sizeMap[size] || 'text-regular';\n    }\n\n    getFontWeight(bold) {\n      let fontWeight = 'font-weight-normal';\n\n      if (bold && isTrue(bold)) {\n        fontWeight = 'font-weight-bolder';\n      }\n\n      return fontWeight;\n    }\n\n    getColor(color) {\n      const sizeMap = {\n        yellow: 'text-yellow',\n        blue: 'text-blue',\n        green: 'text-green',\n        red: 'text-red',\n        purple: 'text-purple',\n        dark: 'text-dark',\n        grey: 'text-grey'\n      };\n      return sizeMap[color] || '';\n    }\n\n    getJustify(justify) {\n      const justifyMap = {\n        start: 'justify-content-start',\n        end: 'justify-content-end',\n        center: 'justify-content-center',\n        between: 'justify-content-between',\n        around: 'justify-content-around'\n      };\n      return justifyMap[justify] || 'justify-content-center';\n    }\n\n    getAlign(align) {\n      const alignMap = {\n        start: 'align-items-start',\n        end: 'align-items-end',\n        center: 'align-items-center',\n        baseline: 'align-items-baseline',\n        stretch: 'align-items-stretch'\n      };\n      return alignMap[align] || 'align-items-center';\n    }\n\n    getLayoutRowClass(row) {\n      let className = '';\n\n      if (row && row.class) {\n        className = row.class;\n      }\n\n      return className;\n    }\n\n    getClass(layoutCol) {\n      let className = '';\n\n      if (layoutCol) {\n        className = layoutCol.class;\n      }\n\n      className = className + ' ' + this.getSizeClass(layoutCol.size) + ' ' + this.getFontWeight(layoutCol.bold) + ' ' + this.getColor(layoutCol.color);\n      return className;\n    }\n\n    isEmptyFieldValue(fieldValue) {\n      // Handle the cases, when input value is an string, array, objects or any other type\n      if (typeof fieldValue === 'string') {\n        fieldValue = fieldValue.trim();\n      }\n\n      return fieldValue == null || typeof fieldValue === 'undefined' || fieldValue === '' || fieldValue.length === 0;\n    }\n\n    getLabel(statisticMetadata, attribute) {\n      let label = '';\n\n      if (statisticMetadata && statisticMetadata[attribute]) {\n        label = this.language.getFieldLabel(statisticMetadata[attribute]);\n      }\n\n      return label;\n    }\n\n    getLayout() {\n      return this.gridWidgetInput.layout.rows;\n    }\n\n    buildStatistics() {\n      this.gridWidgetInput.layout.rows.forEach(row => {\n        if (!row.cols || !row.cols.length) {\n          return;\n        }\n\n        row.cols.forEach(col => {\n          if (!col.statistic) {\n            return;\n          }\n\n          if (col.store) {\n            this.statistics[col.statistic] = {\n              type: col.statistic,\n              store: col.store\n            };\n            return;\n          }\n\n          this.statistics[col.statistic] = {\n            type: col.statistic,\n            store: this.factory.create()\n          };\n          this.statistics[col.statistic].store.init(this.gridWidgetInput.queryArgs.module, {\n            key: col.statistic,\n            context: Object.assign({}, this.gridWidgetInput.queryArgs.context),\n            params: Object.assign({}, this.gridWidgetInput.queryArgs.params)\n          }).pipe(take(1)).subscribe();\n        });\n      });\n    }\n\n    setupLoading$() {\n      const loadings$ = [];\n      Object.keys(this.statistics).forEach(type => loadings$.push(this.statistics[type].store.loading$));\n      this.loading$ = combineLatest(loadings$).pipe(map(loadings => {\n        if (!loadings || loadings.length < 1) {\n          this.loading = false;\n          return false;\n        }\n\n        let loading = true;\n        loadings.forEach(value => {\n          loading = loading && value;\n        });\n        this.loading = loading;\n        return loading;\n      }));\n      this.subs.push(this.loading$.subscribe());\n    }\n\n    setupReload() {\n      if (this.gridWidgetInput.widgetConfig.reload$) {\n        this.subs.push(this.gridWidgetInput.widgetConfig.reload$.subscribe(() => {\n          if (this.loading === false) {\n            this.loading = true;\n            Object.keys(this.statistics).forEach(statisticKey => {\n              const statistic = this.statistics[statisticKey];\n\n              if (!statistic.store) {\n                return;\n              }\n\n              statistic.store.load(false).pipe(take(1)).subscribe();\n            });\n          }\n        }));\n      }\n    }\n\n    setupVM() {\n      let allStatistics$ = of([]).pipe(shareReplay());\n      const layout$ = of(this.getLayout()).pipe(shareReplay());\n\n      if (this.statistics && Object.keys(this.statistics).length > 0) {\n        const statistics$ = [];\n        Object.keys(this.statistics).forEach(type => statistics$.push(this.statistics[type].store.state$));\n        allStatistics$ = combineLatest(statistics$);\n      }\n\n      this.vm$ = combineLatest([allStatistics$, layout$]).pipe(map(([statistics, layout]) => {\n        const statsMap = {};\n        const tooltipTitles = [];\n        const descriptions = [];\n        statistics.forEach(value => {\n          statsMap[value.query.key] = value;\n          const tooltip = this.getLabel(value.statistic.metadata, 'tooltip_title_key');\n\n          if (tooltip) {\n            tooltipTitles.push(tooltip);\n          }\n\n          const description = this.getLabel(value.statistic.metadata, 'descriptionKey');\n\n          if (description) {\n            descriptions.push(description);\n          }\n        });\n        return {\n          layout,\n          statistics: statsMap,\n          tooltipTitleText: tooltipTitles.join(' | '),\n          description: descriptions.join(' | ')\n        };\n      }));\n    }\n\n  }\n\n  GridWidgetComponent.ɵfac = function GridWidgetComponent_Factory(t) {\n    return new (t || GridWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(SingleValueStatisticsStoreFactory));\n  };\n\n  GridWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GridWidgetComponent,\n    selectors: [[\"scrm-grid-widget\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[\"class\", \"p-3 widget-message\", 4, \"ngIf\"], [\"class\", \"grid-widget d-flex flex-column\", \"placement\", \"auto\", \"container\", \"body\", 3, \"ngbTooltip\", 4, \"ngIf\"], [1, \"p-3\", \"widget-message\"], [3, \"labelKey\"], [\"placement\", \"auto\", \"container\", \"body\", 1, \"grid-widget\", \"d-flex\", \"flex-column\", 3, \"ngbTooltip\"], [4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"widget-entry-icon\"], [3, \"image\", \"klass\"], [\"class\", \"widget-entry-value\", 4, \"ngIf\"], [\"class\", \"widget-entry-loading\", 4, \"ngIf\"], [1, \"widget-entry-value\"], [\"mode\", \"list\", 3, \"type\", \"field\"], [1, \"widget-entry-loading\"], [1, \"widget-entry-label\", \"text-truncate\"], [3, \"labelKey\", \"module\"], [1, \"text-truncate\", \"widget-entry-label\"], [\"class\", \"widget-entry-dynamic-label\", 4, \"ngIf\"], [1, \"widget-entry-dynamic-label\"], [3, \"context\", \"fields\", \"labelKey\"]],\n    template: function GridWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, GridWidgetComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, GridWidgetComponent_div_1_Template, 2, 2, \"div\", 1);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.messageLabelKey);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.messageLabelKey && ɵngcc0.ɵɵpipeBind1(2, 2, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc7.NgbTooltip, ɵngcc3.NgForOf, ImageComponent, FieldComponent, InlineLoadingSpinnerComponent, DynamicLabelComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return GridWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet WidgetPanelComponent = /*#__PURE__*/(() => {\n  class WidgetPanelComponent {\n    constructor(languageStore) {\n      this.languageStore = languageStore;\n      this.title = '';\n      this.mode = 'none';\n      this.displayContent = true;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  WidgetPanelComponent.ɵfac = function WidgetPanelComponent_Factory(t) {\n    return new (t || WidgetPanelComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  WidgetPanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: WidgetPanelComponent,\n    selectors: [[\"scrm-widget-panel\"]],\n    inputs: {\n      title: \"title\",\n      mode: \"mode\"\n    },\n    ngContentSelectors: _c14,\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"accordion\", \"widget-panel\", \"mr-0\", \"shadow-sm\"], [\"bodyPadding\", \"0\", 3, \"mode\", \"title\"], [\"panel-header-button\", \"\"], [\"panel-body\", \"\"], [\"class\", \"widget collapse show open-close-container\", \"data-parent\", \".widget-panel\", 4, \"ngIf\"], [\"data-parent\", \".widget-panel\", 1, \"widget\", \"collapse\", \"show\", \"open-close-container\"]],\n    template: function WidgetPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c13);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"scrm-panel\", 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, WidgetPanelComponent_div_4_Template, 2, 1, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"mode\", ctx.mode)(\"title\", ctx.title);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayContent);\n      }\n    },\n    directives: function () {\n      return [PanelComponent, ɵngcc3.NgIf];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('widgetFade', [transition('void => *', [style({\n        transform: 'translateX(100%)',\n        opacity: 0\n      }), animate('500ms', style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }))]), transition('* => void', [style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }), animate('500ms', style({\n        transform: 'translateX(100%)',\n        opacity: 0\n      }))])]), trigger('widgetContentFade', [transition('void => *', [style({\n        transform: 'translateY(-5%)',\n        opacity: 0\n      }), animate('500ms', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }))]), transition('* => void', [style({\n        transform: 'translateY(0)',\n        opacity: 1\n      }), animate('500ms', style({\n        transform: 'translateY(-5%)',\n        opacity: 0\n      }))])])]\n    }\n  });\n  return WidgetPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PanelComponent = /*#__PURE__*/(() => {\n  class PanelComponent {\n    constructor() {\n      this.klass = '';\n      this.bodyPadding = 2;\n      this.mode = 'closable';\n      this.close = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm']\n      };\n      this.isCollapsed = false;\n      this.buttonClasses = ['btn', 'btn-outline-light', 'btn-sm'];\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (this.isCollapsed$) {\n        this.subs.push(this.isCollapsed$.subscribe(collapse => {\n          this.isCollapsed = collapse;\n          this.initMinimiseButton();\n        }));\n      }\n\n      this.initMinimiseButton();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getCloseButton() {\n      if (!this.close) {\n        return null;\n      }\n\n      const btn = Button.fromButton(this.close);\n      btn.addClasses(this.buttonClasses);\n      this.close = btn;\n      return btn;\n    }\n\n    isClosable() {\n      return this.mode === 'closable';\n    }\n\n    isCollapsible() {\n      return this.mode === 'collapsible';\n    }\n\n    initMinimiseButton() {\n      this.minimiseButton = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.isCollapsed = !this.isCollapsed;\n          this.initMinimiseStatus();\n        }\n      };\n      this.initMinimiseStatus();\n    }\n\n    initMinimiseStatus() {\n      if (this.isCollapsed) {\n        this.minimiseStatus = 'minimised';\n        return;\n      }\n\n      this.minimiseStatus = 'maximised';\n    }\n\n  }\n\n  PanelComponent.ɵfac = function PanelComponent_Factory(t) {\n    return new (t || PanelComponent)();\n  };\n\n  PanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PanelComponent,\n    selectors: [[\"scrm-panel\"]],\n    inputs: {\n      klass: \"klass\",\n      bodyPadding: \"bodyPadding\",\n      mode: \"mode\",\n      close: \"close\",\n      title: \"title\",\n      titleKey: \"titleKey\",\n      isCollapsed$: \"isCollapsed$\"\n    },\n    ngContentSelectors: _c16,\n    decls: 13,\n    vars: 13,\n    consts: [[1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"flex-grow-1\", \"align-items-center\", \"d-flex\"], [1, \"d-flex\", \"align-items-center\"], [3, \"config\", 4, \"ngIf\"], [3, \"config\", \"status\", 4, \"ngIf\"], [\"class\", \"pl-1 panel-title\", 4, \"ngIf\"], [1, \"panel-buttons\", \"float-right\"], [3, \"ngbCollapse\"], [3, \"config\"], [3, \"config\", \"status\"], [1, \"pl-1\", \"panel-title\"], [3, \"labelKey\"]],\n    template: function PanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c15);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, PanelComponent_scrm_close_button_4_Template, 1, 1, \"scrm-close-button\", 3);\n        ɵngcc0.ɵɵtemplate(5, PanelComponent_scrm_minimise_button_5_Template, 1, 2, \"scrm-minimise-button\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, PanelComponent_div_7_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵtemplate(8, PanelComponent_div_8_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 6);\n        ɵngcc0.ɵɵprojection(10, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 7);\n        ɵngcc0.ɵɵprojection(12, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate1(\"card panel-card \", ctx.klass, \"\");\n        ɵngcc0.ɵɵclassProp(\"collapsed\", ctx.isCollapsed);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isClosable());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isCollapsible());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.titleKey);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"card-body p-\", ctx.bodyPadding, \"\");\n        ɵngcc0.ɵɵproperty(\"ngbCollapse\", ctx.isCollapsed);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ɵngcc7.NgbCollapse, CloseButtonComponent, MinimiseButtonComponent, LabelComponent];\n    },\n    encapsulation: 2\n  });\n  return PanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MinimiseButtonComponent = /*#__PURE__*/(() => {\n  class MinimiseButtonComponent {\n    constructor() {\n      this.status = 'maximised';\n      this.buttonClasses = ['minimise-button'];\n    }\n\n    ngOnInit() {\n      this.buildButton();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.config) {\n        this.buildButton();\n      }\n    }\n\n    buildButton() {\n      const btn = Button.fromButton(this.config);\n      btn.addClasses(this.buttonClasses);\n      btn.icon = this.getIcon();\n\n      btn.onClick = () => {\n        this.config.onClick();\n        this.toggleStatus();\n      };\n\n      this.internalConfig = btn;\n    }\n\n    toggleStatus() {\n      let newStatus = 'minimised';\n\n      if (this.status === 'minimised') {\n        newStatus = 'maximised';\n      }\n\n      this.status = newStatus;\n      this.buildButton();\n    }\n\n    getIcon() {\n      if (this.status === 'minimised') {\n        return 'plus_thin';\n      }\n\n      return 'minimise';\n    }\n\n  }\n\n  MinimiseButtonComponent.ɵfac = function MinimiseButtonComponent_Factory(t) {\n    return new (t || MinimiseButtonComponent)();\n  };\n\n  MinimiseButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MinimiseButtonComponent,\n    selectors: [[\"scrm-minimise-button\"]],\n    inputs: {\n      status: \"status\",\n      config: \"config\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"config\"]],\n    template: function MinimiseButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MinimiseButtonComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.internalConfig);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonComponent],\n    encapsulation: 2\n  });\n  return MinimiseButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MinimiseButtonModule = /*#__PURE__*/(() => {\n  class MinimiseButtonModule {}\n\n  MinimiseButtonModule.ɵfac = function MinimiseButtonModule_Factory(t) {\n    return new (t || MinimiseButtonModule)();\n  };\n\n  MinimiseButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MinimiseButtonModule\n  });\n  MinimiseButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule]]\n  });\n  return MinimiseButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MinimiseButtonModule, {\n    declarations: function () {\n      return [MinimiseButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule];\n    },\n    exports: function () {\n      return [MinimiseButtonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PanelModule = /*#__PURE__*/(() => {\n  class PanelModule {}\n\n  PanelModule.ɵfac = function PanelModule_Factory(t) {\n    return new (t || PanelModule)();\n  };\n\n  PanelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PanelModule\n  });\n  PanelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, CloseButtonModule, NgbModule, MinimiseButtonModule, LabelModule]]\n  });\n  return PanelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PanelModule, {\n    declarations: function () {\n      return [PanelComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, CloseButtonModule, NgbModule, MinimiseButtonModule, LabelModule];\n    },\n    exports: function () {\n      return [PanelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet WidgetPanelModule = /*#__PURE__*/(() => {\n  class WidgetPanelModule {}\n\n  WidgetPanelModule.ɵfac = function WidgetPanelModule_Factory(t) {\n    return new (t || WidgetPanelModule)();\n  };\n\n  WidgetPanelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: WidgetPanelModule\n  });\n  WidgetPanelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule, PanelModule]]\n  });\n  return WidgetPanelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WidgetPanelModule, {\n    declarations: function () {\n      return [WidgetPanelComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule, PanelModule];\n    },\n    exports: function () {\n      return [WidgetPanelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GridWidgetModule = /*#__PURE__*/(() => {\n  class GridWidgetModule {}\n\n  GridWidgetModule.ɵfac = function GridWidgetModule_Factory(t) {\n    return new (t || GridWidgetModule)();\n  };\n\n  GridWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: GridWidgetModule\n  });\n  GridWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, InlineLoadingSpinnerModule, WidgetPanelModule, LabelModule, ImageModule, DynamicLabelModule, NgbTooltipModule]]\n  });\n  return GridWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GridWidgetModule, {\n    declarations: function () {\n      return [GridWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, InlineLoadingSpinnerModule, WidgetPanelModule, LabelModule, ImageModule, DynamicLabelModule, NgbTooltipModule];\n    },\n    exports: function () {\n      return [GridWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HomeUiComponent = /*#__PURE__*/(() => {\n  class HomeUiComponent {}\n\n  HomeUiComponent.ɵfac = function HomeUiComponent_Factory(t) {\n    return new (t || HomeUiComponent)();\n  };\n\n  HomeUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HomeUiComponent,\n    selectors: [[\"scrm-home-ui\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[2, \"margin\", \"70px\"]],\n    template: function HomeUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"h1\");\n        ɵngcc0.ɵɵtext(2, \"Home Page\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return HomeUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst HomeUiRoutes = [{\n  path: '',\n  component: HomeUiComponent\n}];\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nclass LogoAbstract {\n  constructor() {\n    this.url = ''; // todo: using a preloader url till logo is loading?\n\n    this.md5 = '';\n    this.width = 0;\n    this.height = 0;\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nvar LinkTarget = /*#__PURE__*/(() => {\n  (function (LinkTarget) {\n    LinkTarget[\"none\"] = \"\";\n    LinkTarget[\"blank\"] = \"_blank\";\n    LinkTarget[\"parent\"] = \"_parent\";\n    LinkTarget[\"self\"] = \"_self\";\n    LinkTarget[\"top\"] = \"_top\";\n  })(LinkTarget || (LinkTarget = {}));\n\n  return LinkTarget;\n})();\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\nclass NavbarAbstract {\n  /**\n   * Public API\n   */\n  constructor(routeConverter, moduleNavigation, preferences, language, appState) {\n    this.routeConverter = routeConverter;\n    this.moduleNavigation = moduleNavigation;\n    this.preferences = preferences;\n    this.language = language;\n    this.appState = appState;\n    this.authenticated = true;\n    this.logo = new LogoAbstract();\n    this.useGroupTabs = false;\n    this.globalActions = [];\n    this.currentUser = {\n      id: '',\n      firstName: '',\n      lastName: ''\n    };\n    this.all = {\n      modules: [],\n      extra: []\n    };\n    this.menu = [];\n  }\n  /**\n   * Reset menus\n   */\n\n\n  resetMenu() {\n    this.menu = [];\n    this.globalActions = [];\n    this.all.modules = [];\n    this.all.extra = [];\n    this.current = null;\n    this.currentUser = {};\n  }\n  /**\n   * Build user action menu\n   *\n   * @param {[]} userActionMenu info\n   * @param {object} currentUser info\n   */\n\n\n  buildUserActionMenu(userActionMenu, currentUser) {\n    this.currentUser.id = currentUser.id;\n    this.currentUser.firstName = currentUser.firstName;\n    this.currentUser.lastName = currentUser.lastName;\n\n    if (userActionMenu) {\n      userActionMenu.forEach(subMenu => {\n        var _a;\n\n        const name = subMenu.name;\n        let url = subMenu.url;\n\n        if (name === 'logout') {\n          return;\n        }\n\n        let target = LinkTarget.none;\n\n        if (name === 'training') {\n          target = LinkTarget.blank;\n        } else {\n          url = this.routeConverter.toFrontEndLink(url);\n        }\n\n        const label = (_a = this.language.getAppString(subMenu.labelKey)) !== null && _a !== void 0 ? _a : '';\n        this.globalActions.push({\n          link: {\n            url,\n            label,\n            target\n          }\n        });\n      });\n    }\n\n    return;\n  }\n  /**\n   * Build navbar\n   *\n   * @param {object} navigation info\n   * @param {object} currentUser info\n   * @param {number} maxTabs to display\n   */\n\n\n  build(navigation, currentUser, maxTabs) {\n    this.buildUserActionMenu(navigation.userActionMenu, currentUser);\n    const navigationParadigm = this.preferences.getUserPreference('navigation_paradigm');\n    const sort = this.preferences.getUserPreference('sort_modules_by_name') === 'on';\n\n    if (navigationParadigm === 'm') {\n      this.buildModuleNavigation(navigation, maxTabs, sort);\n      return;\n    }\n\n    if (navigationParadigm === 'gm') {\n      this.buildGroupedNavigation(navigation, maxTabs, sort);\n      return;\n    }\n  }\n  /**\n   * Build Group tab menu\n   *\n   * @param {[]} items list\n   * @param {object} modules info\n   * @param {number} threshold limit\n   * @param {object} groupedTabs info\n   * @param {boolean} sort flag\n   */\n\n\n  buildGroupTabMenu(items, modules, threshold, groupedTabs, sort) {\n    const navItems = [];\n    const moreItems = [];\n\n    if (items && items.length > 0) {\n      items.forEach(module => {\n        moreItems.push(this.buildTabMenuItem(module, modules[module]));\n      });\n\n      if (sort) {\n        this.sortMenuItems(moreItems);\n      }\n    }\n\n    let count = 0;\n    groupedTabs.forEach(groupedTab => {\n      if (count <= threshold) {\n        navItems.push(this.buildTabGroupedMenuItem(groupedTab.labelKey, groupedTab.modules, modules, sort));\n      }\n\n      count++;\n    });\n    this.menu = navItems;\n    this.all.modules = moreItems;\n  }\n  /**\n   *\n   * Internal API\n   *\n   */\n\n  /**\n   * Build module navigation\n   *\n   * @param {object} navigation info\n   * @param {number} maxTabs to use\n   * @param {boolean} sort flag\n   */\n\n\n  buildModuleNavigation(navigation, maxTabs, sort) {\n    if (!ready([navigation.tabs, navigation.modules])) {\n      return;\n    }\n\n    this.buildTabMenu(navigation.tabs, navigation.modules, maxTabs, sort);\n    this.buildSelectedModule(navigation);\n  }\n  /**\n   * Build grouped navigation\n   *\n   * @param {object} navigation info\n   * @param {number} maxTabs to use\n   * @param {boolean} sort flag\n   */\n\n\n  buildGroupedNavigation(navigation, maxTabs, sort) {\n    if (!ready([navigation.tabs, navigation.modules, navigation.groupedTabs])) {\n      return;\n    }\n\n    this.buildGroupTabMenu(navigation.tabs, navigation.modules, maxTabs, navigation.groupedTabs, sort);\n    this.buildSelectedModule(navigation);\n  }\n  /**\n   * Build selected module\n   *\n   * @param {object} navigation info\n   */\n\n\n  buildSelectedModule(navigation) {\n    var _a;\n\n    const module = (_a = this.appState.getModule()) !== null && _a !== void 0 ? _a : '';\n\n    if (module === '' || module === 'home') {\n      return;\n    }\n\n    if (!navigation.modules[module]) {\n      return;\n    }\n\n    this.current = this.buildTabMenuItem(module, navigation.modules[module]);\n  }\n  /**\n   * Build tab / module menu\n   *\n   * @param {[]} items list\n   * @param {object} modules info\n   * @param {number} threshold limit\n   * @param {boolean} sort flag\n   */\n\n\n  buildTabMenu(items, modules, threshold, sort) {\n    const navItems = [];\n    const moreItems = [];\n\n    if (!items || items.length === 0) {\n      this.menu = navItems;\n      this.all.modules = moreItems;\n      return;\n    }\n\n    let count = 0;\n    items.forEach(module => {\n      const item = this.buildTabMenuItem(module, modules[module]);\n\n      if (module === 'home' || this.appState.getModule() === module || count >= threshold) {\n        moreItems.push(item);\n      } else {\n        navItems.push(item);\n      }\n\n      count++;\n    });\n\n    if (sort) {\n      this.sortMenuItems(navItems);\n      this.sortMenuItems(moreItems);\n    }\n\n    this.menu = navItems;\n    this.all.modules = moreItems;\n  }\n  /**\n   * Build Grouped Tab menu item\n   *\n   * @param {string} moduleLabel to display\n   * @param {object} groupedModules list\n   * @param {object} modules list\n   * @param {boolean} sort flag\n   *\n   * @returns {object} group tab menu item\n   */\n\n\n  buildTabGroupedMenuItem(moduleLabel, groupedModules, modules, sort) {\n    return {\n      link: {\n        label: this.language.getAppString(moduleLabel) || moduleLabel,\n        url: '',\n        route: null,\n        params: null\n      },\n      icon: '',\n      submenu: this.buildGroupedMenu(groupedModules, modules, sort)\n    };\n  }\n  /**\n   * Build Grouped menu\n   *\n   * @param {object} groupedModules info\n   * @param {object} modules map\n   * @param {boolean} sort flag\n   *\n   * @returns {[]} menu item array\n   */\n\n\n  buildGroupedMenu(groupedModules, modules, sort) {\n    const groupedItems = [];\n    let homeMenuItem = null;\n    groupedModules.forEach(groupedModule => {\n      const module = modules[groupedModule];\n\n      if (!module) {\n        return;\n      }\n\n      const moduleMenuItem = this.buildTabMenuItem(groupedModule, module);\n\n      if (groupedModule === 'home') {\n        homeMenuItem = moduleMenuItem;\n        return;\n      }\n\n      groupedItems.push(moduleMenuItem);\n    });\n\n    if (sort) {\n      this.sortMenuItems(groupedItems);\n    }\n\n    if (homeMenuItem) {\n      groupedItems.unshift(homeMenuItem);\n    }\n\n    return groupedItems;\n  }\n  /**\n   * Build module menu items\n   *\n   * @param {string} module name\n   * @param {object} moduleInfo info\n   *\n   * @returns {object} menuItem\n   */\n\n\n  buildTabMenuItem(module, moduleInfo) {\n    var _a, _b;\n\n    const moduleRoute = this.moduleNavigation.getModuleRoute(moduleInfo);\n    const menuItem = {\n      link: {\n        label: this.moduleNavigation.getModuleLabel(moduleInfo, (_b = (_a = this.language.getLanguageStrings()) === null || _a === void 0 ? void 0 : _a.appListStrings) !== null && _b !== void 0 ? _b : {}),\n        url: moduleRoute.url,\n        route: moduleRoute.route,\n        params: null\n      },\n      icon: module === 'home' ? 'home' : '',\n      submenu: [],\n      module: module !== null && module !== void 0 ? module : null\n    };\n\n    if (moduleInfo) {\n      moduleInfo.menu.forEach(subMenu => {\n        const moduleActionRoute = this.moduleNavigation.getActionRoute(subMenu);\n        menuItem.submenu.push({\n          link: {\n            label: this.moduleNavigation.getActionLabel(module, subMenu, this.language.getLanguageStrings()),\n            url: moduleActionRoute.url,\n            route: moduleActionRoute.route,\n            params: moduleActionRoute.params\n          },\n          icon: subMenu.icon,\n          submenu: []\n        });\n      });\n    }\n\n    return menuItem;\n  }\n  /**\n   * Sort menu items by label\n   *\n   * @param {object} navItems to sort\n   */\n\n\n  sortMenuItems(navItems) {\n    navItems.sort((a, b) => {\n      const nameA = a.link.label.toUpperCase(); // ignore upper and lowercase\n\n      const nameB = b.link.label.toUpperCase(); // ignore upper and lowercase\n\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      } // names must be equal\n\n\n      return 0;\n    });\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ROUTE_PREFIX = './#';\nlet RouteConverter = /*#__PURE__*/(() => {\n  class RouteConverter {\n    constructor(moduleNameMapper, actionNameMapper, systemConfigStore) {\n      this.moduleNameMapper = moduleNameMapper;\n      this.actionNameMapper = actionNameMapper;\n      this.systemConfigStore = systemConfigStore;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Converts legacyLink to front end link. Includes the /#/.\n     *\n     * @param {string} legacyLink legacy url\n     * @returns {string} frontend path\n     */\n\n\n    toFrontEndLink(legacyLink) {\n      return ROUTE_PREFIX + this.toFrontEndRoute(legacyLink);\n    }\n    /**\n     * Converts legacyLink to front end route\n     *\n     * @param {string} legacyLink legacy url\n     * @returns {string} frontend path\n     */\n\n\n    toFrontEndRoute(legacyLink) {\n      if (legacyLink && legacyLink.includes('/#/')) {\n        const anchorParts = legacyLink.split('/#/');\n\n        if (anchorParts.length < 2) {\n          return '/';\n        }\n\n        return anchorParts[1];\n      }\n\n      const info = this.parse(legacyLink);\n\n      if (!info) {\n        return '/';\n      }\n\n      let route = this.buildRoute(info.module, info.action, info.record);\n      route += this.buildQueryString(info.params, ['module', 'action', 'record']);\n      return route;\n    }\n    /**\n     * Build legacy link from router information\n     *\n     * @param {object} params route params\n     * @param {object} queryParams route query params\n     * @returns {string} legacy url\n     */\n\n\n    toLegacy(params, queryParams) {\n      let path = './legacy/index.php';\n      const queryObject = Object.assign({}, queryParams);\n\n      if (params.module) {\n        queryObject.module = this.moduleNameMapper.toLegacy(params.module);\n      }\n\n      if (params.action) {\n        queryObject.action = this.actionNameMapper.toLegacy(params.action);\n      }\n\n      if (params.record) {\n        queryObject.record = params.record;\n      }\n\n      path += this.buildQueryString(queryObject);\n      return path;\n    }\n    /**\n     * Parse legacy link\n     *\n     * @param {string} legacyLink to parse\n     * @returns {object} route info\n     */\n\n\n    parse(legacyLink) {\n      const parser = new DefaultUrlSerializer();\n      const replacedString = legacyLink.replace('/legacy', '');\n      const parts = replacedString.split('?');\n\n      if (parts.length < 2) {\n        return null;\n      }\n\n      const tree = parser.parse('/?' + parts[1]);\n      const params = tree.queryParamMap;\n      const module = params.get('module') || '';\n      const action = params.get('action') || '';\n      const record = params.get('record') || '';\n      return {\n        module,\n        action,\n        record,\n        params: tree.queryParams\n      };\n    }\n    /**\n     * Map route url to RouteInfo\n     *\n     * @returns {object} RouteInfo of the current URL\n     * @description Parses route information from ActivatedRouteSnapshot to RouteInfo object\n     * @param {UrlSegment[]} urlSegment from the Router object\n     */\n\n\n    parseRouteURL(urlSegment) {\n      var _a, _b, _c, _d, _e, _f;\n\n      return {\n        module: (_b = (_a = urlSegment[0]) === null || _a === void 0 ? void 0 : _a.path) !== null && _b !== void 0 ? _b : '',\n        action: (_d = (_c = urlSegment[1]) === null || _c === void 0 ? void 0 : _c.path) !== null && _d !== void 0 ? _d : 'index',\n        record: (_f = (_e = urlSegment[2]) === null || _e === void 0 ? void 0 : _e.path) !== null && _f !== void 0 ? _f : ''\n      };\n    }\n    /**\n     * check if the current route is a classic view route\n     *\n     * @returns {object} RouteInfo\n     * @description if the current url is a classic view url; so redirect back to the same view\n     * @param {UrlTree} urlTree of current route\n     */\n\n\n    parseRouteInfoFromUrlTree(urlTree) {\n      const urlSegmentGroup = urlTree.root.children[PRIMARY_OUTLET];\n      const urlSegment = urlSegmentGroup.segments;\n      return this.parseRouteURL(urlSegment);\n    }\n    /**\n     * check if the current route is a classic view route\n     *\n     * @returns {boolean} true/false\n     * @param {UrlTree} urlTree of the route\n     * @description if the current url is a classic view url; so redirect back to the same view\n     */\n\n\n    isClassicViewRoute(urlTree) {\n      const configRoutes = this.systemConfigStore.getConfigValue('module_routing');\n      const currentRouteInfo = this.parseRouteInfoFromUrlTree(urlTree);\n      const module = currentRouteInfo.module;\n      const action = currentRouteInfo.action;\n      return !configRoutes[module] || !configRoutes[module][action];\n    }\n    /**\n     * Check if given routeInfo matches the provided activated route\n     *\n     * @param {object} route to check\n     * @param {object} routeInfo to check\n     * @returns {boolean} is match\n     */\n\n\n    matchesActiveRoute(route, routeInfo) {\n      const toCheck = [{\n        name: 'module',\n        map: value => {\n          if (!value) {\n            return value;\n          }\n\n          return this.mapModuleToFrontend(value);\n        }\n      }, {\n        name: 'action',\n        map: value => {\n          if (!value) {\n            return value;\n          }\n\n          return this.mapActionToFrontEnd(value);\n        }\n      }, {\n        name: 'record',\n        map: value => value\n      }];\n      let match = true;\n      toCheck.forEach(param => {\n        if (!route.snapshot.params[param.name] && !routeInfo[param.name]) {\n          return;\n        }\n\n        match = match && route.snapshot.params[param.name] === param.map(routeInfo[param.name]);\n      });\n      return match;\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Build front end route\n     *\n     * @param {string} module name\n     * @param {string} action name\n     * @param {string} record id\n     * @returns {string} route\n     */\n\n\n    buildRoute(module, action, record) {\n      const moduleName = this.mapModuleToFrontend(module);\n      let route = `${moduleName}`;\n\n      if (action) {\n        const actionName = this.mapActionToFrontEnd(action);\n        route += `/${actionName}`;\n      }\n\n      if (record) {\n        route += `/${record}`;\n      }\n\n      return route;\n    }\n    /**\n     * Build query string\n     *\n     * @param {object} queryParams query parameters\n     * @param {string[]} exclude parameters to exclude\n     * @returns {string} query string\n     */\n\n\n    buildQueryString(queryParams, exclude = []) {\n      let params = new HttpParams();\n      Object.keys(queryParams).forEach(param => {\n        if (exclude.includes(param)) {\n          return;\n        }\n\n        const value = queryParams[param];\n        params = params.set(param, value);\n      });\n\n      if (params.keys().length > 0) {\n        return '?' + params.toString();\n      }\n\n      return '';\n    }\n    /**\n     * Map legacy module name to frontend\n     *\n     * @param {string} module legacy name\n     * @returns {string} frontend name\n     */\n\n\n    mapModuleToFrontend(module) {\n      return this.moduleNameMapper.toFrontend(module);\n    }\n    /**\n     * Map legacy action name to frontend\n     *\n     * @param {string} action legacy name\n     * @returns {string} frontend name\n     */\n\n\n    mapActionToFrontEnd(action) {\n      return this.actionNameMapper.toFrontend(action);\n    }\n\n  }\n\n  RouteConverter.ɵfac = function RouteConverter_Factory(t) {\n    return new (t || RouteConverter)(ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ActionNameMapper), ɵngcc0.ɵɵinject(SystemConfigStore));\n  };\n\n  RouteConverter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RouteConverter_Factory() {\n      return new RouteConverter(i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(ActionNameMapper), i0.ɵɵinject(SystemConfigStore));\n    },\n    token: RouteConverter,\n    providedIn: \"root\"\n  });\n  return RouteConverter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseNavbarComponent = /*#__PURE__*/(() => {\n  class BaseNavbarComponent {\n    constructor(navigationStore, languageStore, userPreferenceStore, systemConfigStore, appState, authService, moduleNavigation, screenSize) {\n      this.navigationStore = navigationStore;\n      this.languageStore = languageStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.systemConfigStore = systemConfigStore;\n      this.appState = appState;\n      this.authService = authService;\n      this.moduleNavigation = moduleNavigation;\n      this.screenSize = screenSize;\n      this.loaded = true;\n      this.mainNavCollapse = true;\n      this.subNavCollapse = true;\n      this.mobileNavbar = false;\n      this.mobileSubNav = false;\n      this.backLink = false;\n      this.mainNavLink = true;\n      this.submenu = [];\n      this.moduleNameMapper = new ModuleNameMapper(this.systemConfigStore);\n      this.actionNameMapper = new ActionNameMapper(this.systemConfigStore);\n      this.routeConverter = new RouteConverter(this.moduleNameMapper, this.actionNameMapper, this.systemConfigStore);\n      this.maxTabs = 8;\n      this.screen = ScreenSize.Medium;\n      this.languages$ = this.languageStore.vm$;\n      this.userPreferences$ = this.userPreferenceStore.userPreferences$;\n      this.currentUser$ = this.authService.currentUser$;\n      this.appState$ = this.appState.vm$;\n      this.navigation$ = this.navigationStore.vm$;\n      this.vm$ = combineLatest([this.navigation$, this.userPreferences$, this.currentUser$, this.appState$, this.screenSize.screenSize$, this.languages$]).pipe(map(([navigation, userPreferences, currentUser, appState, screenSize, language]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        this.calculateMaxTabs(navigation);\n        this.navbar.resetMenu();\n\n        if (ready([language.appStrings, language.modStrings, language.appListStrings, userPreferences, currentUser])) {\n          this.navbar.build(navigation, currentUser, this.maxTabs);\n        }\n\n        return {\n          navigation,\n          userPreferences,\n          appState\n        };\n      }));\n    }\n    /**\n     * Public API\n     */\n\n\n    onResize(event) {\n      const innerWidth = event.target.innerWidth;\n      this.mobileNavbar = innerWidth <= 768;\n    }\n\n    ngOnInit() {\n      const navbar = new NavbarAbstract(this.routeConverter, this.moduleNavigation, this.userPreferenceStore, this.languageStore, this.appState);\n      this.setNavbar(navbar);\n      this.authService.isUserLoggedIn.subscribe(value => {\n        this.isUserLoggedIn = value;\n      });\n      window.dispatchEvent(new Event('resize'));\n    }\n\n    ngOnDestroy() {\n      this.authService.isUserLoggedIn.unsubscribe();\n    }\n    /**\n     * Change subnavigation\n     *\n     * @param {object} event triggered\n     * @param {object} items\n     */\n\n\n    changeSubNav(event, items) {\n      this.mobileSubNav = !this.mobileSubNav;\n      this.backLink = !this.backLink;\n      this.mainNavLink = !this.mainNavLink;\n      this.submenu = items;\n    }\n    /**\n     * Set link flags\n     */\n\n\n    navBackLink() {\n      this.mobileSubNav = !this.mobileSubNav;\n      this.backLink = !this.backLink;\n      this.mainNavLink = !this.mainNavLink;\n    }\n    /**\n     * Get home page\n     *\n     * @returns {string} homepage\n     */\n\n\n    getHomePage() {\n      return this.systemConfigStore.getHomePage();\n    }\n\n    getCloseCallBack(myDrop) {\n      return () => myDrop.close();\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Set navbar model\n     *\n     * @param {object} navbar model\n     */\n\n\n    setNavbar(navbar) {\n      this.navbar = navbar;\n      this.loaded = true;\n    }\n    /**\n     * Check if is loaded\n     *\n     * @returns {{boolean}} is loaded\n     */\n\n\n    isLoaded() {\n      return this.loaded;\n    }\n\n    calculateMaxTabs(navigation) {\n      const sizeMap = this.systemConfigStore.getConfigValue('navigation_tab_limits');\n\n      if (this.screen && sizeMap) {\n        let maxTabs = sizeMap[this.screen];\n\n        if (!maxTabs || navigation.maxTabs && navigation.maxTabs < maxTabs) {\n          maxTabs = navigation.maxTabs;\n        }\n\n        this.maxTabs = maxTabs;\n      }\n    }\n\n  }\n\n  BaseNavbarComponent.ɵfac = function BaseNavbarComponent_Factory(t) {\n    return new (t || BaseNavbarComponent)(ɵngcc0.ɵɵdirectiveInject(NavigationStore), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(AuthService), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ScreenSizeObserverService));\n  };\n\n  BaseNavbarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseNavbarComponent,\n    selectors: [[\"scrm-base-navbar\"]],\n    hostBindings: function BaseNavbarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function BaseNavbarComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, ɵngcc0.ɵɵresolveWindow);\n      }\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"top-panel fixed-top\", 4, \"ngIf\"], [1, \"top-panel\", \"fixed-top\"], [3, \"ngIf\"], [4, \"ngIf\"], [1, \"navbar\", \"navbar-expand-lg\"], [1, \"navbar-collapse\", \"collapse\", \"order-4\", \"order-md-0\", \"collapsenav\"], [1, \"navbar-nav\"], [1, \"top-nav\", \"nav-item\"], [1, \"navbar\", \"ml-0\", \"pl-0\"], [1, \"navbar-collapse\"], [1, \"pl-0\"], [1, \"navbar\", \"mobile-nav-block\", \"mobilenavbar\"], [\"ngbDropdown\", \"\", 1, \"position-static\", 3, \"autoClose\"], [\"myDrop\", \"ngbDropdown\"], [\"aria-controls\", \"navbar\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", \"ngbDropdownToggle\", \"\", \"type\", \"button\", 1, \"navbar-toggler\"], [\"image\", \"hamburger\", 1, \"responsive-menu-toggler\"], [\"ngbDropdownMenu\", \"\", 1, \"mobile-nav-dropdown\", \"w-100\"], [\"ngbDropdown\", \"\", 1, \"global-links\"], [1, \"global-link-item\", 3, \"click\"], [\"ngbDropdownToggle\", \"\", 1, \"nav-link\", \"primary-global-link\", \"dropdown-toggle\"], [\"mobileGlobalLinkTitle\", \"\"], [\"image\", \"user\", 1, \"global-action-icon\", \"sicon-2x\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", \"ngbDropdownMenu\", \"\", 1, \"dropdown-menu\", \"global-links-dropdown\"], [3, \"all\", \"current\", \"items\", \"navigationType\", \"onClose\"], [\"class\", \"dropdown-item global-links-sublink\", \"ngbDropdownItem\", \"\", 3, \"href\", \"target\", 4, \"ngFor\", \"ngForOf\"], [\"ngbDropdownItem\", \"\", 1, \"dropdown-item\", \"global-links-sublink\", 3, \"href\", \"target\"], [1, \"navbar\", \"navbar-expand-md\", \"navbar-1\"], [1, \"navbar-collapse\", \"collapse\", \"collapsenav\", 3, \"ngbCollapse\"], [3, \"active\", \"route\"], [1, \"global-link-item\"], [\"globalLinkTitle\", \"\"], [1, \"global-user-name\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", \"ngbDropdownMenu\", \"\", 1, \"dropdown-menu\", \"global-links-dropdown\", \"dropdown-menu-right\"], [1, \"navbar-nav\", \"grouped\"], [\"class\", \"top-nav nav-item dropdown non-grouped active\", 4, \"ngIf\"], [\"class\", \"top-nav nav-item dropdown main-grouped\", 4, \"ngFor\", \"ngForOf\"], [\"labelKey\", \"LBL_TABGROUP_ALL\", 3, \"items\"], [1, \"top-nav\", \"nav-item\", \"dropdown\", \"non-grouped\", \"active\"], [3, \"item\"], [1, \"top-nav\", \"nav-item\", \"dropdown\", \"main-grouped\"], [3, \"item\", \"subNavCollapse\"], [\"class\", \"top-nav nav-item dropdown non-grouped\", 4, \"ngFor\", \"ngForOf\"], [\"labelKey\", \"LBL_MORE\", 3, \"items\"], [1, \"top-nav\", \"nav-item\", \"dropdown\", \"non-grouped\"]],\n    template: function BaseNavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseNavbarComponent_div_0_Template, 3, 2, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ɵngcc7.NgbNavbar, LogoUiComponent, ɵngcc7.NgbDropdown, ɵngcc7.NgbDropdownToggle, ImageComponent, ɵngcc7.NgbDropdownMenu, LogoutUiComponent, ActionBarUiComponent, MobileMenuComponent, ɵngcc3.NgForOf, ɵngcc7.NgbDropdownItem, ɵngcc7.NgbCollapse, HomeMenuItemComponent, MenuItemsListComponent, MenuItemComponent, GroupedMenuItemComponent];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('mobileNavFade', [transition(':enter', useAnimation(fadeIn, {\n        params: {\n          timing: 0.5,\n          delay: 0\n        }\n      }))])]\n    }\n  });\n  BaseNavbarComponent.instances = [];\n  return BaseNavbarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet NavbarRegistry = /*#__PURE__*/(() => {\n  class NavbarRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseNavbarComponent);\n    }\n\n  }\n\n  NavbarRegistry.ɵfac = function NavbarRegistry_Factory(t) {\n    return new (t || NavbarRegistry)();\n  };\n\n  NavbarRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NavbarRegistry_Factory() {\n      return new NavbarRegistry();\n    },\n    token: NavbarRegistry,\n    providedIn: \"root\"\n  });\n  return NavbarRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet NavbarUiComponent = /*#__PURE__*/(() => {\n  class NavbarUiComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  NavbarUiComponent.ɵfac = function NavbarUiComponent_Factory(t) {\n    return new (t || NavbarUiComponent)(ɵngcc0.ɵɵdirectiveInject(NavbarRegistry));\n  };\n\n  NavbarUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NavbarUiComponent,\n    selectors: [[\"scrm-navbar-ui\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\"]],\n    template: function NavbarUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ndcDynamicComponent\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc9.DynamicComponent],\n    encapsulation: 2\n  });\n  return NavbarUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LogoUiComponent = /*#__PURE__*/(() => {\n  class LogoUiComponent {}\n\n  LogoUiComponent.ɵfac = function LogoUiComponent_Factory(t) {\n    return new (t || LogoUiComponent)();\n  };\n\n  LogoUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LogoUiComponent,\n    selectors: [[\"scrm-logo-ui\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"image\", \"company_logo\", 1, \"logo\"]],\n    template: function LogoUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"scrm-image\", 0);\n      }\n    },\n    directives: [ImageComponent],\n    encapsulation: 2\n  });\n  return LogoUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LogoUiModule = /*#__PURE__*/(() => {\n  class LogoUiModule {}\n\n  LogoUiModule.ɵfac = function LogoUiModule_Factory(t) {\n    return new (t || LogoUiModule)();\n  };\n\n  LogoUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LogoUiModule\n  });\n  LogoUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return LogoUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LogoUiModule, {\n    declarations: function () {\n      return [LogoUiComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [LogoUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LogoutUiComponent = /*#__PURE__*/(() => {\n  class LogoutUiComponent {\n    constructor(auth, languageStore) {\n      this.auth = auth;\n      this.languageStore = languageStore;\n      this.logout = {\n        logoutAction: {\n          label: 'LBL_LOGOUT'\n        }\n      };\n      this.languages$ = this.languageStore.vm$;\n      this.vm$ = combineLatest([this.languages$]).pipe(map(([languages]) => ({\n        appStrings: languages.appStrings || {},\n        appListStrings: languages.appListStrings || {}\n      })));\n    }\n    /**\n     * call logout\n     */\n\n\n    doLogout() {\n      this.auth.logout();\n    }\n\n  }\n\n  LogoutUiComponent.ɵfac = function LogoutUiComponent_Factory(t) {\n    return new (t || LogoutUiComponent)(ɵngcc0.ɵɵdirectiveInject(AuthService), ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  LogoutUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LogoutUiComponent,\n    selectors: [[\"scrm-logout-ui\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"dropdown-item\", \"global-links-sublink\", 3, \"click\"]],\n    template: function LogoutUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LogoutUiComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return LogoutUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LogoutUiModule = /*#__PURE__*/(() => {\n  class LogoutUiModule {}\n\n  LogoutUiModule.ɵfac = function LogoutUiModule_Factory(t) {\n    return new (t || LogoutUiModule)();\n  };\n\n  LogoutUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LogoutUiModule\n  });\n  LogoutUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return LogoutUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LogoutUiModule, {\n    declarations: function () {\n      return [LogoutUiComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [LogoutUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMenuItemLinkComponent = /*#__PURE__*/(() => {\n  class BaseMenuItemLinkComponent {\n    constructor() {}\n\n  }\n\n  BaseMenuItemLinkComponent.ɵfac = function BaseMenuItemLinkComponent_Factory(t) {\n    return new (t || BaseMenuItemLinkComponent)();\n  };\n\n  BaseMenuItemLinkComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMenuItemLinkComponent,\n    selectors: [[\"scrm-base-menu-item-link\"]],\n    inputs: {\n      link: \"link\",\n      icon: \"icon\",\n      class: \"class\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"ngClass\", \"queryParams\", \"routerLink\", 4, \"ngIf\"], [3, \"href\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\", \"queryParams\", \"routerLink\"], [3, \"image\", 4, \"ngIf\"], [3, \"image\"], [3, \"href\", \"ngClass\"]],\n    template: function BaseMenuItemLinkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMenuItemLinkComponent_a_0_Template, 3, 5, \"a\", 0);\n        ɵngcc0.ɵɵtemplate(1, BaseMenuItemLinkComponent_a_1_Template, 3, 4, \"a\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.link.route);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.link.route);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc2.RouterLinkWithHref, ɵngcc3.NgClass, ImageComponent],\n    encapsulation: 2\n  });\n  return BaseMenuItemLinkComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemLinkRegistry = /*#__PURE__*/(() => {\n  class MenuItemLinkRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMenuItemLinkComponent);\n    }\n\n  }\n\n  MenuItemLinkRegistry.ɵfac = function MenuItemLinkRegistry_Factory(t) {\n    return new (t || MenuItemLinkRegistry)();\n  };\n\n  MenuItemLinkRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MenuItemLinkRegistry_Factory() {\n      return new MenuItemLinkRegistry();\n    },\n    token: MenuItemLinkRegistry,\n    providedIn: \"root\"\n  });\n  return MenuItemLinkRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemLinkComponent = /*#__PURE__*/(() => {\n  class MenuItemLinkComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MenuItemLinkComponent.ɵfac = function MenuItemLinkComponent_Factory(t) {\n    return new (t || MenuItemLinkComponent)(ɵngcc0.ɵɵdirectiveInject(MenuItemLinkRegistry));\n  };\n\n  MenuItemLinkComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MenuItemLinkComponent,\n    selectors: [[\"scrm-menu-item-link\"]],\n    inputs: {\n      link: \"link\",\n      icon: \"icon\",\n      class: \"class\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MenuItemLinkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MenuItemLinkComponent_ndc_dynamic_0_Template, 1, 6, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MenuItemLinkComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseGroupedMenuItemComponent = /*#__PURE__*/(() => {\n  class BaseGroupedMenuItemComponent {\n    constructor() {\n      this.showDropdown = true;\n    }\n\n    hideDropdown() {\n      this.showDropdown = false;\n      setTimeout(() => this.showDropdown = true, 0);\n    }\n\n  }\n\n  BaseGroupedMenuItemComponent.ɵfac = function BaseGroupedMenuItemComponent_Factory(t) {\n    return new (t || BaseGroupedMenuItemComponent)();\n  };\n\n  BaseGroupedMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseGroupedMenuItemComponent,\n    selectors: [[\"scrm-base-grouped-menu-item\"]],\n    inputs: {\n      item: \"item\",\n      subNavCollapse: \"subNavCollapse\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[\"data-target\", \".navbar-collapse\", \"data-toggle\", \"collapse\"], [\"data-toggle\", \"dropdown\", 1, \"top-nav-link\", \"nav-link-grouped\", \"dropdown-toggle\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", \"class\", \"dropdown-menu main\", 3, \"ngbCollapse\", \"click\", 4, \"ngIf\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"main\", 3, \"ngbCollapse\", \"click\"], [\"class\", \"nav-item dropdown-submenu submenu\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\", \"dropdown-submenu\", \"submenu\"], [3, \"link\"], [\"class\", \"dropdown-menu submenu\", 3, \"rounded-0\", 4, \"ngIf\"], [1, \"dropdown-menu\", \"submenu\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"nav-item\"], [3, \"icon\", \"link\"], [3, \"module\"]],\n    template: function BaseGroupedMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"a\", 1);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, BaseGroupedMenuItemComponent_ul_4_Template, 2, 2, \"ul\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.item.link.label, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDropdown);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ɵngcc7.NgbCollapse, ɵngcc3.NgForOf, MenuItemLinkComponent, SubMenuRecentlyViewedComponent, SubMenuFavoritesComponent];\n    },\n    encapsulation: 2\n  });\n  return BaseGroupedMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GroupedMenuItemRegistry = /*#__PURE__*/(() => {\n  class GroupedMenuItemRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseGroupedMenuItemComponent);\n    }\n\n  }\n\n  GroupedMenuItemRegistry.ɵfac = function GroupedMenuItemRegistry_Factory(t) {\n    return new (t || GroupedMenuItemRegistry)();\n  };\n\n  GroupedMenuItemRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function GroupedMenuItemRegistry_Factory() {\n      return new GroupedMenuItemRegistry();\n    },\n    token: GroupedMenuItemRegistry,\n    providedIn: \"root\"\n  });\n  return GroupedMenuItemRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet GroupedMenuItemComponent = /*#__PURE__*/(() => {\n  class GroupedMenuItemComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  GroupedMenuItemComponent.ɵfac = function GroupedMenuItemComponent_Factory(t) {\n    return new (t || GroupedMenuItemComponent)(ɵngcc0.ɵɵdirectiveInject(GroupedMenuItemRegistry));\n  };\n\n  GroupedMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: GroupedMenuItemComponent,\n    selectors: [[\"scrm-grouped-menu-item\"]],\n    inputs: {\n      item: \"item\",\n      subNavCollapse: \"subNavCollapse\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function GroupedMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, GroupedMenuItemComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return GroupedMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMenuItemsListComponent = /*#__PURE__*/(() => {\n  class BaseMenuItemsListComponent {\n    constructor() {\n      this.showDropdown = true;\n    }\n\n    hideDropdown() {\n      this.showDropdown = false;\n      setTimeout(() => this.showDropdown = true, 0);\n    }\n\n  }\n\n  BaseMenuItemsListComponent.ɵfac = function BaseMenuItemsListComponent_Factory(t) {\n    return new (t || BaseMenuItemsListComponent)();\n  };\n\n  BaseMenuItemsListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMenuItemsListComponent,\n    selectors: [[\"scrm-base-menu-items-list\"]],\n    inputs: {\n      items: \"items\",\n      labelKey: \"labelKey\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"navbar-nav nav-collapsed-items\", 4, \"ngIf\"], [1, \"navbar-nav\", \"nav-collapsed-items\"], [1, \"top-nav\", \"nav-item\", \"dropdown\", \"non-grouped\"], [1, \"nav-link-nongrouped\", \"dropdown-toggle\"], [3, \"labelKey\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", \"class\", \"dropdown-menu more-menu submenu\", 3, \"click\", 4, \"ngIf\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"more-menu\", \"submenu\", 3, \"click\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [3, \"link\"]],\n    template: function BaseMenuItemsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMenuItemsListComponent_ul_0_Template, 5, 2, \"ul\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.items && ctx.items.length > 0);\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, MenuItemLinkComponent],\n    encapsulation: 2\n  });\n  return BaseMenuItemsListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemsListRegistry = /*#__PURE__*/(() => {\n  class MenuItemsListRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMenuItemsListComponent);\n    }\n\n  }\n\n  MenuItemsListRegistry.ɵfac = function MenuItemsListRegistry_Factory(t) {\n    return new (t || MenuItemsListRegistry)();\n  };\n\n  MenuItemsListRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MenuItemsListRegistry_Factory() {\n      return new MenuItemsListRegistry();\n    },\n    token: MenuItemsListRegistry,\n    providedIn: \"root\"\n  });\n  return MenuItemsListRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemsListComponent = /*#__PURE__*/(() => {\n  class MenuItemsListComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MenuItemsListComponent.ɵfac = function MenuItemsListComponent_Factory(t) {\n    return new (t || MenuItemsListComponent)(ɵngcc0.ɵɵdirectiveInject(MenuItemsListRegistry));\n  };\n\n  MenuItemsListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MenuItemsListComponent,\n    selectors: [[\"scrm-menu-items-list\"]],\n    inputs: {\n      items: \"items\",\n      labelKey: \"labelKey\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MenuItemsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MenuItemsListComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MenuItemsListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMenuRecentlyViewedComponent = /*#__PURE__*/(() => {\n  class BaseMenuRecentlyViewedComponent {\n    constructor(navigation, nameMapper, configs, metadata) {\n      this.navigation = navigation;\n      this.nameMapper = nameMapper;\n      this.configs = configs;\n      this.metadata = metadata;\n      this.collapsible = false;\n      this.maxDisplayed = 5;\n      this.collapsed = false;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      const ui = (_a = this.configs.getConfigValue('ui')) !== null && _a !== void 0 ? _a : {};\n      this.maxDisplayed = (_b = parseInt(ui.navigation_max_module_recently_viewed)) !== null && _b !== void 0 ? _b : 5;\n      this.initMetadata$();\n      this.collapsed = !!this.collapsible;\n    }\n\n    ngOnDestroy() {\n      this.clear();\n    }\n\n    ngOnChanges(changes) {\n      var _a, _b, _c, _d, _e;\n\n      const moduleChanges = (_a = changes === null || changes === void 0 ? void 0 : changes.module) !== null && _a !== void 0 ? _a : null;\n\n      if (moduleChanges === null) {\n        return;\n      }\n\n      const previousModule = (_c = (_b = changes === null || changes === void 0 ? void 0 : changes.module) === null || _b === void 0 ? void 0 : _b.previousValue) !== null && _c !== void 0 ? _c : '';\n      const currentModule = (_e = (_d = changes === null || changes === void 0 ? void 0 : changes.module) === null || _d === void 0 ? void 0 : _d.currentValue) !== null && _e !== void 0 ? _e : '';\n\n      if (previousModule !== currentModule) {\n        this.clear();\n        this.initMetadata$();\n      }\n    }\n    /**\n     * Build route from recently viewed item\n     * @param item\n     */\n\n\n    buildRoute(item) {\n      var _a, _b, _c;\n\n      const legacyName = (_a = item.attributes.module_name) !== null && _a !== void 0 ? _a : '';\n      const module = (_b = this.nameMapper.toFrontend(legacyName)) !== null && _b !== void 0 ? _b : '';\n      const id = (_c = item.attributes.item_id) !== null && _c !== void 0 ? _c : '';\n      return this.navigation.getRecordRouterLink(module, id);\n    }\n    /**\n     * toggle collapse\n     */\n\n\n    toggleCollapse() {\n      if (!this.collapsible) {\n        return;\n      }\n\n      this.collapsed = !this.collapsed;\n    }\n    /**\n     * Init metadata subscription\n     * @protected\n     */\n\n\n    initMetadata$() {\n      const moduleMeta$ = this.metadata.allModuleMetadata$.pipe(map(value => {\n        var _a;\n\n        return (_a = value[this.module]) !== null && _a !== void 0 ? _a : null;\n      }));\n      this.subs.push(moduleMeta$.subscribe(meta => {\n        var _a;\n\n        this.records = (_a = meta === null || meta === void 0 ? void 0 : meta.recentlyViewed) !== null && _a !== void 0 ? _a : null;\n      }));\n    }\n    /**\n     * Clear subscription and data\n     * @protected\n     */\n\n\n    clear() {\n      this.records = null;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  BaseMenuRecentlyViewedComponent.ɵfac = function BaseMenuRecentlyViewedComponent_Factory(t) {\n    return new (t || BaseMenuRecentlyViewedComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore));\n  };\n\n  BaseMenuRecentlyViewedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMenuRecentlyViewedComponent,\n    selectors: [[\"scrm-base-menu-recently-viewed\"]],\n    inputs: {\n      collapsible: \"collapsible\",\n      module: \"module\",\n      onClick: \"onClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"recently-viewed-header\", \"mt-0\", \"pb-1\", \"pl-2\", \"pr-2\", 3, \"click\"], [\"labelKey\", \"LBL_LAST_VIEWED\"], [\"class\", \"nav-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\", 3, \"click\"], [1, \"nav-link\", \"action-link\", \"pb-2\", \"pt-2\", 3, \"routerLink\"]],\n    template: function BaseMenuRecentlyViewedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMenuRecentlyViewedComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.records && ctx.records.length);\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, ɵngcc2.RouterLinkWithHref],\n    pipes: [ɵngcc3.SlicePipe],\n    encapsulation: 2\n  });\n  return BaseMenuRecentlyViewedComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuRecentlyViewedRegistry = /*#__PURE__*/(() => {\n  class MenuRecentlyViewedRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMenuRecentlyViewedComponent);\n    }\n\n  }\n\n  MenuRecentlyViewedRegistry.ɵfac = function MenuRecentlyViewedRegistry_Factory(t) {\n    return new (t || MenuRecentlyViewedRegistry)();\n  };\n\n  MenuRecentlyViewedRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MenuRecentlyViewedRegistry_Factory() {\n      return new MenuRecentlyViewedRegistry();\n    },\n    token: MenuRecentlyViewedRegistry,\n    providedIn: \"root\"\n  });\n  return MenuRecentlyViewedRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuRecentlyViewedComponent = /*#__PURE__*/(() => {\n  class MenuRecentlyViewedComponent {\n    constructor(registry) {\n      this.registry = registry;\n      this.collapsible = false;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MenuRecentlyViewedComponent.ɵfac = function MenuRecentlyViewedComponent_Factory(t) {\n    return new (t || MenuRecentlyViewedComponent)(ɵngcc0.ɵɵdirectiveInject(MenuRecentlyViewedRegistry));\n  };\n\n  MenuRecentlyViewedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MenuRecentlyViewedComponent,\n    selectors: [[\"scrm-menu-recently-viewed\"]],\n    inputs: {\n      collapsible: \"collapsible\",\n      module: \"module\",\n      onClick: \"onClick\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MenuRecentlyViewedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MenuRecentlyViewedComponent_ndc_dynamic_0_Template, 1, 6, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MenuRecentlyViewedComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseHomeMenuItemComponent = /*#__PURE__*/(() => {\n  class BaseHomeMenuItemComponent {\n    constructor() {}\n\n  }\n\n  BaseHomeMenuItemComponent.ɵfac = function BaseHomeMenuItemComponent_Factory(t) {\n    return new (t || BaseHomeMenuItemComponent)();\n  };\n\n  BaseHomeMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseHomeMenuItemComponent,\n    selectors: [[\"scrm-base-home-menu-item\"]],\n    inputs: {\n      route: \"route\",\n      active: \"active\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"navbar-nav\", \"home-nav\"], [1, \"nav-item\"], [1, \"home-nav-link\", 3, \"routerLink\"], [\"image\", \"home\", 1, \"home-icon\"]],\n    template: function BaseHomeMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"li\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"a\", 2);\n        ɵngcc0.ɵɵelement(3, \"scrm-image\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.active);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"routerLink\", ctx.route);\n      }\n    },\n    directives: [ɵngcc2.RouterLinkWithHref, ImageComponent],\n    encapsulation: 2\n  });\n  return BaseHomeMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HomeMenuItemRegistry = /*#__PURE__*/(() => {\n  class HomeMenuItemRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseHomeMenuItemComponent);\n    }\n\n  }\n\n  HomeMenuItemRegistry.ɵfac = function HomeMenuItemRegistry_Factory(t) {\n    return new (t || HomeMenuItemRegistry)();\n  };\n\n  HomeMenuItemRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function HomeMenuItemRegistry_Factory() {\n      return new HomeMenuItemRegistry();\n    },\n    token: HomeMenuItemRegistry,\n    providedIn: \"root\"\n  });\n  return HomeMenuItemRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HomeMenuItemComponent = /*#__PURE__*/(() => {\n  class HomeMenuItemComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  HomeMenuItemComponent.ɵfac = function HomeMenuItemComponent_Factory(t) {\n    return new (t || HomeMenuItemComponent)(ɵngcc0.ɵɵdirectiveInject(HomeMenuItemRegistry));\n  };\n\n  HomeMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HomeMenuItemComponent,\n    selectors: [[\"scrm-home-menu-item\"]],\n    inputs: {\n      route: \"route\",\n      active: \"active\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function HomeMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, HomeMenuItemComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return HomeMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMenuItemComponent = /*#__PURE__*/(() => {\n  class BaseMenuItemComponent {\n    constructor() {\n      this.showDropdown = true;\n    }\n\n    hideDropdown() {\n      this.showDropdown = false;\n      setTimeout(() => this.showDropdown = true, 0);\n    }\n\n  }\n\n  BaseMenuItemComponent.ɵfac = function BaseMenuItemComponent_Factory(t) {\n    return new (t || BaseMenuItemComponent)();\n  };\n\n  BaseMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMenuItemComponent,\n    selectors: [[\"scrm-base-menu-item\"]],\n    inputs: {\n      item: \"item\"\n    },\n    decls: 4,\n    vars: 6,\n    consts: [[\"data-target\", \".navbar-collapse\", \"data-toggle\", \"collapse\"], [3, \"link\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", \"class\", \"dropdown-menu submenu\", 3, \"click\", 4, \"ngIf\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"submenu\", 3, \"click\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"nav-item\"], [3, \"icon\", \"link\"], [3, \"module\"]],\n    template: function BaseMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 0);\n        ɵngcc0.ɵɵelement(2, \"scrm-menu-item-link\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, BaseMenuItemComponent_div_3_Template, 3, 2, \"div\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassMap(ɵngcc0.ɵɵpureFunction1(4, _c23, ctx.item.submenu.length));\n        ɵngcc0.ɵɵproperty(\"link\", ctx.item.link);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.item.submenu.length && ctx.showDropdown);\n      }\n    },\n    directives: function () {\n      return [MenuItemLinkComponent, ɵngcc3.NgIf, ɵngcc3.NgForOf, SubMenuRecentlyViewedComponent, SubMenuFavoritesComponent];\n    },\n    encapsulation: 2\n  });\n  return BaseMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemRegistry = /*#__PURE__*/(() => {\n  class MenuItemRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMenuItemComponent);\n    }\n\n  }\n\n  MenuItemRegistry.ɵfac = function MenuItemRegistry_Factory(t) {\n    return new (t || MenuItemRegistry)();\n  };\n\n  MenuItemRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MenuItemRegistry_Factory() {\n      return new MenuItemRegistry();\n    },\n    token: MenuItemRegistry,\n    providedIn: \"root\"\n  });\n  return MenuItemRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuItemComponent = /*#__PURE__*/(() => {\n  class MenuItemComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MenuItemComponent.ɵfac = function MenuItemComponent_Factory(t) {\n    return new (t || MenuItemComponent)(ɵngcc0.ɵɵdirectiveInject(MenuItemRegistry));\n  };\n\n  MenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MenuItemComponent,\n    selectors: [[\"scrm-menu-item\"]],\n    inputs: {\n      item: \"item\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MenuItemComponent_ndc_dynamic_0_Template, 1, 4, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMobileMenuComponent = /*#__PURE__*/(() => {\n  class BaseMobileMenuComponent {\n    constructor() {\n      this.navigationType = '';\n      this.submenu = [];\n      this.subNavigationType = 'mm';\n      this.backLink = false;\n      this.mobileSubNav = false;\n      this.mainNavLink = true;\n    }\n\n    ngOnInit() {\n      this.mainItems = this.items;\n\n      if (this.navigationType !== 'gm' && this.current) {\n        this.mainItems = [this.current, ...this.items];\n      }\n    }\n    /**\n     * Change subnavigation\n     *\n     * @param {object} event triggered\n     * @param {object} items\n     * @param navigationType\n     * @param item\n     */\n\n\n    changeSubNav(event, items, navigationType, item) {\n      this.mobileSubNav = !this.mobileSubNav;\n      this.backLink = !this.backLink;\n      this.mainNavLink = !this.mainNavLink;\n      this.subNavItem = item;\n      this.submenu = items;\n      this.subNavigationType = navigationType;\n    }\n    /**\n     * Set link flags\n     */\n\n\n    navBackLink() {\n      this.mobileSubNav = !this.mobileSubNav;\n      this.backLink = !this.backLink;\n      this.mainNavLink = !this.mainNavLink;\n    }\n\n    getItems() {}\n\n  }\n\n  BaseMobileMenuComponent.ɵfac = function BaseMobileMenuComponent_Factory(t) {\n    return new (t || BaseMobileMenuComponent)();\n  };\n\n  BaseMobileMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMobileMenuComponent,\n    selectors: [[\"scrm-base-mobile-menu\"]],\n    inputs: {\n      navigationType: \"navigationType\",\n      current: \"current\",\n      items: \"items\",\n      all: \"all\",\n      onClose: \"onClose\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [1, \"mobile-nav-close\", \"clicable\", \"pl-3\", \"pr-3\", \"pt-2\", \"pb-2\", \"w-100\", 3, \"click\"], [\"image\", \"cross_bold\", 1, \"sicon\", \"mobile-nav-close\"], [1, \"nav-close-text\"], [\"labelKey\", \"LBL_CLOSE_MENU\"], [1, \"d-flex\", \"align-items-center\", \"mobile-back-row\", 3, \"click\"], [\"image\", \"arrow_left_filled\", 1, \"sicon-xs\", \"mobile-nav-arrow\", \"pl-3\", \"pr-3\"], [1, \"mobile-back-link\", \"pl-1\", \"pr-3\", \"pt-2\", \"pb-2\"], [\"labelKey\", \"LBL_BACK\"], [1, \"mobile-menu-items\"], [\"class\", \" d-flex align-items-center\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"align-items-center\", 3, \"click\"], [1, \"flex-grow-1\", \"mobile-nav-link\", \"pl-3\", \"pr-3\", \"pt-2\", \"pb-2\"], [\"labelKey\", \"LBL_MORE\"], [\"image\", \"arrow_right_filled\", 1, \"sicon-xs\", \"mobile-nav-arrow\", \"pl-3\", \"pr-3\"], [3, \"items\", \"onClose\"], [1, \"\"], [3, \"collapsible\", \"module\", \"onClick\"]],\n    template: function BaseMobileMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMobileMenuComponent_ng_container_0_Template, 5, 0, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, BaseMobileMenuComponent_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"li\");\n        ɵngcc0.ɵɵelementStart(3, \"a\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function BaseMobileMenuComponent_Template_a_click_3_listener() {\n          return ctx.onClose && ctx.onClose();\n        });\n        ɵngcc0.ɵɵelement(4, \"scrm-image\", 2);\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵelement(6, \"scrm-label\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.backLink);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.mainItems && ctx.mainItems.length);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, ImageComponent, LabelComponent, ɵngcc3.NgForOf, MobileModuleMenuComponent, MenuRecentlyViewedComponent, MenuFavoritesComponent, MobileGroupedMenuComponent];\n    },\n    encapsulation: 2\n  });\n  return BaseMobileMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileMenuRegistry = /*#__PURE__*/(() => {\n  class MobileMenuRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMobileMenuComponent);\n    }\n\n  }\n\n  MobileMenuRegistry.ɵfac = function MobileMenuRegistry_Factory(t) {\n    return new (t || MobileMenuRegistry)();\n  };\n\n  MobileMenuRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MobileMenuRegistry_Factory() {\n      return new MobileMenuRegistry();\n    },\n    token: MobileMenuRegistry,\n    providedIn: \"root\"\n  });\n  return MobileMenuRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileMenuComponent = /*#__PURE__*/(() => {\n  class MobileMenuComponent {\n    constructor(registry) {\n      this.registry = registry;\n      this.navigationType = '';\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MobileMenuComponent.ɵfac = function MobileMenuComponent_Factory(t) {\n    return new (t || MobileMenuComponent)(ɵngcc0.ɵɵdirectiveInject(MobileMenuRegistry));\n  };\n\n  MobileMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MobileMenuComponent,\n    selectors: [[\"scrm-mobile-menu\"]],\n    inputs: {\n      navigationType: \"navigationType\",\n      current: \"current\",\n      items: \"items\",\n      all: \"all\",\n      onClose: \"onClose\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MobileMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MobileMenuComponent_ndc_dynamic_0_Template, 1, 8, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MobileMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMobileGroupedMenuComponent = /*#__PURE__*/(() => {\n  class BaseMobileGroupedMenuComponent {\n    constructor() {}\n\n  }\n\n  BaseMobileGroupedMenuComponent.ɵfac = function BaseMobileGroupedMenuComponent_Factory(t) {\n    return new (t || BaseMobileGroupedMenuComponent)();\n  };\n\n  BaseMobileGroupedMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMobileGroupedMenuComponent,\n    selectors: [[\"scrm-base-mobile-grouped-menu\"]],\n    inputs: {\n      items: \"items\",\n      onClose: \"onClose\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"mobile-menu-items\"], [3, \"closeOthers\"], [4, \"ngFor\", \"ngForOf\"], [3, \"cardClass\", \"disabled\", 4, \"ngIf\"], [\"cardClass\", \"mobile-nav-group-item\", 3, \"title\", 4, \"ngIf\"], [3, \"cardClass\", \"disabled\"], [\"ngbPanelHeader\", \"\"], [1, \"\", 3, \"click\"], [3, \"icon\", \"link\"], [\"cardClass\", \"mobile-nav-group-item\", 3, \"title\"], [\"ngbPanelContent\", \"\"], [\"class\", \"ml-4\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"ml-4\", 3, \"click\"], [3, \"collapsible\", \"module\", \"onClick\"]],\n    template: function BaseMobileGroupedMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"ngb-accordion\", 1);\n        ɵngcc0.ɵɵtemplate(2, BaseMobileGroupedMenuComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"closeOthers\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: function () {\n      return [ɵngcc7.NgbAccordion, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc7.NgbPanel, ɵngcc7.NgbPanelHeader, MenuItemLinkComponent, ɵngcc7.NgbPanelContent, MenuRecentlyViewedComponent, MenuFavoritesComponent];\n    },\n    encapsulation: 2\n  });\n  return BaseMobileGroupedMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileGroupedMenuRegistry = /*#__PURE__*/(() => {\n  class MobileGroupedMenuRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMobileGroupedMenuComponent);\n    }\n\n  }\n\n  MobileGroupedMenuRegistry.ɵfac = function MobileGroupedMenuRegistry_Factory(t) {\n    return new (t || MobileGroupedMenuRegistry)();\n  };\n\n  MobileGroupedMenuRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MobileGroupedMenuRegistry_Factory() {\n      return new MobileGroupedMenuRegistry();\n    },\n    token: MobileGroupedMenuRegistry,\n    providedIn: \"root\"\n  });\n  return MobileGroupedMenuRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileGroupedMenuComponent = /*#__PURE__*/(() => {\n  class MobileGroupedMenuComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MobileGroupedMenuComponent.ɵfac = function MobileGroupedMenuComponent_Factory(t) {\n    return new (t || MobileGroupedMenuComponent)(ɵngcc0.ɵɵdirectiveInject(MobileGroupedMenuRegistry));\n  };\n\n  MobileGroupedMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MobileGroupedMenuComponent,\n    selectors: [[\"scrm-mobile-grouped-menu\"]],\n    inputs: {\n      items: \"items\",\n      onClose: \"onClose\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MobileGroupedMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MobileGroupedMenuComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MobileGroupedMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMobileModuleMenuComponent = /*#__PURE__*/(() => {\n  class BaseMobileModuleMenuComponent {\n    constructor() {}\n\n  }\n\n  BaseMobileModuleMenuComponent.ɵfac = function BaseMobileModuleMenuComponent_Factory(t) {\n    return new (t || BaseMobileModuleMenuComponent)();\n  };\n\n  BaseMobileModuleMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMobileModuleMenuComponent,\n    selectors: [[\"scrm-base-mobile-module-menu\"]],\n    inputs: {\n      items: \"items\",\n      onClose: \"onClose\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"mobile-menu-items\"], [1, \"\", 3, \"click\"], [3, \"icon\", \"link\"]],\n    template: function BaseMobileModuleMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMobileModuleMenuComponent_ng_container_0_Template, 4, 4, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [ɵngcc3.NgForOf, MenuItemLinkComponent],\n    encapsulation: 2\n  });\n  return BaseMobileModuleMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileModuleMenuRegistry = /*#__PURE__*/(() => {\n  class MobileModuleMenuRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMobileModuleMenuComponent);\n    }\n\n  }\n\n  MobileModuleMenuRegistry.ɵfac = function MobileModuleMenuRegistry_Factory(t) {\n    return new (t || MobileModuleMenuRegistry)();\n  };\n\n  MobileModuleMenuRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MobileModuleMenuRegistry_Factory() {\n      return new MobileModuleMenuRegistry();\n    },\n    token: MobileModuleMenuRegistry,\n    providedIn: \"root\"\n  });\n  return MobileModuleMenuRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MobileModuleMenuComponent = /*#__PURE__*/(() => {\n  class MobileModuleMenuComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MobileModuleMenuComponent.ɵfac = function MobileModuleMenuComponent_Factory(t) {\n    return new (t || MobileModuleMenuComponent)(ɵngcc0.ɵɵdirectiveInject(MobileModuleMenuRegistry));\n  };\n\n  MobileModuleMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MobileModuleMenuComponent,\n    selectors: [[\"scrm-mobile-module-menu\"]],\n    inputs: {\n      items: \"items\",\n      onClose: \"onClose\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MobileModuleMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MobileModuleMenuComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MobileModuleMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseSubMenuRecentlyViewedComponent = /*#__PURE__*/(() => {\n  class BaseSubMenuRecentlyViewedComponent {\n    constructor(navigation, nameMapper, configs, metadata) {\n      this.navigation = navigation;\n      this.nameMapper = nameMapper;\n      this.configs = configs;\n      this.metadata = metadata;\n      this.maxDisplayed = 5;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      const ui = (_a = this.configs.getConfigValue('ui')) !== null && _a !== void 0 ? _a : {};\n      this.maxDisplayed = (_b = parseInt(ui.navigation_max_module_recently_viewed)) !== null && _b !== void 0 ? _b : 5;\n      this.initMetadata$();\n    }\n\n    ngOnDestroy() {\n      this.clear();\n    }\n\n    ngOnChanges(changes) {\n      var _a, _b, _c, _d, _e;\n\n      const moduleChanges = (_a = changes === null || changes === void 0 ? void 0 : changes.module) !== null && _a !== void 0 ? _a : null;\n\n      if (moduleChanges === null) {\n        return;\n      }\n\n      const previousModule = (_c = (_b = changes === null || changes === void 0 ? void 0 : changes.module) === null || _b === void 0 ? void 0 : _b.previousValue) !== null && _c !== void 0 ? _c : '';\n      const currentModule = (_e = (_d = changes === null || changes === void 0 ? void 0 : changes.module) === null || _d === void 0 ? void 0 : _d.currentValue) !== null && _e !== void 0 ? _e : '';\n\n      if (previousModule !== currentModule) {\n        this.clear();\n        this.initMetadata$();\n      }\n    }\n    /**\n     * Build route from recently viewed item\n     * @param item\n     */\n\n\n    buildRoute(item) {\n      var _a, _b, _c;\n\n      const legacyName = (_a = item.attributes.module_name) !== null && _a !== void 0 ? _a : '';\n      const module = (_b = this.nameMapper.toFrontend(legacyName)) !== null && _b !== void 0 ? _b : '';\n      const id = (_c = item.attributes.item_id) !== null && _c !== void 0 ? _c : '';\n      return this.navigation.getRecordRouterLink(module, id);\n    }\n    /**\n     * Init metadata subscription\n     * @protected\n     */\n\n\n    initMetadata$() {\n      const moduleMeta$ = this.metadata.allModuleMetadata$.pipe(map(value => {\n        var _a;\n\n        return (_a = value[this.module]) !== null && _a !== void 0 ? _a : null;\n      }));\n      this.subs.push(moduleMeta$.subscribe(meta => {\n        var _a;\n\n        this.records = (_a = meta === null || meta === void 0 ? void 0 : meta.recentlyViewed) !== null && _a !== void 0 ? _a : null;\n      }));\n    }\n    /**\n     * Clear subscription and data\n     * @protected\n     */\n\n\n    clear() {\n      this.records = null;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  BaseSubMenuRecentlyViewedComponent.ɵfac = function BaseSubMenuRecentlyViewedComponent_Factory(t) {\n    return new (t || BaseSubMenuRecentlyViewedComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore));\n  };\n\n  BaseSubMenuRecentlyViewedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseSubMenuRecentlyViewedComponent,\n    selectors: [[\"scrm-base-sub-menu-recently-viewed\"]],\n    inputs: {\n      module: \"module\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"nav-item\", \"dropdown-submenu\", \"submenu\", \"submenu-extra\"], [1, \"sub-nav-link\", \"nav-link\", \"action-link\", \"dropdown-item\", \"dropdown-toggle\", \"pr-4\"], [\"image\", \"clock\"], [\"labelKey\", \"LBL_LAST_VIEWED\"], [1, \"dropdown-menu\", \"submenu\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [3, \"link\"]],\n    template: function BaseSubMenuRecentlyViewedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseSubMenuRecentlyViewedComponent_ng_container_0_Template, 8, 5, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.records && ctx.records.length);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent, LabelComponent, ɵngcc3.NgForOf, MenuItemLinkComponent],\n    pipes: [ɵngcc3.SlicePipe],\n    encapsulation: 2\n  });\n  return BaseSubMenuRecentlyViewedComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubMenuRecentlyViewedRegistry = /*#__PURE__*/(() => {\n  class SubMenuRecentlyViewedRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseSubMenuRecentlyViewedComponent);\n    }\n\n  }\n\n  SubMenuRecentlyViewedRegistry.ɵfac = function SubMenuRecentlyViewedRegistry_Factory(t) {\n    return new (t || SubMenuRecentlyViewedRegistry)();\n  };\n\n  SubMenuRecentlyViewedRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubMenuRecentlyViewedRegistry_Factory() {\n      return new SubMenuRecentlyViewedRegistry();\n    },\n    token: SubMenuRecentlyViewedRegistry,\n    providedIn: \"root\"\n  });\n  return SubMenuRecentlyViewedRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubMenuRecentlyViewedComponent = /*#__PURE__*/(() => {\n  class SubMenuRecentlyViewedComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  SubMenuRecentlyViewedComponent.ɵfac = function SubMenuRecentlyViewedComponent_Factory(t) {\n    return new (t || SubMenuRecentlyViewedComponent)(ɵngcc0.ɵɵdirectiveInject(SubMenuRecentlyViewedRegistry));\n  };\n\n  SubMenuRecentlyViewedComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SubMenuRecentlyViewedComponent,\n    selectors: [[\"scrm-sub-menu-recently-viewed\"]],\n    inputs: {\n      module: \"module\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function SubMenuRecentlyViewedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SubMenuRecentlyViewedComponent_ndc_dynamic_0_Template, 1, 4, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return SubMenuRecentlyViewedComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseFavoritesComponent = /*#__PURE__*/(() => {\n  class BaseFavoritesComponent {\n    constructor(navigation, nameMapper, configs, metadata) {\n      this.navigation = navigation;\n      this.nameMapper = nameMapper;\n      this.configs = configs;\n      this.metadata = metadata;\n      this.maxDisplayed = 5;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      const ui = (_a = this.configs.getConfigValue('ui')) !== null && _a !== void 0 ? _a : {};\n      this.maxDisplayed = (_b = parseInt(ui.navigation_max_module_favorites)) !== null && _b !== void 0 ? _b : 5;\n      this.initMetadata$();\n    }\n\n    ngOnDestroy() {\n      this.clear();\n    }\n\n    ngOnChanges(changes) {\n      var _a, _b, _c, _d, _e;\n\n      const moduleChanges = (_a = changes === null || changes === void 0 ? void 0 : changes.module) !== null && _a !== void 0 ? _a : null;\n\n      if (moduleChanges === null) {\n        return;\n      }\n\n      const previousModule = (_c = (_b = changes === null || changes === void 0 ? void 0 : changes.module) === null || _b === void 0 ? void 0 : _b.previousValue) !== null && _c !== void 0 ? _c : '';\n      const currentModule = (_e = (_d = changes === null || changes === void 0 ? void 0 : changes.module) === null || _d === void 0 ? void 0 : _d.currentValue) !== null && _e !== void 0 ? _e : '';\n\n      if (previousModule !== currentModule) {\n        this.clear();\n        this.initMetadata$();\n      }\n    }\n    /**\n     * Build route from recently viewed item\n     * @param item\n     */\n\n\n    buildRoute(item) {\n      var _a, _b, _c;\n\n      const legacyName = (_a = item.attributes.parent_type) !== null && _a !== void 0 ? _a : '';\n      const module = (_b = this.nameMapper.toFrontend(legacyName)) !== null && _b !== void 0 ? _b : '';\n      const id = (_c = item.attributes.parent_id) !== null && _c !== void 0 ? _c : '';\n      return this.navigation.getRecordRouterLink(module, id);\n    }\n    /**\n     * Init metadata subscription\n     * @protected\n     */\n\n\n    initMetadata$() {\n      const moduleMeta$ = this.metadata.allModuleMetadata$.pipe(map(value => {\n        var _a;\n\n        return (_a = value[this.module]) !== null && _a !== void 0 ? _a : null;\n      }));\n      this.subs.push(moduleMeta$.subscribe(meta => {\n        var _a;\n\n        this.records = (_a = meta === null || meta === void 0 ? void 0 : meta.favorites) !== null && _a !== void 0 ? _a : null;\n      }));\n    }\n    /**\n     * Clear subscription and data\n     * @protected\n     */\n\n\n    clear() {\n      this.records = null;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n  }\n\n  BaseFavoritesComponent.ɵfac = function BaseFavoritesComponent_Factory(t) {\n    return new (t || BaseFavoritesComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore));\n  };\n\n  BaseFavoritesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseFavoritesComponent,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      module: \"module\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function BaseFavoritesComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseFavoritesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseSubMenuFavoritesComponent = /*#__PURE__*/(() => {\n  class BaseSubMenuFavoritesComponent extends BaseFavoritesComponent {\n    constructor(navigation, nameMapper, configs, metadata) {\n      super(navigation, nameMapper, configs, metadata);\n      this.navigation = navigation;\n      this.nameMapper = nameMapper;\n      this.configs = configs;\n      this.metadata = metadata;\n    }\n\n  }\n\n  BaseSubMenuFavoritesComponent.ɵfac = function BaseSubMenuFavoritesComponent_Factory(t) {\n    return new (t || BaseSubMenuFavoritesComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore));\n  };\n\n  BaseSubMenuFavoritesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseSubMenuFavoritesComponent,\n    selectors: [[\"scrm-base-sub-menu-favorites\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"nav-item\", \"dropdown-submenu\", \"submenu\", \"submenu-extra\"], [1, \"sub-nav-link\", \"nav-link\", \"action-link\", \"dropdown-item\", \"dropdown-toggle\", \"pr-4\"], [\"image\", \"star\"], [\"labelKey\", \"LBL_FAVORITES\"], [1, \"dropdown-menu\", \"submenu\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [3, \"link\"]],\n    template: function BaseSubMenuFavoritesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseSubMenuFavoritesComponent_ng_container_0_Template, 8, 5, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.records && ctx.records.length);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent, LabelComponent, ɵngcc3.NgForOf, MenuItemLinkComponent],\n    pipes: [ɵngcc3.SlicePipe],\n    encapsulation: 2\n  });\n  return BaseSubMenuFavoritesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubMenuFavoritesRegistry = /*#__PURE__*/(() => {\n  class SubMenuFavoritesRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseSubMenuFavoritesComponent);\n    }\n\n  }\n\n  SubMenuFavoritesRegistry.ɵfac = function SubMenuFavoritesRegistry_Factory(t) {\n    return new (t || SubMenuFavoritesRegistry)();\n  };\n\n  SubMenuFavoritesRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubMenuFavoritesRegistry_Factory() {\n      return new SubMenuFavoritesRegistry();\n    },\n    token: SubMenuFavoritesRegistry,\n    providedIn: \"root\"\n  });\n  return SubMenuFavoritesRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubMenuFavoritesComponent = /*#__PURE__*/(() => {\n  class SubMenuFavoritesComponent {\n    constructor(registry) {\n      this.registry = registry;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  SubMenuFavoritesComponent.ɵfac = function SubMenuFavoritesComponent_Factory(t) {\n    return new (t || SubMenuFavoritesComponent)(ɵngcc0.ɵɵdirectiveInject(SubMenuFavoritesRegistry));\n  };\n\n  SubMenuFavoritesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SubMenuFavoritesComponent,\n    selectors: [[\"scrm-sub-menu-favorites\"]],\n    inputs: {\n      module: \"module\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function SubMenuFavoritesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SubMenuFavoritesComponent_ndc_dynamic_0_Template, 1, 4, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return SubMenuFavoritesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMenuFavoritesComponent = /*#__PURE__*/(() => {\n  class BaseMenuFavoritesComponent extends BaseFavoritesComponent {\n    constructor(navigation, nameMapper, configs, metadata) {\n      super(navigation, nameMapper, configs, metadata);\n      this.navigation = navigation;\n      this.nameMapper = nameMapper;\n      this.configs = configs;\n      this.metadata = metadata;\n      this.collapsible = false;\n      this.collapsed = false;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n      this.collapsed = !!this.collapsible;\n    }\n    /**\n     * toggle collapse\n     */\n\n\n    toggleCollapse() {\n      if (!this.collapsible) {\n        return;\n      }\n\n      this.collapsed = !this.collapsed;\n    }\n\n  }\n\n  BaseMenuFavoritesComponent.ɵfac = function BaseMenuFavoritesComponent_Factory(t) {\n    return new (t || BaseMenuFavoritesComponent)(ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ModuleNameMapper), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore));\n  };\n\n  BaseMenuFavoritesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseMenuFavoritesComponent,\n    selectors: [[\"scrm-base-menu-favorites\"]],\n    inputs: {\n      collapsible: \"collapsible\",\n      onClick: \"onClick\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"favorite-header\", \"mt-0\", \"pb-1\", \"pl-2\", \"pr-2\", 3, \"click\"], [\"labelKey\", \"LBL_FAVORITES\"], [\"class\", \"nav-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\", 3, \"click\"], [1, \"nav-link\", \"action-link\", \"pb-2\", \"pt-2\", 3, \"routerLink\"]],\n    template: function BaseMenuFavoritesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, BaseMenuFavoritesComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.records && ctx.records.length);\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc3.NgForOf, ɵngcc2.RouterLinkWithHref],\n    pipes: [ɵngcc3.SlicePipe],\n    encapsulation: 2\n  });\n  return BaseMenuFavoritesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuFavoritesRegistry = /*#__PURE__*/(() => {\n  class MenuFavoritesRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      this.register('default', 'default', BaseMenuFavoritesComponent);\n    }\n\n  }\n\n  MenuFavoritesRegistry.ɵfac = function MenuFavoritesRegistry_Factory(t) {\n    return new (t || MenuFavoritesRegistry)();\n  };\n\n  MenuFavoritesRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MenuFavoritesRegistry_Factory() {\n      return new MenuFavoritesRegistry();\n    },\n    token: MenuFavoritesRegistry,\n    providedIn: \"root\"\n  });\n  return MenuFavoritesRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MenuFavoritesComponent = /*#__PURE__*/(() => {\n  class MenuFavoritesComponent {\n    constructor(registry) {\n      this.registry = registry;\n      this.collapsible = false;\n    }\n\n    get getType() {\n      return this.registry.get('default', 'default');\n    }\n\n  }\n\n  MenuFavoritesComponent.ɵfac = function MenuFavoritesComponent_Factory(t) {\n    return new (t || MenuFavoritesComponent)(ɵngcc0.ɵɵdirectiveInject(MenuFavoritesRegistry));\n  };\n\n  MenuFavoritesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MenuFavoritesComponent,\n    selectors: [[\"scrm-menu-favorites\"]],\n    inputs: {\n      collapsible: \"collapsible\",\n      module: \"module\",\n      onClick: \"onClick\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function MenuFavoritesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MenuFavoritesComponent_ndc_dynamic_0_Template, 1, 6, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.getType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return MenuFavoritesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet NavbarUiModule = /*#__PURE__*/(() => {\n  class NavbarUiModule {}\n\n  NavbarUiModule.ɵfac = function NavbarUiModule_Factory(t) {\n    return new (t || NavbarUiModule)();\n  };\n\n  NavbarUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NavbarUiModule\n  });\n  NavbarUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, LogoUiModule, LogoutUiModule, ActionBarUiModule, NgbModule, RouterModule, ImageModule, DynamicModule, LabelModule]]\n  });\n  return NavbarUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavbarUiModule, {\n    declarations: function () {\n      return [NavbarUiComponent, MenuItemComponent, BaseMenuItemComponent, MenuRecentlyViewedComponent, BaseMenuRecentlyViewedComponent, SubMenuRecentlyViewedComponent, BaseSubMenuRecentlyViewedComponent, BaseFavoritesComponent, MenuFavoritesComponent, BaseMenuFavoritesComponent, SubMenuFavoritesComponent, BaseSubMenuFavoritesComponent, HomeMenuItemComponent, MenuItemLinkComponent, BaseHomeMenuItemComponent, BaseMenuItemLinkComponent, GroupedMenuItemComponent, BaseGroupedMenuItemComponent, MenuItemsListComponent, BaseMenuItemsListComponent, BaseNavbarComponent, MobileMenuComponent, BaseMobileMenuComponent, MobileGroupedMenuComponent, BaseMobileGroupedMenuComponent, MobileModuleMenuComponent, BaseMobileModuleMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, LogoUiModule, LogoutUiModule, ActionBarUiModule, NgbModule, RouterModule, ImageModule, DynamicModule, LabelModule];\n    },\n    exports: function () {\n      return [NavbarUiComponent, MenuItemComponent, BaseMenuItemComponent, MenuRecentlyViewedComponent, BaseMenuRecentlyViewedComponent, SubMenuRecentlyViewedComponent, BaseSubMenuRecentlyViewedComponent, BaseFavoritesComponent, MenuFavoritesComponent, BaseMenuFavoritesComponent, SubMenuFavoritesComponent, BaseSubMenuFavoritesComponent, HomeMenuItemComponent, MenuItemLinkComponent, BaseHomeMenuItemComponent, BaseMenuItemLinkComponent, GroupedMenuItemComponent, BaseGroupedMenuItemComponent, MenuItemsListComponent, BaseMenuItemsListComponent, BaseNavbarComponent, LogoutUiComponent, MobileMenuComponent, BaseMobileMenuComponent, MobileGroupedMenuComponent, BaseMobileGroupedMenuComponent, MobileModuleMenuComponent, BaseMobileModuleMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HomeUiModule = /*#__PURE__*/(() => {\n  class HomeUiModule {}\n\n  HomeUiModule.ɵfac = function HomeUiModule_Factory(t) {\n    return new (t || HomeUiModule)();\n  };\n\n  HomeUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HomeUiModule\n  });\n  HomeUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[RouterModule.forChild(HomeUiRoutes), NavbarUiModule, FooterUiModule, CommonModule]]\n  });\n  return HomeUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HomeUiModule, {\n    declarations: function () {\n      return [HomeUiComponent];\n    },\n    imports: function () {\n      return [ɵngcc2.RouterModule, NavbarUiModule, FooterUiModule, CommonModule];\n    },\n    exports: function () {\n      return [HomeUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst alertTypes = {\n  success: {\n    alertClass: 'alert-success',\n    alertIcon: 'info-circle'\n  },\n  error: {\n    alertClass: 'alert-danger',\n    alertIcon: 'exclamation-circle'\n  },\n  warning: {\n    alertClass: 'alert-warning',\n    alertIcon: 'exclamation-triangle'\n  },\n  info: {\n    alertClass: 'alert-info',\n    alertIcon: 'info-circle'\n  },\n  light: {\n    alertClass: 'alert-light',\n    alertIcon: 'exclamation-circle'\n  }\n};\nlet InstallErrorModalComponent = /*#__PURE__*/(() => {\n  class InstallErrorModalComponent {\n    constructor(appState, languageStore, modal) {\n      this.appState = appState;\n      this.languageStore = languageStore;\n      this.modal = modal;\n      this.titleKey = 'LBL_CHECKSYS_TITLE';\n    }\n\n    getHeaderLabel() {\n      return this.languageStore.getFieldLabel('LBL_CHECKSYS_TITLE');\n    }\n\n    getColumnLabel(label) {\n      const langLabel = this.languageStore.getFieldLabel(label, this.appState.getModule());\n      return !isEmptyString(langLabel) ? langLabel : label;\n    }\n\n    ngOnInit() {\n      console.log(this.errors);\n      this.closeButtonIcon = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.modal.close({\n            type: 'close-button'\n          });\n        }\n      };\n      this.closeButton = {\n        klass: ['btn', 'modal-button-cancel'],\n        labelKey: 'LBL_COLUMN_SELECTOR_CLOSE_BUTTON',\n        onClick: () => {\n          this.modal.close({\n            type: 'close-button'\n          });\n        }\n      };\n    }\n\n    getAlertType(alert) {\n      if (alert.status === 'error') {\n        return alertTypes[alert.type]['alertClass'];\n      }\n\n      return alertTypes[alert.status]['alertClass'];\n    }\n\n    getAlertIcon(alert) {\n      if (alert.status === 'error') {\n        return alertTypes[alert.type]['alertIcon'];\n      }\n\n      return alertTypes[alert.status]['alertIcon'];\n    }\n\n    returnZero() {\n      return 0;\n    }\n\n  }\n\n  InstallErrorModalComponent.ɵfac = function InstallErrorModalComponent_Factory(t) {\n    return new (t || InstallErrorModalComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbActiveModal));\n  };\n\n  InstallErrorModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: InstallErrorModalComponent,\n    selectors: [[\"scrm-install-error-modal\"]],\n    inputs: {\n      errors: \"errors\"\n    },\n    decls: 8,\n    vars: 11,\n    consts: [[3, \"closable\", \"close\", \"title\", \"titleKey\", \"headerKlass\", \"bodyKlass\"], [\"modal-body\", \"\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"list-style-none\"], [4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [1, \"alert-heading\"], [1, \"alert-desc\"], [\"role\", \"alert\"], [3, \"image\"], [2, \"margin-left\", \"2px\"], [\"style\", \"float:right\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"alert alert-light\", \"role\", \"alert\", 4, \"ngIf\"], [2, \"float\", \"right\"], [\"role\", \"alert\", 1, \"alert\", \"alert-light\"]],\n    template: function InstallErrorModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-modal\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementContainerStart(2);\n        ɵngcc0.ɵɵtemplate(3, InstallErrorModalComponent_div_3_Template, 6, 2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(4, \"div\");\n        ɵngcc0.ɵɵelementStart(5, \"ul\", 3);\n        ɵngcc0.ɵɵtemplate(6, InstallErrorModalComponent_li_6_Template, 10, 8, \"li\", 4);\n        ɵngcc0.ɵɵpipe(7, \"keyvalue\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"closable\", true)(\"close\", ctx.closeButtonIcon)(\"title\", ctx.getHeaderLabel())(\"titleKey\", ctx.titleKey)(\"headerKlass\", \"alert-header\")(\"bodyKlass\", \"alert-body\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.errors[\"hasValidationError\"] && ctx.errors[\"hasValidationError\"] === true);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind2(7, 8, ctx.errors[\"data\"], ctx.returnZero));\n      }\n    },\n    directives: [ModalComponent, ɵngcc3.NgIf, ɵngcc3.NgForOf, ImageComponent],\n    pipes: [ɵngcc3.KeyValuePipe],\n    encapsulation: 2\n  });\n  return InstallErrorModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallErrorModalModule = /*#__PURE__*/(() => {\n  class InstallErrorModalModule {}\n\n  InstallErrorModalModule.ɵfac = function InstallErrorModalModule_Factory(t) {\n    return new (t || InstallErrorModalModule)();\n  };\n\n  InstallErrorModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InstallErrorModalModule,\n    bootstrap: function () {\n      return [InstallErrorModalComponent];\n    }\n  });\n  InstallErrorModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, DragDropModule, CloseButtonModule, ModalModule, LabelModule, ButtonModule, NgbModule, NgbAlertModule, ImageModule]]\n  });\n  return InstallErrorModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InstallErrorModalModule, {\n    declarations: function () {\n      return [InstallErrorModalComponent];\n    },\n    imports: function () {\n      return [CommonModule, DragDropModule, CloseButtonModule, ModalModule, LabelModule, ButtonModule, NgbModule, NgbAlertModule, ImageModule];\n    },\n    exports: function () {\n      return [InstallErrorModalComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass SubpanelActionHandler extends ActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelCreateAction = /*#__PURE__*/(() => {\n  class SubpanelCreateAction extends SubpanelActionHandler {\n    constructor(moduleNameMapper, router) {\n      super();\n      this.moduleNameMapper = moduleNameMapper;\n      this.router = router;\n      this.key = 'create';\n      this.modes = ['list'];\n    }\n\n    run(data) {\n      var _a, _b;\n\n      const moduleName = data.module;\n      const moduleAction = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.moduleAction) !== null && _b !== void 0 ? _b : 'edit';\n      const route = `/${moduleName}/${moduleAction}`;\n      const queryParams = {\n        // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n        return_module: this.moduleNameMapper.toLegacy(data.parentModule),\n        // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n        return_action: 'DetailView',\n        // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n        return_id: data.parentId || ''\n      };\n      this.addAdditionalFields(data, queryParams);\n      this.addParams(data, queryParams);\n      this.router.navigate([route], {\n        queryParams\n      }).then();\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n    /**\n     * Add additional record fields\n     *\n     * @param {object} data SubpanelActionData\n     * @param {object} queryParams Params map\n     */\n\n\n    addAdditionalFields(data, queryParams) {\n      var _a;\n\n      const parentAttributes = data.store.parentRecord && data.store.parentRecord.attributes || {};\n\n      if (!parentAttributes && !Object.keys(parentAttributes).length) {\n        return;\n      }\n\n      const additionalFields = (_a = data.action.additionalFields) !== null && _a !== void 0 ? _a : {};\n      const additionalFieldKeys = Object.keys(additionalFields) || [];\n      additionalFieldKeys.forEach(additionalFieldKey => {\n        if (!additionalFieldKey || !additionalFields[additionalFieldKey]) {\n          return;\n        }\n\n        const parentAttribute = additionalFields[additionalFieldKey];\n        const attribute = get(parentAttributes, parentAttribute, null);\n\n        if (isVoid(attribute)) {\n          return;\n        }\n\n        queryParams[additionalFieldKey] = attribute;\n      });\n    }\n    /**\n     * Add configuration defined params\n     *\n     * @param {object} data SubpanelActionData\n     * @param {object} queryParams Params map\n     */\n\n\n    addParams(data, queryParams) {\n      var _a;\n\n      const params = (_a = data.action.extraParams) !== null && _a !== void 0 ? _a : {};\n      const paramKeys = Object.keys(params) || [];\n      paramKeys.forEach(paramKey => {\n        if (!paramKey || !params[paramKey]) {\n          return;\n        }\n\n        queryParams[paramKey] = params[paramKey];\n      });\n    }\n\n  }\n\n  SubpanelCreateAction.ɵfac = function SubpanelCreateAction_Factory(t) {\n    return new (t || SubpanelCreateAction)(ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ɵngcc2.Router));\n  };\n\n  SubpanelCreateAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelCreateAction_Factory() {\n      return new SubpanelCreateAction(i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(i2.Router));\n    },\n    token: SubpanelCreateAction,\n    providedIn: \"root\"\n  });\n  return SubpanelCreateAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass AsyncActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RedirectAsyncAction = /*#__PURE__*/(() => {\n  class RedirectAsyncAction extends AsyncActionHandler {\n    constructor(router, message) {\n      super();\n      this.router = router;\n      this.message = message;\n      this.key = 'redirect';\n    }\n\n    run(data) {\n      if (!data || !data.route) {\n        this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');\n        return;\n      }\n\n      const params = {\n        queryParams: {}\n      };\n\n      if (data.queryParams) {\n        params.queryParams = data.queryParams;\n      }\n\n      this.router.navigate([data.route], params).then();\n    }\n\n  }\n\n  RedirectAsyncAction.ɵfac = function RedirectAsyncAction_Factory(t) {\n    return new (t || RedirectAsyncAction)(ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  RedirectAsyncAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RedirectAsyncAction_Factory() {\n      return new RedirectAsyncAction(i0.ɵɵinject(i2.Router), i0.ɵɵinject(MessageService));\n    },\n    token: RedirectAsyncAction,\n    providedIn: \"root\"\n  });\n  return RedirectAsyncAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ExportAsyncAction = /*#__PURE__*/(() => {\n  class ExportAsyncAction extends AsyncActionHandler {\n    constructor(message) {\n      super();\n      this.message = message;\n      this.key = 'export';\n    }\n\n    run(data) {\n      if (!data || !data.url || !data.formData) {\n        this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');\n        return;\n      }\n\n      const options = {\n        responseType: 'blob',\n        observe: 'response'\n      };\n\n      if (data.queryParams) {\n        options.params = data.queryParams;\n      }\n\n      this.download(data.url, data.formData);\n    }\n    /**\n     * Download file\n     *\n     * NOTE: using a hidden form instead of js for better memory management see:\n     * https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-a-form-element-other-than-get-methods\n     *\n     * @param {string} url for download\n     * @param {object} formData to submit\n     */\n\n\n    download(url, formData) {\n      const form = document.createElement('form');\n      form.setAttribute('id', 'export-download');\n      form.setAttribute('method', 'post');\n      form.setAttribute('action', url);\n      form.setAttribute('target', '_self');\n      form.setAttribute('style', 'display: none;');\n      Object.keys(formData).forEach(key => {\n        const hiddenField = document.createElement('input');\n        hiddenField.setAttribute('name', key);\n        hiddenField.setAttribute('value', formData[key]);\n        form.appendChild(hiddenField);\n      });\n      document.body.appendChild(form);\n      form.submit();\n      document.body.removeChild(form);\n    }\n\n  }\n\n  ExportAsyncAction.ɵfac = function ExportAsyncAction_Factory(t) {\n    return new (t || ExportAsyncAction)(ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  ExportAsyncAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ExportAsyncAction_Factory() {\n      return new ExportAsyncAction(i0.ɵɵinject(MessageService));\n    },\n    token: ExportAsyncAction,\n    providedIn: \"root\"\n  });\n  return ExportAsyncAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet NoopAsyncAction = /*#__PURE__*/(() => {\n  class NoopAsyncAction extends AsyncActionHandler {\n    constructor() {\n      super();\n      this.key = 'noop';\n    }\n\n    run(data) {}\n\n  }\n\n  NoopAsyncAction.ɵfac = function NoopAsyncAction_Factory(t) {\n    return new (t || NoopAsyncAction)();\n  };\n\n  NoopAsyncAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function NoopAsyncAction_Factory() {\n      return new NoopAsyncAction();\n    },\n    token: NoopAsyncAction,\n    providedIn: \"root\"\n  });\n  return NoopAsyncAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass IframeResizeHandlerHandler {\n  constructor() {}\n  /**\n   * Public Api\n   */\n\n\n  init(iframe) {\n    this.iframe = iframe;\n    this.initialSizeAdjustment();\n    this.addBodyResizeListener();\n  }\n\n  destroy() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    this.iframe = null;\n    this.observer = null;\n  }\n  /**\n   * Protected Api\n   */\n\n\n  initialSizeAdjustment() {\n    setTimeout(this.onResize.bind(this), 200);\n  }\n\n  addBodyResizeListener() {\n    const watchedData = {\n      document: this.iframe.contentWindow.document,\n      element: this.iframe.contentWindow.document.body,\n      height: this.iframe.contentWindow.document.body.scrollHeight,\n      watched: [{\n        getHeight: () => {\n          const modals = watchedData.document.getElementsByClassName('modal in');\n          const modal = modals && modals[0];\n          const modalDialog = modal && modal.firstElementChild;\n          return modalDialog && modalDialog.scrollHeight + 200 || -1;\n        }\n      }, {\n        getHeight: () => {\n          const container = watchedData.document.getElementById('bootstrap-container');\n          const containerHeight = container && container.scrollHeight + 150 || -1;\n\n          if (containerHeight > 0) {\n            return containerHeight;\n          }\n\n          return watchedData.element.scrollHeight + 50;\n        }\n      }]\n    };\n    this.observer = new MutationObserverFactory().create(() => {\n      const heights = [];\n      watchedData.watched.forEach(watched => {\n        const elHeight = watched.getHeight();\n\n        if (elHeight > 0) {\n          heights.push(elHeight);\n        }\n      });\n      heights.sort((a, b) => a - b); // consider the Height of the biggest\n\n      const elementHeight = heights.pop();\n      const feedback = this.calculateResizing(watchedData.height, elementHeight);\n\n      if (feedback.resized) {\n        watchedData.height = feedback.height;\n      }\n    });\n    this.observer.observe(this.iframe.contentWindow.document.body, {\n      attributes: true,\n      childList: true,\n      characterData: true,\n      subtree: true\n    });\n  }\n\n  calculateResizing(currentHeight, elementHeight) {\n    const availableWindowHeight = window.innerHeight - 50; // if window size is bigger, take that size\n\n    if (elementHeight < availableWindowHeight) {\n      elementHeight = availableWindowHeight;\n    }\n\n    if (currentHeight === elementHeight) {\n      return {\n        resized: false\n      };\n    }\n\n    if (currentHeight < elementHeight - 20) {\n      this.resizeIFrame(elementHeight);\n      return {\n        resized: true,\n        height: elementHeight\n      };\n    }\n\n    if (this.iframe.scrollHeight > elementHeight) {\n      this.resizeIFrame(elementHeight);\n      return {\n        resized: true,\n        height: elementHeight\n      };\n    }\n\n    return {\n      resized: false\n    };\n  }\n\n  onResize() {\n    const elementHeight = this.iframe.contentWindow.document.body.scrollHeight + 120;\n    const currentHeight = this.iframe.offsetHeight;\n    this.calculateResizing(currentHeight, elementHeight);\n  }\n\n  resizeIFrame(size) {\n    const adjustedValue = size + 1;\n    this.iframe.style.height = adjustedValue + 'px';\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass IframePageChangeObserver {\n  constructor(iframe, changeCallback = null, loadCallback = null, unLoadCallback = null) {\n    this.changeCallback = null;\n    this.loadCallback = null;\n    this.unLoadCallback = null;\n    this.unloadListener = null;\n    this.loadListener = null;\n    this.iframe = iframe;\n    this.changeCallback = changeCallback;\n    this.loadCallback = loadCallback;\n    this.unLoadCallback = unLoadCallback;\n  }\n  /**\n   * Public Api\n   */\n\n\n  init() {\n    this.loadListener = this.loadHandler.bind(this);\n    this.unloadListener = this.unloadHandler.bind(this);\n    this.iframe.contentWindow.addEventListener('load', this.loadListener);\n    this.iframe.contentWindow.removeEventListener('unload', this.unloadListener);\n  }\n\n  destroy() {\n    const contentWindow = this.iframe && this.iframe.contentWindow;\n\n    if (contentWindow) {\n      contentWindow.removeEventListener('unload', this.unloadListener);\n      contentWindow.removeEventListener('load', this.loadListener);\n    }\n\n    this.iframe = null;\n    this.lastDispatched = null;\n    this.changeCallback = null;\n    this.loadCallback = null;\n    this.unLoadCallback = null;\n    this.loadListener = null;\n    this.unloadListener = null;\n  }\n  /**\n   * Internal API\n   */\n\n\n  loadHandler() {\n    this.loadCallback();\n    this.bindUnload();\n  }\n\n  bindUnload() {\n    this.iframe.contentWindow.removeEventListener('unload', this.unloadListener);\n    this.unloadListener = this.unloadHandler.bind(this);\n    this.iframe.contentWindow.addEventListener('unload', this.unloadListener);\n  }\n\n  unloadHandler() {\n    this.unLoadCallback(); // Timeout needed because the URL changes immediately after\n    // the `unload` event is dispatched.\n\n    setTimeout(this.triggerPageChange.bind(this), 0);\n  }\n\n  triggerPageChange() {\n    const newHref = this.iframe && this.iframe.contentWindow && this.iframe.contentWindow.location.href;\n\n    if (newHref && newHref !== this.lastDispatched) {\n      this.lastDispatched = newHref;\n      this.changeCallback(newHref);\n    }\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ClassicModalComponent = /*#__PURE__*/(() => {\n  class ClassicModalComponent {\n    constructor(languageStore, activeModal) {\n      this.languageStore = languageStore;\n      this.activeModal = activeModal;\n      this.url = '';\n      this.titleKey = '';\n      this.asyncActionCallback = null;\n      this.iframe = null;\n    }\n\n    ngOnInit() {\n      this.closeButton = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.activeModal.close({\n            type: 'close-button'\n          });\n        }\n      };\n    }\n\n    ngAfterViewInit() {\n      this.initIframe();\n    }\n\n    ngOnDestroy() {\n      this.cleanObservers();\n      this.iframe = null;\n      const placeholder = this.wrapper;\n\n      if (this.wrapper.firstChild) {\n        placeholder.removeChild(placeholder.firstChild);\n      }\n\n      placeholder.innerHTML = '<iframe></iframe>';\n      this.wrapper = null;\n    }\n\n    cleanObservers() {\n      if (this.iframeResizeHandler) {\n        this.iframeResizeHandler.destroy();\n        this.iframeResizeHandler = null;\n      }\n\n      if (this.iframePageChangeHandler) {\n        this.iframePageChangeHandler.destroy();\n        this.iframePageChangeHandler = null;\n      }\n    }\n\n    initIframe() {\n      this.wrapper = this.dataContainer.nativeElement;\n\n      if (this.wrapper.firstChild) {\n        this.wrapper.removeChild(this.wrapper.firstChild);\n      }\n\n      const iframe = document.createElement('iframe');\n      iframe.src = this.url;\n      this.wrapper.appendChild(iframe);\n      this.iframe = iframe;\n      this.iframe.style.display = 'block';\n      this.initObservers();\n    }\n\n    initObservers() {\n      this.iframePageChangeHandler = this.buildIframePageChangeObserver();\n      this.iframeResizeHandler = this.buildIframeResizeHandlerHandler();\n\n      if (this.iframePageChangeHandler) {\n        this.iframePageChangeHandler.init();\n      }\n    }\n\n    onIFrameLoad() {\n      // Do not show scroll at any time, to avoid flickering\n      this.iframe.contentWindow.document.body.style.overflow = 'hidden'; // callback function to execute custom task\n      // as required by the caller\n\n      if (this.asyncActionCallback !== null) {\n        this.asyncActionCallback(this.iframe);\n      } // Init resize handler\n\n\n      this.iframeResizeHandler.init(this.iframe);\n    }\n\n    onIFrameUnload() {\n      // hide iframe, while being re-directed\n      this.iframe.style.display = 'none';\n      this.iframeResizeHandler.destroy();\n    }\n\n    buildIframePageChangeObserver() {\n      return new IframePageChangeObserver(this.iframe, null, this.onIFrameLoad.bind(this), this.onIFrameUnload.bind(this));\n    }\n\n    buildIframeResizeHandlerHandler() {\n      return new IframeResizeHandlerHandler();\n    }\n\n  }\n\n  ClassicModalComponent.ɵfac = function ClassicModalComponent_Factory(t) {\n    return new (t || ClassicModalComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbActiveModal));\n  };\n\n  ClassicModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ClassicModalComponent,\n    selectors: [[\"scrm-classic-modal\"]],\n    viewQuery: function ClassicModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c29, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dataContainer = _t.first);\n      }\n    },\n    inputs: {\n      url: \"url\",\n      titleKey: \"titleKey\",\n      asyncActionCallback: \"asyncActionCallback\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[\"bodyKlass\", \"m-0 small-font\", \"footerKlass\", \"border-0\", \"klass\", \"classic-view-modal\", 3, \"closable\", \"close\", \"titleKey\"], [\"modal-body\", \"\"], [1, \"classic-view-container\"], [\"dataContainer\", \"\"]],\n    template: function ClassicModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-modal\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelement(4, \"iframe\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"closable\", true)(\"close\", ctx.closeButton)(\"titleKey\", ctx.titleKey);\n      }\n    },\n    directives: [ModalComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('modalFade', [transition('void <=> *', [animate('800ms')])])]\n    }\n  });\n  return ClassicModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChangelogAsyncAction = /*#__PURE__*/(() => {\n  class ChangelogAsyncAction extends AsyncActionHandler {\n    constructor(router, modalService, message) {\n      super();\n      this.router = router;\n      this.modalService = modalService;\n      this.message = message;\n      this.key = 'audit';\n    }\n\n    run(data) {\n      if (!data || !data.url) {\n        this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');\n        return;\n      }\n\n      this.showClassicViewModal(data.url);\n    }\n    /**\n     * Remove title text from iframe source document\n     */\n\n\n    changeLogLegacyContentFormatter(iframeElement) {\n      if (!iframeElement) {\n        return;\n      }\n\n      const node = iframeElement.contentDocument.getElementsByClassName('moduleTitle')[0];\n\n      if (!node) {\n        return;\n      }\n\n      node.innerText = '';\n    }\n    /**\n     * Show record selection modal\n     */\n\n\n    showClassicViewModal(url) {\n      const modal = this.modalService.open(ClassicModalComponent, {\n        size: 'xl',\n        centered: true,\n        scrollable: true\n      });\n      modal.componentInstance.titleKey = 'LBL_CHANGE_LOG';\n      modal.componentInstance.url = url;\n      modal.componentInstance.asyncActionCallback = this.changeLogLegacyContentFormatter.bind(this);\n    }\n\n  }\n\n  ChangelogAsyncAction.ɵfac = function ChangelogAsyncAction_Factory(t) {\n    return new (t || ChangelogAsyncAction)(ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  ChangelogAsyncAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ChangelogAsyncAction_Factory() {\n      return new ChangelogAsyncAction(i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(MessageService));\n    },\n    token: ChangelogAsyncAction,\n    providedIn: \"root\"\n  });\n  return ChangelogAsyncAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncActionService = /*#__PURE__*/(() => {\n  class AsyncActionService {\n    constructor(processService, appStateStore, message, redirectAction, exportAction, noopAction, changelogAction) {\n      this.processService = processService;\n      this.appStateStore = appStateStore;\n      this.message = message;\n      this.redirectAction = redirectAction;\n      this.exportAction = exportAction;\n      this.noopAction = noopAction;\n      this.changelogAction = changelogAction;\n      this.actions = {};\n      this.registerHandler(redirectAction);\n      this.registerHandler(exportAction);\n      this.registerHandler(noopAction);\n      this.registerHandler(changelogAction);\n    }\n\n    registerHandler(handler) {\n      this.actions[handler.key] = handler;\n    }\n    /**\n     * Send action request\n     *\n     * @param {string} actionName to submit\n     * @param {string} data to send\n     * @param {string} presetHandlerKey to use\n     * @returns {object} Observable<Process>\n     */\n\n\n    run(actionName, data, presetHandlerKey = null) {\n      const options = Object.assign({}, data);\n      this.appStateStore.updateLoading(actionName, true);\n      return this.processService.submit(actionName, options).pipe(take(1), tap(process => {\n        this.appStateStore.updateLoading(actionName, false);\n        let handler = 'addSuccessMessageByKey';\n\n        if (process.status === 'error') {\n          handler = 'addDangerMessageByKey';\n        }\n\n        if (process.messages) {\n          process.messages.forEach(message => {\n            if (!!message) {\n              this.message[handler](message);\n            }\n          });\n        }\n\n        if (process.status === 'error') {\n          return;\n        }\n\n        const actionHandlerKey = presetHandlerKey || process.data && process.data.handler || null;\n\n        if (!actionHandlerKey) {\n          return;\n        }\n\n        const actionHandler = this.actions[actionHandlerKey];\n\n        if (!actionHandler) {\n          this.message.addDangerMessageByKey('LBL_MISSING_HANDLER');\n          return;\n        }\n\n        actionHandler.run(process.data.params);\n      }), catchError(err => {\n        var _a;\n\n        const errorMessage = (_a = err === null || err === void 0 ? void 0 : err.message) !== null && _a !== void 0 ? _a : '';\n\n        if (errorMessage === 'Access Denied.') {\n          this.appStateStore.updateLoading(actionName, false);\n          throw err;\n        }\n\n        this.message.addDangerMessageByKey('LBL_ACTION_ERROR');\n        this.appStateStore.updateLoading(actionName, false);\n        throw err;\n      }));\n    }\n\n  }\n\n  AsyncActionService.ɵfac = function AsyncActionService_Factory(t) {\n    return new (t || AsyncActionService)(ɵngcc0.ɵɵinject(ProcessService), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RedirectAsyncAction), ɵngcc0.ɵɵinject(ExportAsyncAction), ɵngcc0.ɵɵinject(NoopAsyncAction), ɵngcc0.ɵɵinject(ChangelogAsyncAction));\n  };\n\n  AsyncActionService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncActionService_Factory() {\n      return new AsyncActionService(i0.ɵɵinject(ProcessService), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(RedirectAsyncAction), i0.ɵɵinject(ExportAsyncAction), i0.ɵɵinject(NoopAsyncAction), i0.ɵɵinject(ChangelogAsyncAction));\n    },\n    token: AsyncActionService,\n    providedIn: \"root\"\n  });\n  return AsyncActionService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelSelectAction = /*#__PURE__*/(() => {\n  class SubpanelSelectAction extends SubpanelActionHandler {\n    constructor(modalService, message, asyncActionService) {\n      super();\n      this.modalService = modalService;\n      this.message = message;\n      this.asyncActionService = asyncActionService;\n      this.key = 'select';\n      this.modes = ['list'];\n    }\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n    run(data) {\n      this.showSelectModal(data);\n    }\n    /**\n     * Show record selection modal\n     */\n\n\n    showSelectModal(data) {\n      var _a;\n\n      const modal = this.modalService.open(RecordListModalComponent, {\n        size: 'xl',\n        scrollable: true\n      });\n      modal.componentInstance.module = data.module;\n      modal.componentInstance.parentModule = (_a = data === null || data === void 0 ? void 0 : data.parentModule) !== null && _a !== void 0 ? _a : '';\n      modal.result.then(result => {\n        if (!result || !result.selection || !result.selection.selected) {\n          return;\n        }\n\n        const record = this.getSelectedRecord(result);\n        let linkField = data.subpanelMeta.get_subpanel_data;\n        const module = record.module || '';\n        const collectionList = data.subpanelMeta.collection_list || null;\n\n        if (collectionList && collectionList[module] && collectionList[module].get_subpanel_data) {\n          linkField = collectionList[module].get_subpanel_data;\n        }\n\n        const input = {\n          action: 'record-select',\n          module: data.store.parentModule,\n          id: data.store.parentId || '',\n          payload: {\n            baseModule: data.parentModule,\n            baseRecordId: data.parentId,\n            linkField,\n            relateModule: record.module,\n            relateRecordId: record.id\n          }\n        };\n        this.runAsyncAction(input, data);\n      });\n    }\n    /**\n     * Get Selected Record\n     *\n     * @param {object} data RecordListModalResult\n     * @returns {object} Record\n     */\n\n\n    getSelectedRecord(data) {\n      let id = '';\n      Object.keys(data.selection.selected).some(selected => {\n        id = selected;\n        return true;\n      });\n      let record = null;\n      data.records.some(rec => {\n        if (rec && rec.id === id) {\n          record = rec;\n          return true;\n        }\n      });\n      return record;\n    }\n\n    runAsyncAction(asyncData, data) {\n      const actionName = 'record-select';\n      this.message.removeMessages();\n      this.asyncActionService.run(actionName, asyncData).pipe(take(1)).subscribe(() => {\n        data.store.load(false).pipe(take(1)).subscribe();\n        data.store.loadAllStatistics(false).pipe(take(1)).subscribe();\n      });\n    }\n\n  }\n\n  SubpanelSelectAction.ɵfac = function SubpanelSelectAction_Factory(t) {\n    return new (t || SubpanelSelectAction)(ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AsyncActionService));\n  };\n\n  SubpanelSelectAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelSelectAction_Factory() {\n      return new SubpanelSelectAction(i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(MessageService), i0.ɵɵinject(AsyncActionService));\n    },\n    token: SubpanelSelectAction,\n    providedIn: \"root\"\n  });\n  return SubpanelSelectAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncProcessSubpanelAction = /*#__PURE__*/(() => {\n  class AsyncProcessSubpanelAction extends SubpanelActionHandler {\n    constructor() {\n      super();\n      this.key = 'async-process';\n      this.modes = ALL_VIEW_MODES;\n    }\n\n    run(data) {}\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n  }\n\n  AsyncProcessSubpanelAction.ɵfac = function AsyncProcessSubpanelAction_Factory(t) {\n    return new (t || AsyncProcessSubpanelAction)();\n  };\n\n  AsyncProcessSubpanelAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncProcessSubpanelAction_Factory() {\n      return new AsyncProcessSubpanelAction();\n    },\n    token: AsyncProcessSubpanelAction,\n    providedIn: \"root\"\n  });\n  return AsyncProcessSubpanelAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelActionManager = /*#__PURE__*/(() => {\n  class SubpanelActionManager {\n    constructor(create, select, async) {\n      this.create = create;\n      this.select = select;\n      this.async = async;\n      this.actions = {};\n      this.actions[create.key] = create;\n      this.actions[select.key] = select;\n      this.actions[async.key] = async;\n    }\n\n    run(action, data) {\n      this.actions[action].run(data);\n    }\n\n  }\n\n  SubpanelActionManager.ɵfac = function SubpanelActionManager_Factory(t) {\n    return new (t || SubpanelActionManager)(ɵngcc0.ɵɵinject(SubpanelCreateAction), ɵngcc0.ɵɵinject(SubpanelSelectAction), ɵngcc0.ɵɵinject(AsyncProcessSubpanelAction));\n  };\n\n  SubpanelActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelActionManager_Factory() {\n      return new SubpanelActionManager(i0.ɵɵinject(SubpanelCreateAction), i0.ɵɵinject(SubpanelSelectAction), i0.ɵɵinject(AsyncProcessSubpanelAction));\n    },\n    token: SubpanelActionManager,\n    providedIn: \"root\"\n  });\n  return SubpanelActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineActionMenuComponent = /*#__PURE__*/(() => {\n  class LineActionMenuComponent {\n    constructor(languageStore, actionManager, languages, screenSize, systemConfigStore) {\n      this.languageStore = languageStore;\n      this.actionManager = actionManager;\n      this.languages = languages;\n      this.screenSize = screenSize;\n      this.systemConfigStore = systemConfigStore;\n      this.klass = '';\n      this.limitConfigKey = 'listview_line_actions_limits';\n      this.configState = new BehaviorSubject({\n        buttons: []\n      });\n      this.config$ = this.configState.asObservable();\n      this.buttonClass = 'line-action-item line-action';\n      this.buttonGroupClass = 'float-right';\n      this.subs = [];\n      this.screen = ScreenSize.Medium;\n      this.defaultBreakpoint = 3;\n    }\n\n    ngOnInit() {\n      this.subs.push(combineLatest([this.config.getActions({\n        record: this.record\n      }), this.screenSize.screenSize$, this.languages.vm$]).pipe(map(([actions, screenSize, languages]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        this.configState.next(this.getButtonGroupConfig(actions));\n        this.actions = actions;\n      })).subscribe());\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getButtonGroupConfig(actions) {\n      const expanded = [];\n      const collapsed = [];\n      actions.forEach(action => {\n        const button = this.buildButton(action);\n\n        if (action.params && action.params.expanded) {\n          expanded.push(button);\n          return;\n        }\n\n        collapsed.push(button);\n      });\n      let breakpoint = this.getBreakpoint();\n\n      if (expanded.length < breakpoint) {\n        breakpoint = expanded.length;\n      }\n\n      const buttons = expanded.concat(collapsed);\n      return {\n        buttonKlass: [this.buttonClass],\n        dropdownLabel: this.languages.getAppString('LBL_ACTIONS') || '',\n        breakpoint,\n        dropdownOptions: {\n          placement: ['bottom-right'],\n          wrapperKlass: [this.buttonGroupClass]\n        },\n        buttons\n      };\n    }\n\n    getBreakpoint() {\n      const breakpointMap = this.systemConfigStore.getConfigValue(this.limitConfigKey);\n\n      if (this.screen && breakpointMap && breakpointMap[this.screen]) {\n        this.breakpoint = breakpointMap[this.screen];\n        return this.breakpoint;\n      }\n\n      if (this.breakpoint) {\n        return this.breakpoint;\n      }\n\n      return this.defaultBreakpoint;\n    }\n\n    buildButton(action) {\n      const button = {\n        titleKey: action.labelKey || '',\n        klass: this.buttonClass,\n        icon: action.icon || '',\n        onClick: () => {\n          this.config.runAction(action, {\n            module: this.record && this.record.module || '',\n            record: this.record\n          });\n        }\n      };\n\n      if (action.icon) {\n        button.icon = action.icon;\n      }\n\n      if (action.status) {\n        Button.appendClasses(button, [action.status]);\n      }\n\n      return button;\n    }\n\n  }\n\n  LineActionMenuComponent.ɵfac = function LineActionMenuComponent_Factory(t) {\n    return new (t || LineActionMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(SubpanelActionManager), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ScreenSizeObserverService), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  LineActionMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LineActionMenuComponent,\n    selectors: [[\"scrm-line-action-menu\"]],\n    inputs: {\n      klass: \"klass\",\n      limitConfigKey: \"limitConfigKey\",\n      record: \"record\",\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"id\", \"line-action-div\", 1, \"line-action\", \"float-right\"], [3, \"config$\", 4, \"ngIf\"], [3, \"config$\"]],\n    template: function LineActionMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LineActionMenuComponent_ng_container_0_Template, 4, 4, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.actions);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonGroupComponent],\n    encapsulation: 2\n  });\n  return LineActionMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineActionModule = /*#__PURE__*/(() => {\n  class LineActionModule {}\n\n  LineActionModule.ɵfac = function LineActionModule_Factory(t) {\n    return new (t || LineActionModule)();\n  };\n\n  LineActionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LineActionModule\n  });\n  LineActionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgbModule, ImageModule, RouterModule, ButtonGroupModule]]\n  });\n  return LineActionModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LineActionModule, {\n    declarations: function () {\n      return [LineActionMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgbModule, ImageModule, RouterModule, ButtonGroupModule];\n    },\n    exports: function () {\n      return [LineActionMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoadingSpinnerComponent = /*#__PURE__*/(() => {\n  class LoadingSpinnerComponent {\n    constructor() {\n      this.overlay = false;\n    }\n\n  }\n\n  LoadingSpinnerComponent.ɵfac = function LoadingSpinnerComponent_Factory(t) {\n    return new (t || LoadingSpinnerComponent)();\n  };\n\n  LoadingSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LoadingSpinnerComponent,\n    selectors: [[\"scrm-loading-spinner\"]],\n    inputs: {\n      overlay: \"overlay\"\n    },\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"loading-spinner\"], [1, \"sk-cube-grid\"], [1, \"sk-cube\", \"sk-cube1\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube2\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube3\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube4\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube5\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube6\", \"sk-cube-secondary\"], [1, \"sk-cube\", \"sk-cube7\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube8\", \"sk-cube-primary\"], [1, \"sk-cube\", \"sk-cube9\", \"sk-cube-primary\"]],\n    template: function LoadingSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n        ɵngcc0.ɵɵelement(4, \"div\", 2);\n        ɵngcc0.ɵɵelement(5, \"div\", 3);\n        ɵngcc0.ɵɵelement(6, \"div\", 4);\n        ɵngcc0.ɵɵelement(7, \"div\", 5);\n        ɵngcc0.ɵɵelement(8, \"div\", 5);\n        ɵngcc0.ɵɵelement(9, \"div\", 6);\n        ɵngcc0.ɵɵelement(10, \"div\", 7);\n        ɵngcc0.ɵɵelement(11, \"div\", 8);\n        ɵngcc0.ɵɵelement(12, \"div\", 8);\n        ɵngcc0.ɵɵelement(13, \"div\", 9);\n        ɵngcc0.ɵɵelement(14, \"div\", 10);\n        ɵngcc0.ɵɵelement(15, \"div\", 8);\n        ɵngcc0.ɵɵelement(16, \"div\", 8);\n        ɵngcc0.ɵɵelement(17, \"div\", 9);\n        ɵngcc0.ɵɵelement(18, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"overlay\", ctx.overlay);\n      }\n    },\n    styles: [\".sk-cube-grid[_ngcontent-%COMP%]{width:6.25em;height:6.25em}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube[_ngcontent-%COMP%]{width:25%;height:25%;float:left;-webkit-animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out;animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube1[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube2[_ngcontent-%COMP%]{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube3[_ngcontent-%COMP%]{-webkit-animation-delay:.4s;animation-delay:.4s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube4[_ngcontent-%COMP%]{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube5[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube6[_ngcontent-%COMP%]{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube7[_ngcontent-%COMP%]{-webkit-animation-delay:0s;animation-delay:0s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube8[_ngcontent-%COMP%]{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%]   .sk-cube9[_ngcontent-%COMP%]{-webkit-animation-delay:.2s;animation-delay:.2s}@-webkit-keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}@keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\"]\n  });\n  return LoadingSpinnerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoadingSpinnerModule = /*#__PURE__*/(() => {\n  class LoadingSpinnerModule {}\n\n  LoadingSpinnerModule.ɵfac = function LoadingSpinnerModule_Factory(t) {\n    return new (t || LoadingSpinnerModule)();\n  };\n\n  LoadingSpinnerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LoadingSpinnerModule\n  });\n  LoadingSpinnerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return LoadingSpinnerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingSpinnerModule, {\n    declarations: function () {\n      return [LoadingSpinnerComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [LoadingSpinnerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MessageUiComponent = /*#__PURE__*/(() => {\n  class MessageUiComponent {\n    constructor(messageService, languages) {\n      this.messageService = messageService;\n      this.languages = languages;\n      this.appStrings$ = languages.appStrings$;\n    }\n\n    ngOnInit() {\n      this.messages$ = this.messageService.messages$;\n    }\n\n    close(message) {\n      this.messageService.contains(message, true);\n    }\n\n  }\n\n  MessageUiComponent.ɵfac = function MessageUiComponent_Factory(t) {\n    return new (t || MessageUiComponent)(ɵngcc0.ɵɵdirectiveInject(MessageService), ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  MessageUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MessageUiComponent,\n    selectors: [[\"scrm-message-ui\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"container-fluid alert-fixed message-wrapper\", 4, \"ngIf\"], [1, \"container-fluid\", \"alert-fixed\", \"message-wrapper\"], [\"class\", \"d-flex justify-content-center flex-column align-items-center message-container\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"flex-column\", \"align-items-center\", \"message-container\"], [\"role\", \"alert\", 3, \"class\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 3, \"click\"], [4, \"ngIf\"], [\"type\", \"button\", \"data-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n    template: function MessageUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MessageUiComponent_div_0_Template, 3, 3, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.appStrings$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('fade', [transition(':enter', useAnimation(fadeIn, {\n        params: {\n          timing: 0.5,\n          delay: 0\n        }\n      })), transition(':leave', useAnimation(fadeOut, {\n        params: {\n          timing: 0.5,\n          delay: 0\n        }\n      }))])]\n    }\n  });\n  return MessageUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MessageUiModule = /*#__PURE__*/(() => {\n  class MessageUiModule {}\n\n  MessageUiModule.ɵfac = function MessageUiModule_Factory(t) {\n    return new (t || MessageUiModule)();\n  };\n\n  MessageUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MessageUiModule\n  });\n  MessageUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return MessageUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MessageUiModule, {\n    declarations: function () {\n      return [MessageUiComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MessageUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ClassicModalModule = /*#__PURE__*/(() => {\n  class ClassicModalModule {}\n\n  ClassicModalModule.ɵfac = function ClassicModalModule_Factory(t) {\n    return new (t || ClassicModalModule)();\n  };\n\n  ClassicModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ClassicModalModule\n  });\n  ClassicModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModalModule]]\n  });\n  return ClassicModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClassicModalModule, {\n    declarations: function () {\n      return [ClassicModalComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModalModule];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MessageModalComponent = /*#__PURE__*/(() => {\n  class MessageModalComponent {\n    constructor(activeModal) {\n      this.activeModal = activeModal;\n      this.buttons = [];\n    }\n\n    ngOnInit() {\n      this.buttonGroup$ = of({\n        buttons: this.buttons\n      });\n      this.closeButton = {\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        onClick: () => {\n          this.activeModal.close({\n            type: 'close-button'\n          });\n        }\n      };\n    }\n\n  }\n\n  MessageModalComponent.ɵfac = function MessageModalComponent_Factory(t) {\n    return new (t || MessageModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbActiveModal));\n  };\n\n  MessageModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MessageModalComponent,\n    selectors: [[\"scrm-message-modal\"]],\n    inputs: {\n      buttons: \"buttons\",\n      titleKey: \"titleKey\",\n      textKey: \"textKey\"\n    },\n    decls: 6,\n    vars: 6,\n    consts: [[\"klass\", \"message-modal\", 3, \"closable\", \"close\", \"title\"], [\"modal-body\", \"\", 1, \"p-3\"], [3, \"labelKey\"], [\"modal-footer\", \"\"], [3, \"activeModal\", \"config$\"]],\n    template: function MessageModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-modal\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\");\n        ɵngcc0.ɵɵelement(3, \"scrm-label\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵelement(5, \"scrm-modal-button-group\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"closable\", true)(\"close\", ctx.closeButton)(\"title\", ctx.titleKey || \"\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"labelKey\", ctx.textKey);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"activeModal\", ctx.activeModal)(\"config$\", ctx.buttonGroup$);\n      }\n    },\n    directives: function () {\n      return [ModalComponent, LabelComponent, ModalButtonGroupComponent];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('modalFade', [transition('void <=> *', [animate('800ms')])])]\n    }\n  });\n  return MessageModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModalButtonGroupComponent = /*#__PURE__*/(() => {\n  class ModalButtonGroupComponent {\n    constructor(buttonUtils, config) {\n      this.buttonUtils = buttonUtils;\n      this.config = config;\n      this.activeModal = null;\n      this.defaultButtonGroup = {\n        breakpoint: 4,\n        wrapperKlass: ['modal-buttons'],\n        buttonKlass: ['modal-button', 'btn', 'btn-sm'],\n        buttons: []\n      };\n      const ui = this.config.getConfigValue('ui');\n\n      if (ui && ui.modal_button_group_breakpoint) {\n        this.defaultButtonGroup.breakpoint = ui.modal_buttons_collapse_breakpoint;\n      }\n    }\n\n    ngOnInit() {\n      if (this.config$) {\n        this.buttonGroup$ = this.config$.pipe(map(config => this.mapButtonGroup(config)));\n      }\n    }\n\n    mapButtonGroup(config) {\n      const group = defaults(Object.assign({}, config), deepClone(this.defaultButtonGroup));\n      this.mapButtons(group);\n      return group;\n    }\n\n    mapButtons(group) {\n      const buttons = group.buttons || [];\n      group.buttons = [];\n\n      if (buttons.length > 0) {\n        buttons.forEach(modalButton => {\n          const button = this.buttonUtils.addOnClickPartial(modalButton, this.activeModal);\n          group.buttons.push(button);\n        });\n      }\n    }\n\n  }\n\n  ModalButtonGroupComponent.ɵfac = function ModalButtonGroupComponent_Factory(t) {\n    return new (t || ModalButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ButtonUtils), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  ModalButtonGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModalButtonGroupComponent,\n    selectors: [[\"scrm-modal-button-group\"]],\n    inputs: {\n      activeModal: \"activeModal\",\n      config$: \"config$\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"config$\"]],\n    template: function ModalButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"scrm-button-group\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"config$\", ctx.buttonGroup$);\n      }\n    },\n    directives: [ButtonGroupComponent],\n    encapsulation: 2\n  });\n  return ModalButtonGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModalButtonGroupModule = /*#__PURE__*/(() => {\n  class ModalButtonGroupModule {}\n\n  ModalButtonGroupModule.ɵfac = function ModalButtonGroupModule_Factory(t) {\n    return new (t || ModalButtonGroupModule)();\n  };\n\n  ModalButtonGroupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ModalButtonGroupModule\n  });\n  ModalButtonGroupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonGroupModule]]\n  });\n  return ModalButtonGroupModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalButtonGroupModule, {\n    declarations: function () {\n      return [ModalButtonGroupComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonGroupModule];\n    },\n    exports: function () {\n      return [ModalButtonGroupComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet MessageModalModule = /*#__PURE__*/(() => {\n  class MessageModalModule {}\n\n  MessageModalModule.ɵfac = function MessageModalModule_Factory(t) {\n    return new (t || MessageModalModule)();\n  };\n\n  MessageModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MessageModalModule\n  });\n  MessageModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModalModule, ButtonGroupModule, LabelModule, ModalButtonGroupModule, NgbModule]]\n  });\n  return MessageModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MessageModalModule, {\n    declarations: function () {\n      return [MessageModalComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModalModule, ButtonGroupModule, LabelModule, ModalButtonGroupModule, NgbModule];\n    },\n    exports: function () {\n      return [MessageModalComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModuleTitleComponent = /*#__PURE__*/(() => {\n  class ModuleTitleComponent {\n    constructor() {\n      this.title = '';\n    }\n\n  }\n\n  ModuleTitleComponent.ɵfac = function ModuleTitleComponent_Factory(t) {\n    return new (t || ModuleTitleComponent)();\n  };\n\n  ModuleTitleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModuleTitleComponent,\n    selectors: [[\"scrm-module-title\"]],\n    inputs: {\n      title: \"title\"\n    },\n    decls: 2,\n    vars: 3,\n    template: function ModuleTitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n        ɵngcc0.ɵɵpipe(1, \"uppercase\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.title), \"\\n\");\n      }\n    },\n    pipes: [ɵngcc3.UpperCasePipe],\n    encapsulation: 2\n  });\n  return ModuleTitleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ModuleTitleModule = /*#__PURE__*/(() => {\n  class ModuleTitleModule {}\n\n  ModuleTitleModule.ɵfac = function ModuleTitleModule_Factory(t) {\n    return new (t || ModuleTitleModule)();\n  };\n\n  ModuleTitleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ModuleTitleModule\n  });\n  ModuleTitleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ModuleTitleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModuleTitleModule, {\n    declarations: function () {\n      return [ModuleTitleComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ModuleTitleComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass LinkModel {\n  constructor() {\n    this.target = LinkTarget.none;\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PaginationComponent = /*#__PURE__*/(() => {\n  class PaginationComponent {\n    constructor(languageStore) {\n      this.languageStore = languageStore;\n      this.appStrings$ = this.languageStore.appStrings$;\n      this.vm$ = null;\n    }\n\n    ngOnInit() {\n      const pageCount$ = this.state.getPaginationCount();\n      this.vm$ = combineLatest([this.appStrings$, pageCount$]).pipe(map(([appStrings, pageCount]) => ({\n        appStrings,\n        pageCount\n      })));\n    }\n\n    first() {\n      this.state.changePage(PageSelection.FIRST);\n    }\n\n    previous() {\n      this.state.changePage(PageSelection.PREVIOUS);\n    }\n\n    next() {\n      this.state.changePage(PageSelection.NEXT);\n    }\n\n    last() {\n      this.state.changePage(PageSelection.LAST);\n    }\n\n  }\n\n  PaginationComponent.ɵfac = function PaginationComponent_Factory(t) {\n    return new (t || PaginationComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  PaginationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PaginationComponent,\n    selectors: [[\"scrm-pagination\"]],\n    inputs: {\n      state: \"state\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"bulk-action float-right\", 4, \"ngIf\"], [1, \"bulk-action\", \"float-right\"], [\"aria-label\", \"Navigate to first page\", 1, \"pagination-button\", \"pagination-first\", 3, \"click\"], [\"image\", \"paginate_first\", 1, \"sicon-2x\", \"pagination-icons\"], [\"aria-label\", \"Previous page\", 1, \"pagination-button\", \"pagination-previous\", 3, \"click\"], [\"image\", \"paginate_previous\", 1, \"sicon-2x\", \"pagination-icons\"], [1, \"pagination-count\", 3, \"ngClass\"], [\"aria-label\", \"Navigate to last page\", 1, \"pagination-button\", \"pagination-next\", 3, \"click\"], [\"image\", \"paginate_next\", 1, \"sicon-2x\", \"pagination-icons\"], [\"aria-label\", \"Next page\", 1, \"pagination-button\", \"pagination-last\", 3, \"click\"], [\"image\", \"paginate_last\", 1, \"sicon-2x\", \"pagination-icons\"]],\n    template: function PaginationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, PaginationComponent_div_0_Template, 11, 7, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent, ɵngcc3.NgClass],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return PaginationComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet PaginationModule = /*#__PURE__*/(() => {\n  class PaginationModule {}\n\n  PaginationModule.ɵfac = function PaginationModule_Factory(t) {\n    return new (t || PaginationModule)();\n  };\n\n  PaginationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PaginationModule\n  });\n  PaginationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return PaginationModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PaginationModule, {\n    declarations: function () {\n      return [PaginationComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [PaginationComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContentComponent = /*#__PURE__*/(() => {\n  class RecordContentComponent {\n    constructor(language) {\n      this.language = language;\n      this.config = {};\n      this.active = 1;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.subs.push(this.dataSource.getDisplayConfig().subscribe(config => {\n        this.config = Object.assign({}, config);\n      }));\n      this.subs.push(this.dataSource.getPanels().subscribe(panels => {\n        this.panels = [...panels];\n      }));\n      this.subs.push(this.dataSource.getRecord().subscribe(record => {\n        this.record = Object.assign({}, record);\n        this.fields = record.fields;\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getLayoutDataSource(panel) {\n      return {\n        inlineEdit: true,\n        getConfig: () => this.dataSource.getDisplayConfig().pipe(map(config => ({\n          mode: config.mode,\n          maxColumns: config.maxColumns\n        }))),\n        getLayout: () => of(panel).pipe(shareReplay(1)),\n        getFields: () => this.dataSource.getRecord().pipe(map(record => record.fields)),\n        getRecord: () => this.dataSource.getRecord(),\n        getEditAction: () => this.dataSource.getEditAction()\n      };\n    }\n\n  }\n\n  RecordContentComponent.ɵfac = function RecordContentComponent_Factory(t) {\n    return new (t || RecordContentComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  RecordContentComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordContentComponent,\n    selectors: [[\"scrm-record-content\"]],\n    inputs: {\n      dataSource: \"dataSource\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"class\", \"record-content panel-layout container-fluid pl-0 pr-0\", 4, \"ngIf\"], [\"class\", \"record-content tabs-layout container-fluid pl-0 pr-0\", 4, \"ngIf\"], [1, \"record-content\", \"panel-layout\", \"container-fluid\", \"pl-0\", \"pr-0\"], [\"class\", \"row no-gutters mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"no-gutters\", \"mb-3\"], [1, \"col\"], [\"mode\", \"collapsible\", 3, \"title\"], [\"panel-body\", \"\"], [3, \"dataSource\"], [1, \"record-content\", \"tabs-layout\", \"container-fluid\", \"pl-0\", \"pr-0\"], [\"ngbNav\", \"\", 1, \"nav-tabs\", 3, \"activeId\", \"activeIdChange\"], [\"nav\", \"ngbNav\"], [\"class\", \"tab\", 3, \"ngbNavItem\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-2\", \"pt-3\", \"rounded-right\", \"rounded-bottom\", 3, \"ngbNavOutlet\"], [1, \"tab\", 3, \"ngbNavItem\"], [\"ngbNavLink\", \"\", 1, \"tab-link\"], [\"ngbNavContent\", \"\"]],\n    template: function RecordContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordContentComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataSource);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, PanelComponent, FieldLayoutComponent, ɵngcc7.NgbNav, ɵngcc7.NgbNavOutlet, ɵngcc7.NgbNavItem, ɵngcc7.NgbNavLink, ɵngcc7.NgbNavContent],\n    encapsulation: 2\n  });\n  return RecordContentComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContentModule = /*#__PURE__*/(() => {\n  class RecordContentModule {}\n\n  RecordContentModule.ɵfac = function RecordContentModule_Factory(t) {\n    return new (t || RecordContentModule)();\n  };\n\n  RecordContentModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordContentModule\n  });\n  RecordContentModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PanelModule, NgbModule, FieldLayoutModule]]\n  });\n  return RecordContentModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordContentModule, {\n    declarations: function () {\n      return [RecordContentComponent];\n    },\n    imports: function () {\n      return [CommonModule, PanelModule, NgbModule, FieldLayoutModule];\n    },\n    exports: function () {\n      return [RecordContentComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContentSkeletonComponent = /*#__PURE__*/(() => {\n  class RecordContentSkeletonComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  RecordContentSkeletonComponent.ɵfac = function RecordContentSkeletonComponent_Factory(t) {\n    return new (t || RecordContentSkeletonComponent)();\n  };\n\n  RecordContentSkeletonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordContentSkeletonComponent,\n    selectors: [[\"scrm-record-content-skeleton\"]],\n    decls: 138,\n    vars: 0,\n    consts: [[1, \"record-content\", \"tabs-layout\", \"container-fluid\", \"pl-0\", \"pr-0\", \"record-content-skeleton\"], [1, \"nav-tabs\", \"nav\"], [1, \"tab\", \"nav-item\"], [\"href\", \"\", 1, \"tab-link\", \"nav-link\", \"active\", \"pl-5\", \"pr-5\", \"h-100\", \"box-loading\"], [\"href\", \"\", 1, \"tab-link\", \"nav-link\", \"pl-5\", \"pr-5\", \"h-100\", \"box-loading\"], [1, \"p-2\", \"pt-3\", \"rounded-right\", \"rounded-bottom\", \"tab-content\"], [1, \"tab-pane\", \"fade\", \"active\", \"show\"], [1, \"\"], [1, \"detail\", \"field-layout\"], [1, \"form-row\", \"align-items-center\", \"pt-1\", \"pb-1\"], [1, \"field-column-bordered\", \"col\", \"form-group\", \"m-0\", \"pl-3\", \"pb-2\", \"pr-3\"], [1, \"label-container\"], [1, \"col-form-label-sm\", \"mb-0\", \"pb-3\", \"pl-5\", \"pr-5\", \"h-100\", \"rounded\", \"box-loading\"], [1, \"d-flex\"], [1, \"flex-grow-1\", \"text-break\", \"rounded\", \"box-loading\", \"skeleton-field-content\"], [\"type\", \"button\", 1, \"record-action-button\"], [\"image\", \"pencil\"], [1, \"field-separation\", \"mt-2\"], [1, \"col\", \"form-group\", \"m-0\", \"pl-3\", \"pb-2\", \"pr-3\"]],\n    template: function RecordContentSkeletonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"ul\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"li\", 2);\n        ɵngcc0.ɵɵelement(3, \"a\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"li\", 2);\n        ɵngcc0.ɵɵelement(5, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"li\", 2);\n        ɵngcc0.ɵɵelement(7, \"a\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 6);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"form\", 8);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(13, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(14, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(15, \"strong\");\n        ɵngcc0.ɵɵelement(16, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(17, \"div\", 13);\n        ɵngcc0.ɵɵelement(18, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(19, \"div\");\n        ɵngcc0.ɵɵelementStart(20, \"button\", 15);\n        ɵngcc0.ɵɵelement(21, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(22, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(23, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(24, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(25, \"strong\");\n        ɵngcc0.ɵɵelement(26, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(27, \"div\", 13);\n        ɵngcc0.ɵɵelement(28, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(29, \"div\");\n        ɵngcc0.ɵɵelementStart(30, \"button\", 15);\n        ɵngcc0.ɵɵelement(31, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(32, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(33, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(34, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(35, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(36, \"strong\");\n        ɵngcc0.ɵɵelement(37, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(38, \"div\", 13);\n        ɵngcc0.ɵɵelement(39, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(40, \"div\");\n        ɵngcc0.ɵɵelementStart(41, \"button\", 15);\n        ɵngcc0.ɵɵelement(42, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(43, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(44, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(45, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(46, \"strong\");\n        ɵngcc0.ɵɵelement(47, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(48, \"div\", 13);\n        ɵngcc0.ɵɵelement(49, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(50, \"div\");\n        ɵngcc0.ɵɵelementStart(51, \"button\", 15);\n        ɵngcc0.ɵɵelement(52, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(53, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(54, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(55, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(56, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(57, \"strong\");\n        ɵngcc0.ɵɵelement(58, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(59, \"div\", 13);\n        ɵngcc0.ɵɵelement(60, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(61, \"div\");\n        ɵngcc0.ɵɵelementStart(62, \"button\", 15);\n        ɵngcc0.ɵɵelement(63, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(64, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(65, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(66, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(67, \"strong\");\n        ɵngcc0.ɵɵelement(68, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(69, \"div\", 13);\n        ɵngcc0.ɵɵelement(70, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(71, \"div\");\n        ɵngcc0.ɵɵelementStart(72, \"button\", 15);\n        ɵngcc0.ɵɵelement(73, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(74, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(75, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(76, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(77, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(78, \"strong\");\n        ɵngcc0.ɵɵelement(79, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(80, \"div\", 13);\n        ɵngcc0.ɵɵelement(81, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(82, \"div\");\n        ɵngcc0.ɵɵelementStart(83, \"button\", 15);\n        ɵngcc0.ɵɵelement(84, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(85, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(86, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(87, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(88, \"strong\");\n        ɵngcc0.ɵɵelement(89, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(90, \"div\", 13);\n        ɵngcc0.ɵɵelement(91, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(92, \"div\");\n        ɵngcc0.ɵɵelementStart(93, \"button\", 15);\n        ɵngcc0.ɵɵelement(94, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(95, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(96, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(97, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(98, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(99, \"strong\");\n        ɵngcc0.ɵɵelement(100, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(101, \"div\", 13);\n        ɵngcc0.ɵɵelement(102, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(103, \"div\");\n        ɵngcc0.ɵɵelementStart(104, \"button\", 15);\n        ɵngcc0.ɵɵelement(105, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(106, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(107, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(108, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(109, \"strong\");\n        ɵngcc0.ɵɵelement(110, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(111, \"div\", 13);\n        ɵngcc0.ɵɵelement(112, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(113, \"div\");\n        ɵngcc0.ɵɵelementStart(114, \"button\", 15);\n        ɵngcc0.ɵɵelement(115, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(116, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(117, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(118, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(119, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(120, \"strong\");\n        ɵngcc0.ɵɵelement(121, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(122, \"div\", 13);\n        ɵngcc0.ɵɵelement(123, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(124, \"div\");\n        ɵngcc0.ɵɵelementStart(125, \"button\", 15);\n        ɵngcc0.ɵɵelement(126, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(127, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(128, \"div\", 18);\n        ɵngcc0.ɵɵelementStart(129, \"div\", 11);\n        ɵngcc0.ɵɵelementStart(130, \"strong\");\n        ɵngcc0.ɵɵelement(131, \"label\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(132, \"div\", 13);\n        ɵngcc0.ɵɵelement(133, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(134, \"div\");\n        ɵngcc0.ɵɵelementStart(135, \"button\", 15);\n        ɵngcc0.ɵɵelement(136, \"scrm-image\", 16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(137, \"div\", 17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    directives: [ImageComponent],\n    encapsulation: 2\n  });\n  return RecordContentSkeletonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContentSkeletonModule = /*#__PURE__*/(() => {\n  class RecordContentSkeletonModule {}\n\n  RecordContentSkeletonModule.ɵfac = function RecordContentSkeletonModule_Factory(t) {\n    return new (t || RecordContentSkeletonModule)();\n  };\n\n  RecordContentSkeletonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordContentSkeletonModule\n  });\n  RecordContentSkeletonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return RecordContentSkeletonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordContentSkeletonModule, {\n    declarations: function () {\n      return [RecordContentSkeletonComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [RecordContentSkeletonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordFlexboxComponent = /*#__PURE__*/(() => {\n  class RecordFlexboxComponent {\n    constructor() {\n      this.mode = 'detail';\n      this.maxColumns = 4;\n      this.sizeMap = {\n        handset: 1,\n        tablet: 2,\n        web: 3,\n        wide: 4\n      };\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (!this.config) {\n        return;\n      }\n\n      const config = this.config;\n\n      if (config.record$) {\n        this.subs.push(config.record$.subscribe(record => {\n          this.record = record !== null && record !== void 0 ? record : null;\n        }));\n      }\n\n      if (config.mode$) {\n        this.subs.push(config.mode$.subscribe(mode => {\n          this.mode = mode !== null && mode !== void 0 ? mode : 'detail';\n        }));\n      }\n\n      if (config.layout$) {\n        this.subs.push(config.layout$.subscribe(layout => {\n          this.layout = layout !== null && layout !== void 0 ? layout : null;\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getRowClass() {\n      return this.config.rowClass;\n    }\n\n    getColClass() {\n      return this.config.colClass;\n    }\n\n    getSizeClass(size) {\n      const sizeMap = {\n        regular: 'text-regular',\n        medium: 'text-medium',\n        large: 'text-large',\n        'x-large': 'text-x-large',\n        'xx-large': 'text-xx-large',\n        huge: 'text-huge'\n      };\n      return sizeMap[size] || 'text-regular';\n    }\n\n    getFontWeight(bold) {\n      let fontWeight = 'font-weight-normal';\n\n      if (bold && isTrue(bold)) {\n        fontWeight = 'font-weight-bolder';\n      }\n\n      return fontWeight;\n    }\n\n    getColor(color) {\n      const sizeMap = {\n        yellow: 'text-yellow',\n        blue: 'text-blue',\n        green: 'text-green',\n        red: 'text-red',\n        purple: 'text-purple',\n        dark: 'text-dark',\n        grey: 'text-grey'\n      };\n      return sizeMap[color] || '';\n    }\n\n    getJustify(justify) {\n      const justifyMap = {\n        start: 'justify-content-start',\n        end: 'justify-content-end',\n        center: 'justify-content-center',\n        between: 'justify-content-between',\n        around: 'justify-content-around'\n      };\n      return justifyMap[justify] || '';\n    }\n\n    getAlign(align) {\n      const alignMap = {\n        start: 'align-items-start',\n        end: 'align-items-end',\n        center: 'align-items-center',\n        baseline: 'align-items-baseline',\n        stretch: 'align-items-stretch'\n      };\n      return alignMap[align] || '';\n    }\n\n    getLayoutRowClass(row) {\n      return row && row.class || '';\n    }\n\n    getClass(layoutCol) {\n      if (!layoutCol) {\n        return '';\n      }\n\n      const klasses = [];\n      klasses.push(layoutCol.class || '');\n      layoutCol.size && klasses.push(this.getSizeClass(layoutCol.size) || '');\n      layoutCol.bold && klasses.push(this.getFontWeight(layoutCol.bold) || '');\n      layoutCol.color && klasses.push(this.getColor(layoutCol.color) || '');\n      return klasses.join(' ');\n    }\n\n    getLabelDisplay(col, mode) {\n      const displayInMode = this.shouldLabelDisplayInMode(col, mode);\n\n      if (!displayInMode) {\n        return 'none';\n      }\n\n      return col.labelDisplay || this.config && this.config.labelDisplay || 'inline';\n    }\n\n    getField(record, field) {\n      if (!field || !field.name || !record || !record.fields) {\n        return null;\n      }\n\n      return record.fields[field.name] || null;\n    }\n\n    getFieldClass(col) {\n      let klasses = this.config.inputClass || {};\n\n      if (col.inputClass) {\n        klasses[col.inputClass] = true;\n      }\n\n      return klasses;\n    }\n\n    getLabelClass(col) {\n      let klasses = this.config.labelClass || {};\n\n      if (col.labelClass) {\n        klasses[col.labelClass] = true;\n      }\n\n      return klasses;\n    }\n\n    shouldDisplay(col, field, mode) {\n      const displayInMode = this.shouldFieldDisplayInMode(col, mode);\n\n      if (!displayInMode) {\n        return false;\n      }\n\n      if (!col.hideIfEmpty) {\n        return true;\n      }\n\n      let hasValue = false;\n      hasValue = hasValue || !!field.value;\n      hasValue = hasValue || !!(field.valueList && field.valueList.length);\n      hasValue = hasValue || !!(field.valueObject && Object.keys(field.valueObject).length);\n      return hasValue;\n    }\n\n    shouldColDisplayInMode(col, mode) {\n      return this.shouldFieldDisplayInMode(col, mode) || this.shouldLabelDisplayInMode(col, mode);\n    }\n\n    shouldFieldDisplayInMode(col, mode) {\n      var _a;\n\n      const modes = (_a = col === null || col === void 0 ? void 0 : col.modes) !== null && _a !== void 0 ? _a : null;\n      return !(modes && modes.length && !modes.includes(mode));\n    }\n\n    shouldLabelDisplayInMode(col, mode) {\n      var _a;\n\n      const modes = (_a = col === null || col === void 0 ? void 0 : col.labelModes) !== null && _a !== void 0 ? _a : null;\n      return !(modes && modes.length && !modes.includes(mode));\n    }\n\n    getDisplay(col) {\n      return col.display || '';\n    }\n\n  }\n\n  RecordFlexboxComponent.ɵfac = function RecordFlexboxComponent_Factory(t) {\n    return new (t || RecordFlexboxComponent)();\n  };\n\n  RecordFlexboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordFlexboxComponent,\n    selectors: [[\"scrm-record-flexbox\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"d-flex\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"labelKey\", \"ngClass\", 4, \"ngIf\"], [3, \"labelKey\", \"ngClass\"], [3, \"field\", \"klass\", \"mode\", \"type\"], [3, \"buttonClass\", \"config\"]],\n    template: function RecordFlexboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordFlexboxComponent_div_0_Template, 2, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc3.NgClass, LabelComponent, FieldComponent, ActionGroupMenuComponent],\n    encapsulation: 2\n  });\n  return RecordFlexboxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordFlexboxModule = /*#__PURE__*/(() => {\n  class RecordFlexboxModule {}\n\n  RecordFlexboxModule.ɵfac = function RecordFlexboxModule_Factory(t) {\n    return new (t || RecordFlexboxModule)();\n  };\n\n  RecordFlexboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordFlexboxModule\n  });\n  RecordFlexboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, FieldModule, LabelModule, ActionGroupMenuModule]]\n  });\n  return RecordFlexboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordFlexboxModule, {\n    declarations: function () {\n      return [RecordFlexboxComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, FieldModule, LabelModule, ActionGroupMenuModule];\n    },\n    exports: function () {\n      return [RecordFlexboxComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordGridComponent = /*#__PURE__*/(() => {\n  class RecordGridComponent {\n    constructor() {\n      this.gridButtons = [];\n      this.mode = 'detail';\n      this.maxColumns = 4;\n      this.sizeMap = {\n        handset: 1,\n        tablet: 2,\n        web: 3,\n        wide: 4\n      };\n      this.fields = [];\n      this.special = [];\n    }\n\n    ngOnInit() {\n      if (!this.config) {\n        return;\n      }\n\n      const config = this.config;\n      this.vm$ = combineLatest([config.record$, config.mode$, config.fields$, config.maxColumns$, config.sizeMap$]).pipe(map(([record, mode, fields, maxColumns, sizeMap]) => {\n        this.mode = mode;\n        this.maxColumns = maxColumns;\n        this.sizeMap = sizeMap;\n        this.fields = this.getFields(record, fields);\n        return {\n          record,\n          mode,\n          fields,\n          maxColumns\n        };\n      }));\n    }\n\n    getFields(record, fieldKeys) {\n      if (!record || !fieldKeys || !record.fields) {\n        return [];\n      }\n\n      const fields = [];\n      fieldKeys.forEach(fieldKey => {\n        if (!record.fields[fieldKey]) {\n          return;\n        }\n\n        fields.push(record.fields[fieldKey]);\n      });\n      return fields;\n    }\n\n  }\n\n  RecordGridComponent.ɵfac = function RecordGridComponent_Factory(t) {\n    return new (t || RecordGridComponent)();\n  };\n\n  RecordGridComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordGridComponent,\n    selectors: [[\"scrm-record-grid\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [3, \"actions\", \"appendActions\", \"colClass\", \"fieldMode\", \"fields\", \"inputClass\", \"labelClass\", \"labelDisplay\", \"maxColumns\", \"rowClass\", \"sizeMap\"], [\"class\", \"float-right\", \"field-grid-actions\", \"\", 4, \"ngIf\"], [\"field-grid-actions\", \"\", 1, \"float-right\"], [3, \"buttonClass\", \"config\"]],\n    template: function RecordGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordGridComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config);\n      }\n    },\n    directives: [ɵngcc3.NgIf, FieldGridComponent, ActionGroupMenuComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return RecordGridComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordGridModule = /*#__PURE__*/(() => {\n  class RecordGridModule {}\n\n  RecordGridModule.ɵfac = function RecordGridModule_Factory(t) {\n    return new (t || RecordGridModule)();\n  };\n\n  RecordGridModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordGridModule\n  });\n  RecordGridModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldGridModule, ActionGroupMenuModule]]\n  });\n  return RecordGridModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordGridModule, {\n    declarations: function () {\n      return [RecordGridComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldGridModule, ActionGroupMenuModule];\n    },\n    exports: function () {\n      return [RecordGridComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SortButtonComponent = /*#__PURE__*/(() => {\n  class SortButtonComponent {\n    constructor() {\n      this.statusIcons = {\n        NONE: 'sort',\n        ASC: 'sort_ascend',\n        DESC: 'sort_descend'\n      };\n      this.nextDirection = {\n        NONE: SortDirection.DESC,\n        ASC: SortDirection.NONE,\n        DESC: SortDirection.ASC\n      };\n    }\n\n    ngOnInit() {\n      this.direction$ = this.state.getSortDirection();\n    }\n\n    getStatusIcon(direction) {\n      return this.statusIcons[direction];\n    }\n\n    changeSorting(direction) {\n      const newDirection = this.nextDirection[direction];\n      this.state.changeSortDirection(newDirection);\n    }\n\n  }\n\n  SortButtonComponent.ɵfac = function SortButtonComponent_Factory(t) {\n    return new (t || SortButtonComponent)();\n  };\n\n  SortButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SortButtonComponent,\n    selectors: [[\"scrm-sort-button\"]],\n    inputs: {\n      state: \"state\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"p-0\", \"sort-button\", 3, \"click\"], [1, \"sort-icon\", \"sicon\", 3, \"image\"]],\n    template: function SortButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SortButtonComponent_ng_container_0_Template, 3, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.direction$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ImageComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return SortButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SortButtonModule = /*#__PURE__*/(() => {\n  class SortButtonModule {}\n\n  SortButtonModule.ɵfac = function SortButtonModule_Factory(t) {\n    return new (t || SortButtonModule)();\n  };\n\n  SortButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SortButtonModule\n  });\n  SortButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ImageModule]]\n  });\n  return SortButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SortButtonModule, {\n    declarations: function () {\n      return [SortButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, ImageModule];\n    },\n    exports: function () {\n      return [SortButtonComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordSaveGQL = /*#__PURE__*/(() => {\n  class RecordSaveGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Save record on the backend\n     *\n     * @param {object} record to save\n     *\n     * @returns {object} Observable<Record>\n     */\n\n\n    save(record) {\n      const input = {\n        module: record.module,\n        attributes: deepClone(record.attributes)\n      };\n\n      if (record.id) {\n        // eslint-disable-next-line no-underscore-dangle\n        input._id = record.id;\n      }\n\n      const mutationOptions = {\n        mutation: gql`\n                mutation saveRecord($input: saveRecordInput!) {\n                    saveRecord(input: $input) {\n                        record {\n                            attributes\n                            id\n                            _id\n                            module\n                            acls\n                        }\n                    }\n                }\n            `,\n        variables: {\n          input\n        }\n      };\n      return this.apollo.mutate(mutationOptions).pipe(map(result => this.mapToRecord(result)));\n    }\n\n    mapToRecord(response) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n\n      if (!response.data || !response.data.saveRecord || !response.data.saveRecord.record) {\n        return null;\n      }\n\n      return {\n        // eslint-disable-next-line no-underscore-dangle\n        id: response.data.saveRecord.record._id,\n        type: (_d = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.saveRecord) === null || _b === void 0 ? void 0 : _b.record) === null || _c === void 0 ? void 0 : _c.type) !== null && _d !== void 0 ? _d : '',\n        module: (_h = (_g = (_f = (_e = response === null || response === void 0 ? void 0 : response.data) === null || _e === void 0 ? void 0 : _e.saveRecord) === null || _f === void 0 ? void 0 : _f.record) === null || _g === void 0 ? void 0 : _g.module) !== null && _h !== void 0 ? _h : '',\n        attributes: (_m = (_l = (_k = (_j = response === null || response === void 0 ? void 0 : response.data) === null || _j === void 0 ? void 0 : _j.saveRecord) === null || _k === void 0 ? void 0 : _k.record) === null || _l === void 0 ? void 0 : _l.attributes) !== null && _m !== void 0 ? _m : [],\n        acls: (_r = (_q = (_p = (_o = response === null || response === void 0 ? void 0 : response.data) === null || _o === void 0 ? void 0 : _o.saveRecord) === null || _p === void 0 ? void 0 : _p.record) === null || _q === void 0 ? void 0 : _q.acls) !== null && _r !== void 0 ? _r : []\n      };\n    }\n\n  }\n\n  RecordSaveGQL.ɵfac = function RecordSaveGQL_Factory(t) {\n    return new (t || RecordSaveGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  RecordSaveGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordSaveGQL_Factory() {\n      return new RecordSaveGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: RecordSaveGQL,\n    providedIn: \"root\"\n  });\n  return RecordSaveGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelStore = /*#__PURE__*/(() => {\n  class SubpanelStore {\n    constructor(listStoreFactory, languageStore, statisticsStoreFactory) {\n      this.listStoreFactory = listStoreFactory;\n      this.languageStore = languageStore;\n      this.statisticsStoreFactory = statisticsStoreFactory;\n      this.show = false;\n      this.subs = [];\n      this.recordList = listStoreFactory.create();\n      this.statistics = {};\n      this.metadataState = new BehaviorSubject({});\n      this.metadata$ = this.metadataState.asObservable();\n      this.loading$ = this.recordList.loading$;\n    }\n\n    getTitle() {\n      let label = this.languageStore.getFieldLabel(this.metadata.title_key, this.parentModule);\n\n      if (!label) {\n        const moduleList = this.languageStore.getAppListString('moduleList');\n        label = moduleList && moduleList[this.metadata.title_key] || '';\n      }\n\n      return label;\n    }\n\n    getIcon() {\n      return this.metadata.icon;\n    }\n\n    clear() {\n      this.metadataState.unsubscribe();\n      this.metadataState = null;\n      this.recordList.clear();\n      this.recordList = null;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    clearAuthBased() {\n      this.recordList.clearAuthBased();\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} parentModule name\n     * @param {string} parentId id\n     * @param {object} meta to use\n     * @param {object} parentRecord$ to use\n     */\n\n\n    init(parentModule, parentId, meta, parentRecord$ = null) {\n      this.parentModule = parentModule;\n      this.parentId = parentId;\n      this.metadata = meta;\n      this.metadataState.next(this.metadata);\n      this.recordList.init(meta.module, false, 'list_max_entries_per_subpanel');\n      this.initStatistics(meta, parentModule, parentId);\n      this.initSearchCriteria(parentModule, parentId, meta.name);\n\n      if (parentRecord$) {\n        this.parentRecord$ = parentRecord$;\n        this.parentRecord$.subscribe(record => this.parentRecord = record);\n      }\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordList>\n     */\n\n\n    load(useCache = true) {\n      return this.recordList.load(useCache);\n    }\n    /**\n     * Get statistic store\n     *\n     * @param {string} key key of statistic\n     * @returns {object} SingleValueStatisticsStore\n     */\n\n\n    getStatistic(key) {\n      if (!this.statistics[key]) {\n        return null;\n      }\n\n      return this.statistics[key];\n    }\n    /**\n     * Load / reload statistics\n     *\n     * @param {string} key of statistic\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<Statistic>\n     */\n\n\n    loadStatistics(key, useCache = true) {\n      if (!this.statistics[key]) {\n        return null;\n      }\n\n      return this.statistics[key].load(useCache);\n    }\n    /**\n     * Load / reload all statistics\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<Statistic>\n     */\n\n\n    loadAllStatistics(useCache = true) {\n      if (!this.statistics || !Object.keys(this.statistics).length) {\n        return null;\n      }\n\n      const stats$ = {};\n      Object.keys(this.statistics).forEach(statisticKey => {\n        if (!this.statistics[statisticKey]) {\n          return;\n        }\n\n        stats$[statisticKey] = this.loadStatistics(statisticKey, useCache);\n      });\n      return forkJoin(stats$);\n    }\n    /**\n     * Should batch statistic\n     *\n     * @returns {boolean} shouldBatch\n     */\n\n\n    shouldBatchStatistic() {\n      const metadata = this.metadata || {};\n      return !(metadata.insightWidget && metadata.insightWidget.batch && metadata.insightWidget.batch === false);\n    }\n    /**\n     * Set loading\n     *\n     * @param {string} key of statistic\n     * @param {boolean} loading bool\n     */\n\n\n    setStatisticsLoading(key, loading) {\n      if (!this.statistics[key]) {\n        return;\n      }\n\n      this.statistics[key].setLoading(loading);\n    }\n    /**\n     * Set all statistics loading\n     *\n     * @param {boolean} loading bool\n     */\n\n\n    setAllStatisticsLoading(loading) {\n      if (!this.statistics || !Object.keys(this.statistics).length) {\n        return;\n      }\n\n      Object.keys(this.statistics).forEach(statisticKey => {\n        if (!this.statistics[statisticKey]) {\n          return;\n        }\n\n        this.setStatisticsLoading(statisticKey, loading);\n      });\n    }\n    /**\n     * Set Statistic value\n     *\n     * @param {string} key of statistic\n     * @param {object} statistic Statistic\n     * @param {boolean} cache bool\n     */\n\n\n    setStatistics(key, statistic, cache = false) {\n      if (!this.statistics[key]) {\n        return;\n      }\n\n      this.statistics[key].setStatistic(key, statistic, cache);\n    }\n    /**\n     * Get statistic query\n     *\n     * @param {string} key of statistic\n     * @returns {object} StatisticsQuery\n     */\n\n\n    getStatisticQuery(key) {\n      return this.statistics[key].getQuery();\n    }\n    /**\n     * Get all statistics queries\n     *\n     * @returns {object} StatisticsQuery\n     */\n\n\n    getAllStatisticQuery() {\n      if (!this.statistics || !Object.keys(this.statistics).length) {\n        return {};\n      }\n\n      const queriesMap = {};\n      Object.keys(this.statistics).forEach(statisticKey => {\n        if (!this.statistics[statisticKey]) {\n          return;\n        }\n\n        queriesMap[statisticKey] = this.getStatisticQuery(statisticKey);\n      });\n      return queriesMap;\n    }\n    /**\n     * Get widget layout\n     *\n     * @returns {any} any\n     */\n\n\n    getWidgetLayout() {\n      const meta = this.metadata;\n\n      if (!meta || !meta.insightWidget || !meta.insightWidget.options || !meta.insightWidget.options.insightWidget) {\n        return {\n          rows: []\n        };\n      }\n\n      const layout = deepClone(meta.insightWidget.options.insightWidget);\n\n      if (!layout.rows || !layout.rows.length) {\n        layout.rows = {};\n      }\n\n      return layout;\n    }\n    /**\n     * Init search criteria\n     *\n     * @param {string} parentModule name\n     * @param {string} parentId id\n     * @param {string} subpanel name\n     */\n\n\n    initSearchCriteria(parentModule, parentId, subpanel) {\n      this.recordList.criteria = {\n        preset: {\n          type: 'subpanel',\n          params: {\n            subpanel,\n            parentModule,\n            parentId\n          }\n        }\n      };\n    }\n    /**\n     * Init statistics store\n     *\n     * @param {object} meta for subpanel\n     * @param {string} parentModule name\n     * @param {string} parentId {id}\n     */\n\n\n    initStatistics(meta, parentModule, parentId) {\n      const layout = this.getWidgetLayout();\n      layout.rows.forEach(row => {\n        if (!row.cols || !row.cols.length) {\n          return;\n        }\n\n        row.cols.forEach(col => {\n          if (!col.statistic || typeof col.statistic !== 'string') {\n            return;\n          }\n\n          this.initStatistic(col.statistic, meta, parentModule, parentId);\n          col.store = this.statistics[col.statistic];\n        });\n      });\n    }\n    /**\n     * Init a single value statistic\n     *\n     * @param {string} statisticKey to use\n     * @param {object} meta SubPanelDefinition\n     * @param {string} parentModule to use\n     * @param {string} parentId to use\n     */\n\n\n    initStatistic(statisticKey, meta, parentModule, parentId) {\n      this.statistics[statisticKey] = this.statisticsStoreFactory.create();\n      this.statistics[statisticKey].init(meta.module, {\n        key: statisticKey,\n        context: {\n          module: parentModule,\n          id: parentId\n        },\n        params: {\n          subpanel: meta.name\n        }\n      }, false);\n    }\n\n  }\n\n  SubpanelStore.ɵfac = function SubpanelStore_Factory(t) {\n    return new (t || SubpanelStore)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SingleValueStatisticsStoreFactory));\n  };\n\n  SubpanelStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SubpanelStore,\n    factory: SubpanelStore.ɵfac\n  });\n  return SubpanelStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelStoreFactory = /*#__PURE__*/(() => {\n  class SubpanelStoreFactory {\n    constructor(listStoreFactory, languageStore, statisticsStoreFactory) {\n      this.listStoreFactory = listStoreFactory;\n      this.languageStore = languageStore;\n      this.statisticsStoreFactory = statisticsStoreFactory;\n    }\n\n    create() {\n      return new SubpanelStore(this.listStoreFactory, this.languageStore, this.statisticsStoreFactory);\n    }\n\n  }\n\n  SubpanelStoreFactory.ɵfac = function SubpanelStoreFactory_Factory(t) {\n    return new (t || SubpanelStoreFactory)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SingleValueStatisticsStoreFactory));\n  };\n\n  SubpanelStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelStoreFactory_Factory() {\n      return new SubpanelStoreFactory(i0.ɵɵinject(RecordListStoreFactory), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(SingleValueStatisticsStoreFactory));\n    },\n    token: SubpanelStoreFactory,\n    providedIn: \"root\"\n  });\n  return SubpanelStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ViewStore = /*#__PURE__*/(() => {\n  class ViewStore {\n    constructor(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore) {\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.moduleNavigation = moduleNavigation;\n      this.metadataStore = metadataStore;\n      this.appState$ = this.appStateStore.vm$;\n      this.language$ = this.languageStore.vm$;\n      this.navigation$ = this.navigationStore.vm$;\n      this.module$ = combineLatest([this.appState$, this.navigationStore.vm$]).pipe(map(([appStateInfo, navigationInfo]) => this.moduleNavigation.getModuleInfo(appStateInfo.module, navigationInfo)));\n      this.appData$ = combineLatest([this.appState$, this.module$, this.language$, this.navigation$]).pipe(map(([appState, module, language, navigation]) => {\n        this.appData = {\n          appState,\n          module,\n          language,\n          navigation\n        };\n        return this.appData;\n      }));\n      this.metadata$ = metadataStore.metadata$.pipe(tap(metadata => {\n        this.metadata = metadata;\n      }));\n    }\n\n    clear() {}\n\n    clearAuthBased() {\n      this.clear();\n    }\n\n    get appState() {\n      if (!this.appData.appState) {\n        return {};\n      }\n\n      return this.appData.appState;\n    }\n\n    get module() {\n      return this.appData.module;\n    }\n\n    get language() {\n      if (!this.appData.language) {\n        return {\n          appStrings: {},\n          appListStrings: {},\n          modStrings: {},\n          languageKey: ''\n        };\n      }\n\n      return this.appData.language;\n    }\n\n    get appStrings() {\n      return this.language.appStrings;\n    }\n\n    get appListStrings() {\n      return this.language.appListStrings;\n    }\n\n    get modStrings() {\n      return this.language.modStrings;\n    }\n\n    get navigation() {\n      return this.appData.navigation;\n    }\n\n    get searchMeta() {\n      if (!this.metadata.search) {\n        return {\n          layout: {\n            basic: {},\n            advanced: {}\n          }\n        };\n      }\n\n      return this.metadata.search;\n    }\n\n  }\n\n  ViewStore.ɵfac = function ViewStore_Factory(t) {\n    return new (t || ViewStore)(ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(ModuleNavigation), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  ViewStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ViewStore,\n    factory: ViewStore.ɵfac\n  });\n  return ViewStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordFetchGQL = /*#__PURE__*/(() => {\n  class RecordFetchGQL {\n    constructor(apollo) {\n      this.apollo = apollo;\n    }\n    /**\n     * Fetch data from backend\n     *\n     * @param {string} module name\n     * @param {string} record id\n     * @param {object} metadata with the fields to ask for\n     * @returns {object} Observable<ApolloQueryResult<any>>\n     */\n\n\n    fetch(module, record, metadata) {\n      const fields = metadata.fields;\n      const queryOptions = {\n        query: gql`\n            query getRecord($module: String!, $record: String!) {\n                getRecord(module: $module, record: $record) {\n                    ${fields.join('\\n')}\n                }\n            }\n        `,\n        variables: {\n          module,\n          record\n        }\n      };\n      return this.apollo.query(queryOptions);\n    }\n\n  }\n\n  RecordFetchGQL.ɵfac = function RecordFetchGQL_Factory(t) {\n    return new (t || RecordFetchGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  RecordFetchGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordFetchGQL_Factory() {\n      return new RecordFetchGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: RecordFetchGQL,\n    providedIn: \"root\"\n  });\n  return RecordFetchGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsBatch = /*#__PURE__*/(() => {\n  class StatisticsBatch {\n    constructor(fetchGQL) {\n      this.fetchGQL = fetchGQL;\n    }\n    /**\n     * Get statistics\n     *\n     * @param {string} module to use\n     * @param {object} queries StatisticsQueryMap\n     * @returns {object} Observable<any>\n     */\n\n\n    fetch(module, queries) {\n      return this.fetchGQL.fetch(module, queries);\n    }\n\n  }\n\n  StatisticsBatch.ɵfac = function StatisticsBatch_Factory(t) {\n    return new (t || StatisticsBatch)(ɵngcc0.ɵɵinject(StatisticsFetchGQL));\n  };\n\n  StatisticsBatch.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function StatisticsBatch_Factory() {\n      return new StatisticsBatch(i0.ɵɵinject(StatisticsFetchGQL));\n    },\n    token: StatisticsBatch,\n    providedIn: \"root\"\n  });\n  return StatisticsBatch;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$8 = {\n  id: '',\n  type: '',\n  module: '',\n  attributes: {},\n  acls: []\n};\n\nclass RecordStore {\n  constructor(definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers) {\n    this.definitions$ = definitions$;\n    this.recordSaveGQL = recordSaveGQL;\n    this.recordFetchGQL = recordFetchGQL;\n    this.message = message;\n    this.recordManager = recordManager;\n    this.recordMappers = recordMappers;\n    this.cache$ = null;\n    this.internalState = deepClone(initialState$8);\n    this.stagingState = deepClone(initialState$8);\n    this.store = new BehaviorSubject(this.internalState);\n    this.staging = new BehaviorSubject(this.stagingState);\n    this.definitions = [];\n    this.subs = [];\n    this.fieldsMetadata = {\n      fields: ['_id', 'id', 'attributes', 'module', 'type', 'acls', 'favorite']\n    };\n    this.state$ = this.store.asObservable().pipe(distinctUntilChanged());\n    this.staging$ = this.staging.asObservable();\n    this.subs.push(this.state$.subscribe(record => {\n      this.updateStaging(record);\n    }));\n    this.subs.push(definitions$.subscribe(definitions => {\n      this.definitions = definitions;\n      this.init(this.internalState);\n    }));\n  }\n\n  init(record) {\n    const newRecord = Object.assign({}, record);\n    this.initRecord(newRecord);\n    this.updateState(newRecord);\n  }\n\n  getStaging() {\n    if (!this.stagingState) {\n      return null;\n    }\n\n    return this.stagingState;\n  }\n\n  setStaging(record) {\n    this.initRecord(record);\n    this.staging.next(this.stagingState = record);\n  }\n\n  setRecord(record) {\n    this.initRecord(record);\n    this.updateState(record);\n  }\n\n  save() {\n    this.mapStagingFields();\n    return this.recordSaveGQL.save(this.stagingState).pipe(tap(record => {\n      this.initRecord(record);\n      this.updateState(record);\n    }));\n  }\n\n  validate() {\n    this.stagingState.formGroup.markAllAsTouched();\n    return this.stagingState.formGroup.statusChanges.pipe(startWith(this.stagingState.formGroup.status), filter(status => status !== 'PENDING'), take(1), map(status => status === 'VALID'));\n  }\n\n  resetStaging() {\n    this.updateStaging(this.internalState);\n  }\n\n  destroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n  /**\n   * Get record\n   *\n   * @returns {object} Record\n   */\n\n\n  getBaseRecord() {\n    if (!this.internalState) {\n      return null;\n    }\n\n    const baseRecord = {\n      id: this.internalState.id,\n      type: this.internalState.type,\n      module: this.internalState.module,\n      attributes: this.internalState.attributes,\n      acls: this.internalState.acls\n    };\n    return deepClone(baseRecord);\n  }\n  /**\n   * Get record\n   *\n   * @returns {object} Record\n   */\n\n\n  getBaseStaging() {\n    if (!this.stagingState) {\n      return null;\n    }\n\n    this.mapStagingFields();\n    const baseRecord = {\n      id: this.stagingState.id,\n      type: this.stagingState.type,\n      module: this.stagingState.module,\n      attributes: this.stagingState.attributes,\n      acls: this.stagingState.acls\n    };\n    return deepClone(baseRecord);\n  }\n  /**\n   * Extract base record\n   *\n   * @returns {object} Record\n   */\n\n\n  extractBaseRecord(record) {\n    const {\n      fields,\n      formGroup\n    } = record,\n          base = __rest(record, [\"fields\", \"formGroup\"]);\n\n    return Object.assign({}, base);\n  }\n  /**\n   * Is staging record dirty\n   *\n   * @returns {object} Record\n   */\n\n\n  isDirty() {\n    if (!this.stagingState || !this.stagingState.formGroup) {\n      return false;\n    }\n\n    return this.stagingState.formGroup.dirty;\n  }\n  /**\n   * Get record cached Observable or call the backend\n   *\n   * @param {string} module to use\n   * @param {string} recordId to use\n   * @param {boolean} useCache if to use cache\n   * @returns {object} Observable<any>\n   */\n\n\n  retrieveRecord(module, recordId, useCache = true) {\n    if (this.cache$ == null || useCache === false) {\n      this.cache$ = this.fetch(module, recordId).pipe(tap(record => this.init(record)), shareReplay(1));\n    }\n\n    return this.cache$;\n  }\n  /**\n   * Internal API\n   */\n\n  /**\n   * Update the state\n   *\n   * @param {object} state to set\n   */\n\n\n  updateState(state) {\n    this.store.next(this.internalState = state);\n  }\n  /**\n   * Update the staging\n   *\n   * @param {object} state to set\n   */\n\n\n  updateStaging(state) {\n    const newState = deepClone(this.extractBaseRecord(state));\n    this.initRecord(newState);\n    this.staging.next(this.stagingState = newState);\n  }\n  /**\n   * Map staging fields\n   */\n\n\n  mapStagingFields() {\n    const mappers = this.recordMappers.get(this.stagingState.module);\n    Object.keys(mappers).forEach(key => {\n      const mapper = mappers[key];\n      mapper.map(this.stagingState);\n    });\n  }\n  /**\n   * Init record fields\n   *\n   * @param {object} record Record\n   */\n\n\n  initRecord(record) {\n    if (record.module && this.definitions && this.definitions.length > 0) {\n      record.fields = this.recordManager.initFields(record, this.definitions);\n    }\n  }\n  /**\n   * Fetch the record from the backend\n   *\n   * @param {string} module to use\n   * @param {string} recordID to use\n   * @returns {object} Observable<any>\n   */\n\n\n  fetch(module, recordID) {\n    return this.recordFetchGQL.fetch(module, recordID, this.fieldsMetadata).pipe(map(({\n      data\n    }) => {\n      var _a, _b;\n\n      const record = {\n        type: '',\n        module: '',\n        attributes: {},\n        acls: []\n      };\n\n      if (!data) {\n        return record;\n      }\n\n      const id = data.getRecord.attributes.id;\n\n      if (!id) {\n        this.message.addDangerMessageByKey('LBL_RECORD_DOES_NOT_EXIST');\n        return record;\n      }\n\n      record.id = id;\n      record.module = module;\n      record.type = data.getRecord.attributes && data.getRecord.attributes.object_name;\n      record.attributes = data.getRecord.attributes;\n      record.acls = data.getRecord.acls;\n      record.favorite = (_b = (_a = data === null || data === void 0 ? void 0 : data.getRecord) === null || _a === void 0 ? void 0 : _a.favorite) !== null && _b !== void 0 ? _b : false;\n      return record;\n    }), catchError(err => throwError(err)));\n  }\n\n}\n\nlet BaseSaveRecordMapper = /*#__PURE__*/(() => {\n  class BaseSaveRecordMapper {\n    getKey() {\n      return 'base';\n    }\n\n    map(record) {\n      if (!record.fields || !Object.keys(record.fields).length) {\n        return;\n      }\n\n      Object.keys(record.fields).forEach(fieldName => {\n        const field = record.fields[fieldName];\n        const type = field.type || '';\n        const source = field.definition.source || '';\n        const rname = field.definition.rname || 'name';\n        const idName = field.definition.id_name || '';\n\n        if (type === 'relate' && source === 'non-db' && idName === fieldName) {\n          record.attributes[fieldName] = field.value;\n          return;\n        }\n\n        if (type === 'relate' && source === 'non-db' && rname !== '' && field.valueObject) {\n          const attribute = record.attributes[fieldName] || {};\n          attribute[rname] = field.valueObject[rname];\n          attribute.id = field.valueObject.id;\n          record.attributes[fieldName] = attribute;\n          record.attributes[idName] = field.valueObject.id;\n          return;\n        }\n\n        if (field.valueObject) {\n          record.attributes[fieldName] = field.valueObject;\n          return;\n        }\n\n        if (field.items) {\n          record.attributes[fieldName] = [];\n          field.items.forEach(item => {\n            record.attributes[fieldName].push({\n              id: item.id,\n              module: item.module,\n              attributes: deepClone(item.attributes)\n            });\n          });\n          return;\n        }\n\n        if (field.valueObjectArray) {\n          record.attributes[fieldName] = field.valueObjectArray;\n          return;\n        }\n\n        if (field.valueList) {\n          record.attributes[fieldName] = field.valueList;\n          return;\n        }\n\n        record.attributes[fieldName] = field.value;\n      });\n    }\n\n  }\n\n  BaseSaveRecordMapper.ɵfac = function BaseSaveRecordMapper_Factory(t) {\n    return new (t || BaseSaveRecordMapper)();\n  };\n\n  BaseSaveRecordMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BaseSaveRecordMapper_Factory() {\n      return new BaseSaveRecordMapper();\n    },\n    token: BaseSaveRecordMapper,\n    providedIn: \"root\"\n  });\n  return BaseSaveRecordMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordStoreFactory = /*#__PURE__*/(() => {\n  class RecordStoreFactory {\n    constructor(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper) {\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.message = message;\n      this.recordManager = recordManager;\n      this.recordMappers = recordMappers;\n      this.baseMapper = baseMapper;\n      recordMappers.register('default', baseMapper.getKey(), baseMapper);\n    }\n\n    create(definitions$) {\n      return new RecordStore(definitions$, this.recordSaveGQL, this.recordFetchGQL, this.message, this.recordManager, this.recordMappers);\n    }\n\n  }\n\n  RecordStoreFactory.ɵfac = function RecordStoreFactory_Factory(t) {\n    return new (t || RecordStoreFactory)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(ɵngcc15.RecordMapperRegistry), ɵngcc0.ɵɵinject(BaseSaveRecordMapper));\n  };\n\n  RecordStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordStoreFactory_Factory() {\n      return new RecordStoreFactory(i0.ɵɵinject(RecordFetchGQL), i0.ɵɵinject(RecordSaveGQL), i0.ɵɵinject(MessageService), i0.ɵɵinject(RecordManager), i0.ɵɵinject(i5.RecordMapperRegistry), i0.ɵɵinject(BaseSaveRecordMapper));\n    },\n    token: RecordStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$7 = {\n  module: '',\n  recordID: '',\n  loading: false,\n  widgets: false,\n  showSidebarWidgets: false,\n  showTopWidget: false,\n  showSubpanels: false,\n  mode: 'detail',\n  params: {\n    returnModule: '',\n    returnId: '',\n    returnAction: ''\n  }\n};\nlet RecordViewStore = /*#__PURE__*/(() => {\n  class RecordViewStore extends ViewStore {\n    constructor(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, recordStoreFactory, preferences) {\n      super(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore);\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.moduleNavigation = moduleNavigation;\n      this.metadataStore = metadataStore;\n      this.localStorage = localStorage;\n      this.message = message;\n      this.subpanelFactory = subpanelFactory;\n      this.recordManager = recordManager;\n      this.statisticsBatch = statisticsBatch;\n      this.recordStoreFactory = recordStoreFactory;\n      this.preferences = preferences;\n      /** Internal Properties */\n\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$7);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.subpanelReloadSubject = new BehaviorSubject({});\n      this.subpanelReloadSub = [];\n      this.subs = [];\n      this.recordStore = recordStoreFactory.create(this.getViewFieldsObservable());\n      this.record$ = this.recordStore.state$.pipe(distinctUntilChanged());\n      this.stagingRecord$ = this.recordStore.staging$.pipe(distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n      this.widgets$ = this.state$.pipe(map(state => state.widgets));\n      this.showSidebarWidgets$ = this.state$.pipe(map(state => state.showSidebarWidgets));\n      this.showTopWidget$ = this.state$.pipe(map(state => state.showTopWidget));\n      this.showSubpanels$ = this.state$.pipe(map(state => state.showSubpanels));\n      this.mode$ = this.state$.pipe(map(state => state.mode));\n      this.subpanelReload$ = this.subpanelReloadSubject.asObservable();\n      const data$ = combineLatest([this.record$, this.loading$]).pipe(map(([record, loading]) => {\n        this.data = {\n          record,\n          loading\n        };\n        return this.data;\n      }));\n      this.vm$ = combineLatest([data$, this.appData$, this.metadata$]).pipe(map(([data, appData, metadata]) => {\n        this.vm = {\n          data,\n          appData,\n          metadata\n        };\n        return this.vm;\n      }));\n      this.subpanelsState = new BehaviorSubject({});\n      this.subpanels$ = this.subpanelsState.asObservable();\n      this.viewContext$ = this.record$.pipe(map(() => {\n        return this.getViewContext();\n      }));\n    }\n\n    get widgets() {\n      return this.internalState.widgets;\n    }\n\n    set widgets(show) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        widgets: show\n      }));\n    }\n\n    get showSidebarWidgets() {\n      return this.internalState.showSidebarWidgets;\n    }\n\n    set showSidebarWidgets(show) {\n      this.savePreference(this.getModuleName(), 'show-sidebar-widgets', show);\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        showSidebarWidgets: show\n      }));\n    }\n\n    get showTopWidget() {\n      return this.internalState.showTopWidget;\n    }\n\n    set showTopWidget(show) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        showTopWidget: show\n      }));\n    }\n\n    get showSubpanels() {\n      return this.internalState.showTopWidget;\n    }\n\n    set showSubpanels(show) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        showSubpanels: show\n      }));\n    }\n\n    get params() {\n      return this.internalState.params || {};\n    }\n\n    set params(params) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        params\n      }));\n    }\n\n    getModuleName() {\n      return this.internalState.module;\n    }\n\n    getRecordId() {\n      return this.internalState.recordID;\n    }\n\n    getViewContext() {\n      return {\n        module: this.getModuleName(),\n        id: this.getRecordId(),\n        record: this.getBaseRecord()\n      };\n    }\n\n    getSubpanels() {\n      return this.subpanels;\n    }\n    /**\n     * Clean destroy\n     */\n\n\n    destroy() {\n      this.clear();\n    }\n    /**\n     * Initial record load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @param {string} recordID to use\n     * @param {string} mode to use\n     * @param {object} params to set\n     * @returns {object} Observable<any>\n     */\n\n\n    init(module, recordID, mode = 'detail', params = {}) {\n      this.internalState.module = module;\n      this.internalState.recordID = recordID;\n      this.setMode(mode);\n      this.initSubpanels(module, recordID);\n      this.calculateShowWidgets();\n      return this.load().pipe(tap(() => {\n        this.showTopWidget = true;\n        this.loadSubpanelStatistics(module);\n        this.parseParams(params);\n      }));\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clear() {\n      this.cache$ = null;\n      this.clearSubpanels();\n      this.subpanelsState.unsubscribe();\n      this.updateState(deepClone(initialState$7));\n    }\n    /**\n     * Get staging record\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getBaseRecord() {\n      if (!this.internalState) {\n        return null;\n      }\n\n      return this.recordStore.getBaseRecord();\n    }\n    /**\n     * Get current view mode\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getMode() {\n      if (!this.internalState) {\n        return null;\n      }\n\n      return this.internalState.mode;\n    }\n    /**\n     * Set new mode\n     *\n     * @param {string} mode ViewMode\n     */\n\n\n    setMode(mode) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        mode\n      }));\n    }\n\n    save() {\n      this.appStateStore.updateLoading(`${this.internalState.module}-record-save`, true);\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        loading: true\n      }));\n      return this.recordStore.save().pipe(catchError(() => {\n        this.message.addDangerMessageByKey('LBL_ERROR_SAVING');\n        return of({});\n      }), finalize(() => {\n        this.setMode('detail');\n        this.appStateStore.updateLoading(`${this.internalState.module}-record-save`, false);\n        this.updateState(Object.assign(Object.assign({}, this.internalState), {\n          loading: false\n        }));\n      }));\n    }\n    /**\n     * Load / reload record using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordViewState>\n     */\n\n\n    load(useCache = true) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        loading: true\n      }));\n      return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordID, useCache).pipe(tap(data => {\n        this.updateState(Object.assign(Object.assign({}, this.internalState), {\n          recordID: data.id,\n          module: data.module,\n          loading: false\n        }));\n      }));\n    }\n    /**\n     * Get summary template\n     *\n     * @returns {string} summary template label\n     */\n\n\n    getSummaryTemplate() {\n      const metadata = this.metadata || {};\n      const recordMeta = metadata.recordView || {};\n      const templates = recordMeta.summaryTemplates || {};\n      return templates[this.getMode()] || '';\n    }\n    /**\n     * Parse query params\n     *\n     * @param {object} params to set\n     */\n\n\n    parseParams(params = {}) {\n      if (!params) {\n        return;\n      }\n\n      const currentParams = Object.assign({}, this.internalState.params);\n      Object.keys(params).forEach(paramKey => {\n        if (!isVoid(currentParams[paramKey])) {\n          currentParams[paramKey] = params[paramKey];\n          return;\n        }\n      });\n      this.params = params;\n    }\n    /**\n     * Load all statistics\n     *\n     * @param {string} module if to use cache\n     */\n\n\n    loadSubpanelStatistics(module) {\n      const subpanels = this.subpanelsState.value;\n\n      if (!subpanels) {\n        return;\n      }\n\n      const queries = {};\n      Object.keys(subpanels).forEach(subpanelKey => {\n        const subpanel = subpanels[subpanelKey];\n        const statsMap = subpanel.statistics;\n\n        if (!statsMap || !Object.keys(statsMap).length) {\n          return;\n        }\n\n        if (subpanel.shouldBatchStatistic() === false) {\n          subpanel.loadAllStatistics().pipe(take(1)).subscribe();\n          return;\n        }\n\n        const subpanelQueries = subpanel.getAllStatisticQuery();\n        Object.keys(subpanelQueries).forEach(subpanelQueryKey => {\n          const queryKey = this.buildStatKey(subpanelKey, subpanelQueryKey);\n          queries[queryKey] = subpanelQueries[subpanelQueryKey];\n        });\n        subpanel.setAllStatisticsLoading(true);\n      });\n      this.statisticsBatch.fetch(module, queries).pipe(take(1)).subscribe(stats => {\n        Object.keys(subpanels).forEach(subpanelKey => {\n          const subpanel = subpanels[subpanelKey];\n          const subpanelQueries = subpanel.getAllStatisticQuery();\n          Object.keys(subpanelQueries).forEach(subpanelQueryKey => {\n            const queryKey = this.buildStatKey(subpanelKey, subpanelQueryKey);\n            const stat = stats[queryKey];\n\n            if (!stat) {\n              return;\n            }\n\n            subpanel.setStatistics(subpanelQueryKey, stat, true);\n          });\n          subpanel.setAllStatisticsLoading(false);\n        });\n      });\n    }\n\n    buildStatKey(subpanelKey, subpanelQueryKey) {\n      subpanelKey = subpanelKey.replace(/_/g, '-');\n      subpanelQueryKey = subpanelQueryKey.replace(/_/g, '-');\n      return subpanelKey + '-' + subpanelQueryKey;\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n    /**\n     * Init subpanels\n     *\n     * @param {string} module parent module\n     * @param {string} recordId id\n     */\n\n\n    initSubpanels(module, recordId) {\n      this.showSubpanels = true;\n      this.metadataStore.subPanelMetadata$.subscribe(meta => {\n        this.clearSubpanels();\n        Object.keys(meta).forEach(key => {\n          this.subpanels[key] = this.subpanelFactory.create();\n          this.subpanels[key].init(module, recordId, meta[key], this.record$);\n        });\n        this.subpanelsState.next(this.subpanels);\n        Object.keys(this.subpanels).forEach(subpanelKey => {\n          const subpanel = this.subpanels[subpanelKey];\n          this.subpanelReloadSub.push(subpanel.recordList.records$.pipe(tap(() => {\n            const update = {};\n            update[subpanelKey] = true;\n            this.subpanelReloadSubject.next(update);\n          })).subscribe());\n        });\n      });\n    }\n\n    clearSubpanels() {\n      if (this.subpanels) {\n        Object.keys(this.subpanels).forEach(key => {\n          this.subpanels[key].clear();\n        });\n      }\n\n      if (this.subpanelReloadSub.length) {\n        this.subpanelReloadSub.forEach(sub => sub.unsubscribe());\n        this.subpanelReloadSub = [];\n      }\n\n      this.subpanels = {};\n    }\n    /**\n     * Calculate if widgets are to display\n     */\n\n\n    calculateShowWidgets() {\n      var _a;\n\n      let show = false;\n      const recordViewMeta = this.getRecordViewMetadata();\n      const sidebarWidgetsConfig = recordViewMeta.sidebarWidgets || [];\n\n      if (sidebarWidgetsConfig && sidebarWidgetsConfig.length > 0) {\n        show = true;\n      }\n\n      const showSidebarWidgets = (_a = this.loadPreference(this.getModuleName(), 'show-sidebar-widgets')) !== null && _a !== void 0 ? _a : null;\n\n      if (showSidebarWidgets !== null) {\n        this.showSidebarWidgets = showSidebarWidgets;\n      } else {\n        this.showSidebarWidgets = show;\n      }\n\n      this.widgets = show;\n    }\n    /**\n     * Get record view metadata\n     *\n     * @returns {object} metadata RecordViewMetadata\n     */\n\n\n    getRecordViewMetadata() {\n      const meta = this.metadataStore.get() || {};\n      return meta.recordView || {};\n    }\n    /**\n     * Get vardefs\n     *\n     * @returns {object} vardefs FieldDefinitionMap\n     */\n\n\n    getVardefs() {\n      const meta = this.getRecordViewMetadata();\n      return meta.vardefs || {};\n    }\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<ViewFieldDefinition[]>\n     */\n\n\n    getViewFieldsObservable() {\n      return this.metadataStore.recordViewMetadata$.pipe(map(recordMetadata => {\n        const fields = [];\n        recordMetadata.panels.forEach(panel => {\n          panel.rows.forEach(row => {\n            row.cols.forEach(col => {\n              fields.push(col);\n            });\n          });\n        });\n        return fields;\n      }));\n    }\n    /**\n     * Build ui user preference key\n     * @param storageKey\n     * @protected\n     */\n\n\n    getPreferenceKey(storageKey) {\n      return 'recordview-' + storageKey;\n    }\n    /**\n     * Save ui user preference\n     * @param module\n     * @param storageKey\n     * @param value\n     * @protected\n     */\n\n\n    savePreference(module, storageKey, value) {\n      this.preferences.setUi(module, this.getPreferenceKey(storageKey), value);\n    }\n    /**\n     * Load ui user preference\n     * @param module\n     * @param storageKey\n     * @protected\n     */\n\n\n    loadPreference(module, storageKey) {\n      return this.preferences.getUi(module, this.getPreferenceKey(storageKey));\n    }\n\n  }\n\n  RecordViewStore.ɵfac = function RecordViewStore_Factory(t) {\n    return new (t || RecordViewStore)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(ModuleNavigation), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LocalStorageService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(SubpanelStoreFactory), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(StatisticsBatch), ɵngcc0.ɵɵinject(RecordStoreFactory), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  RecordViewStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordViewStore,\n    factory: RecordViewStore.ɵfac\n  });\n  return RecordViewStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatusBarComponent = /*#__PURE__*/(() => {\n  class StatusBarComponent {\n    constructor(recordViewStore, moduleNavigation) {\n      this.recordViewStore = recordViewStore;\n      this.moduleNavigation = moduleNavigation;\n      this.displayResponsiveTable = false;\n    }\n\n  }\n\n  StatusBarComponent.ɵfac = function StatusBarComponent_Factory(t) {\n    return new (t || StatusBarComponent)(ɵngcc0.ɵɵdirectiveInject(RecordViewStore), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation));\n  };\n\n  StatusBarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StatusBarComponent,\n    selectors: [[\"scrm-status-bar\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"record-view-header\"], [4, \"ngIf\"], [3, \"ngIf\"], [1, \"d-flex\", \"flex-nowrap\"], [1, \"row\"], [1, \"w-100\"], [1, \"col\"], [1, \"order-2\"], [1, \"row\", \"mr-0\"], [1, \"col-md-4\"]],\n    template: function StatusBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, StatusBarComponent_ng_container_2_Template, 8, 0, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, StatusBarComponent_ng_template_3_Template, 4, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayResponsiveTable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.displayResponsiveTable);\n      }\n    },\n    directives: [ɵngcc3.NgIf],\n    encapsulation: 2\n  });\n  return StatusBarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FiltersListGQL = /*#__PURE__*/(() => {\n  class FiltersListGQL extends ListGQL {\n    constructor(apollo) {\n      super(apollo);\n      this.apollo = apollo;\n    }\n    /**\n     * Fetch the list of filters from the backend\n     *\n     * @param {string} module to use\n     * @param {object} criteria to use\n     * @param {object} sort to use\n     * @param {object} pagination to use\n     * @returns {object} Observable<any>\n     */\n\n\n    get(module, criteria, sort, pagination) {\n      return super.get(module, criteria, sort, pagination);\n    }\n    /**\n     * Map record. Allow for extensions\n     * @param record\n     */\n\n\n    mapRecord(record) {\n      if (!record) {\n        return record;\n      }\n\n      record.key = record.id || record.attributes && record.attributes.id || '';\n      const contents = record.attributes && record.attributes && record.attributes.contents || null;\n\n      if (contents) {\n        const savedFilter = Object.assign({}, record);\n        savedFilter.criteria = contents;\n        return savedFilter;\n      }\n\n      return record;\n    }\n\n  }\n\n  FiltersListGQL.ɵfac = function FiltersListGQL_Factory(t) {\n    return new (t || FiltersListGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  FiltersListGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FiltersListGQL_Factory() {\n      return new FiltersListGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: FiltersListGQL,\n    providedIn: \"root\"\n  });\n  return FiltersListGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterListStore = /*#__PURE__*/(() => {\n  class FilterListStore extends RecordListStore {\n    /**\n     * Constructor\n     * @param listGQL\n     * @param configs\n     * @param preferences\n     * @param appState\n     * @param language\n     * @param message\n     * @param auth\n     * @param moduleNameMapper\n     */\n    constructor(listGQL, configs, preferences, appState, language, message, auth, moduleNameMapper) {\n      super(listGQL, configs, preferences, appState, language, message);\n      this.listGQL = listGQL;\n      this.configs = configs;\n      this.preferences = preferences;\n      this.appState = appState;\n      this.language = language;\n      this.message = message;\n      this.auth = auth;\n      this.moduleNameMapper = moduleNameMapper;\n      this.moduleName = 'saved-search';\n      this.filterFields = {\n        module: 'search_module',\n        user: 'assigned_user_id'\n      };\n    }\n    /**\n     * Initialize store\n     * @param module\n     */\n\n\n    init(module) {\n      const result$ = super.init(this.moduleName, false);\n      this.initCriteria(module);\n      return result$;\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordList>\n     */\n\n\n    load(useCache = true) {\n      return super.load(useCache);\n    }\n    /**\n     * Get current list of saved filters\n     */\n\n\n    getFilters() {\n      return this.records;\n    }\n    /**\n     * Add new filter to list\n     * @param filter\n     */\n\n\n    addFilter(filter) {\n      let isNew = true;\n      const filters = this.records;\n      const newList = [];\n      filters.forEach(record => {\n        if (record.id === filter.id) {\n          newList.push(filter);\n          isNew = false;\n          return;\n        }\n\n        newList.push(record);\n      });\n\n      if (isNew) {\n        newList.push(filter);\n      }\n\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        records: newList\n      }));\n    }\n    /**\n     * Remove existing filter\n     * @param filter\n     */\n\n\n    removeFilter(filter) {\n      if (!filter || !filter.id) {\n        return;\n      }\n\n      const filters = this.records;\n      const newList = [];\n      filters.forEach(record => {\n        if (record.id === filter.id) {\n          return;\n        }\n\n        newList.push(record);\n      });\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        records: newList\n      }));\n    }\n    /**\n     * Initialize criteria\n     * @param module\n     */\n\n\n    initCriteria(module) {\n      const criteria = this.criteria;\n      criteria.filters[this.filterFields.module] = {\n        field: this.filterFields.module,\n        operator: '=',\n        values: [this.moduleNameMapper.toLegacy(module)]\n      };\n      criteria.filters[this.filterFields.user] = {\n        field: this.filterFields.user,\n        operator: '=',\n        values: [this.auth.getCurrentUser().id]\n      };\n      this.updateSearchCriteria(criteria, false);\n    }\n\n  }\n\n  FilterListStore.ɵfac = function FilterListStore_Factory(t) {\n    return new (t || FilterListStore)(ɵngcc0.ɵɵinject(FiltersListGQL), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(ModuleNameMapper));\n  };\n\n  FilterListStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FilterListStore,\n    factory: FilterListStore.ɵfac\n  });\n  return FilterListStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterListStoreFactory = /*#__PURE__*/(() => {\n  class FilterListStoreFactory {\n    /**\n     * Constructor\n     * @param listGQL\n     * @param configs\n     * @param preferences\n     * @param appState\n     * @param language\n     * @param message\n     * @param auth\n     * @param moduleNameMapper\n     */\n    constructor(listGQL, configs, preferences, appState, language, message, auth, moduleNameMapper) {\n      this.listGQL = listGQL;\n      this.configs = configs;\n      this.preferences = preferences;\n      this.appState = appState;\n      this.language = language;\n      this.message = message;\n      this.auth = auth;\n      this.moduleNameMapper = moduleNameMapper;\n    }\n    /**\n     * Create a new FilterListStore instance\n     * @returns {object} FilterListStore\n     */\n\n\n    create() {\n      return new FilterListStore(this.listGQL, this.configs, this.preferences, this.appState, this.language, this.message, this.auth, this.moduleNameMapper);\n    }\n\n  }\n\n  FilterListStoreFactory.ɵfac = function FilterListStoreFactory_Factory(t) {\n    return new (t || FilterListStoreFactory)(ɵngcc0.ɵɵinject(FiltersListGQL), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(ModuleNameMapper));\n  };\n\n  FilterListStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FilterListStoreFactory_Factory() {\n      return new FilterListStoreFactory(i0.ɵɵinject(FiltersListGQL), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(AuthService), i0.ɵɵinject(ModuleNameMapper));\n    },\n    token: FilterListStoreFactory,\n    providedIn: \"root\"\n  });\n  return FilterListStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ConfirmationModalService = /*#__PURE__*/(() => {\n  class ConfirmationModalService {\n    constructor(modalService) {\n      this.modalService = modalService;\n    }\n\n    showModal(messageLabel, onProceed) {\n      const modal = this.modalService.open(MessageModalComponent);\n      modal.componentInstance.textKey = messageLabel !== null && messageLabel !== void 0 ? messageLabel : 'LBL_GENERIC_CONFIRMATION';\n      modal.componentInstance.buttons = [{\n        labelKey: 'LBL_CANCEL',\n        klass: ['btn-secondary'],\n        onClick: activeModal => activeModal.dismiss()\n      }, {\n        labelKey: 'LBL_PROCEED',\n        klass: ['btn-main'],\n        onClick: activeModal => {\n          onProceed();\n          activeModal.close();\n        }\n      }];\n    }\n\n  }\n\n  ConfirmationModalService.ɵfac = function ConfirmationModalService_Factory(t) {\n    return new (t || ConfirmationModalService)(ɵngcc0.ɵɵinject(ɵngcc7.NgbModal));\n  };\n\n  ConfirmationModalService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ConfirmationModalService_Factory() {\n      return new ConfirmationModalService(i0.ɵɵinject(i1$3.NgbModal));\n    },\n    token: ConfirmationModalService,\n    providedIn: \"root\"\n  });\n  return ConfirmationModalService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialFilter = {\n  key: 'default',\n  module: 'saved-search',\n  attributes: {\n    contents: ''\n  },\n  criteria: {\n    name: 'default',\n    filters: {}\n  }\n};\nconst initialFilters = {\n  'default': deepClone(initialFilter)\n};\nconst initialState$6 = {\n  module: '',\n  widgets: true,\n  actionPanel: '',\n  showSidebarWidgets: false,\n  recordPanelConfig: {},\n  activeFilters: deepClone(initialFilters),\n  openFilter: deepClone(initialFilter)\n};\nlet ListViewStore = /*#__PURE__*/(() => {\n  class ListViewStore extends ViewStore {\n    constructor(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, listStoreFactory, modalService, filterListStoreFactory, confirmation, preferences) {\n      super(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore);\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.moduleNavigation = moduleNavigation;\n      this.metadataStore = metadataStore;\n      this.localStorage = localStorage;\n      this.message = message;\n      this.listStoreFactory = listStoreFactory;\n      this.modalService = modalService;\n      this.filterListStoreFactory = filterListStoreFactory;\n      this.confirmation = confirmation;\n      this.preferences = preferences;\n      /** Internal Properties */\n\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$6);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.subs = [];\n      this.recordList = this.listStoreFactory.create();\n      this.columns$ = metadataStore.listViewColumns$;\n      this.lineActions$ = metadataStore.listViewLineActions$;\n      this.records$ = this.recordList.records$;\n      this.criteria$ = this.recordList.criteria$;\n      this.context$ = this.recordList.criteria$.pipe(map(() => this.getViewContext()));\n      this.sort$ = this.recordList.sort$;\n      this.pagination$ = this.recordList.pagination$;\n      this.selection$ = this.recordList.selection$;\n      this.selectedCount$ = this.recordList.selectedCount$;\n      this.selectedStatus$ = this.recordList.selectedStatus$;\n      this.loading$ = this.recordList.loading$;\n      this.moduleName$ = this.state$.pipe(map(state => state.module), distinctUntilChanged());\n      this.widgets$ = this.state$.pipe(map(state => state.widgets), distinctUntilChanged());\n      this.showSidebarWidgets$ = this.state$.pipe(map(state => state.showSidebarWidgets));\n      this.displayFilters$ = this.state$.pipe(map(state => state.actionPanel === 'filters'), distinctUntilChanged());\n      this.actionPanel$ = this.state$.pipe(map(state => state.actionPanel), distinctUntilChanged());\n      this.activeFilters$ = this.state$.pipe(map(state => state.activeFilters), distinctUntilChanged());\n      this.openFilter$ = this.state$.pipe(map(state => state.openFilter), distinctUntilChanged());\n      const data$ = combineLatest([this.records$, this.criteria$, this.pagination$, this.selection$, this.loading$]).pipe(map(([records, criteria, pagination, selection, loading]) => {\n        this.data = {\n          records,\n          criteria,\n          pagination,\n          selection,\n          loading\n        };\n        return this.data;\n      }));\n      this.vm$ = combineLatest([data$, this.appData$, this.metadata$]).pipe(map(([data, appData, metadata]) => {\n        this.vm = {\n          data,\n          appData,\n          metadata\n        };\n        return this.vm;\n      }));\n      this.columns = new BehaviorSubject([]);\n      this.columns$ = this.columns.asObservable();\n      this.initDataUpdateState();\n      this.initDataSetUpdatedState();\n      this.filterList = this.filterListStoreFactory.create();\n    }\n\n    get actionPanel() {\n      return this.internalState.actionPanel;\n    }\n\n    get showFilters() {\n      return this.internalState.actionPanel === 'filters';\n    }\n\n    set showFilters(show) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        actionPanel: show ? 'filters' : ''\n      }));\n    }\n\n    get widgets() {\n      return this.internalState.widgets;\n    }\n\n    set widgets(show) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        widgets: show\n      }));\n    }\n\n    get showSidebarWidgets() {\n      return this.internalState.showSidebarWidgets;\n    }\n\n    set showSidebarWidgets(show) {\n      this.savePreference(this.getModuleName(), 'show-sidebar-widgets', show);\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        showSidebarWidgets: show\n      }));\n    }\n\n    get recordPanelConfig() {\n      return this.internalState.recordPanelConfig;\n    }\n\n    isRecordPanelOpen() {\n      return this.internalState.actionPanel === 'recordPanel';\n    }\n\n    openRecordPanel(config) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        actionPanel: 'recordPanel',\n        recordPanelConfig: config\n      }));\n    }\n\n    closeRecordPanel() {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        actionPanel: '',\n        recordPanelConfig: {}\n      }));\n    }\n\n    getModuleName() {\n      return this.internalState.module;\n    }\n\n    getViewContext() {\n      const context = {\n        module: this.getModuleName()\n      };\n      context.criteria = this.recordList.criteria;\n      context.sort = this.recordList.sort;\n      return context;\n    }\n    /**\n     * Clean destroy\n     */\n\n\n    destroy() {\n      this.clear();\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n    /**\n     * get active filters\n     *\n     * @returns {object} active filters\n     */\n\n\n    get activeFilters() {\n      return deepClone(this.internalState.activeFilters);\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clear() {\n      this.cache$ = null;\n      this.updateState(deepClone(initialState$6));\n      this.recordList.clear();\n    }\n\n    clearAuthBased() {\n      this.clear();\n      this.recordList.clearAuthBased();\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @returns {object} Observable<any>\n     */\n\n\n    init(module) {\n      var _a, _b, _c, _d, _e, _f;\n\n      this.internalState.module = module;\n      this.recordList.init(module, false);\n      this.filterList.init(module);\n      this.filterList.load(false).pipe(take(1)).subscribe();\n      this.calculateShowWidgets();\n      this.recordList.sort = {\n        orderBy: (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.metadata) === null || _a === void 0 ? void 0 : _a.listView) === null || _b === void 0 ? void 0 : _b.orderBy) !== null && _c !== void 0 ? _c : '',\n        sortOrder: (_f = (_e = (_d = this === null || this === void 0 ? void 0 : this.metadata) === null || _d === void 0 ? void 0 : _d.listView) === null || _e === void 0 ? void 0 : _e.sortOrder) !== null && _f !== void 0 ? _f : 'NONE'\n      };\n      this.loadCurrentFilter(module);\n      this.loadCurrentSort(module);\n      this.loadCurrentDisplayedColumns();\n      return this.load();\n    }\n    /**\n     * Set open filters\n     *\n     * @param {object} filter to set\n     */\n\n\n    setOpenFilter(filter) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        openFilter: deepClone(filter)\n      }));\n    }\n    /**\n     * Set active filters\n     *\n     * @param {object} filters to set\n     * @param {boolean} reload flag\n     * @param sort\n     */\n\n\n    setFilters(filters, reload = true, sort = null) {\n      var _a, _b;\n\n      const filterKey = Object.keys(filters).shift();\n      const filter = filters[filterKey];\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        activeFilters: deepClone(filters),\n        openFilter: deepClone(filter)\n      }));\n\n      if (filter.criteria) {\n        let orderBy = (_a = filter.criteria.orderBy) !== null && _a !== void 0 ? _a : '';\n        const sortOrder = (_b = filter.criteria.sortOrder) !== null && _b !== void 0 ? _b : '';\n        let direction = this.recordList.mapSortOrder(sortOrder);\n\n        if (sort !== null) {\n          orderBy = sort.orderBy;\n          direction = sort.sortOrder;\n        }\n\n        this.recordList.updateSorting(orderBy, direction, false);\n        this.updateSortLocalStorage();\n      }\n\n      this.updateSearchCriteria(reload);\n    }\n    /**\n     * Update filters\n     *\n     * @param {object} filter to set\n     */\n\n\n    addSavedFilter(filter) {\n      const newState = Object.assign({}, this.internalState);\n      const activeFilters = this.activeFilters;\n\n      if (filter.key && activeFilters[filter.key]) {\n        activeFilters[filter.key] = filter;\n        newState.activeFilters = activeFilters;\n      }\n\n      newState.openFilter = filter;\n      this.filterList.addFilter(filter);\n      this.updateState(newState);\n    }\n    /**\n     * Update filters\n     *\n     * @param {object} filter to set\n     */\n\n\n    removeSavedFilter(filter) {\n      if (!filter || !filter.key) {\n        return;\n      }\n\n      this.filterList.removeFilter(filter);\n      const newState = Object.assign({}, this.internalState);\n\n      if (newState.openFilter && newState.openFilter.key === filter.key) {\n        this.resetFilters(true);\n      }\n    }\n    /**\n     * Reset active filters\n     *\n     * @param {boolean} reload flag\n     */\n\n\n    resetFilters(reload = true) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        activeFilters: deepClone(initialFilters),\n        openFilter: deepClone(initialFilter)\n      }));\n      this.recordList.clearSort();\n      this.updateSortLocalStorage();\n      this.updateSearchCriteria(reload);\n    }\n    /**\n     * Update the search criteria\n     *\n     * @param {boolean} reload flag\n     */\n\n\n    updateSearchCriteria(reload = true) {\n      const filters = Object.assign({}, this.internalState.activeFilters);\n      const filterKey = Object.keys(filters).shift();\n      const filter = filters[filterKey];\n      this.recordList.updateSearchCriteria(filter.criteria, reload);\n      this.updateFilterLocalStorage();\n    }\n\n    updateFilterLocalStorage() {\n      const module = this.internalState.module;\n      this.savePreference(module, 'current-filters', this.internalState.activeFilters);\n    }\n\n    updateSortLocalStorage() {\n      const module = this.internalState.module;\n      this.savePreference(module, 'current-sort', this.recordList.sort);\n    }\n    /**\n     * Updated displayed columns' ui user preference\n     * @param display\n     */\n\n\n    updateDisplayedColumnsPreference(display) {\n      const module = this.internalState.module;\n      this.savePreference(module, 'displayed-columns', display);\n    }\n    /**\n     * Get displayed columns' ui user preference\n     */\n\n\n    getDisplayedColumnsPreference() {\n      const module = this.internalState.module;\n      const displayedColumns = this.loadPreference(module, 'displayed-columns');\n\n      if (!isArray(displayedColumns) || !displayedColumns || !displayedColumns.length) {\n        return null;\n      }\n\n      return displayedColumns;\n    }\n\n    triggerDataUpdate() {\n      this.dataUpdateState.next(true);\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<ListViewState>\n     */\n\n\n    load(useCache = true) {\n      const module = this.internalState.module;\n      this.savePreference(module, 'current-filters', this.internalState.activeFilters);\n      this.savePreference(module, 'current-sort', this.recordList.sort);\n      return this.recordList.load(useCache);\n    }\n    /**\n     * Internal API\n     */\n\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n    /**\n     * Open columns chooser modal\n     */\n\n\n    openColumnChooserDialog() {\n      const modalRef = this.modalService.open(ColumnChooserComponent, {\n        ariaLabelledBy: 'modal-basic-title',\n        centered: true,\n        size: 'lg',\n        windowClass: 'column-chooser-modal'\n      });\n      const displayedColumns = this.columns.getValue().filter(function (col) {\n        return !col.hasOwnProperty('default') || col.hasOwnProperty('default') && col.default === true;\n      });\n      const hiddenColumns = this.columns.getValue().filter(function (col) {\n        return col.hasOwnProperty('default') && col.default === false;\n      });\n      modalRef.componentInstance.displayed = displayedColumns;\n      modalRef.componentInstance.hidden = hiddenColumns;\n      modalRef.result.then(result => {\n        if (!result.displayed || !result.hidden) {\n          return;\n        }\n\n        let allColumns = [];\n        const selectedDisplayColumns = result.displayed;\n        const selectedHideColumns = result.hidden;\n        selectedDisplayColumns.forEach(function (column) {\n          column.default = true;\n        });\n        selectedHideColumns.forEach(function (column) {\n          column.default = false;\n        });\n        allColumns.push(...selectedDisplayColumns, ...selectedHideColumns);\n        this.columns.next(allColumns);\n        const displayedCols = selectedDisplayColumns.map(col => col.name);\n        this.updateDisplayedColumnsPreference(displayedCols);\n      });\n    }\n    /**\n     * Calculate if widgets are to display\n     */\n\n\n    calculateShowWidgets() {\n      var _a;\n\n      let show = false;\n      const meta = this.metadataStore.get() || {};\n      const listViewMeta = meta.listView || {};\n      const sidebarWidgetsConfig = listViewMeta.sidebarWidgets || [];\n\n      if (sidebarWidgetsConfig && sidebarWidgetsConfig.length > 0) {\n        show = true;\n      }\n\n      const showSidebarWidgets = (_a = this.loadPreference(this.getModuleName(), 'show-sidebar-widgets')) !== null && _a !== void 0 ? _a : null;\n\n      if (showSidebarWidgets !== null) {\n        this.showSidebarWidgets = showSidebarWidgets;\n      } else {\n        this.showSidebarWidgets = show;\n      }\n\n      this.widgets = show;\n    }\n    /**\n     * Build ui user preference key\n     * @param storageKey\n     * @protected\n     */\n\n\n    getPreferenceKey(storageKey) {\n      return 'listview-' + storageKey;\n    }\n    /**\n     * Save ui user preference\n     * @param module\n     * @param storageKey\n     * @param value\n     * @protected\n     */\n\n\n    savePreference(module, storageKey, value) {\n      this.preferences.setUi(module, this.getPreferenceKey(storageKey), value);\n    }\n    /**\n     * Load ui user preference\n     * @param module\n     * @param storageKey\n     * @protected\n     */\n\n\n    loadPreference(module, storageKey) {\n      return this.preferences.getUi(module, this.getPreferenceKey(storageKey));\n    }\n    /**\n     * Load current filter\n     * @param module\n     * @protected\n     */\n\n\n    loadCurrentFilter(module) {\n      var _a;\n\n      const activeFiltersPref = (_a = this.loadPreference(module, 'current-filters')) !== null && _a !== void 0 ? _a : {};\n\n      if (!activeFiltersPref || emptyObject(activeFiltersPref)) {\n        return;\n      }\n\n      let currentSort = this.loadPreference(module, 'current-sort');\n\n      if (!currentSort && emptyObject(currentSort)) {\n        currentSort = null;\n      }\n\n      this.setFilters(activeFiltersPref, false, currentSort);\n    }\n    /**\n     * Load current sorting\n     * @param module\n     * @protected\n     */\n\n\n    loadCurrentSort(module) {\n      const currentSort = this.loadPreference(module, 'current-sort');\n\n      if (!currentSort || emptyObject(currentSort)) {\n        return;\n      }\n\n      this.recordList.sort = currentSort;\n    }\n    /**\n     * Load current displayed columns\n     * @protected\n     */\n\n\n    loadCurrentDisplayedColumns() {\n      this.metadataStore.listViewColumns$.pipe(take(1)).subscribe(cols => {\n        const displayedColumns = this.getDisplayedColumnsPreference();\n\n        if (!displayedColumns || !cols) {\n          this.columns.next(cols);\n          return;\n        }\n\n        const colMap = {};\n        displayedColumns.forEach(displayedColumn => {\n          colMap[displayedColumn] = true;\n        });\n        const displayedMap = {};\n        const hidden = [];\n        cols.forEach(col => {\n          var _a;\n\n          col.default = (_a = colMap[col.name]) !== null && _a !== void 0 ? _a : false;\n\n          if (col.default) {\n            displayedMap[col.name] = col;\n          } else {\n            hidden.push(col);\n          }\n        });\n        const displayed = displayedColumns.filter(col => !!displayedMap[col]).map(col => displayedMap[col]);\n        this.columns.next([...displayed, ...hidden]);\n      });\n    }\n    /**\n     * Initialize data update state.\n     * It should be emitted on any change in values on the record list.\n     * Reload/Pagination is not considered as a data update\n     */\n\n\n    initDataUpdateState() {\n      this.dataUpdateState = new BehaviorSubject(true);\n      this.dataUpdate$ = this.dataUpdateState.asObservable();\n    }\n    /**\n     *  Initialize the dataSet update state.\n     *  It should be emitted on any change in dataSet e.g. due to data filter, due to data delete,\n     *  due to data edit or any event which causes change in the resulting dataSet.\n     */\n\n\n    initDataSetUpdatedState() {\n      this.dataSetUpdate$ = combineLatest([this.criteria$, this.dataUpdate$]).pipe(map(() => true));\n    }\n\n  }\n\n  ListViewStore.ɵfac = function ListViewStore_Factory(t) {\n    return new (t || ListViewStore)(ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(ModuleNavigation), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LocalStorageService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(FilterListStoreFactory), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  ListViewStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ListViewStore,\n    factory: ListViewStore.ɵfac\n  });\n  return ListViewStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionMenuComponent = /*#__PURE__*/(() => {\n  class ActionMenuComponent {\n    constructor(listStore, actionHandler, screenSize, systemConfigs) {\n      this.listStore = listStore;\n      this.actionHandler = actionHandler;\n      this.screenSize = screenSize;\n      this.systemConfigs = systemConfigs;\n      this.configState = new BehaviorSubject({\n        buttons: []\n      });\n      this.config$ = this.configState.asObservable();\n      this.vm$ = combineLatest([this.screenSize.screenSize$]).pipe(map(([screenSize]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        this.configState.next(this.getButtonGroupConfig());\n        return {\n          screenSize\n        };\n      }));\n      this.screen = ScreenSize.Medium;\n      this.defaultBreakpoint = 3;\n    }\n\n    ngOnInit() {\n      this.configState.next(this.getButtonGroupConfig());\n    }\n\n    getButtonGroupConfig() {\n      const actions = this.actions;\n      const config = {\n        buttonKlass: ['action-button'],\n        dropdownLabel: this.listStore.appStrings.LBL_MORE || '',\n        buttons: [],\n        dropdownOptions: {\n          placement: ['bottom-right']\n        },\n        breakpoint: this.getBreakpoint()\n      };\n      actions.forEach(action => {\n        const buttonConfig = this.getButtonConfig(action);\n\n        if (buttonConfig && buttonConfig.klass) {\n          config.buttons.push(buttonConfig);\n        }\n      });\n      return config;\n    }\n\n    getBreakpoint() {\n      const breakpointMap = this.systemConfigs && this.systemConfigs.getConfigValue('listview_actions_limits');\n\n      if (this.screen && breakpointMap && breakpointMap[this.screen]) {\n        this.breakpoint = breakpointMap[this.screen];\n        return this.breakpoint;\n      }\n\n      if (this.breakpoint) {\n        return this.breakpoint;\n      }\n\n      return this.defaultBreakpoint;\n    }\n\n    get actions() {\n      if (!this.listStore.vm.appData.module || !this.listStore.vm.appData.module.menu) {\n        return [];\n      }\n\n      return this.listStore.vm.appData.module.menu.filter(action => !(action.name === 'List' || action.name === 'View'));\n    }\n\n    getButtonConfig(action) {\n      if (!this.listStore.vm.appData.appState.module) {\n        return {};\n      }\n\n      if (!this.listStore.vm.appData.language) {\n        return {};\n      }\n\n      const module = this.listStore.vm.appData.appState.module;\n      const language = this.listStore.vm.appData.language;\n      let labelKey = '';\n\n      if (action.actionLabelKey) {\n        labelKey = action.actionLabelKey;\n      }\n\n      return {\n        klass: 'action-button',\n        label: this.actionHandler.getActionLabel(module, action, language, labelKey),\n        onClick: () => {\n          this.actionHandler.navigate(action).then();\n        }\n      };\n    }\n\n  }\n\n  ActionMenuComponent.ɵfac = function ActionMenuComponent_Factory(t) {\n    return new (t || ActionMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ListViewStore), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(ScreenSizeObserverService), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  ActionMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ActionMenuComponent,\n    selectors: [[\"scrm-action-menu\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"list-view-actions float-right\", 4, \"ngIf\"], [1, \"list-view-actions\", \"float-right\"], [3, \"config$\"]],\n    template: function ActionMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ActionMenuComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonGroupComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ActionMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ActionMenuModule = /*#__PURE__*/(() => {\n  class ActionMenuModule {}\n\n  ActionMenuModule.ɵfac = function ActionMenuModule_Factory(t) {\n    return new (t || ActionMenuModule)();\n  };\n\n  ActionMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ActionMenuModule\n  });\n  ActionMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModalModule, ButtonModule, AngularSvgIconModule, ButtonGroupModule]]\n  });\n  return ActionMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ActionMenuModule, {\n    declarations: function () {\n      return [ActionMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModalModule, ButtonModule, AngularSvgIconModule, ButtonGroupModule];\n    },\n    exports: function () {\n      return [ActionMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SettingsMenuComponent = /*#__PURE__*/(() => {\n  class SettingsMenuComponent {\n    constructor(listStore, modalService, screenSize, systemConfigStore) {\n      this.listStore = listStore;\n      this.modalService = modalService;\n      this.screenSize = screenSize;\n      this.systemConfigStore = systemConfigStore;\n      this.configState = new BehaviorSubject({\n        buttons: []\n      });\n      this.config$ = this.configState.asObservable();\n      this.vm$ = combineLatest([this.listStore.widgets$, this.listStore.displayFilters$, this.listStore.criteria$, this.screenSize.screenSize$, this.listStore.showSidebarWidgets$, this.listStore.filterList.records$]).pipe(map(([widgets, displayFilters, criteria, screenSize, showSidebarWidgets, savedFilters]) => {\n        if (screenSize) {\n          this.screen = screenSize;\n        }\n\n        this.configState.next(this.getButtonGroupConfig());\n        return {\n          widgets,\n          displayFilters,\n          criteria,\n          screenSize,\n          showSidebarWidgets,\n          savedFilters\n        };\n      }));\n      this.screen = ScreenSize.Medium;\n      this.defaultBreakpoint = 5;\n    }\n\n    ngOnInit() {\n      this.configState.next(this.getButtonGroupConfig());\n    }\n\n    getButtonGroupConfig() {\n      const availableButtons = [// Commented temporarily as it is not implemented\n\n      /*\n      {button: this.getDisplayAsButton()},\n       */\n      {\n        show: () => this.listStore.filterList.getFilters() && this.listStore.filterList.getFilters().length >= 1,\n        button: this.getMyFiltersButton()\n      }, {\n        button: this.getFilterButton()\n      }, {\n        show: () => this.isAnyFilterApplied(),\n        button: this.getClearButton()\n      }, {\n        button: this.getColumnChooserButton()\n      }, {\n        show: () => this.listStore.widgets,\n        button: this.getChartsButton()\n      }];\n      const config = {\n        buttonKlass: ['settings-button'],\n        dropdownLabel: this.listStore.appStrings.LBL_OPTIONS || '',\n        breakpoint: this.getBreakpoint(),\n        dropdownOptions: {\n          placement: ['bottom-right'],\n          wrapperKlass: ['dropdown-button-secondary']\n        },\n        buttons: []\n      };\n      availableButtons.forEach(availableButton => {\n        if (!availableButton.show) {\n          config.buttons.push(availableButton.button);\n          return;\n        }\n\n        if (availableButton.show()) {\n          config.buttons.push(availableButton.button);\n        }\n      });\n      return config;\n    }\n\n    getFilters() {\n      var _a, _b, _c, _d;\n\n      return (_d = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.listStore) === null || _a === void 0 ? void 0 : _a.recordList) === null || _b === void 0 ? void 0 : _b.criteria) === null || _c === void 0 ? void 0 : _c.filters) !== null && _d !== void 0 ? _d : {};\n    }\n\n    getCurrentCriteria() {\n      var _a, _b, _c;\n\n      return (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.listStore) === null || _a === void 0 ? void 0 : _a.recordList) === null || _b === void 0 ? void 0 : _b.criteria) !== null && _c !== void 0 ? _c : {};\n    }\n\n    hasActiveFilter() {\n      var _a;\n\n      const activeFilters = this.listStore.activeFilters;\n\n      if (!activeFilters) {\n        return false;\n      }\n\n      const filterKeys = (_a = Object.keys(activeFilters)) !== null && _a !== void 0 ? _a : [];\n\n      if (!filterKeys || !filterKeys.length) {\n        return false;\n      }\n\n      if (filterKeys.length > 1) {\n        return true;\n      }\n\n      const currentFilter = activeFilters[filterKeys[0]];\n      return currentFilter.key && currentFilter.key !== '' && currentFilter.key !== 'default';\n    }\n\n    areAllCurrentCriteriaFilterEmpty() {\n      var _a;\n\n      return Object.keys((_a = this.getFilters()) !== null && _a !== void 0 ? _a : {}).every(key => this.getFilters()[key].operator === '');\n    }\n\n    isAnyFilterApplied() {\n      return this.hasActiveFilter() || !this.areAllCurrentCriteriaFilterEmpty();\n    }\n\n    getBreakpoint() {\n      const breakpointMap = this.systemConfigStore.getConfigValue('listview_settings_limits');\n\n      if (this.screen && breakpointMap && breakpointMap[this.screen]) {\n        this.breakpoint = breakpointMap[this.screen];\n        return this.breakpoint;\n      }\n\n      if (this.breakpoint) {\n        return this.breakpoint;\n      }\n\n      return this.defaultBreakpoint;\n    }\n\n    getFilterButton() {\n      const filterButton = {\n        label: this.listStore.appStrings.LBL_FILTER || '',\n        klass: {\n          'filter-settings-button': true,\n          active: this.isAnyFilterApplied()\n        },\n        onClick: () => {\n          this.listStore.showFilters = !this.listStore.showFilters;\n        }\n      };\n\n      if (this.isAnyFilterApplied()) {\n        filterButton.icon = 'filter';\n      }\n\n      return filterButton;\n    }\n\n    getMyFiltersButton() {\n      const filters = this.listStore.filterList.getFilters();\n      const dropdownConfig = {\n        label: this.listStore.appStrings.LBL_SAVED_FILTER_SHORTCUT || '',\n        klass: ['dropdown-toggle'],\n        wrapperKlass: ['filter-action-group'],\n        items: []\n      };\n      const activeFilters = this.listStore.activeFilters;\n      let anyActive = false;\n      filters.forEach(filter => {\n        const isActive = Object.keys(activeFilters).some(key => key === filter.key);\n        anyActive = anyActive || isActive;\n        const button = {\n          label: filter.attributes.name,\n          onClick: () => {\n            this.listStore.showFilters = false;\n\n            if (isActive) {\n              this.listStore.resetFilters();\n            } else {\n              this.listStore.setOpenFilter(filter);\n              const selectedFilters = {};\n              selectedFilters[filter.key] = filter;\n              this.listStore.setFilters(selectedFilters);\n            }\n          }\n        };\n\n        if (isActive) {\n          button.icon = 'filter';\n          button.iconKlass = 'small';\n          button.klass = ['active'];\n        }\n\n        dropdownConfig.items.push(button);\n      });\n\n      if (anyActive) {\n        dropdownConfig.klass = ['dropdown-toggle', 'active'];\n      }\n\n      return dropdownConfig;\n    }\n\n    getClearButton() {\n      return {\n        label: this.listStore.appStrings.LBL_CLEAR_FILTER || '',\n        onClick: () => {\n          this.listStore.showFilters = false;\n          this.listStore.resetFilters();\n        }\n      };\n    }\n\n    getChartsButton() {\n      return {\n        label: this.listStore.appStrings.LBL_INSIGHTS || '',\n        klass: {\n          active: this.listStore.showSidebarWidgets\n        },\n        icon: 'pie',\n        onClick: () => {\n          this.listStore.showSidebarWidgets = !this.listStore.showSidebarWidgets;\n        }\n      };\n    }\n\n    getDisplayAsButton() {\n      return {\n        label: 'Display As',\n        klass: {},\n        items: []\n      };\n    }\n\n    getColumnChooserButton() {\n      return {\n        label: this.listStore.appStrings.LBL_COLUMNS || '',\n        klass: {\n          'column-chooser-button': true\n        },\n        icon: 'column_chooser',\n        onClick: () => {\n          this.listStore.openColumnChooserDialog();\n        }\n      };\n    }\n\n  }\n\n  SettingsMenuComponent.ɵfac = function SettingsMenuComponent_Factory(t) {\n    return new (t || SettingsMenuComponent)(ɵngcc0.ɵɵdirectiveInject(ListViewStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NgbModal), ɵngcc0.ɵɵdirectiveInject(ScreenSizeObserverService), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  SettingsMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SettingsMenuComponent,\n    selectors: [[\"scrm-settings-menu\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"list-view-settings float-right\", 4, \"ngIf\"], [1, \"list-view-settings\", \"float-right\"], [3, \"config$\", 4, \"ngIf\"], [3, \"config$\"]],\n    template: function SettingsMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SettingsMenuComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonGroupComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return SettingsMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SettingsMenuModule = /*#__PURE__*/(() => {\n  class SettingsMenuModule {}\n\n  SettingsMenuModule.ɵfac = function SettingsMenuModule_Factory(t) {\n    return new (t || SettingsMenuModule)();\n  };\n\n  SettingsMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SettingsMenuModule\n  });\n  SettingsMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ColumnChooserModule, ImageModule, ButtonModule, DropdownButtonModule, NgbModule, ButtonGroupModule]]\n  });\n  return SettingsMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SettingsMenuModule, {\n    declarations: function () {\n      return [SettingsMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, ColumnChooserModule, ImageModule, ButtonModule, DropdownButtonModule, NgbModule, ButtonGroupModule];\n    },\n    exports: function () {\n      return [SettingsMenuComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatusBarModule = /*#__PURE__*/(() => {\n  class StatusBarModule {}\n\n  StatusBarModule.ɵfac = function StatusBarModule_Factory(t) {\n    return new (t || StatusBarModule)();\n  };\n\n  StatusBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: StatusBarModule\n  });\n  StatusBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModuleTitleModule, ActionMenuModule, SettingsMenuModule, AngularSvgIconModule]]\n  });\n  return StatusBarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StatusBarModule, {\n    declarations: function () {\n      return [StatusBarComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModuleTitleModule, ActionMenuModule, SettingsMenuModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [StatusBarComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableComponent = /*#__PURE__*/(() => {\n  class TableComponent {\n    showHeader() {\n      return this.config.showHeader;\n    }\n\n    showFooter() {\n      return this.config.showFooter;\n    }\n\n  }\n\n  TableComponent.ɵfac = function TableComponent_Factory(t) {\n    return new (t || TableComponent)();\n  };\n\n  TableComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TableComponent,\n    selectors: [[\"scrm-table\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"selection\", \"bulkActions\", \"pagination\", 4, \"ngIf\"], [3, \"config\"], [3, \"selection\", \"bulkActions\", \"pagination\"]],\n    template: function TableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵtemplate(1, TableComponent_scrm_table_header_1_Template, 1, 3, \"scrm-table-header\", 0);\n        ɵngcc0.ɵɵelement(2, \"scrm-table-body\", 1);\n        ɵngcc0.ɵɵtemplate(3, TableComponent_scrm_table_footer_3_Template, 1, 3, \"scrm-table-footer\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.config && ctx.config.klass || \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showHeader());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.config);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFooter());\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, TableBodyComponent, TableHeaderComponent, TableFooterComponent];\n    },\n    encapsulation: 2\n  });\n  return TableComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableHeaderComponent = /*#__PURE__*/(() => {\n  class TableHeaderComponent {}\n\n  TableHeaderComponent.ɵfac = function TableHeaderComponent_Factory(t) {\n    return new (t || TableHeaderComponent)();\n  };\n\n  TableHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TableHeaderComponent,\n    selectors: [[\"scrm-table-header\"]],\n    inputs: {\n      selection: \"selection\",\n      bulkActions: \"bulkActions\",\n      pagination: \"pagination\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"list-view-tableactions\", \"table-header\"], [1, \"row\"], [3, \"selectionSource\", \"actionSource\", 4, \"ngIf\"], [1, \"col\", \"mx-0\", \"pl-0\", \"table-pagination-wrapper\"], [3, \"state\", 4, \"ngIf\"], [3, \"selectionSource\", \"actionSource\"], [3, \"state\"]],\n    template: function TableHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, TableHeaderComponent_scrm_bulk_action_menu_2_Template, 1, 2, \"scrm-bulk-action-menu\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, TableHeaderComponent_scrm_pagination_4_Template, 1, 1, \"scrm-pagination\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selection && ctx.bulkActions);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.pagination);\n      }\n    },\n    directives: [ɵngcc3.NgIf, BulkActionMenuComponent, PaginationComponent],\n    encapsulation: 2\n  });\n  return TableHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableHeaderModule = /*#__PURE__*/(() => {\n  class TableHeaderModule {}\n\n  TableHeaderModule.ɵfac = function TableHeaderModule_Factory(t) {\n    return new (t || TableHeaderModule)();\n  };\n\n  TableHeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TableHeaderModule\n  });\n  TableHeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PaginationModule, BulkActionMenuModule, AngularSvgIconModule]]\n  });\n  return TableHeaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableHeaderModule, {\n    declarations: function () {\n      return [TableHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule, PaginationModule, BulkActionMenuModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [TableHeaderComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableBodyComponent = /*#__PURE__*/(() => {\n  class TableBodyComponent {\n    constructor(fieldManager, loadingBufferFactory) {\n      this.fieldManager = fieldManager;\n      this.loadingBufferFactory = loadingBufferFactory;\n      this.maxColumns = 4;\n      this.subs = [];\n      this.loadingBuffer = this.loadingBufferFactory.create('table_loading_display_delay');\n    }\n\n    ngOnInit() {\n      const selection$ = this.config.selection$ || of(null).pipe(shareReplay(1));\n      let loading$ = this.initLoading();\n      this.vm$ = combineLatest([this.config.columns, selection$, this.config.maxColumns$, this.config.dataSource.connect(null), loading$]).pipe(map(([columns, selection, maxColumns, records, loading]) => {\n        const displayedColumns = [];\n\n        if (selection) {\n          displayedColumns.push('checkbox');\n        }\n\n        this.maxColumns = maxColumns;\n        const columnsDefs = this.buildDisplayColumns(columns);\n        displayedColumns.push(...columnsDefs);\n        displayedColumns.push('line-actions');\n        const selected = selection && selection.selected || {};\n        const selectionStatus = selection && selection.status || SelectionStatus.NONE;\n        return {\n          columns,\n          selection,\n          selected,\n          selectionStatus,\n          displayedColumns,\n          records: records || [],\n          loading\n        };\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    toggleSelection(id) {\n      this.config.toggleRecordSelection(id);\n    }\n\n    allSelected(status) {\n      return status === SelectionStatus.ALL;\n    }\n\n    buildDisplayColumns(metaFields) {\n      let i = 0;\n      let hasLinkField = false;\n      const returnArray = [];\n      const fields = metaFields.filter(function (field) {\n        return !field.hasOwnProperty('default') || field.hasOwnProperty('default') && field.default === true;\n      });\n\n      while (i < this.maxColumns && i < fields.length) {\n        returnArray.push(fields[i].name);\n        hasLinkField = hasLinkField || fields[i].link;\n        i++;\n      }\n\n      if (!hasLinkField && this.maxColumns < fields.length) {\n        for (i = this.maxColumns; i < fields.length; i++) {\n          if (fields[i].link) {\n            returnArray.splice(-1, 1);\n            returnArray.push(fields[i].name);\n            break;\n          }\n        }\n      }\n\n      return returnArray;\n    }\n\n    getFieldSort(field) {\n      return {\n        getSortDirection: () => this.config.sort$.pipe(map(sort => {\n          let direction = SortDirection.NONE;\n\n          if (sort.orderBy === field.name) {\n            direction = sort.sortOrder;\n          }\n\n          return direction;\n        })),\n        changeSortDirection: direction => {\n          this.config.updateSorting(field.name, direction);\n        }\n      };\n    }\n\n    getField(column, record) {\n      if (!column || !record) {\n        return null;\n      }\n\n      return this.fieldManager.addField(record, column);\n    }\n\n    initLoading() {\n      let loading$ = of(false).pipe(shareReplay(1));\n\n      if (this.config.loading$) {\n        this.subs.push(this.config.loading$.subscribe(loading => {\n          this.loadingBuffer.updateLoading(loading);\n        }));\n        loading$ = this.loadingBuffer.loading$;\n      }\n\n      return loading$;\n    }\n\n  }\n\n  TableBodyComponent.ɵfac = function TableBodyComponent_Factory(t) {\n    return new (t || TableBodyComponent)(ɵngcc0.ɵɵdirectiveInject(FieldManager), ɵngcc0.ɵɵdirectiveInject(LoadingBufferFactory));\n  };\n\n  TableBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TableBodyComponent,\n    selectors: [[\"scrm-table-body\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"position-relative\", \"d-flex\", \"flex-column\"], [\"cdk-table\", \"\", \"aria-describedby\", \"table-body\", 1, \"list-view-table\", \"striped-table\", \"table\", 3, \"dataSource\"], [\"cdkColumnDef\", \"checkbox\", 4, \"ngIf\"], [3, \"cdkColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"cdkColumnDef\", \"line-actions\"], [\"cdk-header-cell\", \"\", \"scope\", \"col\", \"class\", \"primary-table-header\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 4, \"cdkCellDef\"], [\"cdk-header-row\", \"\", 4, \"cdkHeaderRowDef\"], [\"cdk-row\", \"\", 4, \"cdkRowDef\", \"cdkRowDefColumns\"], [3, \"m-5\", 4, \"ngIf\"], [\"cdkColumnDef\", \"checkbox\"], [\"cdk-header-cell\", \"\", \"scope\", \"col\", 1, \"primary-table-header\"], [\"cdk-cell\", \"\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", \"aria-hidden\", \"true\", 3, \"checked\", \"disabled\", \"change\"], [1, \"checkmark\"], [3, \"cdkColumnDef\"], [3, \"labelKey\", \"module\"], [3, \"state\", 4, \"ngIf\"], [3, \"state\"], [3, \"mode\", \"type\", \"field\", \"record\"], [3, \"config\", \"record\", 4, \"ngIf\"], [3, \"config\", \"record\"], [\"cdk-header-row\", \"\"], [\"cdk-row\", \"\"], [1, \"lead\", \"text-center\", \"pt-3\"], [\"labelKey\", \"MSG_LIST_VIEW_NO_RESULTS_BASIC\"], [3, \"overlay\"]],\n    template: function TableBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_container_0_Template, 12, 7, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc16.CdkTable, ɵngcc3.NgForOf, ɵngcc16.CdkColumnDef, ɵngcc16.CdkHeaderCellDef, ɵngcc16.CdkCellDef, ɵngcc16.CdkHeaderRowDef, ɵngcc16.CdkRowDef, ɵngcc16.CdkHeaderCell, ɵngcc16.CdkCell, LabelComponent, SortButtonComponent, FieldComponent, LineActionMenuComponent, ɵngcc16.CdkHeaderRow, ɵngcc16.CdkRow, LoadingSpinnerComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return TableBodyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableBodyModule = /*#__PURE__*/(() => {\n  class TableBodyModule {}\n\n  TableBodyModule.ɵfac = function TableBodyModule_Factory(t) {\n    return new (t || TableBodyModule)();\n  };\n\n  TableBodyModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TableBodyModule\n  });\n  TableBodyModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule, CdkTableModule, FieldModule, SortButtonModule, LineActionModule, LoadingSpinnerModule, LabelModule]]\n  });\n  return TableBodyModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableBodyModule, {\n    declarations: function () {\n      return [TableBodyComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule, CdkTableModule, FieldModule, SortButtonModule, LineActionModule, LoadingSpinnerModule, LabelModule];\n    },\n    exports: function () {\n      return [TableBodyComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableFooterComponent = /*#__PURE__*/(() => {\n  class TableFooterComponent {}\n\n  TableFooterComponent.ɵfac = function TableFooterComponent_Factory(t) {\n    return new (t || TableFooterComponent)();\n  };\n\n  TableFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TableFooterComponent,\n    selectors: [[\"scrm-table-footer\"]],\n    inputs: {\n      selection: \"selection\",\n      bulkActions: \"bulkActions\",\n      pagination: \"pagination\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"list-view-tableactions\", \"table-footer\"], [1, \"row\"], [3, \"selectionSource\", \"actionSource\", 4, \"ngIf\"], [1, \"col\", \"mx-0\", \"pl-0\", \"table-pagination-wrapper\"], [3, \"state\", 4, \"ngIf\"], [3, \"selectionSource\", \"actionSource\"], [3, \"state\"]],\n    template: function TableFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, TableFooterComponent_scrm_bulk_action_menu_2_Template, 1, 2, \"scrm-bulk-action-menu\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, TableFooterComponent_scrm_pagination_4_Template, 1, 1, \"scrm-pagination\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selection && ctx.bulkActions);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.pagination);\n      }\n    },\n    directives: [ɵngcc3.NgIf, BulkActionMenuComponent, PaginationComponent],\n    encapsulation: 2\n  });\n  return TableFooterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableFooterModule = /*#__PURE__*/(() => {\n  class TableFooterModule {}\n\n  TableFooterModule.ɵfac = function TableFooterModule_Factory(t) {\n    return new (t || TableFooterModule)();\n  };\n\n  TableFooterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TableFooterModule\n  });\n  TableFooterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PaginationModule, BulkActionMenuModule, AngularSvgIconModule]]\n  });\n  return TableFooterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableFooterModule, {\n    declarations: function () {\n      return [TableFooterComponent];\n    },\n    imports: function () {\n      return [CommonModule, PaginationModule, BulkActionMenuModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [TableFooterComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableModule = /*#__PURE__*/(() => {\n  class TableModule {}\n\n  TableModule.ɵfac = function TableModule_Factory(t) {\n    return new (t || TableModule)();\n  };\n\n  TableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TableModule\n  });\n  TableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TableHeaderModule, TableBodyModule, TableFooterModule, AngularSvgIconModule]]\n  });\n  return TableModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableModule, {\n    declarations: function () {\n      return [TableComponent];\n    },\n    imports: function () {\n      return [CommonModule, TableHeaderModule, TableBodyModule, TableFooterModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [TableComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass LineActionActionHandler extends ActionHandler {\n  checkRecordAccess(data, defaultAcls = []) {\n    var _a, _b, _c;\n\n    const record = (_a = data.record) !== null && _a !== void 0 ? _a : {};\n    const acls = (_b = record.acls) !== null && _b !== void 0 ? _b : [];\n\n    if (!acls || !acls.length) {\n      return false;\n    }\n\n    const action = (_c = data.action) !== null && _c !== void 0 ? _c : null;\n    return this.checkAccess(action, acls, defaultAcls);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CreateRelatedLineAction = /*#__PURE__*/(() => {\n  class CreateRelatedLineAction extends LineActionActionHandler {\n    constructor(moduleNameMapper, router) {\n      super();\n      this.moduleNameMapper = moduleNameMapper;\n      this.router = router;\n      this.key = 'create';\n      this.modes = ['list'];\n    }\n\n    run(data, action = null) {\n      const configs = action.params['create'] || {};\n      const params = {};\n      /* eslint-disable camelcase,@typescript-eslint/camelcase*/\n\n      params.return_module = configs.legacyModuleName;\n      params.return_action = configs.returnAction;\n      params.return_id = data.record.id;\n      /* eslint-enable camelcase,@typescript-eslint/camelcase */\n\n      params[configs.mapping.moduleName] = configs.legacyModuleName;\n      params[configs.mapping.name] = data.record.attributes.name;\n      params[configs.mapping.id] = data.record.id;\n      const route = '/' + configs.module + '/' + configs.action;\n      this.router.navigate([route], {\n        queryParams: params\n      }).then();\n    }\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n  }\n\n  CreateRelatedLineAction.ɵfac = function CreateRelatedLineAction_Factory(t) {\n    return new (t || CreateRelatedLineAction)(ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ɵngcc2.Router));\n  };\n\n  CreateRelatedLineAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CreateRelatedLineAction_Factory() {\n      return new CreateRelatedLineAction(i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(i2.Router));\n    },\n    token: CreateRelatedLineAction,\n    providedIn: \"root\"\n  });\n  return CreateRelatedLineAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncProcessLineAction = /*#__PURE__*/(() => {\n  class AsyncProcessLineAction extends LineActionActionHandler {\n    constructor() {\n      super();\n      this.key = 'async-process';\n      this.modes = ALL_VIEW_MODES;\n    }\n\n    run(data) {}\n\n    shouldDisplay(data) {\n      var _a, _b;\n\n      const defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];\n\n      if (!defaultAcls.length) {\n        return true;\n      }\n\n      return this.checkRecordAccess(data, defaultAcls);\n    }\n\n  }\n\n  AsyncProcessLineAction.ɵfac = function AsyncProcessLineAction_Factory(t) {\n    return new (t || AsyncProcessLineAction)();\n  };\n\n  AsyncProcessLineAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncProcessLineAction_Factory() {\n      return new AsyncProcessLineAction();\n    },\n    token: AsyncProcessLineAction,\n    providedIn: \"root\"\n  });\n  return AsyncProcessLineAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineActionActionManager = /*#__PURE__*/(() => {\n  class LineActionActionManager extends BaseActionManager {\n    constructor(createRelated, async) {\n      super();\n      this.createRelated = createRelated;\n      this.async = async;\n      createRelated.modes.forEach(mode => this.actions[mode][createRelated.key] = createRelated);\n      async.modes.forEach(mode => this.actions[mode][async.key] = async);\n    }\n\n  }\n\n  LineActionActionManager.ɵfac = function LineActionActionManager_Factory(t) {\n    return new (t || LineActionActionManager)(ɵngcc0.ɵɵinject(CreateRelatedLineAction), ɵngcc0.ɵɵinject(AsyncProcessLineAction));\n  };\n\n  LineActionActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LineActionActionManager_Factory() {\n      return new LineActionActionManager(i0.ɵɵinject(CreateRelatedLineAction), i0.ɵɵinject(AsyncProcessLineAction));\n    },\n    token: LineActionActionManager,\n    providedIn: \"root\"\n  });\n  return LineActionActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass BaseActionsAdapter {\n  constructor(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n    this.actionManager = actionManager;\n    this.asyncActionService = asyncActionService;\n    this.message = message;\n    this.confirmation = confirmation;\n    this.language = language;\n    this.selectModalService = selectModalService;\n    this.metadata = metadata;\n    this.defaultActions = {\n      detail: [],\n      list: [],\n      edit: [],\n      create: [],\n      massupdate: []\n    };\n  }\n  /**\n   * Run the action using given context\n   * @param action\n   * @param context\n   */\n\n\n  runAction(action, context = null) {\n    const params = action && action.params || {};\n    const displayConfirmation = params.displayConfirmation || false;\n    const confirmationLabel = params.confirmationLabel || '';\n    const selectModal = action.params && action.params.selectModal;\n    const selectModule = selectModal && selectModal.module;\n\n    if (displayConfirmation) {\n      this.confirmation.showModal(confirmationLabel, () => {\n        if (!selectModule) {\n          this.callAction(action, context);\n          return;\n        }\n\n        this.showSelectModal(selectModal.module, action, context);\n      });\n      return;\n    }\n\n    if (!selectModule) {\n      this.callAction(action, context);\n      return;\n    }\n\n    this.showSelectModal(selectModal.module, action, context);\n  }\n  /**\n   * Run async buk action\n   *\n   * @returns void\n   * @param {string} selectModule: module for which records are listed in Select Modal/Popup\n   * @param {string} asyncAction: bulk action name\n   * @param {ActionContext} context\n   */\n\n\n  showSelectModal(selectModule, asyncAction, context = null) {\n    this.selectModalService.showSelectModal(selectModule, modalRecord => {\n      if (modalRecord) {\n        const {\n          fields,\n          formGroup\n        } = modalRecord,\n              baseRecord = __rest(modalRecord, [\"fields\", \"formGroup\"]);\n\n        asyncAction.params.modalRecord = baseRecord;\n      }\n\n      this.callAction(asyncAction, context);\n    });\n  }\n  /**\n   * Get action name\n   * @param action\n   */\n\n\n  getActionName(action) {\n    return `${action.key}`;\n  }\n  /**\n   * Parse mode actions\n   * @param declaredActions\n   * @param mode\n   * @param context\n   */\n\n\n  parseModeActions(declaredActions, mode, context = null) {\n    if (!declaredActions) {\n      return [];\n    }\n\n    const availableActions = {\n      list: [],\n      detail: [],\n      edit: [],\n      create: [],\n      massupdate: []\n    };\n\n    if (declaredActions && declaredActions.length) {\n      declaredActions.forEach(action => {\n        if (!action.modes || !action.modes.length) {\n          return;\n        }\n\n        action.modes.forEach(actionMode => {\n          if (!availableActions[actionMode] && !action.asyncProcess) {\n            return;\n          }\n\n          availableActions[actionMode].push(action);\n        });\n      });\n    }\n\n    availableActions.detail = availableActions.detail.concat(this.defaultActions.detail);\n    availableActions.list = availableActions.list.concat(this.defaultActions.list);\n    availableActions.edit = availableActions.edit.concat(this.defaultActions.edit);\n    availableActions.create = availableActions.create.concat(this.defaultActions.create);\n    availableActions.massupdate = availableActions.massupdate.concat(this.defaultActions.massupdate);\n    const actions = [];\n    availableActions[mode].forEach(action => {\n      const actionHandler = this.actionManager.getHandler(action, mode);\n\n      if (actionHandler) {\n        const actionHandler = this.actionManager.getHandler(action, mode);\n        const data = this.buildActionData(action, context);\n\n        if (!this.shouldDisplay(actionHandler, data)) {\n          return;\n        }\n\n        action.status = actionHandler.getStatus(data) || '';\n      }\n\n      const module = context && context.module || '';\n      const label = this.language.getFieldLabel(action.labelKey, module);\n      actions.push(Object.assign(Object.assign({}, action), {\n        label\n      }));\n    });\n    return actions;\n  }\n\n  shouldDisplay(actionHandler, data) {\n    return actionHandler && actionHandler.shouldDisplay(data);\n  }\n  /**\n   * Call actions\n   * @param action\n   * @param context\n   */\n\n\n  callAction(action, context = null) {\n    if (action.asyncProcess) {\n      this.runAsyncAction(action, context);\n      return;\n    }\n\n    this.runFrontEndAction(action, context);\n  }\n  /**\n   * Run async actions\n   * @param action\n   * @param context\n   */\n\n\n  runAsyncAction(action, context = null) {\n    const actionName = this.getActionName(action);\n    const moduleName = this.getModuleName(context);\n    this.message.removeMessages();\n    const asyncData = this.buildActionInput(action, actionName, moduleName, context);\n    this.asyncActionService.run(actionName, asyncData).pipe(take(1)).subscribe(process => {\n      this.afterAsyncAction(actionName, moduleName, asyncData, process, action, context);\n    });\n  }\n  /**\n   * Run after async action handlers\n   * @param actionName\n   * @param moduleName\n   * @param asyncData\n   * @param process\n   * @param action\n   * @param context\n   * @protected\n   */\n\n\n  afterAsyncAction(actionName, moduleName, asyncData, process, action, context) {\n    if (this.shouldReload(process)) {\n      this.reload(action, process, context);\n    }\n\n    this.reloadMetadata(moduleName, action, process, context);\n  }\n  /**\n   * Reload the metadata for the module\n   * @param moduleName\n   * @param action\n   * @param process\n   * @param context\n   * @protected\n   */\n\n\n  reloadMetadata(moduleName, action, process, context) {\n    const typesToLoad = [];\n\n    if (this.shouldReloadRecentlyViewed(process)) {\n      typesToLoad.push(this.metadata.typeKeys.recentlyViewed);\n    }\n\n    if (this.shouldReloadFavorites(process)) {\n      typesToLoad.push(this.metadata.typeKeys.favorites);\n    }\n\n    if (typesToLoad && typesToLoad.length) {\n      this.metadata.reloadModuleMetadata(moduleName, typesToLoad, false).pipe(take(1)).subscribe();\n    }\n  }\n  /**\n   * Should reload page\n   * @param process\n   */\n\n\n  shouldReloadRecentlyViewed(process) {\n    return !!(process.data && process.data.reloadRecentlyViewed);\n  }\n  /**\n   * Should reload page\n   * @param process\n   */\n\n\n  shouldReloadFavorites(process) {\n    return !!(process.data && process.data.reloadFavorites);\n  }\n  /**\n   * Should reload page\n   * @param process\n   */\n\n\n  shouldReload(process) {\n    return !!(process.data && process.data.reload);\n  }\n  /**\n   * Run front end action\n   * @param action\n   * @param context\n   */\n\n\n  runFrontEndAction(action, context = null) {\n    const data = this.buildActionData(action, context);\n    this.actionManager.run(action, this.getMode(), data);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SelectModalService = /*#__PURE__*/(() => {\n  class SelectModalService {\n    constructor(languageStore, message, modalService) {\n      this.languageStore = languageStore;\n      this.message = message;\n      this.modalService = modalService;\n    }\n    /**\n     * Get Selected Record\n     *\n     * @param {string} selectModule: The Modal module\n     * @param onSelectCallback\n     * @returns {void}\n     */\n\n\n    showSelectModal(selectModule, onSelectCallback = null) {\n      const modal = this.modalService.open(RecordListModalComponent, {\n        size: 'xl',\n        scrollable: true\n      });\n      modal.componentInstance.module = selectModule;\n      modal.result.then(result => {\n        if (!result || !result.selection || !result.selection.selected) {\n          return;\n        }\n\n        const record = this.getSelectedRecord(result);\n\n        if (!record.id) {\n          let message = this.languageStore.getFieldLabel('ERROR_NO_RECORD');\n          this.message.addDangerMessage(message);\n          return;\n        }\n\n        if (onSelectCallback !== null) {\n          onSelectCallback(record);\n        }\n      });\n    }\n    /**\n     * Get Selected Record\n     *\n     * @param {object} data RecordListModalResult\n     * @returns {object} Record\n     */\n\n\n    getSelectedRecord(data) {\n      let id = '';\n      Object.keys(data.selection.selected).some(selected => {\n        id = selected;\n        return true;\n      });\n      let record = null;\n      data.records.some(rec => {\n        if (rec && rec.id === id) {\n          record = rec;\n          return true;\n        }\n      });\n      return record;\n    }\n\n  }\n\n  SelectModalService.ɵfac = function SelectModalService_Factory(t) {\n    return new (t || SelectModalService)(ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ɵngcc7.NgbModal));\n  };\n\n  SelectModalService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SelectModalService_Factory() {\n      return new SelectModalService(i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(i1$3.NgbModal));\n    },\n    token: SelectModalService,\n    providedIn: \"root\"\n  });\n  return SelectModalService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseRecordActionsAdapter = /*#__PURE__*/(() => {\n  class BaseRecordActionsAdapter extends BaseActionsAdapter {\n    constructor(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n    /**\n     * Get action name\n     * @param action\n     */\n\n\n    getActionName(action) {\n      return `record-${action.key}`;\n    }\n    /**\n     * Build backend process input\n     *\n     * @param action\n     * @param actionName\n     * @param moduleName\n     * @param context\n     */\n\n\n    buildActionInput(action, actionName, moduleName, context = null) {\n      return {\n        action: actionName,\n        module: moduleName,\n        id: context && context.record && context.record.id || '',\n        params: action && action.params || []\n      };\n    }\n\n  }\n\n  BaseRecordActionsAdapter.ɵfac = function BaseRecordActionsAdapter_Factory(t) {\n    return new (t || BaseRecordActionsAdapter)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  BaseRecordActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BaseRecordActionsAdapter,\n    factory: BaseRecordActionsAdapter.ɵfac\n  });\n  return BaseRecordActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseLineActionsAdapter = /*#__PURE__*/(() => {\n  class BaseLineActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    buildActionData(action, context) {\n      return {\n        record: context && context.record || null,\n        action: action\n      };\n    }\n\n  }\n\n  BaseLineActionsAdapter.ɵfac = function BaseLineActionsAdapter_Factory(t) {\n    return new (t || BaseLineActionsAdapter)(ɵngcc0.ɵɵinject(LineActionActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  BaseLineActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BaseLineActionsAdapter,\n    factory: BaseLineActionsAdapter.ɵfac\n  });\n  return BaseLineActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UserActionMenuUiComponent = /*#__PURE__*/(() => {\n  class UserActionMenuUiComponent {\n    constructor(http) {\n      this.http = http;\n      this.model = null;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  UserActionMenuUiComponent.ɵfac = function UserActionMenuUiComponent_Factory(t) {\n    return new (t || UserActionMenuUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc13.HttpClient));\n  };\n\n  UserActionMenuUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: UserActionMenuUiComponent,\n    selectors: [[\"scrm-user-action-menu-ui\"]],\n    decls: 5,\n    vars: 3,\n    template: function UserActionMenuUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" user-action-menu works!\\n\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"pre\");\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵpipe(4, \"json\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 1, ctx.model));\n      }\n    },\n    pipes: [ɵngcc3.JsonPipe],\n    encapsulation: 2\n  });\n  return UserActionMenuUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UserActionMenuUiModule = /*#__PURE__*/(() => {\n  class UserActionMenuUiModule {}\n\n  UserActionMenuUiModule.ɵfac = function UserActionMenuUiModule_Factory(t) {\n    return new (t || UserActionMenuUiModule)();\n  };\n\n  UserActionMenuUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: UserActionMenuUiModule\n  });\n  UserActionMenuUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule]]\n  });\n  return UserActionMenuUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UserActionMenuUiModule, {\n    declarations: function () {\n      return [UserActionMenuUiComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule];\n    },\n    exports: function () {\n      return [UserActionMenuUiComponent];\n    }\n  });\n})();\n\nlet FavoritesService = /*#__PURE__*/(() => {\n  class FavoritesService {\n    constructor(metadata, processService) {\n      this.metadata = metadata;\n      this.processService = processService;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * Build new favorite\n     * @param module\n     * @param id\n     */\n\n\n    build(module, id) {\n      return deepClone({\n        module: 'Favorite',\n        type: 'Favorite',\n        attributes: {\n          parent_id: id,\n          parent_type: module\n        }\n      });\n    }\n    /**\n     * Add favorite\n     * @param module\n     * @param favorite\n     */\n\n\n    add(module, favorite) {\n      this.update(module, favorite, 'add');\n    }\n    /**\n     * Add favorite\n     * @param module\n     * @param favorite\n     */\n\n\n    remove(module, favorite) {\n      this.update(module, favorite, 'remove');\n    }\n    /**\n     * Save favorite to backend\n     * @param module\n     * @param favorite\n     * @param action\n     */\n\n\n    update(module, favorite, action) {\n      const processType = 'update-favorite';\n      const options = {\n        favorite: favorite,\n        action\n      };\n      setTimeout(() => {\n        this.processService.submit(processType, options).pipe(take(1)).subscribe(result => {\n          var _a, _b;\n\n          const savedFavorite = (_b = (_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.favorite) !== null && _b !== void 0 ? _b : null;\n\n          if (savedFavorite === null) {\n            this.removeFavoriteFromMetadata(module, favorite);\n            return;\n          }\n\n          this.addFavoriteToMetadata(savedFavorite, module);\n        });\n      }, 100);\n    }\n    /**\n     *\n     * @param savedFavorite\n     * @param module\n     * @private\n     */\n\n\n    addFavoriteToMetadata(savedFavorite, module) {\n      var _a, _b, _c, _d, _e, _f;\n\n      const saved = {\n        id: (_a = savedFavorite === null || savedFavorite === void 0 ? void 0 : savedFavorite.id) !== null && _a !== void 0 ? _a : '',\n        module: (_b = savedFavorite === null || savedFavorite === void 0 ? void 0 : savedFavorite.module) !== null && _b !== void 0 ? _b : '',\n        attributes: Object.assign({}, (_c = savedFavorite === null || savedFavorite === void 0 ? void 0 : savedFavorite.attributes) !== null && _c !== void 0 ? _c : {})\n      };\n      const newItemId = (_e = (_d = savedFavorite === null || savedFavorite === void 0 ? void 0 : savedFavorite.attributes) === null || _d === void 0 ? void 0 : _d.parent_id) !== null && _e !== void 0 ? _e : '';\n      const metadata = this.metadata.getModuleMeta(module);\n      const current = (_f = metadata === null || metadata === void 0 ? void 0 : metadata.favorites) !== null && _f !== void 0 ? _f : null;\n\n      if (current) {\n        let cleared = current.filter(item => {\n          var _a, _b;\n\n          return ((_b = (_a = item === null || item === void 0 ? void 0 : item.attributes) === null || _a === void 0 ? void 0 : _a.parent_id) !== null && _b !== void 0 ? _b : '') !== newItemId;\n        });\n        cleared.unshift(saved);\n        metadata.favorites = cleared;\n      }\n\n      this.metadata.setModuleMetadata(module, metadata);\n    }\n    /**\n     * Remove favorite from metadata\n     * @param module\n     * @param favorite\n     */\n\n\n    removeFavoriteFromMetadata(module, favorite) {\n      var _a, _b, _c;\n\n      const metadata = this.metadata.getModuleMeta(module);\n      const current = (_a = metadata === null || metadata === void 0 ? void 0 : metadata.favorites) !== null && _a !== void 0 ? _a : null;\n      const parentId = (_c = (_b = favorite === null || favorite === void 0 ? void 0 : favorite.attributes) === null || _b === void 0 ? void 0 : _b.parent_id) !== null && _c !== void 0 ? _c : null;\n\n      if (!current || !current.length || !parentId) {\n        return;\n      }\n\n      metadata.favorites = current.filter(item => {\n        var _a, _b;\n\n        return ((_b = (_a = item === null || item === void 0 ? void 0 : item.attributes) === null || _a === void 0 ? void 0 : _a.parent_id) !== null && _b !== void 0 ? _b : '') !== parentId;\n      });\n      this.metadata.setModuleMetadata(module, metadata);\n    }\n\n  }\n\n  FavoritesService.ɵfac = function FavoritesService_Factory(t) {\n    return new (t || FavoritesService)(ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(ProcessService));\n  };\n\n  FavoritesService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function FavoritesService_Factory() {\n      return new FavoritesService(i0.ɵɵinject(MetadataStore), i0.ɵɵinject(ProcessService));\n    },\n    token: FavoritesService,\n    providedIn: \"root\"\n  });\n  return FavoritesService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ImmediateDebounce = /*#__PURE__*/(() => {\n  class ImmediateDebounce {\n    constructor() {\n      this.buffer = new Subject();\n      this.buffer$ = this.buffer.asObservable();\n      this.enabled = true;\n      this.subs = [];\n      this.debounceTime = 1000;\n    }\n\n    init(time = 1000) {\n      this.debounceTime = time;\n      this.subs.push(this.buffer$.pipe(debounceTime(this.debounceTime)).subscribe(() => {\n        this.enabled = true;\n      }));\n    }\n\n    destroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    debounce(callBack) {\n      if (!callBack) {\n        return;\n      }\n\n      if (!this.enabled) {\n        return;\n      }\n\n      this.enabled = false;\n      callBack();\n      this.buffer.next(true);\n    }\n\n  }\n\n  ImmediateDebounce.ɵfac = function ImmediateDebounce_Factory(t) {\n    return new (t || ImmediateDebounce)();\n  };\n\n  ImmediateDebounce.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ImmediateDebounce,\n    factory: ImmediateDebounce.ɵfac\n  });\n  return ImmediateDebounce;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FavoriteToggleComponent = /*#__PURE__*/(() => {\n  class FavoriteToggleComponent {\n    constructor(handler) {\n      this.handler = handler;\n      this.favorite = false;\n    }\n\n    ngOnInit() {\n      var _a, _b;\n\n      if (!this.record) {\n        return;\n      }\n\n      this.debounceService = new ImmediateDebounce();\n      this.debounceService.init();\n      this.favorite = (_b = (_a = this === null || this === void 0 ? void 0 : this.record) === null || _a === void 0 ? void 0 : _a.favorite) !== null && _b !== void 0 ? _b : false;\n      this.addButton = {\n        klass: ['btn btn-sm btn-outline-light favorite-star favorite-off'],\n        onClick: () => {\n          this.debounceService.debounce(() => {\n            this.add();\n          });\n        },\n        icon: 'star'\n      };\n      this.removeButton = {\n        klass: ['btn btn-sm btn-outline-light favorite-star favorite-on'],\n        onClick: () => {\n          this.debounceService.debounce(() => {\n            this.remove();\n          });\n        },\n        icon: 'star'\n      };\n    }\n\n    ngOnDestroy() {\n      this.debounceService.destroy();\n    }\n\n    add() {\n      this.record.favorite = true;\n      this.favorite = true;\n      const favorite = this.handler.build(this.record.module, this.record.id);\n      this.handler.add(this.record.module, favorite);\n    }\n\n    remove() {\n      this.record.favorite = false;\n      this.favorite = false;\n      const favorite = this.handler.build(this.record.module, this.record.id);\n      this.handler.remove(this.record.module, favorite);\n    }\n\n  }\n\n  FavoriteToggleComponent.ɵfac = function FavoriteToggleComponent_Factory(t) {\n    return new (t || FavoriteToggleComponent)(ɵngcc0.ɵɵdirectiveInject(FavoritesService));\n  };\n\n  FavoriteToggleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FavoriteToggleComponent,\n    selectors: [[\"scrm-favorite-toggle\"]],\n    inputs: {\n      record: \"record\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"config\"]],\n    template: function FavoriteToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FavoriteToggleComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, FavoriteToggleComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.favorite);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.favorite);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ButtonComponent],\n    encapsulation: 2\n  });\n  return FavoriteToggleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FavoriteToggleModule = /*#__PURE__*/(() => {\n  class FavoriteToggleModule {}\n\n  FavoriteToggleModule.ɵfac = function FavoriteToggleModule_Factory(t) {\n    return new (t || FavoriteToggleModule)();\n  };\n\n  FavoriteToggleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FavoriteToggleModule\n  });\n  FavoriteToggleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule]]\n  });\n  return FavoriteToggleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FavoriteToggleModule, {\n    declarations: function () {\n      return [FavoriteToggleComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule];\n    },\n    exports: function () {\n      return [FavoriteToggleComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass SavedFilterActionHandler extends ActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterSaveAction = /*#__PURE__*/(() => {\n  class SavedFilterSaveAction extends SavedFilterActionHandler {\n    constructor(message) {\n      super();\n      this.message = message;\n      this.key = 'save';\n      this.modes = ['edit'];\n    }\n\n    run(data) {\n      data.store.validate().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          data.store.save().pipe(take(1)).subscribe(savedFilter => {\n            data.listFilterStore.config.addSavedFilter(data.store.recordStore.extractBaseRecord(savedFilter));\n            data.listFilterStore.applyFilter();\n            this.message.addSuccessMessageByKey('LBL_SAVED_FILTER_SAVED');\n          });\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n  }\n\n  SavedFilterSaveAction.ɵfac = function SavedFilterSaveAction_Factory(t) {\n    return new (t || SavedFilterSaveAction)(ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  SavedFilterSaveAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterSaveAction_Factory() {\n      return new SavedFilterSaveAction(i0.ɵɵinject(MessageService));\n    },\n    token: SavedFilterSaveAction,\n    providedIn: \"root\"\n  });\n  return SavedFilterSaveAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterDeleteAction = /*#__PURE__*/(() => {\n  class SavedFilterDeleteAction extends SavedFilterActionHandler {\n    constructor(message, asyncActionService) {\n      super();\n      this.message = message;\n      this.asyncActionService = asyncActionService;\n      this.key = 'delete';\n      this.modes = ['edit', 'detail'];\n    }\n\n    run(data) {\n      const actionName = `record-${this.key}`;\n      const baseRecord = data.store.getBaseRecord() || {};\n\n      if (!baseRecord.id) {\n        this.message.addWarningMessageByKey('LBL_FILTER_ID_NOT_DEFINED');\n        return;\n      }\n\n      this.message.removeMessages();\n      const asyncData = {\n        action: actionName,\n        module: baseRecord.module,\n        id: baseRecord.id\n      };\n      this.asyncActionService.run(actionName, asyncData, 'noop').pipe(take(1)).subscribe(() => {\n        data.listFilterStore.config.removeSavedFilter(baseRecord);\n      });\n    }\n\n    shouldDisplay(data) {\n      const store = data && data.store;\n      const filter = store && store.recordStore.getBaseRecord() || {};\n      return !!filter.id;\n    }\n\n  }\n\n  SavedFilterDeleteAction.ɵfac = function SavedFilterDeleteAction_Factory(t) {\n    return new (t || SavedFilterDeleteAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AsyncActionService));\n  };\n\n  SavedFilterDeleteAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterDeleteAction_Factory() {\n      return new SavedFilterDeleteAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(AsyncActionService));\n    },\n    token: SavedFilterDeleteAction,\n    providedIn: \"root\"\n  });\n  return SavedFilterDeleteAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterActionManager = /*#__PURE__*/(() => {\n  class SavedFilterActionManager extends BaseActionManager {\n    constructor(save, deleteAction) {\n      super();\n      save.modes.forEach(mode => this.actions[mode][save.key] = save);\n      deleteAction.modes.forEach(mode => this.actions[mode][deleteAction.key] = deleteAction);\n    }\n\n  }\n\n  SavedFilterActionManager.ɵfac = function SavedFilterActionManager_Factory(t) {\n    return new (t || SavedFilterActionManager)(ɵngcc0.ɵɵinject(SavedFilterSaveAction), ɵngcc0.ɵɵinject(SavedFilterDeleteAction));\n  };\n\n  SavedFilterActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterActionManager_Factory() {\n      return new SavedFilterActionManager(i0.ɵɵinject(SavedFilterSaveAction), i0.ɵɵinject(SavedFilterDeleteAction));\n    },\n    token: SavedFilterActionManager,\n    providedIn: \"root\"\n  });\n  return SavedFilterActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$5 = {\n  id: '',\n  type: '',\n  module: '',\n  attributes: {}\n};\n\nclass SavedFilterRecordStore extends RecordStore {\n  constructor(definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers, fieldManager, language) {\n    super(definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers);\n    this.definitions$ = definitions$;\n    this.recordSaveGQL = recordSaveGQL;\n    this.recordFetchGQL = recordFetchGQL;\n    this.message = message;\n    this.recordManager = recordManager;\n    this.recordMappers = recordMappers;\n    this.fieldManager = fieldManager;\n    this.language = language;\n    this.internalState = deepClone(initialState$5);\n    this.stagingState = deepClone(initialState$5);\n    this.store = new BehaviorSubject(this.internalState);\n    this.staging = new BehaviorSubject(this.stagingState);\n    this.searchFields = {};\n    this.listColumns = [];\n    this.state$ = this.store.asObservable().pipe(tap(record => {\n      this.updateStaging(record);\n    }));\n    this.staging$ = this.staging.asObservable();\n  }\n  /**\n   * Get search fields metadata\n   * @returns SearchMetaFieldMap\n   */\n\n\n  getSearchFields() {\n    return this.searchFields;\n  }\n  /**\n   * Set search fields metadata\n   * @param {object} searchFields SearchMetaFieldMap\n   */\n\n\n  setSearchFields(searchFields) {\n    this.searchFields = searchFields;\n  }\n  /**\n   * Get list fields metadata\n   * @returns SearchMetaFieldMap\n   */\n\n\n  getListColumns() {\n    return this.listColumns;\n  }\n  /**\n   * Set list fields metadata\n   * @param {object} listColumns SearchMetaFieldMap\n   */\n\n\n  setListColumns(listColumns) {\n    this.listColumns = listColumns;\n  }\n  /**\n   * Get record\n   *\n   * @returns {object} Record\n   */\n\n\n  getBaseRecord() {\n    if (!this.stagingState) {\n      return null;\n    }\n\n    this.mapStagingFields();\n    return deepClone({\n      id: this.stagingState.id,\n      type: this.stagingState.type,\n      module: this.stagingState.module,\n      key: this.stagingState.key,\n      searchModule: this.stagingState.searchModule,\n      criteria: this.stagingState.criteria,\n      attributes: this.stagingState.attributes\n    });\n  }\n  /**\n   * Extract base record\n   *\n   * @returns {object} Record\n   */\n\n\n  extractBaseRecord(record) {\n    var _a;\n\n    if (!record) {\n      return null;\n    }\n\n    let criteria = (_a = record.criteria) !== null && _a !== void 0 ? _a : {};\n\n    if (Array.isArray(criteria) && !criteria.length) {\n      criteria = {};\n    }\n\n    return deepClone({\n      id: record.id,\n      type: record.type,\n      module: record.module,\n      key: record.key,\n      searchModule: record.searchModule,\n      criteria: criteria,\n      attributes: record.attributes\n    });\n  }\n  /**\n   * Init record fields\n   *\n   * @param {object} record Record\n   */\n\n\n  initRecord(record) {\n    var _a, _b, _c;\n\n    record.attributes = record.attributes || {};\n    record.attributes.search_module = record.searchModule;\n    const filters = (_c = (_b = (_a = record === null || record === void 0 ? void 0 : record.attributes) === null || _a === void 0 ? void 0 : _a.contents) === null || _b === void 0 ? void 0 : _b.filters) !== null && _c !== void 0 ? _c : {};\n    record.attributes.contents = record.attributes.contents || {\n      filters: {}\n    };\n\n    if (Array.isArray(filters) && !filters.length) {\n      record.attributes.contents.filters = {};\n    } else {\n      record.attributes.contents.filters = filters;\n    }\n\n    record.criteria = this.getCriteria(record);\n    this.initCriteriaFields(record, this.getSearchFields());\n\n    if (record.module && this.definitions && this.definitions.length > 0) {\n      record.fields = this.recordManager.initFields(record, this.definitions);\n    }\n\n    this.initOrderByOptions(record);\n  }\n  /**\n   * Init Order by options using list view columns set as default\n   * @param record\n   */\n\n\n  initOrderByOptions(record) {\n    if (!record.fields || !record.fields.orderBy) {\n      return;\n    }\n\n    record.fields.orderBy.metadata = record.fields.orderBy.metadata || {};\n    const options = [];\n    this.getListColumns().forEach(column => {\n      if (!column.default || column.default !== true) {\n        return;\n      }\n\n      const labelKey = column.label || column.fieldDefinition.vname || '';\n      const label = this.language.getFieldLabel(labelKey, record.searchModule);\n      options.push({\n        value: column.fieldDefinition.name || column.name,\n        label\n      });\n    });\n    record.fields.orderBy.metadata.options$ = of(options).pipe(shareReplay());\n  }\n  /**\n   * Get criteria from filter\n   * @param filter\n   */\n\n\n  getCriteria(filter) {\n    if (!filter || !filter.criteria) {\n      return {\n        filters: {}\n      };\n    }\n\n    if (!filter.criteria.filters) {\n      return Object.assign(Object.assign({}, filter.criteria), {\n        filters: {}\n      });\n    }\n\n    if (Array.isArray(filter.criteria.filters) && !filter.criteria.filters.length) {\n      return Object.assign(Object.assign({}, filter.criteria), {\n        filters: {}\n      });\n    }\n\n    return deepClone(filter.criteria);\n  }\n  /**\n   * Initialize criteria fields\n   *\n   * @param {object} record to use\n   * @param {object} searchFields to use\n   */\n\n\n  initCriteriaFields(record, searchFields) {\n    record.criteriaFields = record.criteriaFields || {};\n\n    if (!record.criteriaFormGroup) {\n      record.criteriaFormGroup = new FormGroup({});\n    }\n\n    if (!searchFields) {\n      return;\n    }\n\n    Object.keys(searchFields).forEach(key => {\n      this.buildField(record, searchFields[key]);\n    });\n  }\n  /**\n   * Build filter field according to Field interface\n   *\n   * @param {object} record SavedFilter\n   * @param {object} fieldMeta to use\n   */\n\n\n  buildField(record, fieldMeta) {\n    const fieldName = fieldMeta.name;\n    const type = fieldMeta.type;\n    const definition = {\n      name: fieldMeta.name,\n      label: fieldMeta.label,\n      type,\n      fieldDefinition: {}\n    };\n\n    if (fieldMeta.fieldDefinition) {\n      definition.fieldDefinition = fieldMeta.fieldDefinition;\n    }\n\n    if (type === 'bool' || type === 'boolean') {\n      definition.fieldDefinition.options = 'dom_int_bool';\n    }\n\n    this.fieldManager.addFilterField(record, definition, this.language);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterRecordStoreFactory = /*#__PURE__*/(() => {\n  class SavedFilterRecordStoreFactory {\n    constructor(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper, fieldManager, language) {\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.message = message;\n      this.recordManager = recordManager;\n      this.recordMappers = recordMappers;\n      this.baseMapper = baseMapper;\n      this.fieldManager = fieldManager;\n      this.language = language;\n      recordMappers.register('default', baseMapper.getKey(), baseMapper);\n    }\n\n    create(definitions$) {\n      return new SavedFilterRecordStore(definitions$, this.recordSaveGQL, this.recordFetchGQL, this.message, this.recordManager, this.recordMappers, this.fieldManager, this.language);\n    }\n\n  }\n\n  SavedFilterRecordStoreFactory.ɵfac = function SavedFilterRecordStoreFactory_Factory(t) {\n    return new (t || SavedFilterRecordStoreFactory)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(ɵngcc15.RecordMapperRegistry), ɵngcc0.ɵɵinject(BaseSaveRecordMapper), ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(LanguageStore));\n  };\n\n  SavedFilterRecordStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterRecordStoreFactory_Factory() {\n      return new SavedFilterRecordStoreFactory(i0.ɵɵinject(RecordFetchGQL), i0.ɵɵinject(RecordSaveGQL), i0.ɵɵinject(MessageService), i0.ɵɵinject(RecordManager), i0.ɵɵinject(i5.RecordMapperRegistry), i0.ɵɵinject(BaseSaveRecordMapper), i0.ɵɵinject(FieldManager), i0.ɵɵinject(LanguageStore));\n    },\n    token: SavedFilterRecordStoreFactory,\n    providedIn: \"root\"\n  });\n  return SavedFilterRecordStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$4 = {\n  module: '',\n  searchModule: '',\n  recordID: '',\n  loading: false,\n  mode: 'detail'\n};\nlet SavedFilterStore = /*#__PURE__*/(() => {\n  class SavedFilterStore {\n    constructor(appStateStore, meta, message, fieldManager, language, savedFilterStoreFactory) {\n      this.appStateStore = appStateStore;\n      this.meta = meta;\n      this.message = message;\n      this.fieldManager = fieldManager;\n      this.language = language;\n      this.savedFilterStoreFactory = savedFilterStoreFactory;\n      /** Internal Properties */\n\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$4);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.subs = [];\n      this.metadataLoadingState = new BehaviorSubject(false);\n      this.metadataLoading$ = this.metadataLoadingState.asObservable();\n      this.meta$ = this.meta.getMetadata('saved-search', ['recordView']).pipe(tap(() => this.metadataLoadingState.next(false)), map(definitions => definitions.recordView));\n      this.recordStore = savedFilterStoreFactory.create(this.getViewFields$());\n      this.record$ = this.recordStore.state$.pipe(distinctUntilChanged(), map(record => record));\n      this.stagingRecord$ = this.recordStore.staging$.pipe(distinctUntilChanged(), map(record => record));\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n      this.mode$ = this.state$.pipe(map(state => state.mode));\n      this.vm$ = combineLatest([this.stagingRecord$, this.mode$]).pipe(map(([record, mode]) => {\n        this.vm = {\n          record,\n          mode\n        };\n        return this.vm;\n      }));\n    }\n\n    getModuleName() {\n      return this.internalState.module;\n    }\n\n    getRecordId() {\n      return this.internalState.recordID;\n    }\n\n    getViewContext() {\n      return {\n        module: this.getModuleName(),\n        id: this.getRecordId()\n      };\n    }\n    /**\n     * Clean destroy\n     */\n\n\n    destroy() {\n      this.clear();\n    }\n    /**\n     * Initial record load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} recordID to use\n     * @param {string} mode to use\n     * @returns {object} Observable<any>\n     */\n\n\n    init(recordID, mode = 'detail') {\n      this.internalState.module = 'saved-search';\n      this.internalState.recordID = recordID;\n      this.setMode(mode);\n      this.metadataLoadingState.next(true);\n      const dataMap = {\n        $meta: this.meta$,\n        record: this.load()\n      };\n      const $data = forkJoin(dataMap);\n      return $data.pipe(map(({\n        meta,\n        record\n      }) => record));\n    }\n    /**\n     * Init record\n     *\n     * @param {string} searchModule name\n     * @param {object} filter to use\n     * @param {object} searchFields to use\n     * @param {object} listColumns ColumnDefinition[]\n     * @param {string} mode to use\n     * @returns {object} Observable<any>\n     */\n\n\n    initRecord(searchModule, filter, searchFields, listColumns, mode = 'detail') {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        recordID: filter.id,\n        module: 'saved-search',\n        searchModule,\n        mode\n      }));\n      this.metadataLoadingState.next(true);\n      this.meta$.pipe(take(1), tap(() => {\n        this.metadataLoadingState.next(false);\n        this.initStaging(searchModule, filter, searchFields, listColumns);\n      })).subscribe();\n    }\n\n    initStaging(searchModule, filter, searchFields, listColumns) {\n      const filterRecord = deepClone(this.recordStore.extractBaseRecord(filter));\n      filterRecord.searchModule = searchModule;\n      this.recordStore.setSearchFields(searchFields);\n      this.recordStore.setListColumns(listColumns);\n      this.recordStore.setStaging(filterRecord);\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clear() {\n      this.cache$ = null;\n      this.updateState(deepClone(initialState$4));\n      this.metadataLoadingState.unsubscribe();\n      this.metadataLoadingState = null;\n      this.recordStore.destroy();\n      this.recordStore = null;\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Get staging record\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getBaseRecord() {\n      return this.recordStore.getBaseRecord();\n    }\n    /**\n     * Get current view mode\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getMode() {\n      if (!this.internalState) {\n        return null;\n      }\n\n      return this.internalState.mode;\n    }\n    /**\n     * Set new mode\n     *\n     * @param {string} mode ViewMode\n     */\n\n\n    setMode(mode) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        mode\n      }));\n    }\n    /**\n     * Save record\n     */\n\n\n    save() {\n      this.appStateStore.updateLoading(`${this.internalState.module}-record-save`, true);\n      return this.recordStore.save().pipe(catchError(() => {\n        this.message.addDangerMessageByKey('LBL_ERROR_SAVING');\n        return of({});\n      }), finalize(() => {\n        this.appStateStore.updateLoading(`${this.internalState.module}-record-save`, false);\n      }));\n    }\n    /**\n     * Validate search filter fields\n     *\n     * @returns {object} Observable<boolean>\n     */\n\n\n    validate() {\n      return forkJoin({\n        fields: this.recordStore.validate(),\n        criteria: this.validateCriteria()\n      }).pipe(map(({\n        fields,\n        criteria\n      }) => fields && criteria));\n    }\n    /**\n     * Validate search current input\n     *\n     * @returns {object} Observable<boolean>\n     */\n\n\n    validateCriteria() {\n      const currentFilter = this.recordStore.getStaging();\n      const formGroup = currentFilter.criteriaFormGroup;\n      formGroup.markAllAsTouched();\n      return formGroup.statusChanges.pipe(startWith(formGroup.status), filter(status => status !== 'PENDING'), take(1), map(status => status === 'VALID'));\n    }\n    /**\n     * Load / reload record using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordViewState>\n     */\n\n\n    load(useCache = true) {\n      this.appStateStore.updateLoading(`${this.internalState.module}-record-fetch`, true);\n      return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordID, useCache).pipe(tap(data => {\n        this.appStateStore.updateLoading(`${this.internalState.module}-record-fetch`, false);\n        this.updateState(Object.assign(Object.assign({}, this.internalState), {\n          recordID: data.id,\n          module: data.module\n        }));\n      }));\n    }\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<string[]>\n     */\n\n\n    getViewFieldsKeys$() {\n      return this.meta$.pipe(map(recordMetadata => {\n        const fields = [];\n        recordMetadata.panels.forEach(panel => {\n          panel.rows.forEach(row => {\n            row.cols.forEach(col => {\n              fields.push(col.name);\n            });\n          });\n        });\n        return fields;\n      }));\n    }\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<ViewFieldDefinition[]>\n     */\n\n\n    getViewFields$() {\n      return this.meta$.pipe(map(recordMetadata => {\n        const fields = [];\n        recordMetadata.panels.forEach(panel => {\n          panel.rows.forEach(row => {\n            row.cols.forEach(col => {\n              fields.push(col);\n            });\n          });\n        });\n        return fields;\n      }));\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n    /**\n     * Get record view metadata\n     *\n     * @returns {object} metadata RecordViewMetadata\n     */\n\n\n    getMetadata() {\n      const meta = this.meta.get() || {};\n      return meta.recordView || {};\n    }\n\n  }\n\n  SavedFilterStore.ɵfac = function SavedFilterStore_Factory(t) {\n    return new (t || SavedFilterStore)(ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SavedFilterRecordStoreFactory));\n  };\n\n  SavedFilterStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SavedFilterStore,\n    factory: SavedFilterStore.ɵfac\n  });\n  return SavedFilterStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterSaveGQL = /*#__PURE__*/(() => {\n  class SavedFilterSaveGQL extends RecordSaveGQL {\n    constructor(apollo) {\n      super(apollo);\n      this.apollo = apollo;\n    }\n\n    save(record) {\n      return super.save(record);\n    }\n\n    mapToRecord(response) {\n      if (!response.data || !response.data.saveRecord || !response.data.saveRecord.record) {\n        return null;\n      }\n\n      const savedFilter = {\n        // eslint-disable-next-line no-underscore-dangle\n        id: response.data.saveRecord.record._id,\n        type: response.data.saveRecord.record.type || '',\n        module: response.data.saveRecord.record.module || '',\n        attributes: response.data.saveRecord.record.attributes || null\n      };\n      savedFilter.key = savedFilter.id || savedFilter.attributes && savedFilter.attributes.id || '';\n      const contents = savedFilter.attributes && savedFilter.attributes.contents || null;\n\n      if (contents) {\n        savedFilter.criteria = contents;\n      }\n\n      return savedFilter;\n    }\n\n  }\n\n  SavedFilterSaveGQL.ɵfac = function SavedFilterSaveGQL_Factory(t) {\n    return new (t || SavedFilterSaveGQL)(ɵngcc0.ɵɵinject(ɵngcc1.Apollo));\n  };\n\n  SavedFilterSaveGQL.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterSaveGQL_Factory() {\n      return new SavedFilterSaveGQL(i0.ɵɵinject(i1.Apollo));\n    },\n    token: SavedFilterSaveGQL,\n    providedIn: \"root\"\n  });\n  return SavedFilterSaveGQL;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SavedSearchRecordMapper = /*#__PURE__*/(() => {\n  class SavedSearchRecordMapper {\n    getKey() {\n      return 'criteria';\n    }\n\n    map(record) {\n      var _a, _b, _c, _d;\n\n      const savedFilter = record;\n\n      if (savedFilter.criteria) {\n        const contents = (_b = (_a = savedFilter === null || savedFilter === void 0 ? void 0 : savedFilter.attributes) === null || _a === void 0 ? void 0 : _a.contents) !== null && _b !== void 0 ? _b : {};\n        const filters = (_d = (_c = savedFilter === null || savedFilter === void 0 ? void 0 : savedFilter.criteria) === null || _c === void 0 ? void 0 : _c.filters) !== null && _d !== void 0 ? _d : {};\n        contents.filters = deepClone(filters);\n\n        if (record.fields.name) {\n          contents.name = record.fields.name.value;\n          savedFilter.criteria.name = contents.name;\n        }\n\n        if (record.fields.orderBy) {\n          contents.orderBy = record.fields.orderBy.value;\n          savedFilter.criteria.orderBy = contents.orderBy;\n        }\n\n        if (record.fields.sortOrder) {\n          contents.sortOrder = record.fields.sortOrder.value;\n          savedFilter.criteria.sortOrder = contents.sortOrder;\n        }\n\n        if (record.attributes.search_module) {\n          contents.searchModule = record.attributes.search_module;\n          savedFilter.criteria.searchModule = contents.searchModule;\n        }\n\n        savedFilter.attributes.contents = contents;\n      }\n\n      let key = savedFilter.key || '';\n\n      if (key === 'default') {\n        key = '';\n      }\n\n      savedFilter.id = key;\n      savedFilter.attributes.id = key;\n    }\n\n  }\n\n  SavedSearchRecordMapper.ɵfac = function SavedSearchRecordMapper_Factory(t) {\n    return new (t || SavedSearchRecordMapper)();\n  };\n\n  SavedSearchRecordMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedSearchRecordMapper_Factory() {\n      return new SavedSearchRecordMapper();\n    },\n    token: SavedSearchRecordMapper,\n    providedIn: \"root\"\n  });\n  return SavedSearchRecordMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SaveFilterStoreFactory = /*#__PURE__*/(() => {\n  class SaveFilterStoreFactory {\n    constructor(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, metadataStore, message, recordManager, fieldManager, recordMappers, baseMapper, savedSearchMapper) {\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.metadataStore = metadataStore;\n      this.message = message;\n      this.recordManager = recordManager;\n      this.fieldManager = fieldManager;\n      this.recordMappers = recordMappers;\n      this.baseMapper = baseMapper;\n      this.savedSearchMapper = savedSearchMapper;\n      this.savedFilterStoreFactory = new SavedFilterRecordStoreFactory(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper, fieldManager, languageStore);\n      this.recordMappers.register('saved-search', this.savedSearchMapper.getKey(), this.savedSearchMapper);\n    }\n\n    create() {\n      return new SavedFilterStore(this.appStateStore, this.metadataStore, this.message, this.fieldManager, this.languageStore, this.savedFilterStoreFactory);\n    }\n\n  }\n\n  SaveFilterStoreFactory.ɵfac = function SaveFilterStoreFactory_Factory(t) {\n    return new (t || SaveFilterStoreFactory)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(SavedFilterSaveGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(ɵngcc15.RecordMapperRegistry), ɵngcc0.ɵɵinject(BaseSaveRecordMapper), ɵngcc0.ɵɵinject(SavedSearchRecordMapper));\n  };\n\n  SaveFilterStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SaveFilterStoreFactory_Factory() {\n      return new SaveFilterStoreFactory(i0.ɵɵinject(RecordFetchGQL), i0.ɵɵinject(SavedFilterSaveGQL), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(RecordManager), i0.ɵɵinject(FieldManager), i0.ɵɵinject(i5.RecordMapperRegistry), i0.ɵɵinject(BaseSaveRecordMapper), i0.ɵɵinject(SavedSearchRecordMapper));\n    },\n    token: SaveFilterStoreFactory,\n    providedIn: \"root\"\n  });\n  return SaveFilterStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ListFilterStore = /*#__PURE__*/(() => {\n  class ListFilterStore {\n    constructor(message, savedFilterStoreFactory) {\n      this.message = message;\n      this.savedFilterStoreFactory = savedFilterStoreFactory;\n      this.panelMode = 'closable';\n      this.mode = 'filter';\n      this.gridButtons = null;\n      this.fields = [];\n      this.special = [];\n      this.savedFilters = [];\n      this.subs = [];\n      this.filterStore = savedFilterStoreFactory.create();\n    }\n\n    init(config) {\n      this.config = config;\n      this.initSearchFields();\n      this.initConfigUpdatesSubscription();\n      this.vm$ = combineLatest([this.filterStore.stagingRecord$]).pipe(tap(([savedFilter]) => {\n        this.reset();\n        this.splitCriteriaFields(savedFilter);\n        this.initDisplayFields();\n        this.initGridButtons();\n        this.initHeaderButtons();\n        this.initMyFiltersButton(this.savedFilters);\n      }));\n\n      if (this.config.panelMode) {\n        this.panelMode = this.config.panelMode;\n      }\n\n      this.collapse = new BehaviorSubject(false);\n      this.isCollapsed$ = this.collapse.asObservable();\n\n      if (!isVoid(this.config.isCollapsed)) {\n        this.collapse.next(this.config.isCollapsed);\n      }\n\n      this.reset();\n      this.initGridButtons();\n      this.initHeaderButtons();\n    }\n\n    clear() {\n      this.subs.forEach(sub => sub.unsubscribe());\n      this.reset();\n      this.filterStore.clear();\n      this.filterStore = null;\n      this.collapse.unsubscribe();\n    }\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Reset criteria\n     */\n\n\n    reset() {\n      this.fields = [];\n      this.special = [];\n    }\n    /**\n     * Apply current filter values\n     */\n\n\n    applyFilter() {\n      this.filterStore.validateCriteria().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          if (this.config.panelMode === 'collapsible' && this.config.collapseOnSearch) {\n            this.collapse.next(true);\n          }\n\n          this.config.onSearch();\n          this.config.updateFilter(this.filterStore.getBaseRecord());\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n    /**\n     * Clear the current filter\n     */\n\n\n    clearFilter() {\n      this.config.resetFilter(false);\n    }\n    /**\n     * Subscribe to config updates.\n     * Each time the filter or metadata changes we need to:\n     * - Reset the view state\n     * - Re-initialize the filter subscription\n     */\n\n\n    initConfigUpdatesSubscription() {\n      this.subs.push(combineLatest([this.config.filter$, this.config.searchFields$]).pipe(tap(([filter, searchFields]) => {\n        this.reset();\n        this.filterStore.initRecord(this.config.module, filter, searchFields, this.config.listFields, 'edit');\n      })).subscribe());\n      this.subs.push(combineLatest([this.config.savedFilters$]).pipe(tap(([filters]) => {\n        this.savedFilters = filters;\n        this.initMyFiltersButton(filters);\n      })).subscribe());\n    }\n    /**\n     * Split fields per slots\n     *\n     * @param {object} savedFilter to use\n     */\n\n\n    splitCriteriaFields(savedFilter) {\n      if (!savedFilter || !savedFilter.criteriaFields) {\n        return;\n      }\n\n      Object.keys(savedFilter.criteriaFields).forEach(key => {\n        const field = savedFilter.criteriaFields[key];\n        const name = field.name || key;\n\n        if (name.includes('_only')) {\n          this.special.push(field);\n        } else {\n          this.fields.push(field);\n        }\n      });\n    }\n\n    initSearchFields() {\n      this.subs.push(this.config.searchFields$.subscribe(searchFields => {\n        this.searchFields = searchFields;\n      }));\n    }\n\n    initDisplayFields() {\n      if (!this.searchFields || emptyObject(this.searchFields) || !this.fields) {\n        this.displayFields = [];\n      }\n\n      const fields = [];\n      this.fields.forEach(field => {\n        const name = field.name;\n\n        if (!this.searchFields[name]) {\n          return;\n        }\n\n        fields.push(field);\n      });\n      this.displayFields = fields;\n    }\n    /**\n     * Initialize grid buttons\n     */\n\n\n    initGridButtons() {\n      this.gridButtons = [{\n        labelKey: 'LBL_CLEAR_BUTTON_LABEL',\n        klass: ['clear-filters-button', 'btn', 'btn-outline-danger', 'btn-sm'],\n        onClick: this.clearFilter.bind(this)\n      }, {\n        labelKey: 'LBL_SEARCH_BUTTON_LABEL',\n        klass: ['filter-button', 'btn', 'btn-danger', 'btn-sm'],\n        onClick: this.applyFilter.bind(this)\n      }];\n    }\n    /**\n     * Initialize header buttons\n     */\n\n\n    initHeaderButtons() {\n      this.closeButton = {\n        onClick: () => {\n          this.config.onClose();\n        }\n      };\n    }\n\n    initMyFiltersButton(filters) {\n      if (!filters || filters.length < 1) {\n        this.myFilterButton = null;\n        return;\n      }\n\n      const button = {\n        wrapperKlass: ['filter-select'],\n        labelKey: 'LBL_SAVED_FILTER_SHORTCUT',\n        klass: ['btn', 'btn-outline-light', 'btn-sm'],\n        items: []\n      };\n      const currentKey = this.filterStore.getRecordId();\n      filters.forEach(filter => {\n        const item = {\n          label: filter.attributes.name,\n          onClick: () => {\n            this.config.setOpenFilter(filter);\n          }\n        };\n\n        if (filter.key === currentKey) {\n          button.label = filter.attributes.name;\n          button.labelKey = '';\n          item.icon = 'filter';\n          item.iconKlass = 'small';\n          item.klass = 'active';\n        }\n\n        button.items.push(item);\n      });\n      this.myFilterButton = button;\n    }\n\n  }\n\n  ListFilterStore.ɵfac = function ListFilterStore_Factory(t) {\n    return new (t || ListFilterStore)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(SaveFilterStoreFactory));\n  };\n\n  ListFilterStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ListFilterStore,\n    factory: ListFilterStore.ɵfac\n  });\n  return ListFilterStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterActionsAdapter = /*#__PURE__*/(() => {\n  class SavedFilterActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(store, listFilterStore, language, actionManager, asyncActionService, message, confirmation, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.listFilterStore = listFilterStore;\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    getActions(context) {\n      return combineLatest([this.store.meta$, this.store.mode$, this.store.stagingRecord$, this.language.vm$]).pipe(map(([meta, mode]) => {\n        if (!mode || !meta) {\n          return [];\n        }\n\n        return this.parseModeActions(meta.actions, mode);\n      }));\n    }\n\n    buildActionData(action, context) {\n      return {\n        store: this.store,\n        listFilterStore: this.listFilterStore,\n        action\n      };\n    }\n\n    getMode() {\n      return this.store.getMode();\n    }\n\n    getModuleName(context) {\n      return this.store.getModuleName();\n    }\n\n    reload(action, process, context) {\n      this.store.load(false).pipe(take(1)).subscribe();\n    }\n\n  }\n\n  SavedFilterActionsAdapter.ɵfac = function SavedFilterActionsAdapter_Factory(t) {\n    return new (t || SavedFilterActionsAdapter)(ɵngcc0.ɵɵinject(SavedFilterStore), ɵngcc0.ɵɵinject(ListFilterStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SavedFilterActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  SavedFilterActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SavedFilterActionsAdapter,\n    factory: SavedFilterActionsAdapter.ɵfac\n  });\n  return SavedFilterActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SavedFilterActionAdapterFactory = /*#__PURE__*/(() => {\n  class SavedFilterActionAdapterFactory {\n    constructor(language, actionManager, asyncActionService, message, confimation, selectModalService, metadata) {\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confimation = confimation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    create(store, listFilterStore) {\n      return new SavedFilterActionsAdapter(store, listFilterStore, this.language, this.actionManager, this.asyncActionService, this.message, this.confimation, this.selectModalService, this.metadata);\n    }\n\n  }\n\n  SavedFilterActionAdapterFactory.ɵfac = function SavedFilterActionAdapterFactory_Factory(t) {\n    return new (t || SavedFilterActionAdapterFactory)(ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SavedFilterActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  SavedFilterActionAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SavedFilterActionAdapterFactory_Factory() {\n      return new SavedFilterActionAdapterFactory(i0.ɵɵinject(LanguageStore), i0.ɵɵinject(SavedFilterActionManager), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(MetadataStore));\n    },\n    token: SavedFilterActionAdapterFactory,\n    providedIn: \"root\"\n  });\n  return SavedFilterActionAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListFilterStoreFactory = /*#__PURE__*/(() => {\n  class ListFilterStoreFactory {\n    constructor(message, savedFilterStoreFactory) {\n      this.message = message;\n      this.savedFilterStoreFactory = savedFilterStoreFactory;\n    }\n\n    create() {\n      return new ListFilterStore(this.message, this.savedFilterStoreFactory);\n    }\n\n  }\n\n  ListFilterStoreFactory.ɵfac = function ListFilterStoreFactory_Factory(t) {\n    return new (t || ListFilterStoreFactory)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(SaveFilterStoreFactory));\n  };\n\n  ListFilterStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ListFilterStoreFactory_Factory() {\n      return new ListFilterStoreFactory(i0.ɵɵinject(MessageService), i0.ɵɵinject(SaveFilterStoreFactory));\n    },\n    token: ListFilterStoreFactory,\n    providedIn: \"root\"\n  });\n  return ListFilterStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListFilterComponent = /*#__PURE__*/(() => {\n  class ListFilterComponent {\n    constructor(storeFactory, actionAdapterFactory) {\n      this.storeFactory = storeFactory;\n      this.actionAdapterFactory = actionAdapterFactory;\n      this.store = storeFactory.create();\n      this.filterActionsAdapter = actionAdapterFactory.create(this.store.filterStore, this.store);\n    }\n\n    ngOnInit() {\n      this.store.init(this.config);\n      this.vm$ = this.store.vm$.pipe(map(([savedFilter]) => {\n        const record = Object.assign({}, savedFilter);\n        record.fields = savedFilter.criteriaFields;\n        return record;\n      }));\n    }\n\n    ngOnDestroy() {\n      this.store.clear();\n      this.store = null;\n    }\n\n    getGridConfig() {\n      return {\n        record$: this.store.filterStore.stagingRecord$,\n        mode$: this.store.filterStore.mode$,\n        fields$: this.store.filterStore.getViewFieldsKeys$(),\n        actions: this.filterActionsAdapter,\n        appendActions: true,\n        klass: 'mt-2 p-2 saved-search-container rounded',\n        buttonClass: 'btn btn-outline-danger btn-sm',\n        labelDisplay: 'inline',\n        maxColumns$: of(4).pipe(shareReplay(1)),\n        sizeMap$: of({\n          handset: 1,\n          tablet: 2,\n          web: 3,\n          wide: 4\n        }).pipe(shareReplay(1))\n      };\n    }\n\n  }\n\n  ListFilterComponent.ɵfac = function ListFilterComponent_Factory(t) {\n    return new (t || ListFilterComponent)(ɵngcc0.ɵɵdirectiveInject(ListFilterStoreFactory), ɵngcc0.ɵɵdirectiveInject(SavedFilterActionAdapterFactory));\n  };\n\n  ListFilterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListFilterComponent,\n    selectors: [[\"scrm-list-filter\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"titleKey\", \"close\", \"isCollapsed$\", \"mode\", \"klass\", 4, \"ngIf\"], [3, \"titleKey\", \"close\", \"isCollapsed$\", \"mode\", \"klass\"], [\"panel-header-button\", \"\", 4, \"ngIf\"], [\"panel-body\", \"\", 1, \"p-3\", \"filter-body\"], [3, \"actions\", \"appendActions\", \"fieldMode\", \"fields\", \"record\", \"special\", 4, \"ngIf\"], [4, \"ngIf\"], [\"panel-header-button\", \"\"], [3, \"config\"], [3, \"actions\", \"appendActions\", \"fieldMode\", \"fields\", \"record\", \"special\"], [\"class\", \"float-right mt-4\", \"field-grid-special\", \"\", 4, \"ngIf\"], [\"class\", \"mt-4 align-self-end\", \"field-grid-actions\", \"\", 4, \"ngIf\"], [\"field-grid-special\", \"\", 1, \"float-right\", \"mt-4\"], [\"class\", \"d-inline-block form-check mb-2 mr-sm-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-inline-block\", \"form-check\", \"mb-2\", \"mr-sm-2\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"value\"], [1, \"form-check-label\"], [3, \"labelKey\"], [\"field-grid-actions\", \"\", 1, \"mt-4\", \"align-self-end\"], [3, \"config\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function ListFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ListFilterComponent_scrm_panel_0_Template, 5, 8, \"scrm-panel\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, PanelComponent, DropdownButtonComponent, FieldGridComponent, ɵngcc3.NgForOf, LabelComponent, ButtonComponent, RecordGridComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ListFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListFilterModule = /*#__PURE__*/(() => {\n  class ListFilterModule {}\n\n  ListFilterModule.ɵfac = function ListFilterModule_Factory(t) {\n    return new (t || ListFilterModule)();\n  };\n\n  ListFilterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListFilterModule\n  });\n  ListFilterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, ButtonModule]]\n  });\n  return ListFilterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListFilterModule, {\n    declarations: function () {\n      return [ListFilterComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, ButtonModule];\n    },\n    exports: function () {\n      return [ListFilterComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordListModalModule = /*#__PURE__*/(() => {\n  class RecordListModalModule {}\n\n  RecordListModalModule.ɵfac = function RecordListModalModule_Factory(t) {\n    return new (t || RecordListModalModule)();\n  };\n\n  RecordListModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordListModalModule\n  });\n  RecordListModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModalModule, TableModule, LabelModule, LoadingSpinnerModule, ListFilterModule]]\n  });\n  return RecordListModalModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordListModalModule, {\n    declarations: function () {\n      return [RecordListModalComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModalModule, TableModule, LabelModule, LoadingSpinnerModule, ListFilterModule];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelComponent = /*#__PURE__*/(() => {\n  class RecordPanelComponent {\n    constructor() {\n      this.panelMode = 'closable';\n    }\n\n    ngOnInit() {\n      this.vm$ = this.config.store.vm$;\n      this.initCloseButton();\n\n      if (this.config.panelMode) {\n        this.panelMode = this.config.panelMode;\n      }\n\n      this.collapse = new BehaviorSubject(false);\n      this.isCollapsed$ = this.collapse.asObservable();\n\n      if (!isVoid(this.config.isCollapsed)) {\n        this.collapse.next(this.config.isCollapsed);\n      }\n    }\n\n    ngOnDestroy() {}\n\n    getGridConfig() {\n      return {\n        record$: this.config.store.stagingRecord$,\n        mode$: this.config.store.mode$,\n        fields$: this.config.store.getViewFieldsKeys$(),\n        actions: this.config.actions,\n        klass: 'mt-2 rounded shadow-sm',\n        buttonClass: 'btn btn-outline-danger btn-sm',\n        maxColumns$: of(4).pipe(shareReplay(1)),\n        sizeMap$: of({\n          handset: 1,\n          tablet: 2,\n          web: 3,\n          wide: 4\n        }).pipe(shareReplay(1))\n      };\n    }\n    /**\n     * Init close button\n     */\n\n\n    initCloseButton() {\n      this.closeButton = {\n        onClick: () => {\n          this.config.onClose();\n        }\n      };\n    }\n\n  }\n\n  RecordPanelComponent.ɵfac = function RecordPanelComponent_Factory(t) {\n    return new (t || RecordPanelComponent)();\n  };\n\n  RecordPanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordPanelComponent,\n    selectors: [[\"scrm-record-panel\"]],\n    inputs: {\n      config: \"config\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"close\", \"isCollapsed$\", \"mode\", \"titleKey\", \"klass\", 4, \"ngIf\"], [3, \"close\", \"isCollapsed$\", \"mode\", \"titleKey\", \"klass\"], [\"panel-body\", \"\", 1, \"pl-2\", \"pr-2\"], [4, \"ngIf\"], [3, \"config\"]],\n    template: function RecordPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordPanelComponent_scrm_panel_0_Template, 3, 6, \"scrm-panel\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, PanelComponent, RecordGridComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return RecordPanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass RecordPanelActionHandler extends ActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelModule = /*#__PURE__*/(() => {\n  class RecordPanelModule {}\n\n  RecordPanelModule.ɵfac = function RecordPanelModule_Factory(t) {\n    return new (t || RecordPanelModule)();\n  };\n\n  RecordPanelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordPanelModule\n  });\n  RecordPanelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, ButtonModule, RecordGridModule]]\n  });\n  return RecordPanelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordPanelModule, {\n    declarations: function () {\n      return [RecordPanelComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, ButtonModule, RecordGridModule];\n    },\n    exports: function () {\n      return [RecordPanelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState$3 = {\n  module: '',\n  recordId: '',\n  loading: {\n    data: false,\n    metadata: false\n  },\n  mode: 'detail'\n};\n\nclass BaseRecordContainerStore {\n  constructor(appStateStore, meta, message, fieldManager, language, storeFactory) {\n    this.appStateStore = appStateStore;\n    this.meta = meta;\n    this.message = message;\n    this.fieldManager = fieldManager;\n    this.language = language;\n    this.storeFactory = storeFactory;\n    /** Internal Properties */\n\n    this.internalState = deepClone(initialState$3);\n    this.metadataState = deepClone({});\n    this.store = new BehaviorSubject(this.internalState);\n    this.state$ = this.store.asObservable();\n    this.metadataStore = new BehaviorSubject({});\n    this.metadataState$ = this.metadataStore.asObservable();\n    this.subs = [];\n    this.meta$ = this.metadataState$;\n    this.recordStore = storeFactory.create(this.getViewFields$());\n    this.record$ = this.recordStore.state$.pipe(distinctUntilChanged());\n    this.stagingRecord$ = this.recordStore.staging$.pipe(distinctUntilChanged());\n    this.loading$ = this.state$.pipe(map(state => state.loading.data || state.loading.metadata));\n    this.mode$ = this.state$.pipe(map(state => state.mode));\n    this.vm$ = this.state$;\n  }\n  /**\n   * Get current module name\n   * @returns {string} module\n   */\n\n\n  getModuleName() {\n    return this.internalState.module;\n  }\n  /**\n   * Get current record id\n   * @returns {string} id\n   */\n\n\n  getRecordId() {\n    return this.internalState.recordId;\n  }\n  /**\n   * Get View Context\n   * @returns {object} ViewContext\n   */\n\n\n  getViewContext() {\n    return {\n      module: this.getModuleName(),\n      id: this.getRecordId()\n    };\n  }\n  /**\n   * Initial record load if not cached and update state.\n   * Returns observable to be used in resolver if needed\n   *\n   * @param {string} module to use\n   * @param {string} recordId to use\n   * @param {string} mode to use\n   * @returns {object} Observable<any>\n   */\n\n\n  init(module, recordId, mode = 'detail') {\n    this.baseInit(module, recordId, mode);\n    this.setMetadataLoading(true);\n    const dataMap = {\n      $meta: this.loadMetadata(),\n      record: this.load()\n    };\n    const $data = forkJoin(dataMap);\n    return $data.pipe(map(({\n      meta,\n      record\n    }) => record));\n  }\n  /**\n   * Init record\n   *\n   * @param {object} record to use\n   * @param {string} mode to use\n   * @param {boolean} loadMetadata to use\n   * @returns {object} Observable<any>\n   */\n\n\n  initRecord(record, mode = 'detail', loadMetadata = true) {\n    this.baseInit(record.module, record.id, mode);\n\n    if (loadMetadata) {\n      this.loadMetadata().pipe(take(1), tap(() => {\n        this.setRecord(record);\n      })).subscribe();\n    }\n  }\n  /**\n   * Init staging\n   * @param {object} record\n   */\n\n\n  initStaging(record) {\n    const baseRecord = deepClone(this.recordStore.extractBaseRecord(record));\n    this.recordStore.setStaging(baseRecord);\n  }\n  /**\n   * Set Record\n   * @param {object} record\n   */\n\n\n  setRecord(record) {\n    const baseRecord = deepClone(this.recordStore.extractBaseRecord(record));\n    this.recordStore.setRecord(baseRecord);\n  }\n  /**\n   * Set Metadata\n   * @param {object} meta\n   */\n\n\n  setMetadata(meta) {\n    this.updateMetadataState(meta);\n    this.setMetadataLoading(false);\n  }\n  /**\n   * Clean destroy\n   */\n\n\n  destroy() {\n    this.clear();\n  }\n  /**\n   * Clear observable cache\n   */\n\n\n  clear() {\n    this.updateState(deepClone(initialState$3));\n    this.recordStore.destroy();\n    this.recordStore = null;\n  }\n  /**\n   * Clear observable cache\n   */\n\n\n  clearAuthBased() {\n    this.clear();\n  }\n  /**\n   * Get staging record\n   *\n   * @returns {string} ViewMode\n   */\n\n\n  getBaseRecord() {\n    return this.recordStore.getBaseRecord();\n  }\n  /**\n   * Get current view mode\n   *\n   * @returns {string} ViewMode\n   */\n\n\n  getMode() {\n    if (!this.internalState) {\n      return null;\n    }\n\n    return this.internalState.mode;\n  }\n  /**\n   * Set new mode\n   *\n   * @param {string} mode ViewMode\n   */\n\n\n  setMode(mode) {\n    this.updateState(Object.assign(Object.assign({}, this.internalState), {\n      mode\n    }));\n  }\n  /**\n   * Set loading flag\n   *\n   * @param {boolean} loading flag\n   */\n\n\n  setDataLoading(loading) {\n    this.updateState(Object.assign(Object.assign({}, this.internalState), {\n      loading: Object.assign(Object.assign({}, this.internalState.loading), {\n        data: loading\n      })\n    }));\n  }\n  /**\n   * Set loading flag\n   *\n   * @param {boolean} loading flag\n   */\n\n\n  setMetadataLoading(loading) {\n    this.updateState(Object.assign(Object.assign({}, this.internalState), {\n      loading: Object.assign(Object.assign({}, this.internalState.loading), {\n        metadata: loading\n      })\n    }));\n  }\n  /**\n   * Save record\n   */\n\n\n  save() {\n    this.setDataLoading(true);\n    return this.recordStore.save().pipe(catchError(() => {\n      this.message.addDangerMessageByKey('LBL_ERROR_SAVING');\n      return of({});\n    }), finalize(() => {\n      this.setDataLoading(false);\n    }));\n  }\n  /**\n   * Validate search filter fields\n   *\n   * @returns {object} Observable<boolean>\n   */\n\n\n  validate() {\n    return this.recordStore.validate();\n  }\n  /**\n   * Load / reload record using current pagination and criteria\n   *\n   * @param {boolean} useCache if to use cache\n   * @returns {object} Observable<RecordViewState>\n   */\n\n\n  load(useCache = true) {\n    this.setDataLoading(true);\n    return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordId, useCache).pipe(tap(data => {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        recordId: data.id,\n        module: data.module\n      }));\n    }), finalize(() => {\n      this.setDataLoading(false);\n    }));\n  }\n  /**\n   * Load / reload record using current pagination and criteria\n   *\n   * @param {boolean} useCache if to use cache\n   * @returns {object} Observable<RecordViewState>\n   */\n\n\n  loadMetadata(useCache = true) {\n    this.setMetadataLoading(true);\n    return this.meta.getMetadata(this.internalState.module).pipe(map(metadata => metadata.recordView), tap(meta => {\n      this.updateMetadataState(meta);\n    }), finalize(() => {\n      this.setMetadataLoading(false);\n    }));\n  }\n  /**\n   * Update the state\n   *\n   * @param {object} state to set\n   */\n\n\n  updateState(state) {\n    this.store.next(this.internalState = state);\n  }\n  /**\n   * Update the metadata state\n   *\n   * @param {object} state to set\n   */\n\n\n  updateMetadataState(state) {\n    this.metadataStore.next(this.metadataState = state);\n  }\n  /**\n   * Get record view metadata\n   *\n   * @returns {object} metadata M\n   */\n\n\n  getMetadata() {\n    return deepClone(this.metadataState);\n  }\n  /**\n   * Base store initialization\n   * @param module\n   * @param recordId\n   * @param mode\n   */\n\n\n  baseInit(module, recordId, mode = 'detail') {\n    this.updateState(Object.assign(Object.assign({}, this.internalState), {\n      module,\n      recordId,\n      mode\n    }));\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelStore = /*#__PURE__*/(() => {\n  class RecordPanelStore extends BaseRecordContainerStore {\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<ViewFieldDefinition[]>\n     */\n    getViewFields$() {\n      return this.meta$.pipe(map(meta => {\n        return meta.fields;\n      }));\n    }\n    /**\n     * Get view fields keys observable\n     *\n     * @returns {object} Observable<string[]>\n     */\n\n\n    getViewFieldsKeys$() {\n      return this.meta$.pipe(map(meta => {\n        if (!meta.fields || !meta.fields.length) {\n          return [];\n        }\n\n        const keys = [];\n        meta.fields.forEach(field => {\n          keys.push(field.name);\n        });\n        return keys;\n      }));\n    }\n    /**\n     * Init record\n     *\n     * @param {object} record to use\n     * @param {string} mode to use\n     * @param {boolean} loadMetadata to use\n     * @returns {object} Observable<any>\n     */\n\n\n    initRecord(record, mode = 'detail', loadMetadata = true) {\n      super.initRecord(record, mode, loadMetadata);\n      this.setRecord(record);\n    }\n\n  }\n\n  RecordPanelStore.ɵfac = /*@__PURE__*/function () {\n    let ɵRecordPanelStore_BaseFactory;\n    return function RecordPanelStore_Factory(t) {\n      return (ɵRecordPanelStore_BaseFactory || (ɵRecordPanelStore_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(RecordPanelStore)))(t || RecordPanelStore);\n    };\n  }();\n\n  RecordPanelStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordPanelStore,\n    factory: RecordPanelStore.ɵfac\n  });\n  return RecordPanelStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelStoreFactory = /*#__PURE__*/(() => {\n  class RecordPanelStoreFactory {\n    constructor(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, metadataStore, message, recordManager, fieldManager, recordStoreFactory) {\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.metadataStore = metadataStore;\n      this.message = message;\n      this.recordManager = recordManager;\n      this.fieldManager = fieldManager;\n      this.recordStoreFactory = recordStoreFactory;\n    }\n\n    create() {\n      return new RecordPanelStore(this.appStateStore, this.metadataStore, this.message, this.fieldManager, this.languageStore, this.recordStoreFactory);\n    }\n\n  }\n\n  RecordPanelStoreFactory.ɵfac = function RecordPanelStoreFactory_Factory(t) {\n    return new (t || RecordPanelStoreFactory)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(RecordStoreFactory));\n  };\n\n  RecordPanelStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordPanelStoreFactory_Factory() {\n      return new RecordPanelStoreFactory(i0.ɵɵinject(RecordFetchGQL), i0.ɵɵinject(RecordSaveGQL), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(RecordManager), i0.ɵɵinject(FieldManager), i0.ɵɵinject(RecordStoreFactory));\n    },\n    token: RecordPanelStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordPanelStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordStoreList = /*#__PURE__*/(() => {\n  class RecordStoreList {\n    constructor(listStoreFactory, recordStoreFactory) {\n      this.listStoreFactory = listStoreFactory;\n      this.recordStoreFactory = recordStoreFactory;\n      this.subs = [];\n      this.stores = [];\n      this.storeSubject = new BehaviorSubject([]);\n      this.state$ = this.storeSubject.asObservable();\n      this.recordList = listStoreFactory.create();\n      this.stores$ = this.state$;\n      this.storesMap$ = this.stores$.pipe(map(stores => {\n        return this.getStoreMap(stores);\n      }));\n    }\n\n    clear() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    clearAuthBased() {}\n\n    getMetadata() {\n      return null;\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @param {boolean} load\n     */\n\n\n    init(module, load = true) {\n      const load$ = this.recordList.init(module, load, 'list_max_entries_per_subpanel');\n      this.subs.push(this.recordList.records$.subscribe(records => {\n        this.initStores(records);\n      }));\n\n      if (!load$) {\n        return;\n      }\n\n      load$.pipe(tap(recordList => {\n        this.initStores(recordList.records);\n      })).pipe(take(1)).subscribe();\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordList>\n     */\n\n\n    load(useCache = true) {\n      return this.recordList.load(useCache).pipe(tap(recordList => {\n        this.initStores(recordList.records);\n      }));\n    }\n    /**\n     * Init record stores using records\n     * @param records\n     */\n\n\n    initStores(records) {\n      if (!records) {\n        return;\n      }\n\n      const newStores = {};\n      const storesArray = [];\n      const storesMap = this.getStoreMap(this.stores);\n      records.forEach(record => {\n        if (!record || !record.id) {\n          return;\n        }\n\n        const id = record.id;\n\n        if (storesMap[id]) {\n          const store = storesMap[id];\n          store.setRecord(record);\n          newStores[id] = store;\n          storesArray.push(store);\n          return;\n        }\n\n        newStores[id] = this.recordStoreFactory.create();\n\n        if (this.getMetadata()) {\n          newStores[id].setMetadata(this.getMetadata());\n        }\n\n        newStores[id].initRecord(record, 'detail', false);\n        storesArray.push(newStores[id]);\n      });\n      const existingIds = Object.keys(storesMap);\n      existingIds.forEach(id => {\n        if (newStores[id]) {\n          return;\n        }\n\n        storesMap[id].destroy();\n      });\n      this.updateState(storesArray);\n    }\n\n    updateState(stores) {\n      this.storeSubject.next(this.stores = stores);\n    }\n\n    getStoreMap(stores) {\n      const map = {};\n\n      if (!stores || !stores.length) {\n        return map;\n      }\n\n      stores.forEach(store => {\n        map[store.getBaseRecord().id] = store;\n      });\n      return map;\n    }\n\n  }\n\n  RecordStoreList.ɵfac = function RecordStoreList_Factory(t) {\n    return new (t || RecordStoreList)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(undefined));\n  };\n\n  RecordStoreList.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordStoreList,\n    factory: RecordStoreList.ɵfac\n  });\n  return RecordStoreList;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemStore = /*#__PURE__*/(() => {\n  class RecordThreadItemStore extends BaseRecordContainerStore {\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<ViewFieldDefinition[]>\n     */\n    getViewFields$() {\n      return this.meta$.pipe(map(meta => {\n        const fields = [];\n        meta.headerLayout && meta.headerLayout.rows && meta.headerLayout.rows.forEach(row => {\n          row.cols.forEach(col => {\n            if (col.field) {\n              fields.push(col.field);\n            }\n          });\n        });\n        meta.bodyLayout && meta.bodyLayout.rows && meta.bodyLayout.rows.forEach(row => {\n          row.cols.forEach(col => {\n            if (col.field) {\n              fields.push(col.field);\n            }\n          });\n        });\n        return fields;\n      }));\n    }\n    /**\n     * Init record\n     *\n     * @param {object} record to use\n     * @param {string} mode to use\n     * @param {boolean} loadMetadata to use\n     * @returns {object} Observable<any>\n     */\n\n\n    initRecord(record, mode = 'detail', loadMetadata = true) {\n      super.initRecord(record, mode, loadMetadata);\n      this.setRecord(record);\n    }\n\n  }\n\n  RecordThreadItemStore.ɵfac = /*@__PURE__*/function () {\n    let ɵRecordThreadItemStore_BaseFactory;\n    return function RecordThreadItemStore_Factory(t) {\n      return (ɵRecordThreadItemStore_BaseFactory || (ɵRecordThreadItemStore_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(RecordThreadItemStore)))(t || RecordThreadItemStore);\n    };\n  }();\n\n  RecordThreadItemStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordThreadItemStore,\n    factory: RecordThreadItemStore.ɵfac\n  });\n  return RecordThreadItemStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemStoreFactory = /*#__PURE__*/(() => {\n  class RecordThreadItemStoreFactory {\n    constructor(appStateStore, meta, message, fieldManager, language, storeFactory) {\n      this.appStateStore = appStateStore;\n      this.meta = meta;\n      this.message = message;\n      this.fieldManager = fieldManager;\n      this.language = language;\n      this.storeFactory = storeFactory;\n    }\n\n    create() {\n      return new RecordThreadItemStore(this.appStateStore, this.meta, this.message, this.fieldManager, this.language, this.storeFactory);\n    }\n\n  }\n\n  RecordThreadItemStoreFactory.ɵfac = function RecordThreadItemStoreFactory_Factory(t) {\n    return new (t || RecordThreadItemStoreFactory)(ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(FieldManager), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordStoreFactory));\n  };\n\n  RecordThreadItemStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemStoreFactory_Factory() {\n      return new RecordThreadItemStoreFactory(i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(FieldManager), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(RecordStoreFactory));\n    },\n    token: RecordThreadItemStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadStore = /*#__PURE__*/(() => {\n  class RecordThreadStore extends RecordStoreList {\n    constructor(listStoreFactory, recordStoreFactory) {\n      super(listStoreFactory, recordStoreFactory);\n      this.listStoreFactory = listStoreFactory;\n      this.recordStoreFactory = recordStoreFactory;\n      this.$loading = this.recordList.loading$;\n    }\n\n    init(module, load = true) {\n      super.init(module, load);\n    }\n\n    setFilters(filters) {\n      let criteria = this.recordList.criteria;\n      criteria = Object.assign(Object.assign({}, criteria), filters);\n\n      if (filters && filters.orderBy) {\n        let sortOrder = SortDirection.DESC;\n\n        if (filters.sortOrder && String(filters.sortOrder).toUpperCase() === 'ASC') {\n          sortOrder = SortDirection.ASC;\n        }\n\n        this.recordList.updateSorting(filters.orderBy, sortOrder, false);\n      }\n\n      this.recordList.updateSearchCriteria(criteria, false);\n      return this.load(false).pipe(map(value => value.records));\n    }\n\n    getMetadata() {\n      return this.metadata;\n    }\n\n    setMetadata(meta) {\n      return this.metadata = meta;\n    }\n\n    allLoaded() {\n      const pagination = this.recordList.getPagination();\n\n      if (!pagination) {\n        return false;\n      }\n\n      return pagination.pageSize >= pagination.total;\n    }\n\n    loadMore(jump = 10) {\n      const pagination = this.recordList.getPagination();\n      const currentPageSize = pagination.pageSize || 0;\n      let newPageSize = currentPageSize + jump;\n      this.recordList.setPageSize(newPageSize);\n      this.recordList.updatePagination(0);\n    }\n\n    reload() {\n      this.recordList.updatePagination(0);\n    }\n\n  }\n\n  RecordThreadStore.ɵfac = function RecordThreadStore_Factory(t) {\n    return new (t || RecordThreadStore)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(RecordThreadItemStoreFactory));\n  };\n\n  RecordThreadStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordThreadStore,\n    factory: RecordThreadStore.ɵfac\n  });\n  return RecordThreadStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadStoreFactory = /*#__PURE__*/(() => {\n  class RecordThreadStoreFactory {\n    constructor(recordListFactory, recordStoreFactory) {\n      this.recordListFactory = recordListFactory;\n      this.recordStoreFactory = recordStoreFactory;\n    }\n\n    create() {\n      return new RecordThreadStore(this.recordListFactory, this.recordStoreFactory);\n    }\n\n  }\n\n  RecordThreadStoreFactory.ɵfac = function RecordThreadStoreFactory_Factory(t) {\n    return new (t || RecordThreadStoreFactory)(ɵngcc0.ɵɵinject(RecordListStoreFactory), ɵngcc0.ɵɵinject(RecordThreadItemStoreFactory));\n  };\n\n  RecordThreadStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadStoreFactory_Factory() {\n      return new RecordThreadStoreFactory(i0.ɵɵinject(RecordListStoreFactory), i0.ɵɵinject(RecordThreadItemStoreFactory));\n    },\n    token: RecordThreadStoreFactory,\n    providedIn: \"root\"\n  });\n  return RecordThreadStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadComponent = /*#__PURE__*/(() => {\n  class RecordThreadComponent {\n    constructor(storeFactory, itemFactory, recordManager, message) {\n      this.storeFactory = storeFactory;\n      this.itemFactory = itemFactory;\n      this.recordManager = recordManager;\n      this.message = message;\n      this.loading = false;\n      this.maxHeight = 400;\n      this.direction = 'asc';\n      this.shouldResetScroll = false;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (!isVoid(this.config.maxListHeight)) {\n        this.maxHeight = this.config.maxListHeight;\n      }\n\n      if (!this.config.store) {\n        this.store = this.storeFactory.create();\n      }\n\n      if (!this.config.module) {\n        return;\n      }\n\n      this.direction = this.config.direction || this.direction;\n      this.store.setMetadata(this.config.itemConfig.metadata);\n      this.store.init(this.config.module, false);\n      this.initCreate();\n      this.initDataSubscription();\n\n      if (this.config.filters$) {\n        this.subs.push(this.config.filters$.subscribe(filters => {\n          this.store.setFilters(filters).pipe(take(1)).subscribe();\n        }));\n      } else {\n        this.store.load(false);\n      }\n\n      this.initLoading();\n    }\n\n    ngAfterViewInit() {\n      this.shouldResetScroll = true;\n      this.resetScroll();\n    }\n\n    ngOnDestroy() {\n      this.store.clear();\n      this.store = null;\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    buildItem(item, itemRef) {\n      let klass = 'record-thread-list-item';\n\n      if (this.config.itemConfig.klass) {\n        klass += ' ' + this.config.itemConfig.klass;\n      }\n\n      return Object.assign(Object.assign({}, this.config.itemConfig), {\n        store: item,\n        threadStore: this.store,\n        klass: klass,\n        expanded: () => {\n          this.scrollToItem(itemRef);\n        },\n        collapsed: () => {\n          this.scrollToItem(itemRef);\n        }\n      });\n    }\n\n    getLoadMoreButton() {\n      return {\n        klass: 'load-more-button btn btn-link btn-sm',\n        labelKey: 'LBL_LOAD_MORE',\n        onClick: () => {\n          this.store.loadMore();\n        }\n      };\n    }\n\n    buildCreateItem() {\n      return Object.assign(Object.assign({}, this.config.createConfig), {\n        store: this.createStore,\n        rowClass: {\n          'pt-1': true\n        },\n        klass: 'record-thread-create-item'\n      });\n    }\n\n    getCreateButton() {\n      return {\n        klass: 'create-thread-item-button btn btn-danger btn-sm',\n        labelKey: 'LBL_SUBMIT_BUTTON_LABEL',\n        onClick: () => {\n          this.createStore.validate().pipe(take(1)).subscribe(valid => {\n            if (valid) {\n              this.createStore.save().pipe(take(1)).subscribe(() => {\n                this.store.reload();\n                this.initRecord();\n                this.shouldResetScroll = true;\n                this.message.addSuccessMessageByKey('LBL_ACTION_SUCCESS');\n              });\n              return;\n            }\n\n            this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n          });\n        }\n      };\n    }\n\n    allLoaded() {\n      return !!(this.store && this.store.allLoaded());\n    }\n\n    getMaxHeight() {\n      if (this.maxHeight == 0) {\n        return null;\n      }\n\n      return {\n        'max-height.px': this.maxHeight,\n        'overflow-y': 'auto'\n      };\n    }\n\n    initRecord() {\n      const emptyRecord = this.recordManager.buildEmptyRecord(this.config.module);\n      this.addPresetFields(emptyRecord);\n      let mode = 'edit';\n\n      if (this.config.createConfig && this.config.createConfig.initialMode) {\n        mode = this.config.createConfig.initialMode;\n      }\n\n      this.createStore.initRecord(emptyRecord, mode, false);\n    }\n\n    scrollToEnd() {\n      if (!this.listContainer || !this.listContainer.nativeElement) {\n        return;\n      }\n\n      this.scrollTo(this.listContainer.nativeElement.scrollHeight);\n    }\n\n    scrollToTop() {\n      this.scrollTo(0);\n    }\n\n    scrollTo(position) {\n      try {\n        this.listContainer.nativeElement.scrollTop = position;\n      } catch (err) {}\n    }\n\n    scrollToItem(item) {\n      if (!item || !this.listContainer || !this.listContainer.nativeElement) {\n        return;\n      }\n\n      const elementTop = item.offsetTop;\n      const parentTop = this.listContainer.nativeElement.offsetTop;\n      const relativeTop = elementTop - parentTop;\n      this.scrollTo(relativeTop);\n    }\n\n    resetScroll() {\n      if (this.shouldResetScroll === false) {\n        return;\n      }\n\n      if (this.direction === 'asc') {\n        this.scrollToEnd();\n      } else {\n        this.scrollToTop();\n      }\n\n      this.shouldResetScroll = false;\n    }\n\n    scheduleScrollReset() {\n      setTimeout(() => {\n        this.resetScroll();\n      }, 500);\n    }\n\n    initCreate() {\n      if (!this.config.create) {\n        return;\n      }\n\n      this.createStore = this.itemFactory.create();\n      this.createStore.setMetadata(this.config.createConfig.metadata);\n      this.initRecord();\n      this.initPresetFieldsMapping();\n    }\n\n    initPresetFieldsMapping() {\n      if (!this.config.presetFields$) {\n        return;\n      }\n\n      this.subs.push(this.config.presetFields$.subscribe(presetFieldValues => {\n        if (!presetFieldValues || !Object.keys(presetFieldValues).length) {\n          return;\n        }\n\n        this.presetFieldValues = presetFieldValues;\n        const record = this.createStore.recordStore.getBaseRecord();\n        this.addPresetFields(record);\n        this.createStore.recordStore.setRecord(record);\n      }));\n    }\n\n    addPresetFields(record) {\n      if (!this.presetFieldValues) {\n        return;\n      }\n\n      record.attributes = Object.assign(Object.assign({}, this.presetFieldValues), record.attributes || {});\n    }\n\n    initDataSubscription() {\n      this.subs.push(this.store.stores$.subscribe(records => {\n        if (!this.records || !this.records.length) {\n          this.shouldResetScroll = true;\n        }\n\n        if (this.direction === 'asc') {\n          this.records = records.reverse();\n          this.scheduleScrollReset();\n          return;\n        }\n\n        this.records = records;\n        this.scheduleScrollReset();\n      }));\n    }\n\n    initLoading() {\n      const loading = [this.store.$loading];\n\n      if (this.createStore && this.createStore.loading$) {\n        loading.push(this.createStore.loading$);\n      }\n\n      const $loading = combineLatest(loading);\n      this.subs.push($loading.subscribe(loadings => {\n        if (!loadings || !loadings.length) {\n          this.loading = false;\n          return;\n        }\n\n        let loading = false;\n        loadings.forEach(value => {\n          loading = loading || value;\n        });\n        this.loading = loading;\n      }));\n    }\n\n  }\n\n  RecordThreadComponent.ɵfac = function RecordThreadComponent_Factory(t) {\n    return new (t || RecordThreadComponent)(ɵngcc0.ɵɵdirectiveInject(RecordThreadStoreFactory), ɵngcc0.ɵɵdirectiveInject(RecordThreadItemStoreFactory), ɵngcc0.ɵɵdirectiveInject(RecordManager), ɵngcc0.ɵɵdirectiveInject(MessageService));\n  };\n\n  RecordThreadComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordThreadComponent,\n    selectors: [[\"scrm-record-thread\"]],\n    viewQuery: function RecordThreadComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c31, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listContainer = _t.first);\n      }\n    },\n    inputs: {\n      config: \"config\"\n    },\n    decls: 5,\n    vars: 7,\n    consts: [[\"class\", \"d-flex record-thread-no-data justify-content-center h3\", 4, \"ngIf\"], [\"class\", \"d-flex record-thread-loading justify-content-center\", 4, \"ngIf\"], [\"class\", \"record-thread-list\", 3, \"ngStyle\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"d-flex\", \"record-thread-no-data\", \"justify-content-center\", \"h3\"], [\"labelKey\", \"LBL_NO_DATA\"], [1, \"d-flex\", \"record-thread-loading\", \"justify-content-center\"], [3, \"overlay\"], [1, \"record-thread-list\", 3, \"ngStyle\"], [\"list\", \"\"], [\"class\", \"record-thread-load-more d-flex justify-content-center flex-grow-1\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"record-thread-load-more\", \"d-flex\", \"justify-content-center\", \"flex-grow-1\"], [3, \"config\"], [\"item\", \"\"], [\"class\", \"d-flex flex-column record-thread-create-container\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-column\", \"record-thread-create-container\"], [1, \"flex-grow-1\"], [1, \"flex-grow-1\", \"d-flex\", \"justify-content-start\", \"pt-1\", \"record-thread-create-buttons\"]],\n    template: function RecordThreadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵtemplate(1, RecordThreadComponent_div_1_Template, 2, 0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, RecordThreadComponent_div_2_Template, 2, 1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, RecordThreadComponent_div_3_Template, 5, 4, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, RecordThreadComponent_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate1(\"record-thread \", ctx.config && ctx.config.klass || \"\", \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.records && !ctx.records.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.records && ctx.records.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config.create && ctx.createStore);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, LabelComponent, LoadingSpinnerComponent, ɵngcc3.NgStyle, ɵngcc3.NgForOf, ButtonComponent, RecordThreadItemComponent];\n    },\n    encapsulation: 2\n  });\n  return RecordThreadComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass RecordThreadItemActionHandler extends ActionHandler {\n  checkRecordAccess(data, defaultAcls = []) {\n    var _a, _b;\n\n    const record = data.itemStore.recordStore.getBaseRecord();\n    const acls = (_a = record.acls) !== null && _a !== void 0 ? _a : [];\n\n    if (!acls || !acls.length) {\n      return false;\n    }\n\n    const action = (_b = data.action) !== null && _b !== void 0 ? _b : null;\n    return this.checkAccess(action, acls, defaultAcls);\n  }\n  /**\n   * Navigate back\n   * @param navigation\n   * @param params\n   * @param id\n   * @param moduleName\n   * @param record\n   */\n\n\n  navigateBack(navigation, params, id, moduleName, record) {\n    let returnModule = navigation.getReturnModule(params);\n    let returnAction = navigation.getReturnAction(params);\n    let returnId = navigation.getReturnId(params);\n\n    if (id === returnId) {\n      return;\n    }\n\n    if (returnModule === moduleName && returnAction === 'record' && returnId !== id) {\n      return;\n    }\n\n    if (!returnModule || !returnAction) {\n      return;\n    }\n\n    navigation.navigateBack(record, moduleName, params);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncProcessRecordThreadItemAction = /*#__PURE__*/(() => {\n  class AsyncProcessRecordThreadItemAction extends RecordThreadItemActionHandler {\n    constructor() {\n      super();\n      this.key = 'async-process';\n      this.modes = ALL_VIEW_MODES;\n    }\n\n    run(data) {}\n\n    shouldDisplay(data) {\n      var _a, _b;\n\n      const defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];\n\n      if (!defaultAcls.length) {\n        return true;\n      }\n\n      return this.checkRecordAccess(data, defaultAcls);\n    }\n\n  }\n\n  AsyncProcessRecordThreadItemAction.ɵfac = function AsyncProcessRecordThreadItemAction_Factory(t) {\n    return new (t || AsyncProcessRecordThreadItemAction)();\n  };\n\n  AsyncProcessRecordThreadItemAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncProcessRecordThreadItemAction_Factory() {\n      return new AsyncProcessRecordThreadItemAction();\n    },\n    token: AsyncProcessRecordThreadItemAction,\n    providedIn: \"root\"\n  });\n  return AsyncProcessRecordThreadItemAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemCancelAction = /*#__PURE__*/(() => {\n  class RecordThreadItemCancelAction extends RecordThreadItemActionHandler {\n    constructor(modalService, navigation) {\n      super();\n      this.modalService = modalService;\n      this.navigation = navigation;\n      this.key = 'cancel';\n      this.modes = ['edit', 'detail'];\n    }\n\n    run(data) {\n      if (data.itemStore.recordStore.isDirty()) {\n        this.showConfirmationModal(data);\n        return;\n      }\n\n      this.cancel(data);\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n    cancel(data) {\n      data.itemStore.recordStore.resetStaging();\n      data.itemStore.setMode('detail');\n    }\n\n    showConfirmationModal(data) {\n      const modal = this.modalService.open(MessageModalComponent);\n      modal.componentInstance.textKey = 'WARN_UNSAVED_CHANGES';\n      modal.componentInstance.buttons = [{\n        labelKey: 'LBL_CANCEL',\n        klass: ['btn-secondary'],\n        onClick: activeModal => activeModal.dismiss()\n      }, {\n        labelKey: 'LBL_PROCEED',\n        klass: ['btn-main'],\n        onClick: activeModal => {\n          this.cancel(data);\n          activeModal.close();\n        }\n      }];\n    }\n\n  }\n\n  RecordThreadItemCancelAction.ɵfac = function RecordThreadItemCancelAction_Factory(t) {\n    return new (t || RecordThreadItemCancelAction)(ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(ModuleNavigation));\n  };\n\n  RecordThreadItemCancelAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemCancelAction_Factory() {\n      return new RecordThreadItemCancelAction(i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(ModuleNavigation));\n    },\n    token: RecordThreadItemCancelAction,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemCancelAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemEditAction = /*#__PURE__*/(() => {\n  class RecordThreadItemEditAction extends RecordThreadItemActionHandler {\n    constructor() {\n      super();\n      this.key = 'edit';\n      this.modes = ['detail'];\n    }\n\n    run(data) {\n      data.itemStore.setMode('edit');\n    }\n\n    shouldDisplay(data) {\n      return this.checkRecordAccess(data, ['edit']);\n    }\n\n  }\n\n  RecordThreadItemEditAction.ɵfac = function RecordThreadItemEditAction_Factory(t) {\n    return new (t || RecordThreadItemEditAction)();\n  };\n\n  RecordThreadItemEditAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemEditAction_Factory() {\n      return new RecordThreadItemEditAction();\n    },\n    token: RecordThreadItemEditAction,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemEditAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemSaveAction = /*#__PURE__*/(() => {\n  class RecordThreadItemSaveAction extends RecordThreadItemActionHandler {\n    constructor(message, navigation) {\n      super();\n      this.message = message;\n      this.navigation = navigation;\n      this.key = 'save';\n      this.modes = ['edit'];\n    }\n\n    run(data) {\n      data.itemStore.recordStore.validate().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          data.itemStore.save().pipe(take(1)).subscribe(record => {\n            data.itemStore.setMode('detail');\n          });\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n  }\n\n  RecordThreadItemSaveAction.ɵfac = function RecordThreadItemSaveAction_Factory(t) {\n    return new (t || RecordThreadItemSaveAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ModuleNavigation));\n  };\n\n  RecordThreadItemSaveAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemSaveAction_Factory() {\n      return new RecordThreadItemSaveAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(ModuleNavigation));\n    },\n    token: RecordThreadItemSaveAction,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemSaveAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemActionManager = /*#__PURE__*/(() => {\n  class RecordThreadItemActionManager extends BaseActionManager {\n    constructor(async, cancel, edit, save) {\n      super();\n      this.async = async;\n      this.cancel = cancel;\n      this.edit = edit;\n      this.save = save;\n      async.modes.forEach(mode => this.actions[mode][async.key] = async);\n      edit.modes.forEach(mode => this.actions[mode][edit.key] = edit);\n      save.modes.forEach(mode => this.actions[mode][save.key] = save);\n      cancel.modes.forEach(mode => this.actions[mode][cancel.key] = cancel);\n    }\n\n  }\n\n  RecordThreadItemActionManager.ɵfac = function RecordThreadItemActionManager_Factory(t) {\n    return new (t || RecordThreadItemActionManager)(ɵngcc0.ɵɵinject(AsyncProcessRecordThreadItemAction), ɵngcc0.ɵɵinject(RecordThreadItemCancelAction), ɵngcc0.ɵɵinject(RecordThreadItemEditAction), ɵngcc0.ɵɵinject(RecordThreadItemSaveAction));\n  };\n\n  RecordThreadItemActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemActionManager_Factory() {\n      return new RecordThreadItemActionManager(i0.ɵɵinject(AsyncProcessRecordThreadItemAction), i0.ɵɵinject(RecordThreadItemCancelAction), i0.ɵɵinject(RecordThreadItemEditAction), i0.ɵɵinject(RecordThreadItemSaveAction));\n    },\n    token: RecordThreadItemActionManager,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemActionsAdapter = /*#__PURE__*/(() => {\n  class RecordThreadItemActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(itemStore, threadStore, language, actionManager, asyncActionService, message, confirmation, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.itemStore = itemStore;\n      this.threadStore = threadStore;\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n      this.defaultActions = {\n        detail: [],\n        edit: [],\n        create: []\n      };\n    }\n\n    getActions(context) {\n      return combineLatest([this.itemStore.meta$, this.itemStore.mode$]).pipe(map(([meta, mode]) => {\n        if (!mode || !meta) {\n          return [];\n        }\n\n        return this.parseModeActions(meta.actions, mode, this.itemStore.getViewContext());\n      }));\n    }\n    /**\n     * Get action name\n     * @param action\n     */\n\n\n    getActionName(action) {\n      return `record-thread-item-${action.key}`;\n    }\n\n    buildActionData(action, context) {\n      return {\n        itemStore: this.itemStore,\n        threadStore: this.threadStore,\n        action: action\n      };\n    }\n    /**\n     * Build backend process input\n     *\n     * @param action\n     * @param actionName\n     * @param moduleName\n     * @param context\n     */\n\n\n    buildActionInput(action, actionName, moduleName, context = null) {\n      const baseRecord = this.itemStore.getBaseRecord();\n      this.message.removeMessages();\n      return {\n        action: actionName,\n        module: baseRecord.module,\n        id: baseRecord.id,\n        params: action && action.params || []\n      };\n    }\n\n    getMode() {\n      return this.itemStore.getMode();\n    }\n\n    getModuleName(context) {\n      return this.itemStore.getModuleName();\n    }\n\n    reload(action, process, context) {\n      var _a, _b, _c, _d;\n\n      const reload = (_b = (_a = process === null || process === void 0 ? void 0 : process.data) === null || _a === void 0 ? void 0 : _a.reload) !== null && _b !== void 0 ? _b : false;\n      const reloadThread = (_d = (_c = process === null || process === void 0 ? void 0 : process.data) === null || _c === void 0 ? void 0 : _c.reloadThread) !== null && _d !== void 0 ? _d : false;\n\n      if (isTrue(reload)) {\n        this.itemStore.load(false).pipe(take(1)).subscribe();\n      }\n\n      if (isTrue(reloadThread)) {\n        this.threadStore.reload();\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    shouldReload(process) {\n      var _a, _b, _c, _d;\n\n      const reload = (_b = (_a = process === null || process === void 0 ? void 0 : process.data) === null || _a === void 0 ? void 0 : _a.reload) !== null && _b !== void 0 ? _b : false;\n      const reloadThread = (_d = (_c = process === null || process === void 0 ? void 0 : process.data) === null || _c === void 0 ? void 0 : _c.reloadThread) !== null && _d !== void 0 ? _d : false;\n      return isTrue(reload) || isTrue(reloadThread);\n    }\n\n  }\n\n  RecordThreadItemActionsAdapter.ɵfac = function RecordThreadItemActionsAdapter_Factory(t) {\n    return new (t || RecordThreadItemActionsAdapter)(ɵngcc0.ɵɵinject(RecordThreadItemStore), ɵngcc0.ɵɵinject(RecordThreadStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordThreadItemActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  RecordThreadItemActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordThreadItemActionsAdapter,\n    factory: RecordThreadItemActionsAdapter.ɵfac\n  });\n  return RecordThreadItemActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemActionsAdapterFactory = /*#__PURE__*/(() => {\n  class RecordThreadItemActionsAdapterFactory {\n    constructor(language, actionManager, asyncActionService, message, confirmation, selectModalService, metadata) {\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    create(itemStore, threadStore) {\n      return new RecordThreadItemActionsAdapter(itemStore, threadStore, this.language, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.selectModalService, this.metadata);\n    }\n\n  }\n\n  RecordThreadItemActionsAdapterFactory.ɵfac = function RecordThreadItemActionsAdapterFactory_Factory(t) {\n    return new (t || RecordThreadItemActionsAdapterFactory)(ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordThreadItemActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  RecordThreadItemActionsAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordThreadItemActionsAdapterFactory_Factory() {\n      return new RecordThreadItemActionsAdapterFactory(i0.ɵɵinject(LanguageStore), i0.ɵɵinject(RecordThreadItemActionManager), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(MetadataStore));\n    },\n    token: RecordThreadItemActionsAdapterFactory,\n    providedIn: \"root\"\n  });\n  return RecordThreadItemActionsAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemComponent = /*#__PURE__*/(() => {\n  class RecordThreadItemComponent {\n    constructor(actionAdapterFactory) {\n      this.actionAdapterFactory = actionAdapterFactory;\n      this.collapsed = false;\n      this.collapsible = false;\n      this.collapseLimit = 300;\n      this.dynamicClass = '';\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.actionAdapter = this.actionAdapterFactory.create(this.config.store, this.config.threadStore);\n      this.initDynamicClass();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    ngAfterViewInit() {\n      if (!this.config || !this.config.collapsible) {\n        return;\n      }\n\n      setTimeout(() => {\n        const collapseLimit = this.config.collapseLimit || this.collapseLimit;\n        let height = this.bodyEl.nativeElement.offsetHeight || this.bodyEl.nativeElement.height;\n\n        if (height > collapseLimit) {\n          this.collapsible = true;\n          this.collapsed = true;\n        }\n      }, 2000);\n    }\n    /**\n     *\n     * Build layout data source according to received configuration\n     * @param {object} layout: FieldFlexboxRow[]\n     * @returns {object} RecordFlexboxConfig\n     */\n\n\n    buildConfig(layout) {\n      return {\n        record$: this.config.store.stagingRecord$,\n        mode$: this.config.store.mode$,\n        layout$: of(layout).pipe(shareReplay(1)),\n        inputClass: Object.assign(Object.assign({}, this.config.inputClass || {}), {\n          'form-control form-control-sm': true\n        }),\n        buttonClass: this.config.buttonClass || '',\n        labelClass: this.config.labelClass || {},\n        rowClass: this.config.rowClass || {},\n        colClass: this.config.colClass || {},\n        actions: this.actionAdapter\n      };\n    }\n\n    getCollapseButton() {\n      return {\n        klass: 'collapse-button btn btn-link btn-sm',\n        labelKey: this.collapsed ? 'LBL_SHOW_MORE' : 'LBL_SHOW_LESS',\n        onClick: () => {\n          this.collapsed = !this.collapsed;\n\n          if (this.collapsed) {\n            this.config && this.config.collapsed();\n          } else {\n            this.config && this.config.expanded();\n          }\n        }\n      };\n    }\n\n    initDynamicClass() {\n      if (!this.config || !this.config.dynamicClass || !this.config.dynamicClass.length) {\n        return;\n      }\n\n      this.subs.push(this.config.store.stagingRecord$.subscribe(record => {\n        const klasses = [];\n\n        if (!record || !record.fields || !Object.keys(record.fields).length) {\n          return;\n        }\n\n        this.config.dynamicClass.forEach(fieldKey => {\n          if (!fieldKey) {\n            return;\n          }\n\n          if (!record.fields[fieldKey] && !record.attributes[fieldKey]) {\n            return;\n          }\n\n          const prefix = fieldKey + '-';\n          let values = [];\n\n          if (!record.fields[fieldKey]) {\n            if (Array.isArray(record.attributes[fieldKey])) {\n              values = values.concat(record.attributes[fieldKey]);\n            } else if (typeof record.attributes[fieldKey] !== 'object') {\n              values.push(record.attributes[fieldKey]);\n            }\n          } else {\n            if (record.fields[fieldKey].value) {\n              values.push(record.fields[fieldKey].value);\n            }\n\n            if (record.fields[fieldKey].valueList && record.fields[fieldKey].valueList.length) {\n              values = values.concat(record.fields[fieldKey].valueList);\n            }\n          }\n\n          if (!values || !values.length) {\n            return;\n          }\n\n          const klass = prefix + values.join(' ' + prefix);\n          klasses.push(klass);\n        });\n        this.dynamicClass = klasses.join(' ');\n      }));\n    }\n    /**\n     * Get body class\n     */\n\n\n    getBodyClass() {\n      var _a, _b, _c, _d;\n\n      return (_d = (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.bodyLayout) === null || _c === void 0 ? void 0 : _c.class) !== null && _d !== void 0 ? _d : '';\n    }\n\n  }\n\n  RecordThreadItemComponent.ɵfac = function RecordThreadItemComponent_Factory(t) {\n    return new (t || RecordThreadItemComponent)(ɵngcc0.ɵɵdirectiveInject(RecordThreadItemActionsAdapterFactory));\n  };\n\n  RecordThreadItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordThreadItemComponent,\n    selectors: [[\"scrm-record-thread-item\"]],\n    viewQuery: function RecordThreadItemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c32, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyEl = _t.first);\n      }\n    },\n    inputs: {\n      config: \"config\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"class\", 4, \"ngIf\"], [1, \"record-thread-item-header\", \"flex-grow-1\"], [4, \"ngIf\"], [\"body\", \"\"], [\"class\", \"fadeout\", 4, \"ngIf\"], [\"class\", \"record-thread-item-collapse d-flex justify-content-center flex-grow-1\", 4, \"ngIf\"], [3, \"config\"], [1, \"fadeout\"], [1, \"record-thread-item-collapse\", \"d-flex\", \"justify-content-center\", \"flex-grow-1\"]],\n    template: function RecordThreadItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordThreadItemComponent_div_0_Template, 8, 15, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config);\n      }\n    },\n    directives: [ɵngcc3.NgIf, RecordFlexboxComponent, ButtonComponent],\n    encapsulation: 2\n  });\n  return RecordThreadItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadItemModule = /*#__PURE__*/(() => {\n  class RecordThreadItemModule {}\n\n  RecordThreadItemModule.ɵfac = function RecordThreadItemModule_Factory(t) {\n    return new (t || RecordThreadItemModule)();\n  };\n\n  RecordThreadItemModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordThreadItemModule\n  });\n  RecordThreadItemModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, FieldLayoutModule, RecordFlexboxModule]]\n  });\n  return RecordThreadItemModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordThreadItemModule, {\n    declarations: function () {\n      return [RecordThreadItemComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, FieldLayoutModule, RecordFlexboxModule];\n    },\n    exports: function () {\n      return [RecordThreadItemComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadModule = /*#__PURE__*/(() => {\n  class RecordThreadModule {}\n\n  RecordThreadModule.ɵfac = function RecordThreadModule_Factory(t) {\n    return new (t || RecordThreadModule)();\n  };\n\n  RecordThreadModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordThreadModule\n  });\n  RecordThreadModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, ButtonModule, RecordThreadItemModule, LoadingSpinnerModule]]\n  });\n  return RecordThreadModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordThreadModule, {\n    declarations: function () {\n      return [RecordThreadComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonModule, PanelModule, FieldGridModule, DropdownButtonModule, LabelModule, RecordGridModule, ButtonModule, RecordThreadItemModule, LoadingSpinnerModule];\n    },\n    exports: function () {\n      return [RecordThreadComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ɵ0$1 = {};\nconst initialState$2 = {\n  module: '',\n  query: {},\n  statistic: {\n    id: '',\n    data: ɵ0$1\n  },\n  loading: false\n};\nlet SeriesStatisticsStore = /*#__PURE__*/(() => {\n  class SeriesStatisticsStore extends StatisticsStore {\n    constructor(fetchGQL) {\n      super(fetchGQL);\n      this.fetchGQL = fetchGQL;\n      this.cache$ = null;\n      this.internalState = deepClone(initialState$2);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.statistic$ = this.state$.pipe(map(state => state.statistic), distinctUntilChanged());\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      super.updateState(state);\n    }\n\n  }\n\n  SeriesStatisticsStore.ɵfac = function SeriesStatisticsStore_Factory(t) {\n    return new (t || SeriesStatisticsStore)(ɵngcc0.ɵɵinject(StatisticsFetchGQL));\n  };\n\n  SeriesStatisticsStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SeriesStatisticsStore,\n    factory: SeriesStatisticsStore.ɵfac\n  });\n  return SeriesStatisticsStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SeriesTraverser = /*#__PURE__*/(() => {\n  class SeriesTraverser {\n    traverse(result, visitor, options) {\n      if (result.singleSeries) {\n        result.singleSeries.forEach(item => {\n          visitor.visit(item, options);\n        });\n      }\n\n      if (result.multiSeries) {\n        result.multiSeries.forEach(series => {\n          series.series.forEach(item => {\n            visitor.visit(item, options);\n          });\n        });\n      }\n    }\n\n  }\n\n  SeriesTraverser.ɵfac = function SeriesTraverser_Factory(t) {\n    return new (t || SeriesTraverser)();\n  };\n\n  SeriesTraverser.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SeriesTraverser_Factory() {\n      return new SeriesTraverser();\n    },\n    token: SeriesTraverser,\n    providedIn: \"root\"\n  });\n  return SeriesTraverser;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CurrencyUnitConverter = /*#__PURE__*/(() => {\n  class CurrencyUnitConverter {\n    constructor(currencyService, preferences) {\n      this.currencyService = currencyService;\n      this.preferences = preferences;\n    }\n\n    toUserFormat(value, options = null) {\n      const numberValue = parseFloat(value);\n\n      if (!isFinite(numberValue)) {\n        return value;\n      }\n\n      const userCurrency = this.currencyService.getUserCurrency();\n      return this.currencyService.baseToCurrency(userCurrency.id, numberValue).toString();\n    }\n\n    toInternalFormat(value) {\n      const numberValue = parseFloat(value);\n\n      if (!isFinite(numberValue)) {\n        return value;\n      }\n\n      const userCurrency = this.currencyService.getUserCurrency();\n      return this.currencyService.currencyToBase(userCurrency.id, numberValue).toString();\n    }\n\n  }\n\n  CurrencyUnitConverter.ɵfac = function CurrencyUnitConverter_Factory(t) {\n    return new (t || CurrencyUnitConverter)(ɵngcc0.ɵɵinject(CurrencyService), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  CurrencyUnitConverter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CurrencyUnitConverter_Factory() {\n      return new CurrencyUnitConverter(i0.ɵɵinject(CurrencyService), i0.ɵɵinject(UserPreferenceStore));\n    },\n    token: CurrencyUnitConverter,\n    providedIn: \"root\"\n  });\n  return CurrencyUnitConverter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DataTypeUnitConverter = /*#__PURE__*/(() => {\n  class DataTypeUnitConverter {\n    constructor(currencyUnitConverter) {\n      this.currencyUnitConverter = currencyUnitConverter;\n      this.map = {};\n      this.addUnitConverter('currency', currencyUnitConverter);\n    }\n\n    addUnitConverter(unitType, unitConverter) {\n      this.map[unitType] = unitConverter;\n    }\n\n    toUserFormat(dataType, value, options) {\n      if (!dataType) {\n        return value;\n      }\n\n      const formatter = this.map[dataType];\n\n      if (!formatter) {\n        return value;\n      }\n\n      return formatter.toUserFormat(value, options);\n    }\n\n    toInternalFormat(dataType, value) {\n      if (!dataType) {\n        return value;\n      }\n\n      const formatter = this.map[dataType];\n\n      if (!formatter) {\n        return value;\n      }\n\n      return formatter.toInternalFormat(value);\n    }\n\n  }\n\n  DataTypeUnitConverter.ɵfac = function DataTypeUnitConverter_Factory(t) {\n    return new (t || DataTypeUnitConverter)(ɵngcc0.ɵɵinject(CurrencyUnitConverter));\n  };\n\n  DataTypeUnitConverter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DataTypeUnitConverter_Factory() {\n      return new DataTypeUnitConverter(i0.ɵɵinject(CurrencyUnitConverter));\n    },\n    token: DataTypeUnitConverter,\n    providedIn: \"root\"\n  });\n  return DataTypeUnitConverter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DataTypeSeriesMapper = /*#__PURE__*/(() => {\n  class DataTypeSeriesMapper {\n    constructor(converter) {\n      this.converter = converter;\n    }\n\n    visit(item, options) {\n      var _a, _b;\n\n      const dataType = (_a = options === null || options === void 0 ? void 0 : options.dataType) !== null && _a !== void 0 ? _a : null;\n      const direction = (_b = options === null || options === void 0 ? void 0 : options.direction) !== null && _b !== void 0 ? _b : 'user-unit';\n\n      if (!dataType) {\n        return;\n      }\n\n      const numberValue = parseFloat(item.value.toString());\n\n      if (!isFinite(numberValue)) {\n        return;\n      }\n\n      if (direction === 'user-unit') {\n        item.value = this.converter.toUserFormat(dataType, numberValue.toString());\n        return;\n      }\n\n      item.value = this.converter.toInternalFormat(dataType, numberValue.toString());\n    }\n\n  }\n\n  DataTypeSeriesMapper.ɵfac = function DataTypeSeriesMapper_Factory(t) {\n    return new (t || DataTypeSeriesMapper)(ɵngcc0.ɵɵinject(DataTypeUnitConverter));\n  };\n\n  DataTypeSeriesMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function DataTypeSeriesMapper_Factory() {\n      return new DataTypeSeriesMapper(i0.ɵɵinject(DataTypeUnitConverter));\n    },\n    token: DataTypeSeriesMapper,\n    providedIn: \"root\"\n  });\n  return DataTypeSeriesMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SeriesMapper = /*#__PURE__*/(() => {\n  class SeriesMapper {\n    constructor(traverser, dataTypeMapper) {\n      this.traverser = traverser;\n      this.dataTypeMapper = dataTypeMapper;\n      this.registry = {};\n      this.addMapper('data-type-unit-converter', dataTypeMapper);\n    }\n\n    addMapper(unitType, mapper) {\n      this.registry[unitType] = mapper;\n    }\n\n    map(result, mapperType, options) {\n      var _a;\n\n      const mapper = (_a = this === null || this === void 0 ? void 0 : this.registry[mapperType]) !== null && _a !== void 0 ? _a : null;\n\n      if (!mapper) {\n        return;\n      }\n\n      this.traverser.traverse(result, mapper, options);\n    }\n\n  }\n\n  SeriesMapper.ɵfac = function SeriesMapper_Factory(t) {\n    return new (t || SeriesMapper)(ɵngcc0.ɵɵinject(SeriesTraverser), ɵngcc0.ɵɵinject(DataTypeSeriesMapper));\n  };\n\n  SeriesMapper.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SeriesMapper_Factory() {\n      return new SeriesMapper(i0.ɵɵinject(SeriesTraverser), i0.ɵɵinject(DataTypeSeriesMapper));\n    },\n    token: SeriesMapper,\n    providedIn: \"root\"\n  });\n  return SeriesMapper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst ɵ0 = {};\nconst initialState$1 = {\n  module: '',\n  query: {},\n  statistic: {\n    id: '',\n    data: ɵ0\n  },\n  loading: false\n};\nlet ChartDataStore = /*#__PURE__*/(() => {\n  class ChartDataStore extends SeriesStatisticsStore {\n    constructor(fetchGQL, formatter, seriesMapper) {\n      super(fetchGQL);\n      this.fetchGQL = fetchGQL;\n      this.formatter = formatter;\n      this.seriesMapper = seriesMapper;\n      this.internalState = deepClone(initialState$1);\n      this.store = new BehaviorSubject(this.internalState);\n      this.defaultOptions = {};\n      this.state$ = this.store.asObservable();\n      this.statistic$ = this.state$.pipe(map(state => state.statistic), distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading), distinctUntilChanged());\n    }\n\n    setDefaultOptions(chartOptions) {\n      this.defaultOptions = chartOptions;\n    }\n\n    getDataSource() {\n      return this.internalState.dataSource;\n    }\n\n    addNewState(statistic) {\n      if (!statistic.metadata || !statistic.metadata.dataType) {\n        return;\n      }\n\n      this.injectDefaultValues(statistic);\n      const dataSource = this.buildCharDataSource(statistic);\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        statistic,\n        dataSource,\n        loading: false\n      }));\n    }\n\n    injectDefaultValues(statistic) {\n      if (!statistic.metadata.chartOptions) {\n        statistic.metadata.chartOptions = deepClone(this.defaultOptions);\n        return;\n      }\n\n      Object.keys(this.defaultOptions).forEach(optionKey => {\n        if (!(optionKey in statistic.metadata.chartOptions)) {\n          statistic.metadata.chartOptions[optionKey] = this.defaultOptions[optionKey];\n        }\n      });\n    }\n\n    buildCharDataSource(statistic) {\n      const dataType = statistic.metadata.dataType || '';\n      let formatOptions = null;\n      const digits = statistic.metadata && statistic.metadata.digits || null;\n\n      if (digits !== null) {\n        formatOptions = {\n          digits\n        };\n      }\n\n      return {\n        options: statistic.metadata.chartOptions || {},\n        getResults: () => of(this.buildSeriesResult(statistic)).pipe(shareReplay(1)),\n        tickFormatting: value => this.formatter.toUserFormat(dataType, value, formatOptions),\n        tooltipFormatting: value => this.formatter.toUserFormat(dataType, value, formatOptions)\n      };\n    }\n\n    buildSeriesResult(statistic) {\n      const dataType = statistic.metadata.dataType || '';\n      const result = {};\n      const singleSeries = statistic.data.singleSeries || null;\n\n      if (singleSeries) {\n        result.singleSeries = singleSeries;\n      }\n\n      const multiSeries = statistic.data.multiSeries || null;\n\n      if (multiSeries) {\n        result.multiSeries = multiSeries;\n      }\n\n      this.seriesMapper.map(result, 'data-type-unit-converter', {\n        dataType\n      });\n      return result;\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      super.updateState(state);\n    }\n\n  }\n\n  ChartDataStore.ɵfac = function ChartDataStore_Factory(t) {\n    return new (t || ChartDataStore)(ɵngcc0.ɵɵinject(StatisticsFetchGQL), ɵngcc0.ɵɵinject(DataTypeFormatter), ɵngcc0.ɵɵinject(SeriesMapper));\n  };\n\n  ChartDataStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ChartDataStore,\n    factory: ChartDataStore.ɵfac\n  });\n  return ChartDataStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartDataStoreFactory = /*#__PURE__*/(() => {\n  class ChartDataStoreFactory {\n    constructor(fetchGQL, formatter, seriesMapper) {\n      this.fetchGQL = fetchGQL;\n      this.formatter = formatter;\n      this.seriesMapper = seriesMapper;\n    }\n\n    create() {\n      return new ChartDataStore(this.fetchGQL, this.formatter, this.seriesMapper);\n    }\n\n  }\n\n  ChartDataStoreFactory.ɵfac = function ChartDataStoreFactory_Factory(t) {\n    return new (t || ChartDataStoreFactory)(ɵngcc0.ɵɵinject(StatisticsFetchGQL), ɵngcc0.ɵɵinject(DataTypeFormatter), ɵngcc0.ɵɵinject(SeriesMapper));\n  };\n\n  ChartDataStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ChartDataStoreFactory_Factory() {\n      return new ChartDataStoreFactory(i0.ɵɵinject(StatisticsFetchGQL), i0.ɵɵinject(DataTypeFormatter), i0.ɵɵinject(SeriesMapper));\n    },\n    token: ChartDataStoreFactory,\n    providedIn: \"root\"\n  });\n  return ChartDataStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseWidgetComponent = /*#__PURE__*/(() => {\n  class BaseWidgetComponent {}\n\n  BaseWidgetComponent.ɵfac = function BaseWidgetComponent_Factory(t) {\n    return new (t || BaseWidgetComponent)();\n  };\n\n  BaseWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BaseWidgetComponent,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      config: \"config\",\n      context: \"context\",\n      context$: \"context$\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function BaseWidgetComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return BaseWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartSidebarWidgetComponent = /*#__PURE__*/(() => {\n  class ChartSidebarWidgetComponent extends BaseWidgetComponent {\n    constructor(language, factory) {\n      super();\n      this.language = language;\n      this.factory = factory;\n      this.charts = {};\n      this.titleLabelKey = 'LBL_INSIGHTS';\n      this.title = '';\n      this.messageLabelKey = 'LBL_CHART_NOT_FOUND';\n      this.selectedChart = '';\n      this.chartType = '';\n      this.loading = true;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.appStrings$ = this.language.appStrings$;\n\n      if (this.validateConfig() === false) {\n        return;\n      }\n\n      if (this.context$) {\n        this.subs.push(this.context$.subscribe(context => {\n          this.context = context;\n          Object.keys(this.charts).forEach(key => {\n            const chart = this.charts[key];\n            chart.store.context = context;\n          });\n        }));\n      }\n\n      const options = this.config.options;\n      const charts = options.charts;\n\n      if (options.defaultChart) {\n        this.selectedChart = options.defaultChart || '';\n      }\n\n      this.setupCharts(charts);\n      this.setHeaderTitle(options);\n      this.reloadSelectedChart();\n      this.setupLoading();\n      this.setupVM();\n      this.setupReload();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    get configuredCharts() {\n      return this.chartOptions.charts || [];\n    }\n\n    get chartOptions() {\n      return this.config.options || {};\n    }\n\n    isConfigured() {\n      return !!(this.config.options.charts && this.config.options.charts.length);\n    }\n\n    getLabelKey(stat) {\n      const labelKey = stat.statistic.metadata && stat.statistic.metadata.labelKey;\n\n      if (labelKey) {\n        return labelKey;\n      }\n\n      return this.charts[stat.query.key].labelKey;\n    }\n\n    getKey(chart) {\n      return chart.chartKey || chart.statisticsType || '';\n    }\n\n    validateConfig() {\n      if (!this.context || !this.context.module) {\n        this.messageLabelKey = 'LBL_BAD_CONFIG_BAD_CONTEXT';\n        return false;\n      }\n\n      if (!this.config) {\n        this.messageLabelKey = 'LBL_BAD_CONFIG_NO_CONFIG';\n        return false;\n      }\n\n      const options = this.config.options;\n\n      if (!options || !options.charts || !options.charts.length) {\n        this.messageLabelKey = 'LBL_BAD_CONFIG_NO_STATISTICS_KEY';\n        return false;\n      }\n\n      return true;\n    }\n\n    setupCharts(charts) {\n      this.selectedChart = '';\n      charts.forEach(chart => {\n        const key = this.getKey(chart);\n\n        if (!key) {\n          return;\n        }\n\n        if (!this.selectedChart) {\n          this.selectedChart = key || '';\n          this.chartType = chart.chartType;\n        }\n\n        this.buildChartInfo(key, chart);\n        this.initChartStore(key, chart);\n      });\n    }\n\n    buildChartInfo(key, chart) {\n      this.charts[key] = {\n        key,\n        labelKey: chart.labelKey || '',\n        chartType: chart.chartType,\n        statisticsType: chart.statisticsType,\n        store: this.factory.create(),\n        reload: true\n      };\n    }\n\n    initChartStore(key, chart) {\n      this.charts[key].store.init(this.context.module, {\n        key: chart.statisticsType,\n        context: Object.assign({}, this.context)\n      }, false);\n      this.charts[key].store.setDefaultOptions(chart.chartOptions);\n    }\n\n    setHeaderTitle(options) {\n      if (this.config.labelKey) {\n        this.titleLabelKey = this.config.labelKey;\n      }\n\n      if (options.headerTitle) {\n        if (!this.charts || !this.charts[this.selectedChart] || !this.charts[this.selectedChart].labelKey) {\n          return;\n        }\n\n        this.titleLabelKey = this.charts[this.selectedChart].labelKey;\n      }\n\n      this.title = this.language.getFieldLabel(this.titleLabelKey);\n    }\n\n    onChartSelect() {\n      this.dataSource = null;\n      this.chartType = this.charts[this.selectedChart].chartType;\n      this.reloadSelectedChart(false);\n    }\n\n    setupVM() {\n      const statistics$ = [];\n      Object.keys(this.charts).forEach(key => statistics$.push(this.charts[key].store.state$));\n      this.vm$ = combineLatest([combineLatest(statistics$), this.language.appStrings$]).pipe(map(([statistics, appStrings]) => {\n        const statsMap = this.mapChartData(statistics);\n        return {\n          statistics: statsMap,\n          appStrings\n        };\n      }));\n    }\n\n    mapChartData(statistics) {\n      const statsMap = {};\n      statistics.forEach(statistic => {\n        if (!statistic.query.key) {\n          return;\n        }\n\n        statsMap[statistic.query.key] = statistic;\n        this.charts[statistic.query.key].labelKey = this.getLabelKey(statistic);\n      });\n      return statsMap;\n    }\n\n    setupReload() {\n      if (!this.config.reload$) {\n        return;\n      }\n\n      this.subs.push(this.config.reload$.subscribe(() => {\n        if (this.loading === true) {\n          return;\n        }\n\n        this.loading = true;\n        Object.keys(this.charts).forEach(chartKey => {\n          this.charts[chartKey].reload = true;\n        });\n        this.reloadSelectedChart();\n      }));\n    }\n\n    setupLoading() {\n      const loadings$ = [];\n      Object.keys(this.charts).forEach(key => loadings$.push(this.charts[key].store.loading$));\n      this.loading$ = combineLatest(loadings$).pipe(map(loadings => {\n        if (!loadings || loadings.length < 1) {\n          this.loading = false;\n          return false;\n        }\n\n        let loading = false;\n        loadings.forEach(value => {\n          loading = loading || value;\n        });\n        this.loading = loading;\n        return loading;\n      }));\n      this.subs.push(this.loading$.subscribe());\n    }\n\n    reloadSelectedChart(useCache = false) {\n      if (!this.charts || !this.charts[this.selectedChart] || !this.charts[this.selectedChart].store) {\n        return;\n      }\n\n      useCache = useCache && !this.charts[this.selectedChart].reload;\n      this.charts[this.selectedChart].store.load(useCache).pipe(take(1), tap(() => {\n        var _a, _b, _c;\n\n        this.dataSource = (_c = (_b = (_a = this.charts[this.selectedChart]) === null || _a === void 0 ? void 0 : _a.store) === null || _b === void 0 ? void 0 : _b.getDataSource()) !== null && _c !== void 0 ? _c : null;\n        this.charts[this.selectedChart].reload = false;\n      })).subscribe();\n    }\n\n  }\n\n  ChartSidebarWidgetComponent.ɵfac = function ChartSidebarWidgetComponent_Factory(t) {\n    return new (t || ChartSidebarWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ChartDataStoreFactory));\n  };\n\n  ChartSidebarWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ChartSidebarWidgetComponent,\n    selectors: [[\"chart-sidebar-widget\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"title\", 4, \"ngIf\"], [3, \"title\"], [\"widget-body\", \"\"], [1, \"widget-background\", \"chart-sidebar-widget\"], [1, \"mb-2\", \"ml-1\", \"mr-1\"], [1, \"container-fluid\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", \"mt-3\", \"chart-widget\"], [1, \"col\", \"pl-0\", \"pr-0\", \"pb-1\", \"pt-1\", \"d-flex\", \"justify-content-center\"], [1, \"flex-grow-1\"], [4, \"ngIf\"], [\"class\", \"chart-loading\", 3, \"m-5\", 4, \"ngIf\"], [\"class\", \"lead text-center pt-3\", 4, \"ngIf\"], [1, \"row\"], [1, \"col\", \"pr-2\", \"pl-2\"], [1, \"login-form\", \"mb-0\", \"mt-2\", \"w-100\"], [\"name\", \"chart\", 1, \"m-0\", \"w-100\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"dataSource\", \"type\", 4, \"ngIf\"], [3, \"dataSource\", \"type\"], [1, \"chart-loading\"], [3, \"overlay\"], [1, \"lead\", \"text-center\", \"pt-3\"]],\n    template: function ChartSidebarWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ChartSidebarWidgetComponent_scrm_widget_panel_0_Template, 12, 5, \"scrm-widget-panel\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, WidgetPanelComponent, ɵngcc4.ɵNgNoValidate, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc4.SelectControlValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc3.NgForOf, ɵngcc4.NgSelectOption, ɵngcc4.ɵNgSelectMultipleOption, ChartComponent, LoadingSpinnerComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ChartSidebarWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ChartSidebarWidgetModule = /*#__PURE__*/(() => {\n  class ChartSidebarWidgetModule {}\n\n  ChartSidebarWidgetModule.ɵfac = function ChartSidebarWidgetModule_Factory(t) {\n    return new (t || ChartSidebarWidgetModule)();\n  };\n\n  ChartSidebarWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChartSidebarWidgetModule\n  });\n  ChartSidebarWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, WidgetPanelModule, FormsModule, ChartModule, LoadingSpinnerModule]]\n  });\n  return ChartSidebarWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartSidebarWidgetModule, {\n    declarations: function () {\n      return [ChartSidebarWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, WidgetPanelModule, FormsModule, ChartModule, LoadingSpinnerModule];\n    },\n    exports: function () {\n      return [ChartSidebarWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistoryTimelineStore = /*#__PURE__*/(() => {\n  class HistoryTimelineStore {\n    constructor(listStoreFactory) {\n      this.listStoreFactory = listStoreFactory;\n      this.recordList = listStoreFactory.create();\n    }\n\n    clear() {\n      this.recordList.clear();\n      this.recordList = null;\n    }\n\n    clearAuthBased() {\n      this.recordList.clearAuthBased();\n    }\n    /**\n     * Initial list records load if not cached and update state.\n     *\n     * @param {ViewContext} context of parent\n     * @description initialize the Record List Store\n     * returns {void}\n     */\n\n\n    init(context) {\n      this.recordList.init('history', false, 'list_max_entries_per_subpanel');\n      this.initViewContext(context);\n    }\n    /**\n     * Load / reload records using current pagination and criteria\n     *\n     * @param {boolean} useCache if to use cache\n     * @returns {object} Observable<RecordList>\n     */\n\n\n    load(useCache = true) {\n      return this.recordList.load(useCache);\n    }\n    /**\n     * Init search criteria\n     *\n     * @param {number} offset of the recordset\n     * @param {number} limit of the recordset\n     * @description initialize the search module/criteria(offset/limit) for the record set\n     */\n\n\n    initSearchCriteria(offset, limit) {\n      this.recordList.criteria = {\n        preset: {\n          type: 'history-timeline',\n          params: {\n            parentModule: this.viewContext.module,\n            parentId: this.viewContext.id,\n            offset,\n            limit\n          }\n        }\n      };\n    }\n\n    initViewContext(viewContext) {\n      this.viewContext = viewContext;\n    }\n\n  }\n\n  HistoryTimelineStore.ɵfac = function HistoryTimelineStore_Factory(t) {\n    return new (t || HistoryTimelineStore)(ɵngcc0.ɵɵinject(RecordListStoreFactory));\n  };\n\n  HistoryTimelineStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: HistoryTimelineStore,\n    factory: HistoryTimelineStore.ɵfac\n  });\n  return HistoryTimelineStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistoryTimelineStoreFactory = /*#__PURE__*/(() => {\n  class HistoryTimelineStoreFactory {\n    constructor(listStoreFactory) {\n      this.listStoreFactory = listStoreFactory;\n    }\n\n    create() {\n      return new HistoryTimelineStore(this.listStoreFactory);\n    }\n\n  }\n\n  HistoryTimelineStoreFactory.ɵfac = function HistoryTimelineStoreFactory_Factory(t) {\n    return new (t || HistoryTimelineStoreFactory)(ɵngcc0.ɵɵinject(RecordListStoreFactory));\n  };\n\n  HistoryTimelineStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function HistoryTimelineStoreFactory_Factory() {\n      return new HistoryTimelineStoreFactory(i0.ɵɵinject(RecordListStoreFactory));\n    },\n    token: HistoryTimelineStoreFactory,\n    providedIn: \"root\"\n  });\n  return HistoryTimelineStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistoryTimelineAdapter = /*#__PURE__*/(() => {\n  class HistoryTimelineAdapter {\n    constructor(historyTimelineStoreFactory) {\n      this.historyTimelineStoreFactory = historyTimelineStoreFactory;\n      this.loading = false;\n      this.cache = [];\n      this.dataStream = new BehaviorSubject(this.cache);\n      this.dataStream$ = this.dataStream.asObservable();\n      this.defaultPageSize = 10;\n    }\n    /**\n     * @returns {void}\n     * @param {ViewContext} context - parent module context\n     * @description adapter init function to initialize timeline store\n     */\n\n\n    init(context) {\n      this.store = this.historyTimelineStoreFactory.create();\n      this.store.init(context);\n    }\n    /**\n     * @returns {Observable<HistoryTimelineEntry[]>} return observable array of timeline entries\n     * @description retrieve next set of records starting from the current offset\n     * represented by the field this.cache.length\n     * @param {boolean} reload timeline\n     */\n\n\n    fetchTimelineEntries(reload) {\n      if (this.loading === true) {\n        return;\n      }\n\n      if (reload === true) {\n        this.cache.length = 0;\n      }\n\n      this.store.initSearchCriteria(this.cache.length, this.defaultPageSize);\n      this.loading = true;\n      this.store.load(false).pipe(take(1)).subscribe(value => {\n        this.loading = false;\n        const records = value.records;\n\n        if (!emptyObject(records)) {\n          Object.keys(records).forEach(key => {\n            this.cache.push(this.buildTimelineEntry(records[key]));\n          });\n        }\n\n        this.dataStream.next([...this.cache]);\n      });\n      return this.dataStream$;\n    }\n    /**\n     * @returns {string} color code\n     * @param {string} activity the valid activity types\n     * @description {returns the mapped background color code defined for an activity}\n     */\n\n\n    getActivityGridColor(activity) {\n      const colorMap = {\n        calls: 'yellow',\n        tasks: 'green',\n        meetings: 'blue',\n        notes: 'orange',\n        audit: 'purple',\n        history: 'purple'\n      };\n      return colorMap[activity] || 'yellow';\n    }\n    /**\n     * @returns {HistoryTimelineEntry} Timeline Entry\n     * @param {Record} record object\n     * @description {returns the mapped record to timeline entry}\n     */\n\n\n    buildTimelineEntry(record) {\n      const timelineModule = record.module;\n      let moduleIcon = record.attributes.module_name;\n\n      if (timelineModule === 'audit') {\n        moduleIcon = 'History';\n      }\n\n      const gridColor = this.getActivityGridColor(record.module);\n      const timelineEntry = {\n        module: timelineModule,\n        icon: moduleIcon,\n        color: gridColor,\n        title: {\n          type: 'varchar',\n          value: record.attributes.name\n        },\n        user: {\n          type: 'varchar',\n          value: record.attributes.assigned_user_name.user_name\n        },\n        date: {\n          type: 'datetime',\n          value: record.attributes.date_end\n        },\n        record\n      };\n\n      if (timelineModule === 'audit') {\n        timelineEntry.description = {\n          type: 'html',\n          value: record.attributes.description\n        };\n      }\n\n      return timelineEntry;\n    }\n\n  }\n\n  HistoryTimelineAdapter.ɵfac = function HistoryTimelineAdapter_Factory(t) {\n    return new (t || HistoryTimelineAdapter)(ɵngcc0.ɵɵinject(HistoryTimelineStoreFactory));\n  };\n\n  HistoryTimelineAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: HistoryTimelineAdapter,\n    factory: HistoryTimelineAdapter.ɵfac\n  });\n  return HistoryTimelineAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistoryTimelineAdapterFactory = /*#__PURE__*/(() => {\n  class HistoryTimelineAdapterFactory {\n    constructor(historyTimelineStoreFactory) {\n      this.historyTimelineStoreFactory = historyTimelineStoreFactory;\n    }\n\n    create() {\n      return new HistoryTimelineAdapter(this.historyTimelineStoreFactory);\n    }\n\n  }\n\n  HistoryTimelineAdapterFactory.ɵfac = function HistoryTimelineAdapterFactory_Factory(t) {\n    return new (t || HistoryTimelineAdapterFactory)(ɵngcc0.ɵɵinject(HistoryTimelineStoreFactory));\n  };\n\n  HistoryTimelineAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function HistoryTimelineAdapterFactory_Factory() {\n      return new HistoryTimelineAdapterFactory(i0.ɵɵinject(HistoryTimelineStoreFactory));\n    },\n    token: HistoryTimelineAdapterFactory,\n    providedIn: \"root\"\n  });\n  return HistoryTimelineAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistorySidebarWidgetComponent = /*#__PURE__*/(() => {\n  class HistorySidebarWidgetComponent extends BaseWidgetComponent {\n    constructor(historyTimelineAdapterFactory, languageStore) {\n      super();\n      this.historyTimelineAdapterFactory = historyTimelineAdapterFactory;\n      this.languageStore = languageStore;\n      this.subscription = new Subscription();\n    }\n\n    ngOnInit() {\n      this.adapter = this.historyTimelineAdapterFactory.create();\n      this.adapter.init(this.context);\n    }\n\n    ngAfterViewInit() {\n      // watch out for the data list updates on the related subpanels activities and history\n      // reload request will be ignored;\n      // if they are notified multiple times within the dueTime/delay 500 ms\n      const reloadMap = [];\n      reloadMap.push(this.config.reload$);\n      reloadMap.push(this.config.subpanelReload$);\n      const subpanelsToWatch = ['history', 'activities'];\n      const reload$ = combineLatest(reloadMap).pipe(map(([reload, subpanelReload]) => {\n        if (reload) {\n          return reload;\n        }\n\n        if (!subpanelReload) {\n          return false;\n        }\n\n        return subpanelsToWatch.some(subpanelKey => !!subpanelReload[subpanelKey]);\n      }));\n      const debouncedReload = reload$.pipe(debounce(() => timer(1000)));\n      this.subscription.add(debouncedReload.subscribe(reload => {\n        if (reload) {\n          this.adapter.fetchTimelineEntries(true);\n        }\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    /**\n     * @returns {string} Timeline Entry\n     * @description {fetch language label for the timeline widget header}\n     */\n\n\n    getHeaderLabel() {\n      return this.languageStore.getFieldLabel('LBL_QUICK_HISTORY');\n    }\n    /**\n     * @returns {void} Timeline Entry\n     * @description {checks if end of the scroll is reached to make a backend call for next set of timeline entries}\n     */\n\n\n    onScroll() {\n      if (!this.adapter) {\n        return;\n      }\n\n      const scrollOffset = this.virtualScroll.measureScrollOffset('bottom');\n\n      if (floor(scrollOffset) === 0) {\n        this.adapter.fetchTimelineEntries(false);\n      }\n    }\n\n  }\n\n  HistorySidebarWidgetComponent.ɵfac = function HistorySidebarWidgetComponent_Factory(t) {\n    return new (t || HistorySidebarWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(HistoryTimelineAdapterFactory), ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  HistorySidebarWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HistorySidebarWidgetComponent,\n    selectors: [[\"scrm-history-timeline-widget\"]],\n    viewQuery: function HistorySidebarWidgetComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualScroll = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([HistoryTimelineAdapter]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 4,\n    consts: [[3, \"title\"], [\"widget-body\", \"\", 4, \"ngIf\"], [\"widget-body\", \"\"], [1, \"widget-background\", \"history-timeline\", \"p-2\", \"pt-2\"], [\"class\", \"d-flex record-thread-loading justify-content-center\", 4, \"ngIf\"], [\"itemSize\", \"100\", 1, \"history-timeline-viewport\", 3, \"ngClass\", \"scroll\"], [\"labelKey\", \"LBL_NO_DATA\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"record-thread-loading\", \"justify-content-center\"], [3, \"overlay\"], [\"labelKey\", \"LBL_NO_DATA\"], [3, \"class\", 4, \"ngIf\"], [1, \"\"], [1, \"circle\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\", \"history-timeline-image\"], [3, \"image\"], [1, \"d-flex\", \"justify-content-center\", \"h-100\"], [1, \"connector\", \"mt-3\"], [1, \"flex-grow-1\"], [1, \"card\"], [1, \"card-body\", \"p-1\", \"pr-2\", \"pl-2\"], [1, \"card-title\", \"text-break\", \"history-timeline-entry-title\"], [\"mode\", \"list\", 3, \"type\", \"field\", \"record\"], [\"class\", \"card-text history-timeline-entry-description\", 4, \"ngIf\"], [1, \"card-text\", \"history-timeline-entry-user\", \"text-uppercase\"], [1, \"text-break\"], [1, \"card-text\", \"text-break\", \"history-timeline-entry-date\"], [1, \"font-italic\"], [1, \"card-text\", \"history-timeline-entry-description\"], [\"mode\", \"detail\", 3, \"type\", \"field\", \"record\"]],\n    template: function HistorySidebarWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-widget-panel\", 0);\n        ɵngcc0.ɵɵtemplate(1, HistorySidebarWidgetComponent_div_1_Template, 6, 6, \"div\", 1);\n        ɵngcc0.ɵɵpipe(2, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"title\", ctx.getHeaderLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(2, 2, ctx.adapter == null ? null : ctx.adapter.dataStream$));\n      }\n    },\n    directives: [WidgetPanelComponent, ɵngcc3.NgIf, ɵngcc17.CdkVirtualScrollViewport, ɵngcc17.CdkFixedSizeVirtualScroll, ɵngcc3.NgClass, ɵngcc3.NgForOf, LoadingSpinnerComponent, ChartMessageAreaComponent, ImageComponent, FieldComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return HistorySidebarWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HistorySidebarWidgetModule = /*#__PURE__*/(() => {\n  class HistorySidebarWidgetModule {}\n\n  HistorySidebarWidgetModule.ɵfac = function HistorySidebarWidgetModule_Factory(t) {\n    return new (t || HistorySidebarWidgetModule)();\n  };\n\n  HistorySidebarWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HistorySidebarWidgetModule\n  });\n  HistorySidebarWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ScrollingModule, ImageModule, FieldModule, WidgetPanelModule, LoadingSpinnerModule, LabelModule, ChartMessageAreaModule]]\n  });\n  return HistorySidebarWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HistorySidebarWidgetModule, {\n    declarations: function () {\n      return [HistorySidebarWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, ScrollingModule, ImageModule, FieldModule, WidgetPanelModule, LoadingSpinnerModule, LabelModule, ChartMessageAreaModule];\n    },\n    exports: function () {\n      return [HistorySidebarWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadSidebarWidgetComponent = /*#__PURE__*/(() => {\n  class RecordThreadSidebarWidgetComponent extends BaseWidgetComponent {\n    constructor(language, sytemConfig) {\n      super();\n      this.language = language;\n      this.sytemConfig = sytemConfig;\n      this.panelMode = 'none';\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      const options = this.config.options || {};\n      this.options = options.recordThread || null;\n\n      if (!this.options) {\n        return;\n      }\n\n      this.initPanelMode();\n      this.initFilters$();\n      this.initPresetFields$();\n\n      if (this.context$ && this.context$.subscribe()) {\n        this.subs.push(this.context$.subscribe(context => {\n          this.context = context;\n        }));\n      }\n\n      this.recordThreadConfig = this.getConfig();\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getHeaderLabel() {\n      return this.getLabel(this.config.labelKey) || '';\n    }\n\n    getLabel(key) {\n      const context = this.context || {};\n      const module = context.module || '';\n      return this.language.getFieldLabel(key, module);\n    }\n\n    getConfig() {\n      var _a;\n\n      const config = {\n        filters$: this.filters$,\n        presetFields$: this.presetFields$,\n        module: this.options.module,\n        klass: this.options.class || '',\n        maxListHeight: (_a = this.options.maxListHeight) !== null && _a !== void 0 ? _a : 350,\n        direction: this.options.direction || 'asc',\n        create: !!this.options.create,\n        itemConfig: {\n          collapsible: this.options.item.collapsible || false,\n          collapseLimit: this.options.item.collapseLimit || null,\n          klass: this.options.item.itemClass || '',\n          dynamicClass: this.options.item.dynamicClass || [],\n          metadata: {}\n        },\n        createConfig: {\n          collapsible: false,\n          metadata: {}\n        }\n      };\n      this.setupItemMetadata(config.itemConfig.metadata, this.options.item.layout);\n      this.setupItemMetadata(config.createConfig.metadata, this.options.create.layout);\n      return config;\n    }\n\n    setupItemMetadata(metadata, config) {\n      if (config && config.header) {\n        metadata.headerLayout = deepClone(config.header);\n      }\n\n      if (config && config.body) {\n        metadata.bodyLayout = deepClone(config.body);\n      }\n\n      if (config && config.actions) {\n        metadata.actions = deepClone(config.actions);\n      }\n    }\n\n    initPanelMode() {\n      var _a, _b, _c, _d;\n\n      const ui = this.sytemConfig.getConfigValue('ui');\n      const systemDefault = (_b = (_a = ui === null || ui === void 0 ? void 0 : ui.widget) === null || _a === void 0 ? void 0 : _a.allowCollapse) !== null && _b !== void 0 ? _b : null;\n      const allowCollapse = (_d = (_c = this === null || this === void 0 ? void 0 : this.config) === null || _c === void 0 ? void 0 : _c.allowCollapse) !== null && _d !== void 0 ? _d : null;\n      let mode = 'none';\n\n      if (systemDefault !== null) {\n        if (isTrue(systemDefault)) {\n          mode = 'collapsible';\n        } else if (isFalse(systemDefault)) {\n          mode = 'none';\n        }\n      }\n\n      if (allowCollapse !== null) {\n        if (isTrue(allowCollapse)) {\n          mode = 'collapsible';\n        } else if (isFalse(allowCollapse)) {\n          mode = 'none';\n        }\n      }\n\n      this.panelMode = mode;\n    }\n\n    initFilters$() {\n      if (!this.options || !this.options.filters || !this.context$) {\n        return;\n      }\n\n      const parentFilters = this.options.filters.parentFilters || {};\n      let context$ = of({}).pipe(shareReplay());\n\n      if (Object.keys(parentFilters).length > 0) {\n        context$ = this.context$.pipe(filter(context => {\n          const record = context && context.record || {};\n          return !!(record.attributes && Object.keys(record.attributes).length);\n        }));\n      }\n\n      this.filters$ = context$.pipe(map(context => {\n        const filters = {\n          filters: {}\n        };\n        this.initParentFilters(context, filters);\n        const staticFilters = this.options.filters.static || {};\n        filters.filters = Object.assign(Object.assign({}, filters.filters), staticFilters);\n\n        if (this.options.filters.orderBy) {\n          filters.orderBy = this.options.filters.orderBy;\n        }\n\n        if (this.options.filters.sortOrder) {\n          filters.sortOrder = this.options.filters.sortOrder;\n        }\n\n        return filters;\n      }), distinctUntilChanged());\n    }\n\n    initPresetFields$() {\n      if (!this.options || !this.options.create || !this.options.create.presetFields || !this.context$) {\n        return;\n      }\n\n      this.presetFields$ = this.context$.pipe(map(context => {\n        const parentValues = this.initParentValues(context);\n        const staticValues = this.options.create.presetFields.static || {};\n        return Object.assign(Object.assign({}, parentValues), staticValues);\n      }), distinctUntilChanged());\n    }\n\n    initParentFilters(context, filters) {\n      const parentFilters = this.options.filters.parentFilters || {};\n\n      if (!context || !context.record || !parentFilters) {\n        return;\n      }\n\n      Object.keys(parentFilters).forEach(parentField => {\n        const field = parentFilters[parentField];\n        const value = context.record.attributes[parentField] || '';\n\n        if (!value) {\n          return;\n        }\n\n        filters.filters[field] = {\n          field: parentFilters,\n          operator: '=',\n          values: [value]\n        };\n      });\n    }\n\n    initParentValues(context) {\n      const parentValues = this.options.create.presetFields.parentValues || {};\n\n      if (!context || !context.record || !parentValues) {\n        return;\n      }\n\n      const attributes = {};\n      Object.keys(parentValues).forEach(parentField => {\n        const field = parentValues[parentField];\n        const value = context.record.attributes[parentField] || '';\n\n        if (!value) {\n          return;\n        }\n\n        attributes[field] = value;\n      });\n      return attributes;\n    }\n\n  }\n\n  RecordThreadSidebarWidgetComponent.ɵfac = function RecordThreadSidebarWidgetComponent_Factory(t) {\n    return new (t || RecordThreadSidebarWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  RecordThreadSidebarWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordThreadSidebarWidgetComponent,\n    selectors: [[\"scrm-record-thread-sidebar-widget\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"mode\", \"title\"], [\"widget-body\", \"\", 1, \"record-thread-sidebar-widget\"], [4, \"ngIf\"], [1, \"p-3\", \"widget-message\"], [\"labelKey\", \"LBL_BAD_CONFIG\"], [3, \"config\"]],\n    template: function RecordThreadSidebarWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-widget-panel\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, RecordThreadSidebarWidgetComponent_ng_container_2_Template, 3, 0, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, RecordThreadSidebarWidgetComponent_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"mode\", ctx.panelMode)(\"title\", ctx.getHeaderLabel());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.options);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.options);\n      }\n    },\n    directives: [WidgetPanelComponent, ɵngcc3.NgIf, LabelComponent, RecordThreadComponent],\n    encapsulation: 2\n  });\n  return RecordThreadSidebarWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordThreadSidebarWidgetModule = /*#__PURE__*/(() => {\n  class RecordThreadSidebarWidgetModule {}\n\n  RecordThreadSidebarWidgetModule.ɵfac = function RecordThreadSidebarWidgetModule_Factory(t) {\n    return new (t || RecordThreadSidebarWidgetModule)();\n  };\n\n  RecordThreadSidebarWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordThreadSidebarWidgetModule\n  });\n  RecordThreadSidebarWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, WidgetPanelModule, LabelModule, RecordThreadModule, RecordThreadItemModule]]\n  });\n  return RecordThreadSidebarWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordThreadSidebarWidgetModule, {\n    declarations: function () {\n      return [RecordThreadSidebarWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, WidgetPanelModule, LabelModule, RecordThreadModule, RecordThreadItemModule];\n    },\n    exports: function () {\n      return [RecordThreadSidebarWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsSidebarWidgetComponent = /*#__PURE__*/(() => {\n  class StatisticsSidebarWidgetComponent extends BaseWidgetComponent {\n    constructor(language) {\n      super();\n      this.language = language;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      const options = this.config.options || {};\n      this.options = options.sidebarStatistic || null;\n\n      if (this.context$) {\n        this.subs.push(this.context$.subscribe(context => {\n          this.context = context;\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getHeaderLabel() {\n      return this.getLabel(this.config.labelKey) || '';\n    }\n\n    getLabel(key) {\n      const context = this.context || {};\n      const module = context.module || '';\n      return this.language.getFieldLabel(key, module);\n    }\n\n    getGridConfig() {\n      return {\n        rowClass: 'statistics-sidebar-widget-row',\n        columnClass: 'statistics-sidebar-widget-col',\n        layout: this.options,\n        widgetConfig: {\n          reload$: this.config.reload$\n        },\n        queryArgs: {\n          module: this.context.module,\n          context: this.context,\n          params: {}\n        }\n      };\n    }\n\n  }\n\n  StatisticsSidebarWidgetComponent.ɵfac = function StatisticsSidebarWidgetComponent_Factory(t) {\n    return new (t || StatisticsSidebarWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore));\n  };\n\n  StatisticsSidebarWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StatisticsSidebarWidgetComponent,\n    selectors: [[\"scrm-statistics-sidebar-widget\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"title\"], [\"widget-body\", \"\", 1, \"p-3\"], [3, \"config\"]],\n    template: function StatisticsSidebarWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"scrm-widget-panel\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"scrm-grid-widget\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"title\", ctx.getHeaderLabel());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.getGridConfig());\n      }\n    },\n    directives: [WidgetPanelComponent, GridWidgetComponent],\n    encapsulation: 2\n  });\n  return StatisticsSidebarWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsSidebarWidgetModule = /*#__PURE__*/(() => {\n  class StatisticsSidebarWidgetModule {}\n\n  StatisticsSidebarWidgetModule.ɵfac = function StatisticsSidebarWidgetModule_Factory(t) {\n    return new (t || StatisticsSidebarWidgetModule)();\n  };\n\n  StatisticsSidebarWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: StatisticsSidebarWidgetModule\n  });\n  StatisticsSidebarWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, InlineLoadingSpinnerModule, WidgetPanelModule, GridWidgetModule, LabelModule]]\n  });\n  return StatisticsSidebarWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StatisticsSidebarWidgetModule, {\n    declarations: function () {\n      return [StatisticsSidebarWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, InlineLoadingSpinnerModule, WidgetPanelModule, GridWidgetModule, LabelModule];\n    },\n    exports: function () {\n      return [StatisticsSidebarWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst sidebarWidgetModules = [HistorySidebarWidgetModule, ChartSidebarWidgetModule, StatisticsSidebarWidgetModule];\nconst componentTypeMap = {\n  'history-timeline': HistorySidebarWidgetComponent,\n  chart: ChartSidebarWidgetComponent,\n  statistics: StatisticsSidebarWidgetComponent,\n  'record-thread': RecordThreadSidebarWidgetComponent\n};\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nlet SidebarWidgetRegistry = /*#__PURE__*/(() => {\n  class SidebarWidgetRegistry extends BaseComponentRegistry {\n    constructor() {\n      super();\n    }\n\n    initDefault() {\n      Object.keys(componentTypeMap).forEach(key => {\n        this.register('default', key, componentTypeMap[key]);\n      });\n    }\n\n  }\n\n  SidebarWidgetRegistry.ɵfac = function SidebarWidgetRegistry_Factory(t) {\n    return new (t || SidebarWidgetRegistry)();\n  };\n\n  SidebarWidgetRegistry.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SidebarWidgetRegistry_Factory() {\n      return new SidebarWidgetRegistry();\n    },\n    token: SidebarWidgetRegistry,\n    providedIn: \"root\"\n  });\n  return SidebarWidgetRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SidebarWidgetComponent = /*#__PURE__*/(() => {\n  class SidebarWidgetComponent extends BaseWidgetComponent {\n    constructor(registry) {\n      super();\n      this.registry = registry;\n    }\n\n    get componentType() {\n      var _a;\n\n      const module = (_a = this.context.module) !== null && _a !== void 0 ? _a : 'default';\n      return this.registry.get(module, this.type);\n    }\n\n    getErrorMessage() {\n      if (!this.type || !this.config) {\n        return 'LBL_CONFIG_NO_CONFIG';\n      }\n\n      if (!this.componentType) {\n        return 'LBL_WIDGET_NOT_FOUND';\n      }\n\n      return 'LBL_BAD_CONFIG';\n    }\n\n  }\n\n  SidebarWidgetComponent.ɵfac = function SidebarWidgetComponent_Factory(t) {\n    return new (t || SidebarWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(SidebarWidgetRegistry));\n  };\n\n  SidebarWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SidebarWidgetComponent,\n    selectors: [[\"scrm-sidebar-widget\"]],\n    inputs: {\n      type: \"type\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"d-flex mb-4 mt-4 justify-content-center\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [1, \"d-flex\", \"mb-4\", \"mt-4\", \"justify-content-center\"], [1, \"lead\"], [3, \"labelKey\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function SidebarWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SidebarWidgetComponent_div_0_Template, 3, 1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, SidebarWidgetComponent_ndc_dynamic_1_Template, 1, 6, \"ndc-dynamic\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.type && ctx.config && ctx.componentType));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.type && ctx.config && ctx.componentType);\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return SidebarWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SidebarWidgetModule = /*#__PURE__*/(() => {\n  class SidebarWidgetModule {}\n\n  SidebarWidgetModule.ɵfac = function SidebarWidgetModule_Factory(t) {\n    return new (t || SidebarWidgetModule)();\n  };\n\n  SidebarWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SidebarWidgetModule\n  });\n  SidebarWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ...sidebarWidgetModules, DynamicModule, LabelModule]]\n  });\n  return SidebarWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SidebarWidgetModule, {\n    declarations: function () {\n      return [SidebarWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, HistorySidebarWidgetModule, ChartSidebarWidgetModule, StatisticsSidebarWidgetModule, DynamicModule, LabelModule];\n    },\n    exports: function () {\n      return [SidebarWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass SubpanelLineActionHandler extends ActionHandler {\n  checkRecordAccess(data, defaultAcls = []) {\n    var _a, _b, _c;\n\n    const record = (_a = data.record) !== null && _a !== void 0 ? _a : {};\n    const acls = (_b = record.acls) !== null && _b !== void 0 ? _b : [];\n\n    if (!acls || !acls.length) {\n      return false;\n    }\n\n    const action = (_c = data.action) !== null && _c !== void 0 ? _c : null;\n    return this.checkAccess(action, acls, defaultAcls);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncProcessSubpanelLineAction = /*#__PURE__*/(() => {\n  class AsyncProcessSubpanelLineAction extends SubpanelLineActionHandler {\n    constructor() {\n      super();\n      this.key = 'async-process';\n      this.modes = ALL_VIEW_MODES;\n    }\n\n    run(data) {}\n\n    shouldDisplay(data) {\n      var _a, _b;\n\n      const defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];\n\n      if (!defaultAcls.length) {\n        return true;\n      }\n\n      return this.checkRecordAccess(data, defaultAcls);\n    }\n\n  }\n\n  AsyncProcessSubpanelLineAction.ɵfac = function AsyncProcessSubpanelLineAction_Factory(t) {\n    return new (t || AsyncProcessSubpanelLineAction)();\n  };\n\n  AsyncProcessSubpanelLineAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncProcessSubpanelLineAction_Factory() {\n      return new AsyncProcessSubpanelLineAction();\n    },\n    token: AsyncProcessSubpanelLineAction,\n    providedIn: \"root\"\n  });\n  return AsyncProcessSubpanelLineAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelLineActionManager = /*#__PURE__*/(() => {\n  class SubpanelLineActionManager extends BaseActionManager {\n    constructor(async) {\n      super();\n      this.async = async;\n      async.modes.forEach(mode => this.actions[mode][async.key] = async);\n    }\n\n  }\n\n  SubpanelLineActionManager.ɵfac = function SubpanelLineActionManager_Factory(t) {\n    return new (t || SubpanelLineActionManager)(ɵngcc0.ɵɵinject(AsyncProcessSubpanelLineAction));\n  };\n\n  SubpanelLineActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelLineActionManager_Factory() {\n      return new SubpanelLineActionManager(i0.ɵɵinject(AsyncProcessSubpanelLineAction));\n    },\n    token: SubpanelLineActionManager,\n    providedIn: \"root\"\n  });\n  return SubpanelLineActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelLineActionsAdapter = /*#__PURE__*/(() => {\n  class SubpanelLineActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(store, actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    getActions(context = null) {\n      return combineLatest([this.store.metadata$.pipe(map(metadata => metadata.lineActions)), of('list').pipe(shareReplay())]).pipe(map(([actions, mode]) => {\n        return this.parseModeActions(actions, mode, context);\n      }));\n    }\n\n    buildActionData(action, context) {\n      return {\n        record: context && context.record || null,\n        store: this.store,\n        action: action\n      };\n    }\n\n    getMode() {\n      return 'list';\n    }\n\n    getModuleName(context) {\n      return this.store.metadata.module;\n    }\n\n    reload(action, process, context) {\n      this.store.load(false).pipe(take(1)).subscribe();\n      this.store.loadAllStatistics(false).pipe(take(1)).subscribe();\n    }\n    /**\n     * Build backend process input\n     *\n     * @param action\n     * @param actionName\n     * @param moduleName\n     * @param context\n     */\n\n\n    buildActionInput(action, actionName, moduleName, context = null) {\n      const metadata = this.store.metadata;\n      const collectionList = metadata.collection_list || null;\n      const module = context && context.module || moduleName;\n      let linkField = metadata.get_subpanel_data;\n\n      if (collectionList && collectionList[module] && collectionList[module].get_subpanel_data) {\n        linkField = collectionList[module].get_subpanel_data;\n      }\n\n      if (linkField && action && action.params && action.params.linkFieldMapping) {\n        Object.keys(action.params.linkFieldMapping).some(key => {\n          if (linkField.includes(key)) {\n            linkField = action.params.linkFieldMapping[key];\n            return true;\n          }\n        });\n      }\n\n      return {\n        action: actionName,\n        module: moduleName,\n        id: context && context.record && context.record.id || '',\n        payload: {\n          baseModule: this.store.parentModule,\n          baseRecordId: this.store.parentId,\n          linkField,\n          recordModule: module,\n          relateModule: this.store.metadata.module,\n          relateRecordId: context && context.record && context.record.id || ''\n        }\n      };\n    }\n\n  }\n\n  SubpanelLineActionsAdapter.ɵfac = function SubpanelLineActionsAdapter_Factory(t) {\n    return new (t || SubpanelLineActionsAdapter)(ɵngcc0.ɵɵinject(SubpanelStore), ɵngcc0.ɵɵinject(SubpanelLineActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  SubpanelLineActionsAdapter.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelLineActionsAdapter_Factory() {\n      return new SubpanelLineActionsAdapter(i0.ɵɵinject(SubpanelStore), i0.ɵɵinject(SubpanelLineActionManager), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(MetadataStore));\n    },\n    token: SubpanelLineActionsAdapter,\n    providedIn: \"root\"\n  });\n  return SubpanelLineActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelLineActionsAdapterFactory = /*#__PURE__*/(() => {\n  class SubpanelLineActionsAdapterFactory {\n    constructor(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    create(store) {\n      return new SubpanelLineActionsAdapter(store, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.language, this.selectModalService, this.metadata);\n    }\n\n  }\n\n  SubpanelLineActionsAdapterFactory.ɵfac = function SubpanelLineActionsAdapterFactory_Factory(t) {\n    return new (t || SubpanelLineActionsAdapterFactory)(ɵngcc0.ɵɵinject(SubpanelLineActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  SubpanelLineActionsAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelLineActionsAdapterFactory_Factory() {\n      return new SubpanelLineActionsAdapterFactory(i0.ɵɵinject(SubpanelLineActionManager), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(MetadataStore));\n    },\n    token: SubpanelLineActionsAdapterFactory,\n    providedIn: \"root\"\n  });\n  return SubpanelLineActionsAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelTableAdapter = /*#__PURE__*/(() => {\n  class SubpanelTableAdapter {\n    constructor(store, lineActionsAdapterFactory, preferences) {\n      this.store = store;\n      this.lineActionsAdapterFactory = lineActionsAdapterFactory;\n      this.preferences = preferences;\n    }\n\n    getTable() {\n      return {\n        showHeader: false,\n        showFooter: true,\n        module: this.store.metadata.headerModule,\n        columns: this.getColumns(),\n        lineActions: this.getLineActions(),\n        sort$: this.store.recordList.sort$,\n        maxColumns$: of(5),\n        loading$: this.store.recordList.loading$,\n        dataSource: this.store.recordList,\n        pagination: this.store.recordList,\n        toggleRecordSelection: id => {\n          this.store.recordList.toggleSelection(id);\n        },\n        updateSorting: (orderBy, sortOrder) => {\n          this.store.recordList.updateSorting(orderBy, sortOrder);\n          const parentModule = this.store.parentModule;\n          const module = this.store.recordList.getModule();\n          const sort = {\n            orderBy,\n            sortOrder\n          };\n          this.preferences.setUi(parentModule, module + '-subpanel-sort', sort);\n        }\n      };\n    }\n\n    getColumns() {\n      return this.store.metadata$.pipe(map(metadata => metadata.columns));\n    }\n\n    getLineActions() {\n      return this.lineActionsAdapterFactory.create(this.store);\n    }\n\n  }\n\n  SubpanelTableAdapter.ɵfac = function SubpanelTableAdapter_Factory(t) {\n    return new (t || SubpanelTableAdapter)(ɵngcc0.ɵɵinject(SubpanelStore), ɵngcc0.ɵɵinject(SubpanelLineActionsAdapterFactory), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  SubpanelTableAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SubpanelTableAdapter,\n    factory: SubpanelTableAdapter.ɵfac\n  });\n  return SubpanelTableAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelTableAdapterFactory = /*#__PURE__*/(() => {\n  class SubpanelTableAdapterFactory {\n    constructor(lineActionsAdapterFactory, preferences) {\n      this.lineActionsAdapterFactory = lineActionsAdapterFactory;\n      this.preferences = preferences;\n    }\n\n    create(store) {\n      return new SubpanelTableAdapter(store, this.lineActionsAdapterFactory, this.preferences);\n    }\n\n  }\n\n  SubpanelTableAdapterFactory.ɵfac = function SubpanelTableAdapterFactory_Factory(t) {\n    return new (t || SubpanelTableAdapterFactory)(ɵngcc0.ɵɵinject(SubpanelLineActionsAdapterFactory), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  SubpanelTableAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SubpanelTableAdapterFactory_Factory() {\n      return new SubpanelTableAdapterFactory(i0.ɵɵinject(SubpanelLineActionsAdapterFactory), i0.ɵɵinject(UserPreferenceStore));\n    },\n    token: SubpanelTableAdapterFactory,\n    providedIn: \"root\"\n  });\n  return SubpanelTableAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelComponent = /*#__PURE__*/(() => {\n  class SubpanelComponent {\n    constructor(actionManager, languages, tableAdapterFactory, preferences) {\n      this.actionManager = actionManager;\n      this.languages = languages;\n      this.tableAdapterFactory = tableAdapterFactory;\n      this.preferences = preferences;\n    }\n\n    ngOnInit() {\n      this.adapter = this.tableAdapterFactory.create(this.store);\n      this.tableConfig = this.adapter.getTable();\n\n      if (this.maxColumns$) {\n        this.tableConfig.maxColumns$ = this.maxColumns$;\n      }\n\n      const parentModule = this.store.parentModule;\n      const module = this.store.recordList.getModule();\n      const sort = this.preferences.getUi(parentModule, module + '-subpanel-sort');\n\n      if (sort) {\n        this.store.recordList.updateSorting(sort.orderBy, sort.sortOrder);\n      }\n\n      this.config$ = of(this.getButtonGroupConfig(this.buildAction())).pipe(shareReplay(1));\n      this.closeButton = {\n        onClick: () => {\n          this.onClose && this.onClose();\n        }\n      };\n    }\n\n    buildAction() {\n      const actions = [];\n\n      if (this.store.metadata) {\n        if (this.store.metadata.top_buttons) {\n          this.store.metadata.top_buttons.forEach(button => {\n            const label = this.languages.getFieldLabel(button.labelKey, button.module);\n            actions.push(Object.assign(Object.assign({}, button), {\n              label,\n              params: {\n                module: button.module\n              }\n            }));\n          });\n        }\n      }\n\n      return actions;\n    }\n\n    getButtonGroupConfig(actions) {\n      const buttons = [];\n      actions.forEach(action => {\n        buttons.push(this.buildButton(action));\n      });\n      let breakpoint = 1;\n\n      if (buttons && buttons.length > 1) {\n        breakpoint = -1;\n      }\n\n      const dropdownLabel = this.languages.getAppString('LBL_ACTIONS');\n      return {\n        buttons,\n        breakpoint,\n        dropdownLabel,\n        buttonKlass: ['btn', 'btn-sm', 'btn-outline-light']\n      };\n    }\n\n    buildButton(action) {\n      return {\n        label: action.label || '',\n        klass: 'btn btn-sm btn-outline-light',\n        onClick: () => {\n          this.actionManager.run(action.key, {\n            subpanelMeta: this.store.metadata,\n            module: action.params.module || this.store.metadata.module,\n            parentModule: this.store.parentModule,\n            parentId: this.store.parentId,\n            store: this.store,\n            action\n          });\n        }\n      };\n    }\n\n  }\n\n  SubpanelComponent.ɵfac = function SubpanelComponent_Factory(t) {\n    return new (t || SubpanelComponent)(ɵngcc0.ɵɵdirectiveInject(SubpanelActionManager), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(SubpanelTableAdapterFactory), ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore));\n  };\n\n  SubpanelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SubpanelComponent,\n    selectors: [[\"scrm-subpanel\"]],\n    inputs: {\n      store: \"store\",\n      maxColumns$: \"maxColumns$\",\n      onClose: \"onClose\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([SubpanelTableAdapter])],\n    decls: 8,\n    vars: 5,\n    consts: [[\"mode\", \"closable\", \"bodyPadding\", \"0\", 3, \"title\", \"close\"], [\"panel-icon-area\", \"\", 1, \"subpanel-icon\", \"pl-1\"], [3, \"image\"], [\"panel-header-button\", \"\"], [3, \"config$\", 4, \"ngIf\"], [\"panel-body\", \"\"], [3, \"config\"], [3, \"config$\"]],\n    template: function SubpanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"scrm-panel\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 1);\n        ɵngcc0.ɵɵelement(3, \"scrm-image\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, SubpanelComponent_scrm_button_group_5_Template, 1, 1, \"scrm-button-group\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"scrm-table\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"title\", ctx.store.getTitle())(\"close\", ctx.closeButton);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"image\", ctx.store.getIcon());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.config$);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"config\", ctx.tableConfig);\n      }\n    },\n    directives: [PanelComponent, ImageComponent, ɵngcc3.NgIf, TableComponent, ButtonGroupComponent],\n    encapsulation: 2\n  });\n  return SubpanelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelModule = /*#__PURE__*/(() => {\n  class SubpanelModule {}\n\n  SubpanelModule.ɵfac = function SubpanelModule_Factory(t) {\n    return new (t || SubpanelModule)();\n  };\n\n  SubpanelModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SubpanelModule\n  });\n  SubpanelModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgbModule, ImageModule, PanelModule, RouterModule, ButtonGroupModule, TableModule]]\n  });\n  return SubpanelModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SubpanelModule, {\n    declarations: function () {\n      return [SubpanelComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgbModule, ImageModule, PanelModule, RouterModule, ButtonGroupModule, TableModule];\n    },\n    exports: function () {\n      return [SubpanelComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelContainerComponent = /*#__PURE__*/(() => {\n  class SubpanelContainerComponent {\n    constructor(languageStore, maxColumnCalculator, localStorage, preferences) {\n      this.languageStore = languageStore;\n      this.maxColumnCalculator = maxColumnCalculator;\n      this.localStorage = localStorage;\n      this.preferences = preferences;\n      this.isCollapsed = false;\n      this.toggleIcon = 'arrow_down_filled';\n      this.languages$ = this.languageStore.vm$;\n      this.openSubpanels = [];\n    }\n\n    ngOnInit() {\n      var _a, _b, _c, _d;\n\n      const module = (_b = (_a = this === null || this === void 0 ? void 0 : this.config) === null || _a === void 0 ? void 0 : _a.parentModule) !== null && _b !== void 0 ? _b : 'default';\n      this.isCollapsed = isTrue((_c = this.preferences.getUi(module, 'subpanel-container-collapse')) !== null && _c !== void 0 ? _c : false);\n      this.openSubpanels = (_d = this.preferences.getUi(module, 'subpanel-container-open-subpanels')) !== null && _d !== void 0 ? _d : [];\n      this.vm$ = this.config.subpanels$.pipe(map(subpanelsMap => ({\n        subpanels: subpanelsMap\n      })), tap(subpanelsMap => {\n        if (!subpanelsMap || !Object.keys(subpanelsMap).length) {\n          return;\n        }\n\n        if (!this.openSubpanels || this.openSubpanels.length < 1) {\n          return;\n        }\n\n        this.openSubpanels.forEach(subpanelKey => {\n          const subpanel = subpanelsMap.subpanels[subpanelKey];\n\n          if (!subpanel || subpanel.show) {\n            return;\n          }\n\n          subpanel.show = true;\n          subpanel.load().pipe(take(1)).subscribe();\n        });\n      }));\n      this.maxColumns$ = this.getMaxColumns();\n    }\n\n    getMaxColumns() {\n      return this.maxColumnCalculator.getMaxColumns(this.config.sidebarActive$);\n    }\n\n    toggleSubPanels() {\n      var _a, _b;\n\n      this.isCollapsed = !this.isCollapsed;\n      this.toggleIcon = this.isCollapsed ? 'arrow_up_filled' : 'arrow_down_filled';\n      const module = (_b = (_a = this === null || this === void 0 ? void 0 : this.config) === null || _a === void 0 ? void 0 : _a.parentModule) !== null && _b !== void 0 ? _b : 'default';\n      this.preferences.setUi(module, 'subpanel-container-collapse', this.isCollapsed);\n    }\n\n    showSubpanel(key, item) {\n      var _a, _b;\n\n      item.show = !item.show;\n\n      if (item.show) {\n        if (!this.openSubpanels.includes(key)) {\n          this.openSubpanels.push(key);\n        }\n\n        item.load().pipe(take(1)).subscribe();\n      } else {\n        this.openSubpanels = this.openSubpanels.filter(subpanelKey => subpanelKey != key);\n      }\n\n      const module = (_b = (_a = this === null || this === void 0 ? void 0 : this.config) === null || _a === void 0 ? void 0 : _a.parentModule) !== null && _b !== void 0 ? _b : 'default';\n      this.preferences.setUi(module, 'subpanel-container-open-subpanels', this.openSubpanels);\n    }\n\n    getCloseCallBack(key, item) {\n      return () => this.showSubpanel(key, item);\n    }\n\n    getGridConfig(vm) {\n      if (!vm.metadata || !vm.metadata.insightWidget) {\n        return {\n          layout: null\n        };\n      }\n\n      const layout = vm.getWidgetLayout();\n      layout.rows.forEach(row => {\n        if (!row.cols || !row.cols.length) {\n          return;\n        }\n\n        row.cols.forEach(col => {\n          if (!col.statistic) {\n            return;\n          }\n\n          const store = vm.getStatistic(col.statistic);\n\n          if (store) {\n            col.store = store;\n          }\n        });\n      });\n      return {\n        rowClass: 'statistics-sidebar-widget-row',\n        columnClass: 'statistics-sidebar-widget-col',\n        layout,\n        widgetConfig: {},\n        queryArgs: {\n          module: vm.metadata.name,\n          context: {\n            module: vm.parentModule,\n            id: vm.parentId\n          },\n          params: {\n            subpanel: vm.metadata.name\n          }\n        }\n      };\n    }\n\n  }\n\n  SubpanelContainerComponent.ɵfac = function SubpanelContainerComponent_Factory(t) {\n    return new (t || SubpanelContainerComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(MaxColumnsCalculator), ɵngcc0.ɵɵdirectiveInject(LocalStorageService), ɵngcc0.ɵɵdirectiveInject(UserPreferenceStore));\n  };\n\n  SubpanelContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SubpanelContainerComponent,\n    selectors: [[\"scrm-subpanel-container\"]],\n    inputs: {\n      config: \"config\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([MaxColumnsCalculator])],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"activeIds\", \"sub-panel-buttons\", 1, \"sub-panel-banner\"], [\"accordion\", \"ngbAccordion\"], [\"id\", \"sub-panel-buttons\"], [\"ngbPanelHeader\", \"\"], [\"ngbPanelContent\", \"\"], [\"id\", \"sub-panels\"], [4, \"ngFor\", \"ngForOf\"], [1, \"clickable\", 3, \"click\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\"], [\"labelKey\", \"LBL_SELECT_SUBPANEL_BANNER\"], [\"aria-controls\", \"collapseShowSubPanels\", 1, \"float-right\", 3, \"image\"], [\"id\", \"collapseShowSubPanels\", 3, \"ngbCollapse\"], [1, \"row\", \"insight-panel\"], [\"class\", \"col-xs-6 col-sm-3 col-md-2 insight-panel-card border-insight\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xs-6\", \"col-sm-3\", \"col-md-2\", \"insight-panel-card\", \"border-insight\", 3, \"ngClass\", \"click\"], [3, \"config\"], [\"class\", \"sub-panel\", 3, \"maxColumns$\", \"store\", \"onClose\", 4, \"ngIf\"], [1, \"sub-panel\", 3, \"maxColumns$\", \"store\", \"onClose\"]],\n    template: function SubpanelContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, SubpanelContainerComponent_ng_container_0_Template, 8, 1, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc7.NgbAccordion, ɵngcc7.NgbPanel, ɵngcc7.NgbPanelHeader, ɵngcc7.NgbPanelContent, ɵngcc3.NgForOf, LabelComponent, ImageComponent, ɵngcc7.NgbCollapse, ɵngcc3.NgClass, GridWidgetComponent, SubpanelComponent],\n    pipes: [ɵngcc3.AsyncPipe, ɵngcc3.KeyValuePipe],\n    encapsulation: 2\n  });\n  return SubpanelContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SubpanelContainerModule = /*#__PURE__*/(() => {\n  class SubpanelContainerModule {}\n\n  SubpanelContainerModule.ɵfac = function SubpanelContainerModule_Factory(t) {\n    return new (t || SubpanelContainerModule)();\n  };\n\n  SubpanelContainerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SubpanelContainerModule\n  });\n  SubpanelContainerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NgbModule, ImageModule, RouterModule, SubpanelModule, InlineLoadingSpinnerModule, FieldModule, GridWidgetModule, LabelModule]]\n  });\n  return SubpanelContainerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SubpanelContainerModule, {\n    declarations: function () {\n      return [SubpanelContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule, NgbModule, ImageModule, RouterModule, SubpanelModule, InlineLoadingSpinnerModule, FieldModule, GridWidgetModule, LabelModule];\n    },\n    exports: function () {\n      return [SubpanelContainerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsTopWidgetComponent = /*#__PURE__*/(() => {\n  class StatisticsTopWidgetComponent extends BaseWidgetComponent {\n    constructor(language, factory) {\n      super();\n      this.language = language;\n      this.factory = factory;\n      this.statistics = {};\n      this.loading = true;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      if (!this.context || !this.context.module) {\n        this.messageLabelKey = 'LBL_CONFIG_BAD_CONTEXT';\n        return;\n      }\n\n      if (!this.config) {\n        this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';\n        return;\n      }\n\n      if (!this.config.options || !this.config.options.statistics || !this.config.options.statistics.length) {\n        this.messageLabelKey = 'LBL_CONFIG_NO_STATISTICS_KEY';\n        return;\n      }\n\n      if (this.context$) {\n        this.subs.push(this.context$.subscribe(context => {\n          this.context = context;\n        }));\n      }\n\n      const statistics$ = [];\n      const loadings$ = [];\n      this.config.options.statistics.forEach(statistic => {\n        if (!statistic.type) {\n          return;\n        }\n\n        this.statistics[statistic.type] = {\n          labelKey: statistic.labelKey || '',\n          endLabelKey: statistic.endLabelKey || '',\n          type: statistic.type,\n          store: this.factory.create()\n        };\n        this.statistics[statistic.type].store.init(this.context.module, {\n          key: statistic.type,\n          context: Object.assign({}, this.context)\n        }).pipe(take(1)).subscribe();\n        statistics$.push(this.statistics[statistic.type].store.state$);\n        loadings$.push(this.statistics[statistic.type].store.loading$);\n      });\n      this.loading$ = combineLatest(loadings$).pipe(map(loadings => {\n        if (!loadings || loadings.length < 1) {\n          this.loading = false;\n          return false;\n        }\n\n        let loading = true;\n        loadings.forEach(value => {\n          loading = loading && value;\n        });\n        this.loading = loading;\n        return loading;\n      }));\n      this.subs.push(this.loading$.subscribe());\n      this.vm$ = combineLatest([combineLatest(statistics$), this.language.appStrings$]).pipe(map(([statistics, appStrings]) => {\n        const statsMap = {};\n        statistics.forEach(value => {\n          statsMap[value.query.key] = value;\n          this.statistics[value.query.key].labelKey = this.getMetadataEntry(value, 'labelKey');\n          this.statistics[value.query.key].endLabelKey = this.getMetadataEntry(value, 'endLabelKey');\n        });\n        return {\n          statistics: statsMap,\n          appStrings\n        };\n      }));\n\n      if (this.config.reload$) {\n        this.subs.push(this.config.reload$.subscribe(() => {\n          if (this.loading === false) {\n            this.loading = true;\n            this.config.options.statistics.forEach(statistic => {\n              if (!statistic.type) {\n                return;\n              }\n\n              if (!this.statistics[statistic.type] || !this.statistics[statistic.type].store) {\n                return;\n              }\n\n              this.statistics[statistic.type].store.load(false).pipe(take(1)).subscribe();\n            });\n          }\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getMetadataEntry(stat, name) {\n      const value = stat.statistic.metadata && stat.statistic.metadata[name];\n\n      if (value !== null && typeof value !== 'undefined') {\n        return value;\n      }\n\n      return this.statistics[stat.query.key][name];\n    }\n\n    getLabel(key) {\n      const context = this.context || {};\n      const module = context.module || '';\n      return this.language.getFieldLabel(key, module);\n    }\n\n  }\n\n  StatisticsTopWidgetComponent.ɵfac = function StatisticsTopWidgetComponent_Factory(t) {\n    return new (t || StatisticsTopWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(SingleValueStatisticsStoreFactory));\n  };\n\n  StatisticsTopWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: StatisticsTopWidgetComponent,\n    selectors: [[\"scrm-statistics-top-widget\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"d-flex justify-content-center widget-bar rounded\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\", \"widget-bar\", \"rounded\"], [\"class\", \"p-2 widget-bar-entry-message\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"p-2\", \"widget-bar-entry-message\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-baseline\", \"widget-bar-entry\", \"p-2\"], [\"class\", \"pr-1 widget-bar-entry-label\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"pl-1 pr-1 widget-bar-entry-loading\", 4, \"ngIf\"], [\"class\", \"pl-1 widget-bar-entry-end-label\", 4, \"ngIf\"], [1, \"pr-1\", \"widget-bar-entry-label\"], [\"class\", \"pl-1 pr-1 widget-bar-entry-value\", 4, \"ngIf\"], [1, \"pl-1\", \"pr-1\", \"widget-bar-entry-value\"], [\"mode\", \"list\", 3, \"type\", \"field\"], [1, \"pl-1\", \"pr-1\", \"widget-bar-entry-loading\"], [1, \"pl-1\", \"widget-bar-entry-end-label\"]],\n    template: function StatisticsTopWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, StatisticsTopWidgetComponent_div_0_Template, 4, 4, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, FieldComponent, InlineLoadingSpinnerComponent],\n    pipes: [ɵngcc3.AsyncPipe, ɵngcc3.KeyValuePipe, ɵngcc3.UpperCasePipe],\n    encapsulation: 2\n  });\n  return StatisticsTopWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsTopWidgetModule = /*#__PURE__*/(() => {\n  class StatisticsTopWidgetModule {}\n\n  StatisticsTopWidgetModule.ɵfac = function StatisticsTopWidgetModule_Factory(t) {\n    return new (t || StatisticsTopWidgetModule)();\n  };\n\n  StatisticsTopWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: StatisticsTopWidgetModule\n  });\n  StatisticsTopWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, InlineLoadingSpinnerModule]]\n  });\n  return StatisticsTopWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StatisticsTopWidgetModule, {\n    declarations: function () {\n      return [StatisticsTopWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, InlineLoadingSpinnerModule];\n    },\n    exports: function () {\n      return [StatisticsTopWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst topWidgetModules = [StatisticsTopWidgetModule];\nconst topWidgetComponentTypeMap = {\n  statistics: StatisticsTopWidgetComponent\n};\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nlet TopWidgetComponent = /*#__PURE__*/(() => {\n  class TopWidgetComponent extends BaseWidgetComponent {\n    constructor() {\n      super(...arguments);\n      this.map = topWidgetComponentTypeMap;\n    }\n\n    get componentType() {\n      return this.map[this.type];\n    }\n\n    ngOnInit() {\n      this.component = this.componentType;\n      this.inputs = {\n        'config': this.config,\n        'context': this.context\n      };\n    }\n\n  }\n\n  TopWidgetComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵTopWidgetComponent_BaseFactory;\n    return function TopWidgetComponent_Factory(t) {\n      return (ɵTopWidgetComponent_BaseFactory || (ɵTopWidgetComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TopWidgetComponent)))(t || TopWidgetComponent);\n    };\n  }();\n\n  TopWidgetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TopWidgetComponent,\n    selectors: [[\"scrm-top-widget\"]],\n    inputs: {\n      type: \"type\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ndcDynamicComponent\", \"ndcDynamicInputs\", 4, \"ngIf\"], [3, \"ndcDynamicComponent\", \"ndcDynamicInputs\"]],\n    template: function TopWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TopWidgetComponent_ndc_dynamic_0_Template, 1, 5, \"ndc-dynamic\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.type && ctx.config);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc9.DynamicComponent, ɵngcc9.DynamicIoDirective],\n    encapsulation: 2\n  });\n  return TopWidgetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TopWidgetModule = /*#__PURE__*/(() => {\n  class TopWidgetModule {}\n\n  TopWidgetModule.ɵfac = function TopWidgetModule_Factory(t) {\n    return new (t || TopWidgetModule)();\n  };\n\n  TopWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TopWidgetModule\n  });\n  TopWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ...topWidgetModules, DynamicModule]]\n  });\n  return TopWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TopWidgetModule, {\n    declarations: function () {\n      return [TopWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, StatisticsTopWidgetModule, DynamicModule];\n    },\n    exports: function () {\n      return [TopWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseWidgetModule = /*#__PURE__*/(() => {\n  class BaseWidgetModule {}\n\n  BaseWidgetModule.ɵfac = function BaseWidgetModule_Factory(t) {\n    return new (t || BaseWidgetModule)();\n  };\n\n  BaseWidgetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BaseWidgetModule\n  });\n  BaseWidgetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, DynamicModule]]\n  });\n  return BaseWidgetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BaseWidgetModule, {\n    declarations: function () {\n      return [BaseWidgetComponent];\n    },\n    imports: function () {\n      return [CommonModule, DynamicModule];\n    },\n    exports: function () {\n      return [BaseWidgetComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseFieldModule = /*#__PURE__*/(() => {\n  class BaseFieldModule {}\n\n  BaseFieldModule.ɵfac = function BaseFieldModule_Factory(t) {\n    return new (t || BaseFieldModule)();\n  };\n\n  BaseFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BaseFieldModule\n  });\n  BaseFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return BaseFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BaseFieldModule, {\n    declarations: function () {\n      return [BaseBooleanComponent, BaseEnumComponent, BaseFieldComponent, BaseMultiEnumComponent, BaseNameComponent, BaseNumberComponent, BaseRelateComponent, BaseDateTimeComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [BaseBooleanComponent, BaseEnumComponent, BaseFieldComponent, BaseMultiEnumComponent, BaseNameComponent, BaseNumberComponent, BaseRelateComponent, BaseDateTimeComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicEnumDetailFieldComponent = /*#__PURE__*/(() => {\n  class DynamicEnumDetailFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  DynamicEnumDetailFieldComponent.ɵfac = function DynamicEnumDetailFieldComponent_Factory(t) {\n    return new (t || DynamicEnumDetailFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DynamicEnumDetailFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DynamicEnumDetailFieldComponent,\n    selectors: [[\"scrm-dynamicenum-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function DynamicEnumDetailFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.valueLabel, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return DynamicEnumDetailFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicEnumDetailFieldModule = /*#__PURE__*/(() => {\n  class DynamicEnumDetailFieldModule {}\n\n  DynamicEnumDetailFieldModule.ɵfac = function DynamicEnumDetailFieldModule_Factory(t) {\n    return new (t || DynamicEnumDetailFieldModule)();\n  };\n\n  DynamicEnumDetailFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DynamicEnumDetailFieldModule\n  });\n  DynamicEnumDetailFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return DynamicEnumDetailFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicEnumDetailFieldModule, {\n    declarations: function () {\n      return [DynamicEnumDetailFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [DynamicEnumDetailFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicEnumEditFieldComponent = /*#__PURE__*/(() => {\n  class DynamicEnumEditFieldComponent extends BaseEnumComponent {\n    constructor(languages, typeFormatter, logic) {\n      super(languages, typeFormatter, logic);\n      this.languages = languages;\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n    ngOnInit() {\n      super.ngOnInit();\n    }\n\n    onAdd(item) {\n      if (item && item.value) {\n        this.field.value = item.value;\n        this.field.formControl.setValue(item.value);\n        this.field.formControl.markAsDirty();\n        return;\n      }\n\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      this.selectedValues = [];\n      return;\n    }\n\n    onRemove() {\n      this.field.value = '';\n      this.field.formControl.setValue('');\n      this.field.formControl.markAsDirty();\n      setTimeout(() => {\n        this.tag.focus(true, true);\n        this.tag.dropdown.show();\n      }, 200);\n    }\n\n    getPlaceholderLabel() {\n      return this.languages.getAppString('LBL_SELECT_ITEM') || '';\n    }\n\n  }\n\n  DynamicEnumEditFieldComponent.ɵfac = function DynamicEnumEditFieldComponent_Factory(t) {\n    return new (t || DynamicEnumEditFieldComponent)(ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  DynamicEnumEditFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DynamicEnumEditFieldComponent,\n    selectors: [[\"scrm-dynamicenum-edit\"]],\n    viewQuery: function DynamicEnumEditFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tag = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 13,\n    consts: [[\"maxItems\", \"1\", 3, \"ngModel\", \"onlyFromAutocomplete\", \"clearOnBlur\", \"displayBy\", \"identifyBy\", \"placeholder\", \"secondaryPlaceholder\", \"inputClass\", \"ngModelChange\", \"onAdd\", \"onRemove\"], [\"tag\", \"\"], [3, \"displayBy\", \"identifyBy\", \"showDropdownIfEmpty\", \"keepOpen\", \"autocompleteItems\"]],\n    template: function DynamicEnumEditFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"tag-input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function DynamicEnumEditFieldComponent_Template_tag_input_ngModelChange_0_listener($event) {\n          return ctx.selectedValues = $event;\n        })(\"onAdd\", function DynamicEnumEditFieldComponent_Template_tag_input_onAdd_0_listener($event) {\n          return ctx.onAdd($event);\n        })(\"onRemove\", function DynamicEnumEditFieldComponent_Template_tag_input_onRemove_0_listener() {\n          return ctx.onRemove();\n        });\n        ɵngcc0.ɵɵelement(2, \"tag-input-dropdown\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.selectedValues)(\"onlyFromAutocomplete\", true)(\"clearOnBlur\", true)(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"placeholder\", ctx.getPlaceholderLabel())(\"secondaryPlaceholder\", ctx.getPlaceholderLabel())(\"inputClass\", ctx.getInvalidClass());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"displayBy\", \"label\")(\"identifyBy\", \"value\")(\"showDropdownIfEmpty\", true)(\"keepOpen\", false)(\"autocompleteItems\", ctx.options);\n      }\n    },\n    directives: [ɵngcc11.TagInputComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc11.TagInputDropdown],\n    encapsulation: 2\n  });\n  return DynamicEnumEditFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet DynamicEnumEditFieldModule = /*#__PURE__*/(() => {\n  class DynamicEnumEditFieldModule {}\n\n  DynamicEnumEditFieldModule.ɵfac = function DynamicEnumEditFieldModule_Factory(t) {\n    return new (t || DynamicEnumEditFieldModule)();\n  };\n\n  DynamicEnumEditFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DynamicEnumEditFieldModule\n  });\n  DynamicEnumEditFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TagInputModule, FormsModule]]\n  });\n  return DynamicEnumEditFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicEnumEditFieldModule, {\n    declarations: function () {\n      return [DynamicEnumEditFieldComponent];\n    },\n    imports: function () {\n      return [CommonModule, TagInputModule, FormsModule];\n    },\n    exports: function () {\n      return [DynamicEnumEditFieldComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailDetailFieldsComponent = /*#__PURE__*/(() => {\n  class EmailDetailFieldsComponent extends BaseFieldComponent {\n    constructor(typeFormatter, logic) {\n      super(typeFormatter, logic);\n      this.typeFormatter = typeFormatter;\n      this.logic = logic;\n    }\n\n  }\n\n  EmailDetailFieldsComponent.ɵfac = function EmailDetailFieldsComponent_Factory(t) {\n    return new (t || EmailDetailFieldsComponent)(ɵngcc0.ɵɵdirectiveInject(DataTypeFormatter), ɵngcc0.ɵɵdirectiveInject(FieldLogicManager));\n  };\n\n  EmailDetailFieldsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: EmailDetailFieldsComponent,\n    selectors: [[\"scrm-email-detail\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    template: function EmailDetailFieldsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\\n\", ctx.field.value, \"\\n\");\n      }\n    },\n    encapsulation: 2\n  });\n  return EmailDetailFieldsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet EmailDetailFieldsModule = /*#__PURE__*/(() => {\n  class EmailDetailFieldsModule {}\n\n  EmailDetailFieldsModule.ɵfac = function EmailDetailFieldsModule_Factory(t) {\n    return new (t || EmailDetailFieldsModule)();\n  };\n\n  EmailDetailFieldsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: EmailDetailFieldsModule\n  });\n  EmailDetailFieldsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return EmailDetailFieldsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EmailDetailFieldsModule, {\n    declarations: function () {\n      return [EmailDetailFieldsComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [EmailDetailFieldsComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HtmlSanitizePipe = /*#__PURE__*/(() => {\n  class HtmlSanitizePipe {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n    }\n\n    transform(data) {\n      return this.sanitizer.sanitize(SecurityContext.HTML, data);\n    }\n\n  }\n\n  HtmlSanitizePipe.ɵfac = function HtmlSanitizePipe_Factory(t) {\n    return new (t || HtmlSanitizePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer, 16));\n  };\n\n  HtmlSanitizePipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"htmlSanitize\",\n    type: HtmlSanitizePipe,\n    pure: true\n  });\n  return HtmlSanitizePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet HtmlSanitizeModule = /*#__PURE__*/(() => {\n  class HtmlSanitizeModule {}\n\n  HtmlSanitizeModule.ɵfac = function HtmlSanitizeModule_Factory(t) {\n    return new (t || HtmlSanitizeModule)();\n  };\n\n  HtmlSanitizeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HtmlSanitizeModule\n  });\n  HtmlSanitizeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return HtmlSanitizeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HtmlSanitizeModule, {\n    declarations: function () {\n      return [HtmlSanitizePipe];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [HtmlSanitizePipe];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(message, router, authService, preferences, asyncActionService, appState, routeConverter) {\n      this.message = message;\n      this.router = router;\n      this.authService = authService;\n      this.preferences = preferences;\n      this.asyncActionService = asyncActionService;\n      this.appState = appState;\n      this.routeConverter = routeConverter;\n    }\n\n    canActivate(route) {\n      return this.authorizeUser(route);\n    }\n    /**\n     * Authorize user session and acl together in conjunction\n     *\n     * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n     * @param {ActivatedRouteSnapshot} route information about the current route\n     */\n\n\n    authorizeUser(route) {\n      // Note: this session and acl are not always booleans\n      return forkJoin({\n        session: this.authorizeUserSession(route),\n        acl: this.authorizeUserACL(route)\n      }).pipe(map(({\n        session,\n        acl\n      }) => {\n        if (session instanceof UrlTree) {\n          return session;\n        }\n\n        if (acl instanceof UrlTree) {\n          return acl;\n        }\n\n        return session && acl;\n      }));\n    }\n    /**\n     * Authorize user acl\n     *\n     * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n     * @param {ActivatedRouteSnapshot} activatedRoute information about the current route\n     */\n\n\n    authorizeUserACL(activatedRoute) {\n      var _a, _b;\n\n      const routeInfo = this.routeConverter.parseRouteURL(activatedRoute.url);\n      const routeURL = (_a = this.appState.getRouteUrl()) !== null && _a !== void 0 ? _a : '';\n\n      if (!routeInfo.module || routeInfo.module === 'home') {\n        return of(true);\n      }\n\n      const homeUrl = '';\n      const homeUrlTree = this.router.parseUrl(homeUrl);\n      const actionName = 'user-acl';\n      const asyncData = {\n        action: actionName,\n        module: routeInfo.module,\n        payload: {\n          routeAction: routeInfo.action,\n          record: routeInfo.record,\n          routeURL,\n          queryParams: (_b = activatedRoute === null || activatedRoute === void 0 ? void 0 : activatedRoute.queryParams) !== null && _b !== void 0 ? _b : []\n        }\n      };\n      return this.asyncActionService.run(actionName, asyncData).pipe(take(1), map(process => {\n        if (process.data && process.data.result === true) {\n          return true;\n        }\n\n        if (isEmptyString(routeURL)) {\n          // Re-direct to home\n          return homeUrlTree;\n        }\n\n        const currentUrlTree = this.router.parseUrl(this.router.url);\n\n        if (this.routeConverter.isClassicViewRoute(currentUrlTree)) {\n          return currentUrlTree;\n        }\n\n        return false;\n      }), catchError(() => of(homeUrlTree)), tap(result => result));\n    }\n    /**\n     * Authorize user session\n     *\n     * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n     * @param {ActivatedRouteSnapshot} route information about the current route\n     */\n\n\n    authorizeUserSession(route) {\n      if (this.authService.isUserLoggedIn.value && route.data.checkSession !== true) {\n        return of(true);\n      }\n\n      const loginUrl = 'Login';\n      const loginUrlTree = this.router.parseUrl(loginUrl);\n      return this.authService.fetchSessionStatus().pipe(take(1), map(user => {\n        if (user && user.appStatus.installed === false) {\n          return this.router.parseUrl('install');\n        }\n\n        if (user && user.active === true) {\n          this.authService.setCurrentUser(user);\n          return true;\n        }\n\n        this.authService.resetState(); // Re-direct to login\n\n        return loginUrlTree;\n      }), catchError(() => {\n        this.authService.logout('LBL_SESSION_EXPIRED', false);\n        return of(loginUrlTree);\n      }), tap(result => {\n        if (result === true) {\n          this.authService.isUserLoggedIn.next(true);\n        }\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(RouteConverter));\n  };\n\n  AuthGuard.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AuthGuard_Factory() {\n      return new AuthGuard(i0.ɵɵinject(MessageService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(AuthService), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(RouteConverter));\n    },\n    token: AuthGuard,\n    providedIn: \"root\"\n  });\n  return AuthGuard;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)();\n  };\n\n  ErrorInterceptor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n  return ErrorInterceptor;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallAuthGuard = /*#__PURE__*/(() => {\n  class InstallAuthGuard {\n    constructor(systemConfigStore, authService, router, routeConverter, asyncActionService, message) {\n      this.systemConfigStore = systemConfigStore;\n      this.authService = authService;\n      this.router = router;\n      this.routeConverter = routeConverter;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n    }\n\n    canActivate(route) {\n      return this.canActivateWebInstallation(route);\n    }\n    /**\n    * Allow web installation\n    * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n    * @param activatedRoute\n    */\n\n\n    canActivateWebInstallation(activatedRoute) {\n      const homePage = this.systemConfigStore.getHomePage();\n      const homePageUrlTree = this.router.parseUrl(homePage); // this.message.removeMessages();\n\n      return this.authService.fetchSessionStatus().pipe(take(1), map(user => {\n        if (user && user.appStatus.locked === true && user.appStatus.installed === true) {\n          this.message.addDangerMessageByKey('LBL_DISABLED_TITLE_2');\n\n          if (user && user.active === false) {\n            return homePageUrlTree;\n          }\n\n          return false;\n        }\n\n        if (user && user.active === true) {\n          this.authService.logout('', false);\n          this.authService.isUserLoggedIn.next(false);\n        }\n\n        return true;\n      }), catchError(() => of(true)));\n    }\n\n  }\n\n  InstallAuthGuard.ɵfac = function InstallAuthGuard_Factory(t) {\n    return new (t || InstallAuthGuard)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(RouteConverter), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  InstallAuthGuard.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function InstallAuthGuard_Factory() {\n      return new InstallAuthGuard(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(RouteConverter), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService));\n    },\n    token: InstallAuthGuard,\n    providedIn: \"root\"\n  });\n  return InstallAuthGuard;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoginAuthGuard = /*#__PURE__*/(() => {\n  class LoginAuthGuard {\n    constructor(router, authService, systemConfigStore, appStateStore, message) {\n      this.router = router;\n      this.authService = authService;\n      this.systemConfigStore = systemConfigStore;\n      this.appStateStore = appStateStore;\n      this.message = message;\n    }\n\n    canActivate() {\n      const homePage = this.systemConfigStore.getHomePage();\n      const homePageUrlTree = this.router.parseUrl(homePage);\n\n      if (this.authService.isUserLoggedIn.value) {\n        return homePageUrlTree;\n      }\n\n      return this.authService.fetchSessionStatus().pipe(take(1), map(user => {\n        if (user && user.appStatus.installed === false) {\n          return this.router.parseUrl('install');\n        }\n\n        if (user && user.active === true) {\n          // Session is active, go to home page\n          this.authService.setCurrentUser(user);\n          return homePageUrlTree;\n        } // Stay on login\n\n\n        return true;\n      }), catchError(() => of(true)));\n    }\n\n  }\n\n  LoginAuthGuard.ɵfac = function LoginAuthGuard_Factory(t) {\n    return new (t || LoginAuthGuard)(ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MessageService));\n  };\n\n  LoginAuthGuard.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function LoginAuthGuard_Factory() {\n      return new LoginAuthGuard(i0.ɵɵinject(i2.Router), i0.ɵɵinject(AuthService), i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MessageService));\n    },\n    token: LoginAuthGuard,\n    providedIn: \"root\"\n  });\n  return LoginAuthGuard;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ExtensionLoader = /*#__PURE__*/(() => {\n  class ExtensionLoader {\n    constructor(systemConfigStore, compiler) {\n      this.systemConfigStore = systemConfigStore;\n      this.compiler = compiler;\n    }\n    /**\n     * Load all extensions\n     *\n     * @param {object} injector Injector\n     */\n\n\n    load(injector) {\n      const extensions = this.systemConfigStore.getConfigValue('extensions');\n      const extensionModules$ = {};\n      Object.keys(extensions).forEach(extensionName => {\n        if (!extensions[extensionName]) {\n          return;\n        }\n\n        const config = extensions[extensionName];\n\n        if (!config.remoteEntry || !config.remoteName) {\n          return;\n        }\n\n        if (!config.enabled || isFalse(config.enabled)) {\n          return;\n        }\n\n        extensionModules$[extensionName] = this.loadExtension(config, injector);\n      });\n\n      if (Object.keys(extensionModules$).length < 1) {\n        return of({});\n      }\n\n      return forkJoin(extensionModules$);\n    }\n    /**\n     * Load single extension\n     *\n     * @param {object} config ExtensionConfig\n     * @param {object} injector Injector\n     */\n\n\n    loadExtension(config, injector) {\n      const promise = () => loadRemoteModule({\n        remoteEntry: config.remoteEntry,\n        remoteName: config.remoteName,\n        exposedModule: './Module'\n      }).then(m => m.ExtensionModule);\n\n      return this.loadModuleFactory(promise).pipe(map(factory => {\n        return factory.create(injector);\n      }));\n    }\n    /**\n     * Check if object is a promise\n     * @param {} obj promise\n     * @returns {boolean} isPromise\n     */\n\n\n    isPromise(obj) {\n      return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Wrap into observable\n     *\n     * @param {object} value to wrap\n     * @returns {object} observable\n     */\n\n\n    wrapIntoObservable(value) {\n      if (isObservable(value)) {\n        // @ts-ignore\n        return value;\n      }\n\n      if (this.isPromise(value)) {\n        // @ts-ignore\n        return from(Promise.resolve(value));\n      } // @ts-ignore\n\n\n      return of(value);\n    }\n    /**\n     * Load module factory and return observable\n     * @param {function} loadChildren\n     */\n\n\n    loadModuleFactory(loadChildren) {\n      return this.wrapIntoObservable(loadChildren()).pipe(mergeMap(t => {\n        if (t instanceof NgModuleFactory) {\n          return of(t);\n        } else {\n          return from(this.compiler.compileModuleAsync(t));\n        }\n      }));\n    }\n\n  }\n\n  ExtensionLoader.ɵfac = function ExtensionLoader_Factory(t) {\n    return new (t || ExtensionLoader)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(ɵngcc0.Compiler));\n  };\n\n  ExtensionLoader.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ExtensionLoader_Factory() {\n      return new ExtensionLoader(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(i0.Compiler));\n    },\n    token: ExtensionLoader,\n    providedIn: \"root\"\n  });\n  return ExtensionLoader;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseMetadataResolver = /*#__PURE__*/(() => {\n  class BaseMetadataResolver {\n    constructor(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appState, moduleNameMapper, messageService, appMetadata, auth) {\n      this.systemConfigStore = systemConfigStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.themeImagesStore = themeImagesStore;\n      this.appState = appState;\n      this.moduleNameMapper = moduleNameMapper;\n      this.messageService = messageService;\n      this.appMetadata = appMetadata;\n      this.auth = auth;\n    }\n\n    resolve(route) {\n      const module = this.calculateActiveModule(route);\n      return this.appMetadata.load(module).pipe(tap(() => {\n        if (this.auth.isLoggedIn()) {\n          setTimeout(() => {\n            this.appMetadata.loadModuleMetadata(module).pipe(take(1)).subscribe();\n          }, 0);\n        }\n      }));\n    }\n    /**\n     * @param route\n     */\n\n\n    sequentialLoad(route) {\n      const streams$ = {};\n\n      if (this.isToLoadNavigation(route)) {\n        streams$.navigation = this.navigationStore.load();\n      }\n\n      if (this.isToLoadConfigs(route)) {\n        let configs$ = this.systemConfigStore.load();\n\n        if (this.isToLoadLanguageStrings(route)) {\n          const langStrings = this.getLanguagesToLoad(route);\n          configs$ = configs$.pipe(map(configs => {\n            let language = configs.default_language.value;\n            const storedLanguage = this.languageStore.getCurrentLanguage();\n\n            if (storedLanguage) {\n              language = storedLanguage;\n            }\n\n            return this.languageStore.load(language, langStrings);\n          }), concatAll(), toArray());\n        }\n\n        streams$.configs = configs$;\n      }\n\n      if (this.isToLoadUserPreferences(route)) {\n        streams$.preferences = this.userPreferenceStore.load();\n      }\n\n      const parallelStream$ = forkJoin(streams$);\n      return parallelStream$.pipe(map(data => {\n        let theme = null;\n\n        if (this.systemConfigStore.getConfigValue('default_theme')) {\n          theme = this.systemConfigStore.getConfigValue('default_theme');\n        }\n\n        if (this.userPreferenceStore.getUserPreference('user_theme')) {\n          theme = this.userPreferenceStore.getUserPreference('user_theme');\n        }\n\n        if (this.themeImagesStore.getTheme()) {\n          theme = this.themeImagesStore.getTheme();\n        }\n\n        if (theme !== null) {\n          return this.themeImagesStore.load(theme);\n        }\n\n        return data;\n      }), concatAll(), toArray(), tap(() => this.appState.setLoaded(true)));\n    }\n    /**\n     * Get Languages to Load\n     *\n     * @param {{}} route activated\n     * @returns {string[]} languages\n     */\n\n\n    getLanguagesToLoad(route) {\n      let langStrings = this.languageStore.getAvailableStringsTypes();\n\n      if (this.isToLoadNavigation(route)) {\n        return langStrings;\n      }\n\n      if (!route.data || !route.data.load) {\n        return [];\n      }\n\n      if (Array.isArray(route.data.load.languageStrings)) {\n        langStrings = route.data.load.languageStrings;\n      }\n\n      return langStrings;\n    }\n    /**\n     * Should load language strings. True if navigation is to load\n     *\n     * @param {{}} route activated\n     * @returns {boolean} is to load\n     */\n\n\n    isToLoadLanguageStrings(route) {\n      if (this.isToLoadNavigation(route)) {\n        return true;\n      }\n\n      if (!route.data || !route.data.load) {\n        return false;\n      }\n\n      return Array.isArray(route.data.load.languageStrings) || route.data.load.languageStrings === true;\n    }\n    /**\n     * Should load navigation. If not set defaults to true\n     *\n     * @param {{}} route activated\n     * @returns {boolean} is to load\n     */\n\n\n    isToLoadConfigs(route) {\n      if (!route.data || !route.data.load) {\n        return true;\n      }\n\n      return route.data.load.configs !== false;\n    }\n    /**\n     * Should load navigation, If not set defaults to true\n     *\n     * @param {{}} route activated\n     * @returns {boolean} is to load\n     */\n\n\n    isToLoadNavigation(route) {\n      if (!route.data || !route.data.load) {\n        return true;\n      }\n\n      return route.data.load.navigation !== false;\n    }\n    /**\n     * Should load user preferences. If not set defaults to true\n     *\n     * @param {{}} route activated\n     * @returns {boolean} is to load\n     */\n\n\n    isToLoadUserPreferences(route) {\n      if (!route.data || !route.data.load) {\n        return true;\n      }\n\n      return route.data.load.preferences !== false;\n    }\n\n    addMetadataLoadErrorMessage() {\n      let message = this.languageStore.getAppString('LBL_ERROR_FETCHING_METADATA');\n\n      if (!message) {\n        message = 'Error occurred while fetching metadata';\n      }\n\n      this.messageService.addDangerMessage(message);\n    }\n    /**\n     * Calculate the active module\n     *\n     * @param {{}} route active\n     * @returns {string} active module\n     */\n\n\n    calculateActiveModule(route) {\n      var _a, _b;\n\n      let module = route.params.module;\n\n      if (!module) {\n        module = route.data.module;\n      }\n\n      const rootPath = (_b = (_a = route === null || route === void 0 ? void 0 : route.url[0]) === null || _a === void 0 ? void 0 : _a.path) !== null && _b !== void 0 ? _b : '';\n\n      if (!module && rootPath !== '') {\n        module = rootPath;\n      }\n\n      const parentModuleParam = this.getParentModuleMap()[module] || '';\n      const parentModule = route.queryParams[parentModuleParam] || '';\n\n      if (parentModule) {\n        module = this.moduleNameMapper.toFrontend(parentModule);\n      }\n\n      return module;\n    }\n    /**\n     * Get Parent Module Map\n     *\n     * @returns {{}} parent module map\n     */\n\n\n    getParentModuleMap() {\n      return {\n        'merge-records': 'return_module',\n        import: 'import_module'\n      };\n    }\n\n  }\n\n  BaseMetadataResolver.ɵfac = function BaseMetadataResolver_Factory(t) {\n    return new (t || BaseMetadataResolver)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AppMetadataStore), ɵngcc0.ɵɵinject(AuthService));\n  };\n\n  BaseMetadataResolver.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BaseMetadataResolver_Factory() {\n      return new BaseMetadataResolver(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(NavigationStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(MessageService), i0.ɵɵinject(AppMetadataStore), i0.ɵɵinject(AuthService));\n    },\n    token: BaseMetadataResolver,\n    providedIn: \"root\"\n  });\n  return BaseMetadataResolver;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseModuleResolver = /*#__PURE__*/(() => {\n  class BaseModuleResolver extends BaseMetadataResolver {\n    constructor(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, appStateStore, metadataStore, messageService, routeConverter, appMetadata, auth) {\n      super(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appStateStore, moduleNameMapper, messageService, appMetadata, auth);\n      this.systemConfigStore = systemConfigStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.themeImagesStore = themeImagesStore;\n      this.moduleNameMapper = moduleNameMapper;\n      this.appStateStore = appStateStore;\n      this.metadataStore = metadataStore;\n      this.messageService = messageService;\n      this.routeConverter = routeConverter;\n      this.appMetadata = appMetadata;\n      this.auth = auth;\n    }\n\n    resolve(route) {\n      let routeModule = route.params.module;\n\n      if (!routeModule) {\n        routeModule = route.data.module;\n      }\n\n      return super.resolve(route).pipe(concatMap(() => {\n        return forkJoin({\n          metadata: this.metadataStore.load(routeModule, this.metadataStore.getMetadataTypes()),\n          savedSearchMeta: this.metadataStore.getMetadata('saved-search', ['recordView'])\n        });\n      }), map(value => {\n        var _a, _b, _c;\n\n        return {\n          base: (_a = value[0]) !== null && _a !== void 0 ? _a : {},\n          metadata: (_b = value[1]) !== null && _b !== void 0 ? _b : {},\n          savedSearchMeta: (_c = value[2]) !== null && _c !== void 0 ? _c : {}\n        };\n      }), tap(() => {\n        var _a;\n\n        if (routeModule) {\n          const module = this.calculateActiveModule(route);\n          this.appStateStore.setModule(module);\n        }\n\n        const info = this.routeConverter.parseRouteURL(route.url);\n        const action = (_a = info.action) !== null && _a !== void 0 ? _a : 'index';\n        this.appStateStore.setView(action);\n      }, () => {\n        this.addMetadataLoadErrorMessage();\n      }));\n    }\n\n  }\n\n  BaseModuleResolver.ɵfac = function BaseModuleResolver_Factory(t) {\n    return new (t || BaseModuleResolver)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RouteConverter), ɵngcc0.ɵɵinject(AppMetadataStore), ɵngcc0.ɵɵinject(AuthService));\n  };\n\n  BaseModuleResolver.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BaseModuleResolver_Factory() {\n      return new BaseModuleResolver(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(NavigationStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(RouteConverter), i0.ɵɵinject(AppMetadataStore), i0.ɵɵinject(AuthService));\n    },\n    token: BaseModuleResolver,\n    providedIn: \"root\"\n  });\n  return BaseModuleResolver;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet RecentlyViewedService = /*#__PURE__*/(() => {\n  class RecentlyViewedService {\n    constructor(metadata, processService) {\n      this.metadata = metadata;\n      this.processService = processService;\n    }\n    /**\n     * Public Api\n     */\n\n    /**\n     * On navigation add\n     * @param module\n     * @param route\n     */\n\n\n    onNavigationAdd(module, route) {\n      var _a, _b;\n\n      let mode = 'detail';\n      const data = route && route.data || {};\n\n      if (data.mode) {\n        mode = data.mode;\n      }\n\n      const recordId = (_b = (_a = route === null || route === void 0 ? void 0 : route.params) === null || _a === void 0 ? void 0 : _a.record) !== null && _b !== void 0 ? _b : null;\n\n      if (recordId && mode !== 'create') {\n        const recentlyViewed = this.buildRecentlyViewed(module, recordId);\n        this.addRecentlyViewed(module, recentlyViewed);\n      }\n    }\n    /**\n     * Build new recently viewed\n     * @param module\n     * @param id\n     * @param view\n     */\n\n\n    buildRecentlyViewed(module, id, view = 'detailview') {\n      return deepClone({\n        module: 'Tracker',\n        type: 'Tracker',\n        attributes: {\n          module_name: module !== null && module !== void 0 ? module : '',\n          item_id: id !== null && id !== void 0 ? id : '',\n          action: view !== null && view !== void 0 ? view : ''\n        }\n      });\n    }\n    /**\n     * Add recently viewed\n     * @param module\n     * @param viewed\n     */\n\n\n    addRecentlyViewed(module, viewed) {\n      this.saveRecentlyViewed(module, viewed);\n    }\n    /**\n     * Save recently viewed to backend\n     * @param module\n     * @param viewed\n     */\n\n\n    saveRecentlyViewed(module, viewed) {\n      const processType = 'add-recently-viewed';\n      const options = {\n        recentlyViewed: viewed\n      };\n      setTimeout(() => {\n        this.processService.submit(processType, options).pipe(take(1)).subscribe(result => {\n          var _a, _b, _c, _d, _e, _f, _g, _h;\n\n          const saved = {\n            id: (_a = viewed.id) !== null && _a !== void 0 ? _a : '',\n            module: (_b = viewed.module) !== null && _b !== void 0 ? _b : '',\n            attributes: Object.assign({}, (_c = viewed.attributes) !== null && _c !== void 0 ? _c : {})\n          };\n          const tracker = (_e = (_d = result === null || result === void 0 ? void 0 : result.data) === null || _d === void 0 ? void 0 : _d.tracker) !== null && _e !== void 0 ? _e : null;\n\n          if (tracker === null) {\n            return;\n          }\n\n          saved.attributes.item_summary = tracker.item_summary;\n          const newItemId = (_g = (_f = saved === null || saved === void 0 ? void 0 : saved.attributes) === null || _f === void 0 ? void 0 : _f.item_id) !== null && _g !== void 0 ? _g : '';\n          const metadata = this.metadata.getModuleMeta(module);\n          const current = (_h = metadata === null || metadata === void 0 ? void 0 : metadata.recentlyViewed) !== null && _h !== void 0 ? _h : null;\n\n          if (current) {\n            let cleared = current.filter(item => {\n              var _a, _b;\n\n              return ((_b = (_a = item === null || item === void 0 ? void 0 : item.attributes) === null || _a === void 0 ? void 0 : _a.item_id) !== null && _b !== void 0 ? _b : '') !== newItemId;\n            });\n            cleared.unshift(saved);\n            metadata.recentlyViewed = cleared;\n          }\n\n          this.metadata.setModuleMetadata(module, metadata);\n        });\n      }, 500);\n    }\n\n  }\n\n  RecentlyViewedService.ɵfac = function RecentlyViewedService_Factory(t) {\n    return new (t || RecentlyViewedService)(ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(ProcessService));\n  };\n\n  RecentlyViewedService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecentlyViewedService_Factory() {\n      return new RecentlyViewedService(i0.ɵɵinject(MetadataStore), i0.ɵɵinject(ProcessService));\n    },\n    token: RecentlyViewedService,\n    providedIn: \"root\"\n  });\n  return RecentlyViewedService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BaseRecordResolver = /*#__PURE__*/(() => {\n  class BaseRecordResolver extends BaseModuleResolver {\n    constructor(systemConfigStore, languageStore, navigationStore, metadataStore, userPreferenceStore, themeImagesStore, moduleNameMapper, actionNameMapper, appStateStore, messageService, routeConverter, router, appMetadata, auth, recentlyViewed) {\n      super(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, appStateStore, metadataStore, messageService, routeConverter, appMetadata, auth);\n      this.systemConfigStore = systemConfigStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.metadataStore = metadataStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.themeImagesStore = themeImagesStore;\n      this.moduleNameMapper = moduleNameMapper;\n      this.actionNameMapper = actionNameMapper;\n      this.appStateStore = appStateStore;\n      this.messageService = messageService;\n      this.routeConverter = routeConverter;\n      this.router = router;\n      this.appMetadata = appMetadata;\n      this.auth = auth;\n      this.recentlyViewed = recentlyViewed;\n    }\n\n    resolve(route) {\n      let routeModule = route.params.module;\n\n      if (!routeModule) {\n        routeModule = route.data.module;\n      }\n\n      return super.resolve(route).pipe(concatMap(() => {\n        return forkJoin({\n          metadata: this.metadataStore.load(routeModule, this.metadataStore.getMetadataTypes())\n        });\n      }), tap(() => {\n        if (this.auth.isLoggedIn()) {\n          this.recentlyViewed.onNavigationAdd(this.appStateStore.getModule(), route);\n        }\n      }));\n    }\n\n  }\n\n  BaseRecordResolver.ɵfac = function BaseRecordResolver_Factory(t) {\n    return new (t || BaseRecordResolver)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ActionNameMapper), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RouteConverter), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(AppMetadataStore), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(RecentlyViewedService));\n  };\n\n  BaseRecordResolver.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BaseRecordResolver_Factory() {\n      return new BaseRecordResolver(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(NavigationStore), i0.ɵɵinject(MetadataStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(ActionNameMapper), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(MessageService), i0.ɵɵinject(RouteConverter), i0.ɵɵinject(i2.Router), i0.ɵɵinject(AppMetadataStore), i0.ɵɵinject(AuthService), i0.ɵɵinject(RecentlyViewedService));\n    },\n    token: BaseRecordResolver,\n    providedIn: \"root\"\n  });\n  return BaseRecordResolver;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecoverPasswordService = /*#__PURE__*/(() => {\n  class RecoverPasswordService {\n    constructor(processService, appStateStore) {\n      this.processService = processService;\n      this.appStateStore = appStateStore;\n      this.processType = 'recover-password';\n    }\n    /**\n     * Send recover password request\n     *\n     * @param {string} userName to check\n     * @param {string} email to check\n     * @returns {{}} Observable<Process>\n     */\n\n\n    run(userName, email) {\n      const options = {\n        username: userName,\n        useremail: email\n      };\n      this.appStateStore.updateLoading('recover-password', true, false);\n      return this.processService.submit(this.processType, options).pipe(tap(() => this.appStateStore.updateLoading('recover-password', false, false)), catchError(err => {\n        this.appStateStore.updateLoading('recover-password', false, false);\n        throw err;\n      }));\n    }\n\n  }\n\n  RecoverPasswordService.ɵfac = function RecoverPasswordService_Factory(t) {\n    return new (t || RecoverPasswordService)(ɵngcc0.ɵɵinject(ProcessService), ɵngcc0.ɵɵinject(AppStateStore));\n  };\n\n  RecoverPasswordService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecoverPasswordService_Factory() {\n      return new RecoverPasswordService(i0.ɵɵinject(ProcessService), i0.ɵɵinject(AppStateStore));\n    },\n    token: RecoverPasswordService,\n    providedIn: \"root\"\n  });\n  return RecoverPasswordService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAll() {\n      return this.http.get('users');\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(ɵngcc0.ɵɵinject(ɵngcc13.HttpClient));\n  };\n\n  UserService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function UserService_Factory() {\n      return new UserService(i0.ɵɵinject(i1$2.HttpClient));\n    },\n    token: UserService,\n    providedIn: \"root\"\n  });\n  return UserService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SeriesStatisticsStoreFactory = /*#__PURE__*/(() => {\n  class SeriesStatisticsStoreFactory {\n    constructor(fetchGQL) {\n      this.fetchGQL = fetchGQL;\n    }\n\n    create() {\n      return new SeriesStatisticsStore(this.fetchGQL);\n    }\n\n  }\n\n  SeriesStatisticsStoreFactory.ɵfac = function SeriesStatisticsStoreFactory_Factory(t) {\n    return new (t || SeriesStatisticsStoreFactory)(ɵngcc0.ɵɵinject(StatisticsFetchGQL));\n  };\n\n  SeriesStatisticsStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function SeriesStatisticsStoreFactory_Factory() {\n      return new SeriesStatisticsStoreFactory(i0.ɵɵinject(StatisticsFetchGQL));\n    },\n    token: SeriesStatisticsStoreFactory,\n    providedIn: \"root\"\n  });\n  return SeriesStatisticsStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet StatisticsStoreFactory = /*#__PURE__*/(() => {\n  class StatisticsStoreFactory {\n    constructor(fetchGQL) {\n      this.fetchGQL = fetchGQL;\n    }\n\n    create() {\n      return new StatisticsStore(this.fetchGQL);\n    }\n\n  }\n\n  StatisticsStoreFactory.ɵfac = function StatisticsStoreFactory_Factory(t) {\n    return new (t || StatisticsStoreFactory)(ɵngcc0.ɵɵinject(StatisticsFetchGQL));\n  };\n\n  StatisticsStoreFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function StatisticsStoreFactory_Factory() {\n      return new StatisticsStoreFactory(i0.ɵɵinject(StatisticsFetchGQL));\n    },\n    token: StatisticsStoreFactory,\n    providedIn: \"root\"\n  });\n  return StatisticsStoreFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ClassicViewUiComponent = /*#__PURE__*/(() => {\n  class ClassicViewUiComponent {\n    constructor(route, router, sanitizer, routeConverter, auth, ngZone, systemConfigs) {\n      this.route = route;\n      this.router = router;\n      this.sanitizer = sanitizer;\n      this.routeConverter = routeConverter;\n      this.auth = auth;\n      this.ngZone = ngZone;\n      this.systemConfigs = systemConfigs;\n      this.iframe = null;\n    }\n\n    ngOnInit() {\n      this.url = this.route.snapshot.data.legacyUrl;\n    }\n\n    ngAfterViewInit() {\n      this.initIframe();\n    }\n\n    ngOnDestroy() {\n      this.cleanObservers();\n      this.iframe = null;\n      const placeholder = this.wrapper;\n\n      if (this.wrapper.firstChild) {\n        placeholder.removeChild(placeholder.firstChild);\n      }\n\n      placeholder.innerHTML = '<iframe></iframe>';\n      this.wrapper = null;\n    }\n\n    cleanObservers() {\n      if (this.iframeResizeHandler) {\n        this.iframeResizeHandler.destroy();\n        this.iframeResizeHandler = null;\n      }\n\n      if (this.iframePageChangeHandler) {\n        this.iframePageChangeHandler.destroy();\n        this.iframePageChangeHandler = null;\n      }\n    }\n\n    initIframe() {\n      this.wrapper = this.dataContainer.nativeElement;\n\n      if (this.wrapper.firstChild) {\n        this.wrapper.removeChild(this.wrapper.firstChild);\n      }\n\n      const iframe = document.createElement('iframe');\n      iframe.src = this.url;\n      this.wrapper.appendChild(iframe);\n      this.iframe = iframe;\n      this.iframe.style.display = 'block';\n      this.initObservers();\n    }\n\n    initObservers() {\n      this.iframePageChangeHandler = this.buildIframePageChangeObserver();\n      this.iframeResizeHandler = this.buildIframeResizeHandlerHandler();\n\n      if (this.iframePageChangeHandler) {\n        this.iframePageChangeHandler.init();\n      }\n    }\n\n    onPageChange(newLocation) {\n      if (this.shouldRedirect(newLocation) === false) {\n        this.iframe.style.display = 'block';\n        this.cleanObservers();\n        this.initObservers();\n        return;\n      }\n\n      const location = this.routeConverter.toFrontEndRoute(newLocation);\n\n      if (location === '/users/login') {\n        this.auth.logout('LBL_SESSION_EXPIRED');\n        return;\n      }\n\n      this.ngZone.run(() => this.router.navigateByUrl(location).then()).then();\n    }\n\n    onIFrameLoad() {\n      // Do not show scroll at any time, to avoid flickering\n      this.iframe.contentWindow.document.body.style.overflow = 'hidden'; // Init resize handler\n\n      this.iframeResizeHandler.init(this.iframe);\n    }\n\n    onIFrameUnload() {\n      // hide iframe, while being re-directed\n      this.iframe.style.display = 'none';\n      this.iframeResizeHandler.destroy();\n    }\n\n    buildIframePageChangeObserver() {\n      return new IframePageChangeObserver(this.iframe, this.onPageChange.bind(this), this.onIFrameLoad.bind(this), this.onIFrameUnload.bind(this));\n    }\n\n    buildIframeResizeHandlerHandler() {\n      return new IframeResizeHandlerHandler();\n    }\n    /**\n     * Check if should re-direct to link or if it was excluded\n     *\n     * @param {string} legacyLink to check\n     * @returns {boolean} should redirect\n     */\n\n\n    shouldRedirect(legacyLink) {\n      if (legacyLink && legacyLink.includes('/#/')) {\n        return true;\n      }\n\n      const routeInfo = this.routeConverter.parse(legacyLink); // if no route or no module, don't re-direct\n\n      if (!routeInfo || !routeInfo.module) {\n        return false;\n      }\n\n      const reuse = this.routeConverter.matchesActiveRoute(this.route, routeInfo);\n\n      if (reuse === true) {\n        return false;\n      }\n\n      if (!routeInfo.action) {\n        return true;\n      }\n\n      return this.toExclude(routeInfo);\n    }\n    /**\n     * Check if given route is to exclude from redirection\n     *\n     * @param {object} routeInfo to check\n     * @returns {boolean} is to exclude\n     */\n\n\n    toExclude(routeInfo) {\n      const exclusions = this.systemConfigs.getConfigValue('classicview_routing_exclusions');\n\n      if (!exclusions || Object.keys(exclusions).length === 0) {\n        return true;\n      } // if action is excluded for any module, don't re-direct\n\n\n      if (exclusions.any && exclusions.any.includes(routeInfo.action)) {\n        return false;\n      }\n\n      if (!exclusions[routeInfo.module]) {\n        return true;\n      } // if module action is excluded, don't re-direct\n\n\n      const moduleExclusions = exclusions[routeInfo.module];\n      return !(moduleExclusions && moduleExclusions.includes(routeInfo.action));\n    }\n\n  }\n\n  ClassicViewUiComponent.ɵfac = function ClassicViewUiComponent_Factory(t) {\n    return new (t || ClassicViewUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(RouteConverter), ɵngcc0.ɵɵdirectiveInject(AuthService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore));\n  };\n\n  ClassicViewUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ClassicViewUiComponent,\n    selectors: [[\"scrm-classic-view-ui\"]],\n    viewQuery: function ClassicViewUiComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c29, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dataContainer = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"classic-view-container\"], [\"dataContainer\", \"\"]],\n    template: function ClassicViewUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelement(2, \"iframe\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return ClassicViewUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ClassicViewUiModule = /*#__PURE__*/(() => {\n  class ClassicViewUiModule {}\n\n  ClassicViewUiModule.ɵfac = function ClassicViewUiModule_Factory(t) {\n    return new (t || ClassicViewUiModule)();\n  };\n\n  ClassicViewUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ClassicViewUiModule\n  });\n  ClassicViewUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ClassicViewUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClassicViewUiModule, {\n    declarations: function () {\n      return [ClassicViewUiComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [ClassicViewUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ClassicViewResolver = /*#__PURE__*/(() => {\n  class ClassicViewResolver extends BaseMetadataResolver {\n    constructor(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, routeConverter, messageService, appStateStore, appMetadata, auth, recentlyViewed, metadataStore) {\n      super(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appStateStore, moduleNameMapper, messageService, appMetadata, auth);\n      this.systemConfigStore = systemConfigStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.userPreferenceStore = userPreferenceStore;\n      this.themeImagesStore = themeImagesStore;\n      this.moduleNameMapper = moduleNameMapper;\n      this.routeConverter = routeConverter;\n      this.messageService = messageService;\n      this.appStateStore = appStateStore;\n      this.appMetadata = appMetadata;\n      this.auth = auth;\n      this.recentlyViewed = recentlyViewed;\n      this.metadataStore = metadataStore;\n    }\n\n    resolve(route) {\n      const module = this.calculateActiveModule(route);\n      return super.resolve(route).pipe(concatMap(() => {\n        return forkJoin({\n          metadata: this.metadataStore.load(module, this.metadataStore.getMetadataTypes())\n        });\n      }), map(() => this.routeConverter.toLegacy(route.params, route.queryParams)), tap(() => {\n        var _a;\n\n        if (route.params.module) {\n          const module = this.calculateActiveModule(route);\n          this.appStateStore.setModule(module);\n        }\n\n        const info = this.routeConverter.parseRouteURL(route.url);\n        const action = (_a = info.action) !== null && _a !== void 0 ? _a : 'index';\n        this.appStateStore.setView(action);\n        this.recentlyViewed.onNavigationAdd(this.appStateStore.getModule(), route);\n      }, () => {\n        this.addMetadataLoadErrorMessage();\n      }));\n    }\n\n  }\n\n  ClassicViewResolver.ɵfac = function ClassicViewResolver_Factory(t) {\n    return new (t || ClassicViewResolver)(ɵngcc0.ɵɵinject(SystemConfigStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(UserPreferenceStore), ɵngcc0.ɵɵinject(ThemeImagesStore), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(RouteConverter), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(AppMetadataStore), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(RecentlyViewedService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  ClassicViewResolver.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ClassicViewResolver_Factory() {\n      return new ClassicViewResolver(i0.ɵɵinject(SystemConfigStore), i0.ɵɵinject(LanguageStore), i0.ɵɵinject(NavigationStore), i0.ɵɵinject(UserPreferenceStore), i0.ɵɵinject(ThemeImagesStore), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(RouteConverter), i0.ɵɵinject(MessageService), i0.ɵɵinject(AppStateStore), i0.ɵɵinject(AppMetadataStore), i0.ɵɵinject(AuthService), i0.ɵɵinject(RecentlyViewedService), i0.ɵɵinject(MetadataStore));\n    },\n    token: ClassicViewResolver,\n    providedIn: \"root\"\n  });\n  return ClassicViewResolver;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CreateViewStore = /*#__PURE__*/(() => {\n  class CreateViewStore extends RecordViewStore {\n    constructor(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, auth, recordStoreFactory, preferences) {\n      super(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, recordStoreFactory, preferences);\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.appStateStore = appStateStore;\n      this.languageStore = languageStore;\n      this.navigationStore = navigationStore;\n      this.moduleNavigation = moduleNavigation;\n      this.metadataStore = metadataStore;\n      this.localStorage = localStorage;\n      this.message = message;\n      this.subpanelFactory = subpanelFactory;\n      this.recordManager = recordManager;\n      this.statisticsBatch = statisticsBatch;\n      this.auth = auth;\n      this.recordStoreFactory = recordStoreFactory;\n      this.preferences = preferences;\n    }\n    /**\n     * Initial record load if not cached and update state.\n     * Returns observable to be used in resolver if needed\n     *\n     * @param {string} module to use\n     * @param {string} recordID to use\n     * @param {string} mode to use\n     * @param {object} params to set\n     * @returns {object} Observable<any>\n     */\n\n\n    init(module, recordID, mode = 'detail', params = {}) {\n      this.internalState.module = module;\n      this.internalState.recordID = recordID;\n      this.setMode(mode);\n      this.parseParams(params);\n      this.calculateShowWidgets();\n      this.showTopWidget = false;\n      this.showSubpanels = false;\n      this.initRecord(params);\n      return this.load();\n    }\n\n    save() {\n      this.appStateStore.updateLoading(`${this.internalState.module}-record-save-new`, true);\n      return this.recordStore.save().pipe(catchError(() => {\n        this.message.addDangerMessageByKey('LBL_ERROR_SAVING');\n        return of({});\n      }), finalize(() => {\n        this.setMode('detail');\n        this.appStateStore.updateLoading(`${this.internalState.module}-record-save-new`, false);\n      }));\n    }\n    /**\n     * Init record using params\n     *\n     * @param {object} params queryParams\n     */\n\n\n    initRecord(params = {}) {\n      const user = this.auth.getCurrentUser();\n      const blankRecord = {\n        id: '',\n        type: '',\n        module: this.internalState.module,\n\n        /* eslint-disable camelcase,@typescript-eslint/camelcase */\n        attributes: {\n          assigned_user_id: user.id,\n          assigned_user_name: {\n            id: user.id,\n            user_name: user.userName\n          }\n        }\n        /* eslint-enable camelcase,@typescript-eslint/camelcase */\n\n      };\n      this.recordManager.injectParamFields(params, blankRecord, this.getVardefs());\n      this.recordStore.init(blankRecord);\n    }\n    /**\n     * Load / reload record using current pagination and criteria\n     *\n     * @returns {object} Observable<RecordViewState>\n     */\n\n\n    load() {\n      return of(this.recordStore.getBaseRecord()).pipe(shareReplay());\n    }\n    /**\n     * Calculate if widgets are to display\n     */\n\n\n    calculateShowWidgets() {\n      const show = false;\n      this.showSidebarWidgets = show;\n      this.widgets = show;\n    }\n\n  }\n\n  CreateViewStore.ɵfac = function CreateViewStore_Factory(t) {\n    return new (t || CreateViewStore)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(AppStateStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(NavigationStore), ɵngcc0.ɵɵinject(ModuleNavigation), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LocalStorageService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(SubpanelStoreFactory), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(StatisticsBatch), ɵngcc0.ɵɵinject(AuthService), ɵngcc0.ɵɵinject(RecordStoreFactory), ɵngcc0.ɵɵinject(UserPreferenceStore));\n  };\n\n  CreateViewStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CreateViewStore,\n    factory: CreateViewStore.ɵfac\n  });\n  return CreateViewStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CreateRecordComponent = /*#__PURE__*/(() => {\n  class CreateRecordComponent {\n    constructor(appState, recordStore, route) {\n      this.appState = appState;\n      this.recordStore = recordStore;\n      this.route = route;\n      this.vm$ = null;\n      this.showStatusBar = false;\n    }\n\n    ngOnInit() {\n      let mode = 'detail';\n      const data = this.route.snapshot && this.route.snapshot.data || {};\n\n      if (data.mode) {\n        mode = data.mode;\n      }\n\n      const params = this.route.snapshot && this.route.snapshot.queryParams || {};\n      this.recordSub = this.recordStore.init(this.appState.getModule(), this.route.snapshot.params.record, mode, params).subscribe();\n      this.vm$ = this.recordStore.vm$;\n    }\n\n    ngOnDestroy() {\n      if (this.recordSub) {\n        this.recordSub.unsubscribe();\n      }\n\n      this.recordStore.destroy();\n    }\n\n  }\n\n  CreateRecordComponent.ɵfac = function CreateRecordComponent_Factory(t) {\n    return new (t || CreateRecordComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(CreateViewStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute));\n  };\n\n  CreateRecordComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CreateRecordComponent,\n    selectors: [[\"scrm-create-record\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([CreateViewStore, {\n      provide: RecordViewStore,\n      useExisting: CreateViewStore\n    }])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"record-view\", 4, \"ngIf\"], [1, \"record-view\"], [1, \"record-view-hr-container\"], [1, \"record-view-hr\"], [4, \"ngIf\"]],\n    template: function CreateRecordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, CreateRecordComponent_div_0_Template, 6, 1, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgIf, RecordHeaderComponent, RecordContainerComponent, StatusBarComponent];\n    },\n    pipes: function () {\n      return [ɵngcc3.AsyncPipe];\n    },\n    encapsulation: 2\n  });\n  return CreateRecordComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet SidebarWidgetAdapter = /*#__PURE__*/(() => {\n  class SidebarWidgetAdapter {\n    constructor(store, metadata) {\n      this.store = store;\n      this.metadata = metadata;\n      this.config$ = combineLatest([this.metadata.recordViewMetadata$, this.store.showSidebarWidgets$]).pipe(map(([metadata, show]) => {\n        if (metadata.sidebarWidgets && metadata.sidebarWidgets.length) {\n          metadata.sidebarWidgets.forEach(widget => {\n            if (widget && widget.refreshOn === 'data-update') {\n              widget.reload$ = this.store.record$.pipe(map(() => true));\n            }\n\n            if (widget) {\n              widget.subpanelReload$ = this.store.subpanelReload$;\n            }\n          });\n        }\n\n        return {\n          widgets: metadata.sidebarWidgets || [],\n          show\n        };\n      }));\n    }\n\n  }\n\n  SidebarWidgetAdapter.ɵfac = function SidebarWidgetAdapter_Factory(t) {\n    return new (t || SidebarWidgetAdapter)(ɵngcc0.ɵɵinject(RecordViewStore), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  SidebarWidgetAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SidebarWidgetAdapter,\n    factory: SidebarWidgetAdapter.ɵfac\n  });\n  return SidebarWidgetAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass RecordActionHandler extends ActionHandler {\n  checkRecordAccess(data, defaultAcls = []) {\n    var _a, _b;\n\n    const record = data.store.recordStore.getBaseRecord();\n    const acls = (_a = record.acls) !== null && _a !== void 0 ? _a : [];\n\n    if (!acls || !acls.length) {\n      return false;\n    }\n\n    const action = (_b = data.action) !== null && _b !== void 0 ? _b : null;\n    return this.checkAccess(action, acls, defaultAcls);\n  }\n  /**\n   * Navigate back\n   * @param navigation\n   * @param params\n   * @param id\n   * @param moduleName\n   * @param record\n   */\n\n\n  navigateBack(navigation, params, id, moduleName, record) {\n    let returnModule = navigation.getReturnModule(params);\n    let returnAction = navigation.getReturnAction(params);\n    let returnId = navigation.getReturnId(params);\n\n    if (id === returnId) {\n      return;\n    }\n\n    if (returnModule === moduleName && returnAction === 'record' && returnId !== id) {\n      return;\n    }\n\n    if (!returnModule || !returnAction) {\n      return;\n    }\n\n    navigation.navigateBack(record, moduleName, params);\n  }\n\n}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordCancelAction = /*#__PURE__*/(() => {\n  class RecordCancelAction extends RecordActionHandler {\n    constructor(modalService, navigation) {\n      super();\n      this.modalService = modalService;\n      this.navigation = navigation;\n      this.key = 'cancel';\n      this.modes = ['edit', 'detail'];\n    }\n\n    run(data) {\n      if (data.store.recordStore.isDirty()) {\n        this.showConfirmationModal(data);\n        return;\n      }\n\n      this.cancel(data);\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n    cancel(data) {\n      const params = data.store.params;\n      const moduleName = data.store.getModuleName();\n      const id = data.store.getRecordId();\n      const record = data.store.getBaseRecord();\n      this.navigateBack(this.navigation, params, id, moduleName, record);\n      data.store.recordStore.resetStaging();\n      data.store.setMode('detail');\n    }\n\n    showConfirmationModal(data) {\n      const modal = this.modalService.open(MessageModalComponent);\n      modal.componentInstance.textKey = 'WARN_UNSAVED_CHANGES';\n      modal.componentInstance.buttons = [{\n        labelKey: 'LBL_CANCEL',\n        klass: ['btn-secondary'],\n        onClick: activeModal => activeModal.dismiss()\n      }, {\n        labelKey: 'LBL_PROCEED',\n        klass: ['btn-main'],\n        onClick: activeModal => {\n          this.cancel(data);\n          activeModal.close();\n        }\n      }];\n    }\n\n  }\n\n  RecordCancelAction.ɵfac = function RecordCancelAction_Factory(t) {\n    return new (t || RecordCancelAction)(ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(ModuleNavigation));\n  };\n\n  RecordCancelAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordCancelAction_Factory() {\n      return new RecordCancelAction(i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(ModuleNavigation));\n    },\n    token: RecordCancelAction,\n    providedIn: \"root\"\n  });\n  return RecordCancelAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordSaveAction = /*#__PURE__*/(() => {\n  class RecordSaveAction extends RecordActionHandler {\n    constructor(message, navigation) {\n      super();\n      this.message = message;\n      this.navigation = navigation;\n      this.key = 'save';\n      this.modes = ['edit'];\n    }\n\n    run(data) {\n      data.store.recordStore.validate().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          data.store.save().pipe(take(1)).subscribe(record => {\n            const params = data.store.params;\n            const moduleName = data.store.getModuleName();\n            const id = record.id;\n            this.navigateBack(this.navigation, params, id, moduleName, record);\n          });\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n  }\n\n  RecordSaveAction.ɵfac = function RecordSaveAction_Factory(t) {\n    return new (t || RecordSaveAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ModuleNavigation));\n  };\n\n  RecordSaveAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordSaveAction_Factory() {\n      return new RecordSaveAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(ModuleNavigation));\n    },\n    token: RecordSaveAction,\n    providedIn: \"root\"\n  });\n  return RecordSaveAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordToggleWidgetsAction = /*#__PURE__*/(() => {\n  class RecordToggleWidgetsAction extends RecordActionHandler {\n    constructor() {\n      super();\n      this.key = 'toggle-widgets';\n      this.modes = ['detail', 'edit'];\n    }\n\n    run(data) {\n      data.store.showSidebarWidgets = !data.store.showSidebarWidgets;\n    }\n\n    shouldDisplay(data) {\n      return data.store.widgets;\n    }\n\n    getStatus(data) {\n      return data.store.showSidebarWidgets ? 'active' : '';\n    }\n\n  }\n\n  RecordToggleWidgetsAction.ɵfac = function RecordToggleWidgetsAction_Factory(t) {\n    return new (t || RecordToggleWidgetsAction)();\n  };\n\n  RecordToggleWidgetsAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordToggleWidgetsAction_Factory() {\n      return new RecordToggleWidgetsAction();\n    },\n    token: RecordToggleWidgetsAction,\n    providedIn: \"root\"\n  });\n  return RecordToggleWidgetsAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordEditAction = /*#__PURE__*/(() => {\n  class RecordEditAction extends RecordActionHandler {\n    constructor() {\n      super();\n      this.key = 'edit';\n      this.modes = ['detail'];\n    }\n\n    run(data) {\n      data.store.setMode('edit');\n    }\n\n    shouldDisplay(data) {\n      return this.checkRecordAccess(data, ['edit']);\n    }\n\n  }\n\n  RecordEditAction.ɵfac = function RecordEditAction_Factory(t) {\n    return new (t || RecordEditAction)();\n  };\n\n  RecordEditAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordEditAction_Factory() {\n      return new RecordEditAction();\n    },\n    token: RecordEditAction,\n    providedIn: \"root\"\n  });\n  return RecordEditAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordCreateAction = /*#__PURE__*/(() => {\n  class RecordCreateAction extends RecordActionHandler {\n    constructor(moduleNameMapper, router) {\n      super();\n      this.moduleNameMapper = moduleNameMapper;\n      this.router = router;\n      this.key = 'create';\n      this.modes = ['detail'];\n    }\n\n    run(data) {\n      const store = data.store;\n      const baseRecord = store.getBaseRecord();\n      const route = '/' + store.vm.appData.module.name + '/edit';\n      const module = this.moduleNameMapper.toLegacy(store.vm.appData.module.name);\n      this.router.navigate([route], {\n        queryParams: {\n          // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n          return_module: module,\n          // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n          return_action: 'DetailView',\n          // eslint-disable-next-line camelcase,@typescript-eslint/camelcase\n          return_record: baseRecord && baseRecord.id || ''\n        }\n      }).then();\n    }\n\n    shouldDisplay(data) {\n      return this.checkRecordAccess(data, ['edit']);\n    }\n\n  }\n\n  RecordCreateAction.ɵfac = function RecordCreateAction_Factory(t) {\n    return new (t || RecordCreateAction)(ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ɵngcc2.Router));\n  };\n\n  RecordCreateAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordCreateAction_Factory() {\n      return new RecordCreateAction(i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(i2.Router));\n    },\n    token: RecordCreateAction,\n    providedIn: \"root\"\n  });\n  return RecordCreateAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordSaveNewAction = /*#__PURE__*/(() => {\n  class RecordSaveNewAction extends RecordActionHandler {\n    constructor(message, navigation) {\n      super();\n      this.message = message;\n      this.navigation = navigation;\n      this.key = 'saveNew';\n      this.modes = ['create'];\n    }\n\n    run(data) {\n      data.store.recordStore.validate().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          data.store.save().pipe(take(1)).subscribe(record => {\n            const store = data.store;\n            const params = store.params;\n            const moduleName = store.getModuleName();\n            this.navigation.navigateBack(record, moduleName, params);\n          });\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n\n    shouldDisplay(data) {\n      return true;\n    }\n\n  }\n\n  RecordSaveNewAction.ɵfac = function RecordSaveNewAction_Factory(t) {\n    return new (t || RecordSaveNewAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ModuleNavigation));\n  };\n\n  RecordSaveNewAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordSaveNewAction_Factory() {\n      return new RecordSaveNewAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(ModuleNavigation));\n    },\n    token: RecordSaveNewAction,\n    providedIn: \"root\"\n  });\n  return RecordSaveNewAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CancelCreateAction = /*#__PURE__*/(() => {\n  class CancelCreateAction extends RecordActionHandler {\n    constructor(modalService, router, moduleNameMapper, actionNameMapper) {\n      super();\n      this.modalService = modalService;\n      this.router = router;\n      this.moduleNameMapper = moduleNameMapper;\n      this.actionNameMapper = actionNameMapper;\n      this.key = 'cancelCreate';\n      this.modes = ['create'];\n    }\n\n    run(data) {\n      if (data.store.recordStore.isDirty()) {\n        this.showConfirmationModal(data);\n        return;\n      }\n\n      this.cancel(data);\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n    cancel(data) {\n      const store = data.store;\n      let returnModule = store.getModuleName();\n\n      if (store.params.return_module) {\n        returnModule = this.moduleNameMapper.toFrontend(store.params.return_module);\n      }\n\n      let returnAction = store.params.return_action || '';\n      const returnId = store.params.return_id || '';\n      let route = '/' + returnModule;\n\n      if (returnAction) {\n        returnAction = this.actionNameMapper.toFrontend(returnAction);\n\n        if (returnAction !== 'record' || returnId) {\n          route += '/' + returnAction;\n        }\n      }\n\n      if (returnId) {\n        route += '/' + returnId;\n      }\n\n      this.router.navigate([route]).then();\n    }\n\n    showConfirmationModal(data) {\n      const modal = this.modalService.open(MessageModalComponent);\n      modal.componentInstance.textKey = 'WARN_UNSAVED_CHANGES';\n      modal.componentInstance.buttons = [{\n        labelKey: 'LBL_CANCEL',\n        klass: ['btn-secondary'],\n        onClick: activeModal => activeModal.dismiss()\n      }, {\n        labelKey: 'LBL_OK',\n        klass: ['btn-main'],\n        onClick: activeModal => {\n          this.cancel(data);\n          activeModal.close();\n        }\n      }];\n    }\n\n  }\n\n  CancelCreateAction.ɵfac = function CancelCreateAction_Factory(t) {\n    return new (t || CancelCreateAction)(ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(ModuleNameMapper), ɵngcc0.ɵɵinject(ActionNameMapper));\n  };\n\n  CancelCreateAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CancelCreateAction_Factory() {\n      return new CancelCreateAction(i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(i2.Router), i0.ɵɵinject(ModuleNameMapper), i0.ɵɵinject(ActionNameMapper));\n    },\n    token: CancelCreateAction,\n    providedIn: \"root\"\n  });\n  return CancelCreateAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet AsyncProcessRecordAction = /*#__PURE__*/(() => {\n  class AsyncProcessRecordAction extends RecordActionHandler {\n    constructor() {\n      super();\n      this.key = 'async-process';\n      this.modes = ALL_VIEW_MODES;\n    }\n\n    run(data) {}\n\n    shouldDisplay(data) {\n      var _a, _b;\n\n      const defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];\n\n      if (!defaultAcls.length) {\n        return true;\n      }\n\n      return this.checkRecordAccess(data, defaultAcls);\n    }\n\n  }\n\n  AsyncProcessRecordAction.ɵfac = function AsyncProcessRecordAction_Factory(t) {\n    return new (t || AsyncProcessRecordAction)();\n  };\n\n  AsyncProcessRecordAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function AsyncProcessRecordAction_Factory() {\n      return new AsyncProcessRecordAction();\n    },\n    token: AsyncProcessRecordAction,\n    providedIn: \"root\"\n  });\n  return AsyncProcessRecordAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordActionManager = /*#__PURE__*/(() => {\n  class RecordActionManager extends BaseActionManager {\n    constructor(edit, create, toggleWidgets, cancel, cancelCreate, save, saveNew, async) {\n      super();\n      this.edit = edit;\n      this.create = create;\n      this.toggleWidgets = toggleWidgets;\n      this.cancel = cancel;\n      this.cancelCreate = cancelCreate;\n      this.save = save;\n      this.saveNew = saveNew;\n      this.async = async;\n      edit.modes.forEach(mode => this.actions[mode][edit.key] = edit);\n      create.modes.forEach(mode => this.actions[mode][create.key] = create);\n      toggleWidgets.modes.forEach(mode => this.actions[mode][toggleWidgets.key] = toggleWidgets);\n      cancel.modes.forEach(mode => this.actions[mode][cancel.key] = cancel);\n      save.modes.forEach(mode => this.actions[mode][save.key] = save);\n      saveNew.modes.forEach(mode => this.actions[mode][saveNew.key] = saveNew);\n      cancelCreate.modes.forEach(mode => this.actions[mode][cancelCreate.key] = cancelCreate);\n      async.modes.forEach(mode => this.actions[mode][async.key] = async);\n    }\n\n  }\n\n  RecordActionManager.ɵfac = function RecordActionManager_Factory(t) {\n    return new (t || RecordActionManager)(ɵngcc0.ɵɵinject(RecordEditAction), ɵngcc0.ɵɵinject(RecordCreateAction), ɵngcc0.ɵɵinject(RecordToggleWidgetsAction), ɵngcc0.ɵɵinject(RecordCancelAction), ɵngcc0.ɵɵinject(CancelCreateAction), ɵngcc0.ɵɵinject(RecordSaveAction), ɵngcc0.ɵɵinject(RecordSaveNewAction), ɵngcc0.ɵɵinject(AsyncProcessRecordAction));\n  };\n\n  RecordActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordActionManager_Factory() {\n      return new RecordActionManager(i0.ɵɵinject(RecordEditAction), i0.ɵɵinject(RecordCreateAction), i0.ɵɵinject(RecordToggleWidgetsAction), i0.ɵɵinject(RecordCancelAction), i0.ɵɵinject(CancelCreateAction), i0.ɵɵinject(RecordSaveAction), i0.ɵɵinject(RecordSaveNewAction), i0.ɵɵinject(AsyncProcessRecordAction));\n    },\n    token: RecordActionManager,\n    providedIn: \"root\"\n  });\n  return RecordActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContentAdapter = /*#__PURE__*/(() => {\n  class RecordContentAdapter {\n    constructor(store, metadata, language, actions) {\n      this.store = store;\n      this.metadata = metadata;\n      this.language = language;\n      this.actions = actions;\n    }\n\n    getEditAction() {\n      const data = {\n        store: this.store\n      };\n      const action = {\n        key: 'edit'\n      };\n      this.actions.run(action, this.store.getMode(), data);\n    }\n\n    getDisplayConfig() {\n      return combineLatest([this.metadata.recordViewMetadata$, this.store.mode$]).pipe(map(([meta, mode]) => {\n        const layout = this.getLayout(meta);\n        const maxColumns = meta.templateMeta.maxColumns || 2;\n        const tabDefs = meta.templateMeta.tabDefs;\n        return {\n          layout,\n          mode,\n          maxColumns,\n          tabDefs\n        };\n      }));\n    }\n\n    getPanels() {\n      return combineLatest([this.metadata.recordViewMetadata$, this.store.stagingRecord$, this.language.vm$]).pipe(map(([meta, record, languages]) => {\n        const panels = [];\n        const module = record && record.module || '';\n        meta.panels.forEach(panelDefinition => {\n          const label = this.language.getFieldLabel(panelDefinition.key.toUpperCase(), module, languages);\n          const panel = {\n            label,\n            key: panelDefinition.key,\n            rows: []\n          };\n          panelDefinition.rows.forEach(rowDefinition => {\n            const row = {\n              cols: []\n            };\n            rowDefinition.cols.forEach(cellDefinition => {\n              row.cols.push(Object.assign({}, cellDefinition));\n            });\n            panel.rows.push(row);\n          });\n          panels.push(panel);\n        });\n        return panels;\n      }));\n    }\n\n    getRecord() {\n      return this.store.stagingRecord$;\n    }\n\n    getLayout(recordMeta) {\n      let layout = 'panels';\n\n      if (recordMeta.templateMeta.useTabs) {\n        layout = 'tabs';\n      }\n\n      return layout;\n    }\n\n  }\n\n  RecordContentAdapter.ɵfac = function RecordContentAdapter_Factory(t) {\n    return new (t || RecordContentAdapter)(ɵngcc0.ɵɵinject(RecordViewStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordActionManager));\n  };\n\n  RecordContentAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordContentAdapter,\n    factory: RecordContentAdapter.ɵfac\n  });\n  return RecordContentAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TopWidgetAdapter = /*#__PURE__*/(() => {\n  class TopWidgetAdapter {\n    constructor(store, metadata) {\n      this.store = store;\n      this.metadata = metadata;\n      this.config$ = combineLatest([this.metadata.recordViewMetadata$, this.store.showTopWidget$]).pipe(map(([metadata, show]) => {\n        if (metadata.topWidget && metadata.topWidget.refreshOn === 'data-update') {\n          metadata.topWidget.reload$ = this.store.record$.pipe(map(() => true));\n        }\n\n        return {\n          widget: metadata.topWidget,\n          show\n        };\n      }));\n    }\n\n  }\n\n  TopWidgetAdapter.ɵfac = function TopWidgetAdapter_Factory(t) {\n    return new (t || TopWidgetAdapter)(ɵngcc0.ɵɵinject(RecordViewStore), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  TopWidgetAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: TopWidgetAdapter,\n    factory: TopWidgetAdapter.ɵfac\n  });\n  return TopWidgetAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BottomWidgetAdapter = /*#__PURE__*/(() => {\n  class BottomWidgetAdapter {\n    constructor(store, metadata) {\n      this.store = store;\n      this.metadata = metadata;\n      this.config$ = combineLatest([this.metadata.recordViewMetadata$, this.store.widgets$]).pipe(map(([metadata, show]) => {\n        if (metadata.bottomWidgets && metadata.bottomWidgets.length) {\n          metadata.bottomWidgets.forEach(widget => {\n            if (widget && widget.refreshOn === 'data-update') {\n              widget.reload$ = this.store.record$.pipe(map(() => true));\n            }\n\n            if (widget) {\n              widget.subpanelReload$ = this.store.subpanelReload$;\n            }\n          });\n        }\n\n        return {\n          widgets: metadata.bottomWidgets || [],\n          show\n        };\n      }));\n    }\n\n  }\n\n  BottomWidgetAdapter.ɵfac = function BottomWidgetAdapter_Factory(t) {\n    return new (t || BottomWidgetAdapter)(ɵngcc0.ɵɵinject(RecordViewStore), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  BottomWidgetAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BottomWidgetAdapter,\n    factory: BottomWidgetAdapter.ɵfac\n  });\n  return BottomWidgetAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContainerComponent = /*#__PURE__*/(() => {\n  class RecordContainerComponent {\n    constructor(recordViewStore, language, metadata, contentAdapter, topWidgetAdapter, sidebarWidgetAdapter, bottomWidgetAdapter) {\n      this.recordViewStore = recordViewStore;\n      this.language = language;\n      this.metadata = metadata;\n      this.contentAdapter = contentAdapter;\n      this.topWidgetAdapter = topWidgetAdapter;\n      this.sidebarWidgetAdapter = sidebarWidgetAdapter;\n      this.bottomWidgetAdapter = bottomWidgetAdapter;\n      this.loading = true;\n      this.language$ = this.language.vm$;\n      this.vm$ = combineLatest([this.language$, this.sidebarWidgetAdapter.config$, this.bottomWidgetAdapter.config$, this.topWidgetAdapter.config$, this.recordViewStore.showSubpanels$]).pipe(map(([language, sidebarWidgetConfig, bottomWidgetConfig, topWidgetConfig, showSubpanels]) => ({\n        language,\n        sidebarWidgetConfig,\n        bottomWidgetConfig,\n        topWidgetConfig,\n        showSubpanels\n      })));\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.subs.push(this.recordViewStore.loading$.subscribe(loading => {\n        this.loading = loading;\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    getContentAdapter() {\n      return this.contentAdapter;\n    }\n\n    getSubpanelsConfig() {\n      return {\n        parentModule: this.recordViewStore.getModuleName(),\n        subpanels$: this.recordViewStore.subpanels$,\n        sidebarActive$: this.recordViewStore.widgets$\n      };\n    }\n\n    getViewContext() {\n      return this.recordViewStore.getViewContext();\n    }\n\n    getViewContext$() {\n      return this.recordViewStore.viewContext$;\n    }\n\n    hasTopWidgetMetadata(meta) {\n      return !!(meta && meta.type);\n    }\n\n  }\n\n  RecordContainerComponent.ɵfac = function RecordContainerComponent_Factory(t) {\n    return new (t || RecordContainerComponent)(ɵngcc0.ɵɵdirectiveInject(RecordViewStore), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(MetadataStore), ɵngcc0.ɵɵdirectiveInject(RecordContentAdapter), ɵngcc0.ɵɵdirectiveInject(TopWidgetAdapter), ɵngcc0.ɵɵdirectiveInject(SidebarWidgetAdapter), ɵngcc0.ɵɵdirectiveInject(BottomWidgetAdapter));\n  };\n\n  RecordContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordContainerComponent,\n    selectors: [[\"scrm-record-container\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([RecordContentAdapter, TopWidgetAdapter, SidebarWidgetAdapter, BottomWidgetAdapter])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"record-view-container view-container container-fluid pt-3 pb-3 small-font\", 4, \"ngIf\"], [1, \"record-view-container\", \"view-container\", \"container-fluid\", \"pt-3\", \"pb-3\", \"small-font\"], [1, \"row\"], [1, \"col-lg-9\", 3, \"ngClass\"], [1, \"container-fluid\", \"pl-0\", \"pr-0\"], [\"class\", \"row no-gutters\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"no-gutters\"], [1, \"col\"], [\"class\", \"row no-gutters mt-4\", 4, \"ngIf\"], [\"class\", \"row no-gutters pt-1 pb-4\", 4, \"ngIf\"], [\"class\", \"col-lg-3 record-widget-container pl-0\", 4, \"ngIf\"], [1, \"col\", \"pb-3\"], [1, \"d-flex\", \"justify-content-center\", \"widget-bar\", \"rounded\", \"pb-1\", \"pt-3\", \"box-loading\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-baseline\", \"widget-bar-entry\", \"p-2\"], [3, \"config\", \"context\", \"type\"], [3, \"dataSource\"], [1, \"row\", \"no-gutters\", \"mt-4\"], [\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\"], [3, \"config\", \"context$\", \"context\", \"type\"], [1, \"row\", \"no-gutters\", \"pt-1\", \"pb-4\"], [3, \"config\"], [1, \"col-lg-3\", \"record-widget-container\", \"pl-0\"], [3, \"type\", \"context\", \"context$\", \"config\"]],\n    template: function RecordContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordContainerComponent_div_0_Template, 13, 10, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgClass, TopWidgetComponent, RecordContentSkeletonComponent, RecordContentComponent, ɵngcc3.NgForOf, SidebarWidgetComponent, SubpanelContainerComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return RecordContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordContainerModule = /*#__PURE__*/(() => {\n  class RecordContainerModule {}\n\n  RecordContainerModule.ɵfac = function RecordContainerModule_Factory(t) {\n    return new (t || RecordContainerModule)();\n  };\n\n  RecordContainerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordContainerModule\n  });\n  RecordContainerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, WidgetPanelModule, AngularSvgIconModule, SubpanelContainerModule, RecordContentModule, TopWidgetModule, SidebarWidgetModule, RecordContentSkeletonModule]]\n  });\n  return RecordContainerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordContainerModule, {\n    declarations: function () {\n      return [RecordContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule, WidgetPanelModule, AngularSvgIconModule, SubpanelContainerModule, RecordContentModule, TopWidgetModule, SidebarWidgetModule, RecordContentSkeletonModule];\n    },\n    exports: function () {\n      return [RecordContainerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordActionsAdapter = /*#__PURE__*/(() => {\n  class RecordActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(store, metadata, language, actionManager, asyncActionService, message, confirmation, selectModalService) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.metadata = metadata;\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.defaultActions = {\n        detail: [{\n          key: 'toggle-widgets',\n          labelKey: 'LBL_INSIGHTS',\n          params: {\n            expanded: true\n          },\n          acl: []\n        }],\n        edit: [{\n          key: 'cancel',\n          labelKey: 'LBL_CANCEL',\n          params: {\n            expanded: true\n          },\n          acl: []\n        }, {\n          key: 'toggle-widgets',\n          labelKey: 'LBL_INSIGHTS',\n          params: {\n            expanded: true\n          },\n          acl: []\n        }],\n        create: [{\n          key: 'cancelCreate',\n          labelKey: 'LBL_CANCEL',\n          params: {\n            expanded: true\n          },\n          acl: []\n        }]\n      };\n    }\n\n    getActions(context) {\n      return combineLatest([this.metadata.recordViewMetadata$, this.store.mode$, this.store.record$, this.store.language$, this.store.widgets$]).pipe(map(([meta, mode]) => {\n        if (!mode || !meta) {\n          return [];\n        }\n\n        return this.parseModeActions(meta.actions, mode, this.store.getViewContext());\n      }));\n    }\n\n    buildActionData(action, context) {\n      return {\n        store: this.store,\n        action: action\n      };\n    }\n    /**\n     * Build backend process input\n     *\n     * @param action\n     * @param actionName\n     * @param moduleName\n     * @param context\n     */\n\n\n    buildActionInput(action, actionName, moduleName, context = null) {\n      const baseRecord = this.store.getBaseRecord();\n      this.message.removeMessages();\n      return {\n        action: actionName,\n        module: baseRecord.module,\n        id: baseRecord.id,\n        params: action && action.params || []\n      };\n    }\n\n    getMode() {\n      return this.store.getMode();\n    }\n\n    getModuleName(context) {\n      return this.store.getModuleName();\n    }\n\n    reload(action, process, context) {\n      this.store.load(false).pipe(take(1)).subscribe();\n    }\n\n  }\n\n  RecordActionsAdapter.ɵfac = function RecordActionsAdapter_Factory(t) {\n    return new (t || RecordActionsAdapter)(ɵngcc0.ɵɵinject(RecordViewStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService));\n  };\n\n  RecordActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordActionsAdapter,\n    factory: RecordActionsAdapter.ɵfac\n  });\n  return RecordActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordHeaderComponent = /*#__PURE__*/(() => {\n  class RecordHeaderComponent {\n    constructor(actionsAdapter, recordViewStore, moduleNavigation) {\n      this.actionsAdapter = actionsAdapter;\n      this.recordViewStore = recordViewStore;\n      this.moduleNavigation = moduleNavigation;\n      this.displayResponsiveTable = false;\n      this.mode = 'detail';\n      this.loading = true;\n      this.subs = [];\n    }\n\n    ngOnInit() {\n      this.mode = this.recordViewStore.getMode();\n      this.subs.push(this.recordViewStore.mode$.subscribe(mode => {\n        this.mode = mode;\n      }));\n      this.subs.push(this.recordViewStore.record$.subscribe(record => {\n        this.record = record;\n      }));\n      this.subs.push(this.recordViewStore.loading$.subscribe(loading => {\n        this.loading = loading;\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n\n    get moduleTitle() {\n      const module = this.recordViewStore.vm.appData.module;\n      const appListStrings = this.recordViewStore.vm.appData.language.appListStrings;\n      return this.moduleNavigation.getModuleLabel(module, appListStrings);\n    }\n    /**\n     * Get Summary template\n     *\n     * @returns {string} template label\n     */\n\n\n    getSummaryTemplate() {\n      return this.recordViewStore.getSummaryTemplate();\n    }\n    /**\n     * Build action context\n     * @param record\n     */\n\n\n    getActionContext(record) {\n      if (!record) {\n        return {};\n      }\n\n      return {\n        module: record.module || '',\n        record\n      };\n    }\n\n  }\n\n  RecordHeaderComponent.ɵfac = function RecordHeaderComponent_Factory(t) {\n    return new (t || RecordHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(RecordActionsAdapter), ɵngcc0.ɵɵdirectiveInject(RecordViewStore), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation));\n  };\n\n  RecordHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordHeaderComponent,\n    selectors: [[\"scrm-record-header\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([RecordActionsAdapter])],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"record-view-header\"], [4, \"ngIf\"], [3, \"ngIf\"], [1, \"d-flex\", \"flex-nowrap\"], [1, \"row\"], [1, \"col\"], [1, \"order-3\"], [1, \"w-100\"], [1, \"order-2\"], [1, \"record-view-title\", 3, \"title\"], [1, \"record-view-name\", \"d-flex\"], [3, \"fields\", \"labelKey\", 4, \"ngIf\"], [\"class\", \"pl-1 d-flex align-items-top\", 4, \"ngIf\"], [\"class\", \"order-1\", 4, \"ngIf\"], [3, \"fields\", \"labelKey\"], [1, \"pl-1\", \"d-flex\", \"align-items-top\"], [3, \"record\"], [1, \"order-1\"], [\"klass\", \"record-view-actions float-right\", 3, \"config\"], [\"class\", \"row mr-0\", 4, \"ngIf\"], [1, \"row\", \"mr-0\"], [1, \"col-md-4\"], [1, \"record-view-name\", \"pt-3\", \"pb-3\"], [1, \"col-md-8\"], [1, \"row\", \"mr-1\", \"ml-1\"], [\"class\", \"w-100\", 4, \"ngIf\"], [\"klass\", \"record-view-actions float-right\", \"buttonClass\", \"settings-button\", 3, \"config\", \"actionContext\"]],\n    template: function RecordHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, RecordHeaderComponent_ng_container_2_Template, 15, 4, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, RecordHeaderComponent_ng_template_3_Template, 2, 2, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayResponsiveTable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.displayResponsiveTable);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ModuleTitleComponent, DynamicLabelComponent, FavoriteToggleComponent, ActionGroupMenuComponent],\n    encapsulation: 2\n  });\n  return RecordHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordHeaderModule = /*#__PURE__*/(() => {\n  class RecordHeaderModule {}\n\n  RecordHeaderModule.ɵfac = function RecordHeaderModule_Factory(t) {\n    return new (t || RecordHeaderModule)();\n  };\n\n  RecordHeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordHeaderModule\n  });\n  RecordHeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModuleTitleModule, DynamicLabelModule, ActionGroupMenuModule, FavoriteToggleModule]]\n  });\n  return RecordHeaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordHeaderModule, {\n    declarations: function () {\n      return [RecordHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModuleTitleModule, DynamicLabelModule, ActionGroupMenuModule, FavoriteToggleModule];\n    },\n    exports: function () {\n      return [RecordHeaderComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordComponent = /*#__PURE__*/(() => {\n  class RecordComponent {\n    constructor(appState, recordStore, route) {\n      this.appState = appState;\n      this.recordStore = recordStore;\n      this.route = route;\n      this.vm$ = null;\n      this.showStatusBar = false;\n    }\n\n    ngOnInit() {\n      let mode = 'detail';\n      const data = this.route.snapshot && this.route.snapshot.data || {};\n\n      if (data.mode) {\n        mode = data.mode;\n      }\n\n      const params = this.route.snapshot && this.route.snapshot.queryParams || {};\n      this.recordSub = this.recordStore.init(this.appState.getModule(), this.route.snapshot.params.record, mode, params).subscribe();\n      this.vm$ = this.recordStore.vm$;\n    }\n\n    ngOnDestroy() {\n      if (this.recordSub) {\n        this.recordSub.unsubscribe();\n      }\n\n      this.recordStore.destroy();\n    }\n\n  }\n\n  RecordComponent.ɵfac = function RecordComponent_Factory(t) {\n    return new (t || RecordComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(RecordViewStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute));\n  };\n\n  RecordComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: RecordComponent,\n    selectors: [[\"scrm-record\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([RecordViewStore])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"record-view\", 4, \"ngIf\"], [1, \"record-view\"], [1, \"record-view-hr-container\"], [1, \"record-view-hr\"], [4, \"ngIf\"]],\n    template: function RecordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, RecordComponent_div_0_Template, 6, 1, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, RecordHeaderComponent, RecordContainerComponent, StatusBarComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return RecordComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordModule = /*#__PURE__*/(() => {\n  class RecordModule {}\n\n  RecordModule.ɵfac = function RecordModule_Factory(t) {\n    return new (t || RecordModule)();\n  };\n\n  RecordModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: RecordModule\n  });\n  RecordModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, RecordContainerModule, RecordHeaderModule, StatusBarModule, SubpanelModule]]\n  });\n  return RecordModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecordModule, {\n    declarations: function () {\n      return [RecordComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, RecordContainerModule, RecordHeaderModule, StatusBarModule, SubpanelModule];\n    },\n    exports: function () {\n      return [RecordComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CreateRecordModule = /*#__PURE__*/(() => {\n  class CreateRecordModule {}\n\n  CreateRecordModule.ɵfac = function CreateRecordModule_Factory(t) {\n    return new (t || CreateRecordModule)();\n  };\n\n  CreateRecordModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CreateRecordModule\n  });\n  CreateRecordModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, RecordModule, RecordContainerModule, RecordHeaderModule, StatusBarModule, SubpanelModule]]\n  });\n  return CreateRecordModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CreateRecordModule, {\n    declarations: function () {\n      return [CreateRecordComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, RecordModule, RecordContainerModule, RecordHeaderModule, StatusBarModule, SubpanelModule];\n    },\n    exports: function () {\n      return [CreateRecordComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass InstallViewActionHandler extends ActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallAction = /*#__PURE__*/(() => {\n  class InstallAction extends InstallViewActionHandler {\n    constructor(message, asyncActionService, router, modalService, state, localStorage) {\n      super();\n      this.message = message;\n      this.asyncActionService = asyncActionService;\n      this.router = router;\n      this.modalService = modalService;\n      this.state = state;\n      this.localStorage = localStorage;\n      this.key = 'install';\n      this.modes = ['edit'];\n    }\n\n    run(data) {\n      data.store.recordStore.validate().pipe(take(1)).subscribe(valid => {\n        if (valid) {\n          const stagingRecord = data.store.recordStore.getStaging();\n          this.runInstall(stagingRecord);\n          return;\n        }\n\n        this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');\n      });\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n    runInstall(stagingRecord) {\n      const actionName = `suitecrm-app-${this.key}`;\n      this.message.removeMessages();\n      const asyncData = {\n        action: actionName,\n        module: stagingRecord.module,\n        id: stagingRecord.id,\n        payload: stagingRecord.formGroup.value\n      };\n      this.asyncActionService.run(actionName, asyncData).pipe(take(1)).subscribe(process => {\n        if (process.data.statusCode === 3) {\n          // system validation pre-check failed; display errors modal\n          this.openErrorModalDialog(process.data.errors);\n        } // redirect to /, if request is successful\n\n\n        if (process.data.statusCode === 0) {\n          this.state.clear();\n          this.localStorage.clear();\n          this.router.navigate(['/'], {}).then();\n        }\n      });\n    }\n\n    openErrorModalDialog(errors) {\n      const modalRef = this.modalService.open(InstallErrorModalComponent, {\n        ariaLabelledBy: 'modal-basic-title',\n        centered: true,\n        size: 'lg',\n        windowClass: 'custom-modal',\n        modalDialogClass: 'custom-modal'\n      });\n      modalRef.componentInstance.errors = errors;\n    }\n\n  }\n\n  InstallAction.ɵfac = function InstallAction_Factory(t) {\n    return new (t || InstallAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(ɵngcc7.NgbModal), ɵngcc0.ɵɵinject(StateManager), ɵngcc0.ɵɵinject(LocalStorageService));\n  };\n\n  InstallAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function InstallAction_Factory() {\n      return new InstallAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1$3.NgbModal), i0.ɵɵinject(StateManager), i0.ɵɵinject(LocalStorageService));\n    },\n    token: InstallAction,\n    providedIn: \"root\"\n  });\n  return InstallAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallActionManager = /*#__PURE__*/(() => {\n  class InstallActionManager extends BaseActionManager {\n    constructor(save) {\n      super();\n      this.save = save;\n      save.modes.forEach(mode => this.actions[mode][save.key] = save);\n    }\n\n  }\n\n  InstallActionManager.ɵfac = function InstallActionManager_Factory(t) {\n    return new (t || InstallActionManager)(ɵngcc0.ɵɵinject(InstallAction));\n  };\n\n  InstallActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function InstallActionManager_Factory() {\n      return new InstallActionManager(i0.ɵɵinject(InstallAction));\n    },\n    token: InstallActionManager,\n    providedIn: \"root\"\n  });\n  return InstallActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst initialState = {\n  loading: false,\n  mode: 'detail',\n  params: {\n    returnModule: '',\n    returnId: '',\n    returnAction: ''\n  }\n};\nlet InstallViewStore = /*#__PURE__*/(() => {\n  class InstallViewStore {\n    constructor(recordFetchGQL, recordSaveGQL, message, recordManager, recordStoreFactory, language) {\n      this.recordFetchGQL = recordFetchGQL;\n      this.recordSaveGQL = recordSaveGQL;\n      this.message = message;\n      this.recordManager = recordManager;\n      this.recordStoreFactory = recordStoreFactory;\n      this.language = language;\n      /** Internal Properties */\n\n      this.cache$ = null;\n      this.internalState = deepClone(initialState);\n      this.store = new BehaviorSubject(this.internalState);\n      this.state$ = this.store.asObservable();\n      this.subs = [];\n      this.recordStore = recordStoreFactory.create(this.getViewFieldsObservable());\n      this.record$ = this.recordStore.state$.pipe(distinctUntilChanged());\n      this.stagingRecord$ = this.recordStore.staging$.pipe(distinctUntilChanged());\n      this.loading$ = this.state$.pipe(map(state => state.loading));\n      this.mode$ = this.state$.pipe(map(state => state.mode));\n      this.vm$ = combineLatest([this.record$, this.loading$]).pipe(map(([record, loading]) => {\n        this.vm = {\n          record,\n          loading\n        };\n        return this.vm;\n      }));\n      this.viewContext$ = this.record$.pipe(map(() => {\n        return this.getViewContext();\n      }));\n    }\n\n    get params() {\n      return this.internalState.params || {};\n    }\n\n    set params(params) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        params\n      }));\n    }\n\n    getViewContext() {\n      return {\n        record: this.getBaseRecord()\n      };\n    }\n\n    getActions() {\n      return of([]);\n    }\n    /**\n     * Initial install view\n     *\n     * @param {string} mode to use\n     * @param {object} params to set\n     */\n\n\n    init(mode = 'edit', params = {}) {\n      this.setMode(mode);\n      this.recordStore.init({\n        id: '',\n        module: 'install',\n        attributes: {}\n      });\n    }\n    /**\n     * Clear observable cache\n     */\n\n\n    clear() {\n      this.cache$ = null;\n      this.updateState(deepClone(initialState));\n    }\n    /**\n     * Clear\n     */\n\n\n    clearAuthBased() {\n      this.clear();\n    }\n    /**\n     * Get staging record\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getBaseRecord() {\n      if (!this.internalState) {\n        return null;\n      }\n\n      return this.recordStore.getBaseRecord();\n    }\n    /**\n     * Get current view mode\n     *\n     * @returns {string} ViewMode\n     */\n\n\n    getMode() {\n      if (!this.internalState) {\n        return null;\n      }\n\n      return this.internalState.mode;\n    }\n    /**\n     * Set new mode\n     *\n     * @param {string} mode ViewMode\n     */\n\n\n    setMode(mode) {\n      this.updateState(Object.assign(Object.assign({}, this.internalState), {\n        mode\n      }));\n    }\n\n    getLicenseText() {\n      return this.language.getFieldLabel('SUITE8_LICENSE_CONTENT');\n    }\n\n    getMetadata() {\n      return {\n        actions: [],\n        templateMeta: {\n          maxColumns: 2,\n          useTabs: true,\n          tabDefs: {\n            LBL_CONFIG: {\n              newTab: true,\n              panelDefault: 'expanded'\n            }\n          }\n        },\n        panels: [{\n          key: 'LBL_CONFIG',\n          rows: [{\n            cols: [{\n              name: 'site_host',\n              label: 'LBL_SITECFG_URL',\n              type: 'varchar',\n              fieldDefinition: {\n                \"name\": \"site_host\",\n                \"vname\": \"LBL_SITECFG_URL\",\n                \"type\": \"varchar\",\n                \"required\": true\n              }\n            }, {\n              name: 'demoData',\n              label: 'LBL_DBCONF_DEMO_DATA',\n              type: 'enum',\n              fieldDefinition: {\n                name: \"demoData\",\n                vname: \"LBL_DBCONF_DEMO_DATA\",\n                type: \"enum\",\n                options: \"__no_options__\",\n                required: true,\n                metadata: {\n                  extraOptions: [{\n                    value: \"yes\",\n                    labelKey: \"LBL_YES\"\n                  }, {\n                    value: \"no\",\n                    labelKey: \"LBL_NO\"\n                  }]\n                }\n              }\n            }]\n          }, {\n            cols: [{\n              name: 'db_config',\n              label: 'LBL_DBCONF_TITLE',\n              type: 'grouped-field',\n              fieldDefinition: {\n                name: \"db_config\",\n                vname: \"LBL_DBCONF_TITLE\",\n                type: \"grouped-field\",\n                layout: [\"db_username\", \"db_password\", \"db_host\", \"db_name\", \"db_port\"],\n                display: \"vertical\",\n                groupFields: {\n                  \"db_username\": {\n                    \"name\": \"db_username\",\n                    \"type\": \"varchar\",\n                    \"vname\": \"LBL_DBCONF_SUITE_DB_USER\",\n                    \"labelKey\": \"LBL_DBCONF_SUITE_DB_USER\",\n                    \"label\": \"LBL_DBCONF_SUITE_DB_USER\",\n                    \"showLabel\": [\"*\"],\n                    \"required\": true\n                  },\n                  \"db_password\": {\n                    \"name\": \"db_password\",\n                    \"type\": \"password\",\n                    \"vname\": \"LBL_DBCONF_DB_PASSWORD\",\n                    \"labelKey\": \"LBL_DBCONF_DB_PASSWORD\",\n                    \"showLabel\": [\"*\"],\n                    \"required\": true\n                  },\n                  \"db_host\": {\n                    \"name\": \"db_host\",\n                    \"type\": \"varchar\",\n                    \"vname\": \"LBL_DBCONF_HOST_NAME\",\n                    \"labelKey\": \"LBL_DBCONF_HOST_NAME\",\n                    \"showLabel\": [\"*\"],\n                    \"required\": true\n                  },\n                  \"db_name\": {\n                    \"name\": \"db_name\",\n                    \"type\": \"varchar\",\n                    \"vname\": \"LBL_DBCONF_DB_NAME\",\n                    \"labelKey\": \"LBL_DBCONF_DB_NAME\",\n                    \"showLabel\": [\"*\"],\n                    \"required\": true\n                  },\n                  \"db_port\": {\n                    \"name\": \"db_port\",\n                    \"type\": \"varchar\",\n                    \"vname\": \"LBL_DBCONF_DB_PORT\",\n                    \"labelKey\": \"LBL_DBCONF_DB_PORT\",\n                    \"showLabel\": [\"*\"],\n                    \"required\": false\n                  }\n                },\n                showLabel: {\n                  edit: ['*']\n                }\n              }\n            }, {\n              name: 'admin_config',\n              label: 'LBL_SITECFG_TITLE',\n              type: 'grouped-field',\n              fieldDefinition: {\n                name: \"admin_config\",\n                vname: \"LBL_SITECFG_TITLE\",\n                type: \"grouped-field\",\n                layout: [\"site_username\", \"site_password\"],\n                display: \"vertical\",\n                groupFields: {\n                  \"site_username\": {\n                    \"name\": \"site_username\",\n                    \"type\": \"varchar\",\n                    \"vname\": \"LBL_SITECFG_ADMIN_Name\",\n                    \"labelKey\": \"LBL_SITECFG_ADMIN_Name\",\n                    \"showLabel\": [\"edit\"],\n                    \"required\": true\n                  },\n                  \"site_password\": {\n                    \"name\": \"site_password\",\n                    \"type\": \"password\",\n                    \"vname\": \"LBL_SITECFG_ADMIN_PASS\",\n                    \"labelKey\": \"LBL_SITECFG_ADMIN_PASS\",\n                    \"showLabel\": [\"edit\"],\n                    \"required\": true\n                  }\n                },\n                showLabel: {\n                  edit: ['*']\n                }\n              }\n            }]\n          }]\n        }]\n      };\n    }\n\n    getMetadata$() {\n      return of(this.getMetadata());\n    }\n\n    getModuleName() {\n      return 'install';\n    }\n    /**\n     * Parse query params\n     *\n     * @param {object} params to set\n     */\n\n\n    parseParams(params = {}) {\n      if (!params) {\n        return;\n      }\n\n      const currentParams = Object.assign({}, this.internalState.params);\n      Object.keys(params).forEach(paramKey => {\n        if (!isVoid(currentParams[paramKey])) {\n          currentParams[paramKey] = params[paramKey];\n          return;\n        }\n      });\n      this.params = params;\n    }\n    /**\n     * Update the state\n     *\n     * @param {object} state to set\n     */\n\n\n    updateState(state) {\n      this.store.next(this.internalState = state);\n    }\n\n    getIgnoreSystemChecksField() {\n      return this.recordStore.getStaging().fields['sys_check_option'];\n    }\n    /**\n     * Get view fields observable\n     *\n     * @returns {object} Observable<ViewFieldDefinition[]>\n     */\n\n\n    getViewFieldsObservable() {\n      return this.getMetadata$().pipe(map(meta => {\n        const fields = [];\n        meta.panels.forEach(panel => {\n          panel.rows.forEach(row => {\n            row.cols.forEach(col => {\n              fields.push(col);\n            });\n          });\n        });\n        fields.push({\n          \"name\": \"sys_check_option\",\n          \"type\": \"boolean\",\n          fieldDefinition: {\n            \"name\": \"sys_check_option\",\n            \"type\": \"boolean\",\n            \"vname\": \"LBL_SYS_CHECK_WARNING\",\n            \"labelKey\": \"LBL_SYS_CHECK_WARNING\",\n            \"showLabel\": [\"edit\"],\n            \"required\": false,\n            \"value\": 'false',\n            \"default\": 'false'\n          }\n        });\n        return fields;\n      }));\n    }\n\n  }\n\n  InstallViewStore.ɵfac = function InstallViewStore_Factory(t) {\n    return new (t || InstallViewStore)(ɵngcc0.ɵɵinject(RecordFetchGQL), ɵngcc0.ɵɵinject(RecordSaveGQL), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(RecordManager), ɵngcc0.ɵɵinject(RecordStoreFactory), ɵngcc0.ɵɵinject(LanguageStore));\n  };\n\n  InstallViewStore.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: InstallViewStore,\n    factory: InstallViewStore.ɵfac\n  });\n  return InstallViewStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallActionsAdapter = /*#__PURE__*/(() => {\n  class InstallActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(store, metadata, language, actionManager, asyncActionService, message, confirmation, selectModalService) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.metadata = metadata;\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.defaultActions = {\n        detail: [],\n        edit: [{\n          key: 'install',\n          labelKey: 'LBL_PROCEED',\n          params: {\n            expanded: true\n          },\n          acl: []\n        }],\n        create: []\n      };\n    }\n\n    getActions(context) {\n      return combineLatest([this.store.getActions(), this.store.mode$, this.store.stagingRecord$]).pipe(map(([actions, mode]) => {\n        if (!mode) {\n          return [];\n        }\n\n        return this.parseModeActions(actions, mode, this.store.getViewContext());\n      }));\n    }\n\n    buildActionData(action, context) {\n      return {\n        store: this.store\n      };\n    }\n    /**\n     * Build backend process input\n     *\n     * @param action\n     * @param actionName\n     * @param moduleName\n     * @param context\n     */\n\n\n    buildActionInput(action, actionName, moduleName, context = null) {\n      const baseRecord = this.store.getBaseRecord();\n      this.message.removeMessages();\n      return {\n        action: actionName,\n        module: baseRecord.module,\n        id: baseRecord.id,\n        record: baseRecord\n      };\n    }\n\n    getMode() {\n      return this.store.getMode();\n    }\n\n    getModuleName(context) {\n      return this.store.getModuleName();\n    }\n\n    reload(action, process, context) {}\n\n  }\n\n  InstallActionsAdapter.ɵfac = function InstallActionsAdapter_Factory(t) {\n    return new (t || InstallActionsAdapter)(ɵngcc0.ɵɵinject(InstallViewStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(InstallActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService));\n  };\n\n  InstallActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: InstallActionsAdapter,\n    factory: InstallActionsAdapter.ɵfac\n  });\n  return InstallActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallContentAdapter = /*#__PURE__*/(() => {\n  class InstallContentAdapter {\n    constructor(store, metadata, language, actions) {\n      this.store = store;\n      this.metadata = metadata;\n      this.language = language;\n      this.actions = actions;\n    }\n\n    getEditAction() {}\n\n    getDisplayConfig() {\n      return combineLatest([this.store.getMetadata$(), this.store.mode$]).pipe(map(([meta, mode]) => {\n        const layout = this.getLayout(meta);\n        const maxColumns = meta.templateMeta.maxColumns || 2;\n        const tabDefs = meta.templateMeta.tabDefs;\n        return {\n          layout,\n          mode,\n          maxColumns,\n          tabDefs\n        };\n      }));\n    }\n\n    getPanels() {\n      return combineLatest([this.store.getMetadata$(), this.store.stagingRecord$, this.language.vm$]).pipe(map(([meta, record, languages]) => {\n        const panels = [];\n        const module = record && record.module || '';\n        meta.panels.forEach(panelDefinition => {\n          const label = this.language.getFieldLabel(panelDefinition.key.toUpperCase(), module, languages);\n          const panel = {\n            label,\n            key: panelDefinition.key,\n            rows: []\n          };\n          panelDefinition.rows.forEach(rowDefinition => {\n            const row = {\n              cols: []\n            };\n            rowDefinition.cols.forEach(cellDefinition => {\n              row.cols.push(Object.assign({}, cellDefinition));\n            });\n            panel.rows.push(row);\n          });\n          panels.push(panel);\n        });\n        return panels;\n      }));\n    }\n\n    getRecord() {\n      return this.store.stagingRecord$;\n    }\n\n    getLayout(meta) {\n      let layout = 'panels';\n\n      if (meta.templateMeta.useTabs) {\n        layout = 'tabs';\n      }\n\n      return layout;\n    }\n\n  }\n\n  InstallContentAdapter.ɵfac = function InstallContentAdapter_Factory(t) {\n    return new (t || InstallContentAdapter)(ɵngcc0.ɵɵinject(InstallViewStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(InstallActionManager));\n  };\n\n  InstallContentAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: InstallContentAdapter,\n    factory: InstallContentAdapter.ɵfac\n  });\n  return InstallContentAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallContainerComponent = /*#__PURE__*/(() => {\n  class InstallContainerComponent {\n    constructor(metadata, contentAdapter) {\n      this.metadata = metadata;\n      this.contentAdapter = contentAdapter;\n    }\n\n    getContentAdapter() {\n      return this.contentAdapter;\n    }\n\n  }\n\n  InstallContainerComponent.ɵfac = function InstallContainerComponent_Factory(t) {\n    return new (t || InstallContainerComponent)(ɵngcc0.ɵɵdirectiveInject(MetadataStore), ɵngcc0.ɵɵdirectiveInject(InstallContentAdapter));\n  };\n\n  InstallContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: InstallContainerComponent,\n    selectors: [[\"scrm-install-container\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([InstallContentAdapter])],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"install-view-container\", \"record-view-container\", \"view-container\", \"container-fluid\", \"pt-3\", \"pb-3\", \"small-font\"], [1, \"row\", \"no-gutters\"], [1, \"col\"], [3, \"dataSource\"]],\n    template: function InstallContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"scrm-record-content\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"dataSource\", ctx.getContentAdapter());\n      }\n    },\n    directives: [RecordContentComponent],\n    encapsulation: 2\n  });\n  return InstallContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallContainerModule = /*#__PURE__*/(() => {\n  class InstallContainerModule {}\n\n  InstallContainerModule.ɵfac = function InstallContainerModule_Factory(t) {\n    return new (t || InstallContainerModule)();\n  };\n\n  InstallContainerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InstallContainerModule\n  });\n  InstallContainerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, AngularSvgIconModule, RecordContentModule]]\n  });\n  return InstallContainerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InstallContainerModule, {\n    declarations: function () {\n      return [InstallContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule, AngularSvgIconModule, RecordContentModule];\n    },\n    exports: function () {\n      return [InstallContainerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallHeaderComponent = /*#__PURE__*/(() => {\n  class InstallHeaderComponent {\n    constructor(actionsAdapter, store) {\n      this.actionsAdapter = actionsAdapter;\n      this.store = store;\n      this.vm$ = combineLatest([this.store.record$]).pipe(map(([record]) => ({\n        record\n      })));\n    }\n    /**\n     * Build action context\n     * @param record\n     */\n\n\n    getActionContext(record) {\n      if (!record) {\n        return {};\n      }\n\n      return {\n        module: record.module || '',\n        record\n      };\n    }\n\n    getTitle() {}\n\n  }\n\n  InstallHeaderComponent.ɵfac = function InstallHeaderComponent_Factory(t) {\n    return new (t || InstallHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(InstallActionsAdapter), ɵngcc0.ɵɵdirectiveInject(InstallViewStore));\n  };\n\n  InstallHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: InstallHeaderComponent,\n    selectors: [[\"scrm-install-header\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([InstallActionsAdapter])],\n    decls: 2,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"install-view-header\"], [1, \"row\", \"mr-0\"], [1, \"col-md-4\", \"install-header-title-col\"], [1, \"install-view-title\", \"record-view-name\"], [\"labelKey\", \"LBL_WELCOME\", \"module\", \"install\"], [1, \"install-view-subtitle\", \"record-view-title\"], [\"labelKey\", \"LBL_INSTALL\", \"module\", \"install\"], [1, \"col-md-8\", \"install-header-buttons-col\"], [1, \"row\", \"mr-1\", \"ml-1\"], [1, \"w-100\", \"d-flex\", \"justify-content-end\", \"align-items-center\"], [1, \"w-100\", \"install-header-options\", \"d-flex\", \"justify-content-end\", \"align-items-center\", \"pr-5\"], [1, \"label-container\", \"pr-2\"], [1, \"m-0\", \"small\"], [3, \"labelKey\"], [1, \"d-flex\"], [1, \"flex-grow-1\", \"text-break\"], [3, \"field\", \"mode\", \"record\", \"type\"], [\"buttonClass\", \"settings-button\", \"klass\", \"install-view-actions float-right\", 3, \"actionContext\", \"config\"]],\n    template: function InstallHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, InstallHeaderComponent_ng_container_0_Template, 21, 7, \"ng-container\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, LabelComponent, FieldComponent, ActionGroupMenuComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return InstallHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallHeaderModule = /*#__PURE__*/(() => {\n  class InstallHeaderModule {}\n\n  InstallHeaderModule.ɵfac = function InstallHeaderModule_Factory(t) {\n    return new (t || InstallHeaderModule)();\n  };\n\n  InstallHeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InstallHeaderModule\n  });\n  InstallHeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModuleTitleModule, ActionGroupMenuModule, LabelModule, FieldModule]]\n  });\n  return InstallHeaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InstallHeaderModule, {\n    declarations: function () {\n      return [InstallHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModuleTitleModule, ActionGroupMenuModule, LabelModule, FieldModule];\n    },\n    exports: function () {\n      return [InstallHeaderComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallViewComponent = /*#__PURE__*/(() => {\n  class InstallViewComponent {\n    constructor(store, route) {\n      this.store = store;\n      this.route = route;\n      this.vm$ = null;\n      this.showStatusBar = false;\n    }\n\n    ngOnInit() {\n      let mode = 'edit';\n      const data = this.route.snapshot && this.route.snapshot.data || {};\n\n      if (data.mode) {\n        mode = data.mode;\n      }\n\n      this.store.init(mode);\n      this.vm$ = this.store.vm$;\n    }\n\n    ngOnDestroy() {\n      this.store.clear();\n    }\n\n  }\n\n  InstallViewComponent.ɵfac = function InstallViewComponent_Factory(t) {\n    return new (t || InstallViewComponent)(ɵngcc0.ɵɵdirectiveInject(InstallViewStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute));\n  };\n\n  InstallViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: InstallViewComponent,\n    selectors: [[\"scrm-install-view\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([InstallViewStore])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"install-view\", 4, \"ngIf\"], [1, \"install-view\"], [1, \"record-view-hr-container\"], [1, \"record-view-hr\"]],\n    template: function InstallViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, InstallViewComponent_div_0_Template, 5, 0, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, InstallHeaderComponent, InstallContainerComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return InstallViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet InstallViewModule = /*#__PURE__*/(() => {\n  class InstallViewModule {}\n\n  InstallViewModule.ɵfac = function InstallViewModule_Factory(t) {\n    return new (t || InstallViewModule)();\n  };\n\n  InstallViewModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InstallViewModule\n  });\n  InstallViewModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FieldModule, InstallHeaderModule, InstallContainerModule]]\n  });\n  return InstallViewModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InstallViewModule, {\n    declarations: function () {\n      return [InstallViewComponent];\n    },\n    imports: function () {\n      return [CommonModule, FieldModule, InstallHeaderModule, InstallContainerModule];\n    },\n    exports: function () {\n      return [InstallViewComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nclass ListViewRecordPanelActionHandler extends RecordPanelActionHandler {}\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet CancelRecordPanelAction = /*#__PURE__*/(() => {\n  class CancelRecordPanelAction extends ListViewRecordPanelActionHandler {\n    constructor() {\n      super();\n      this.key = 'cancel';\n      this.modes = ['detail', 'edit', 'list', 'create', 'massupdate'];\n    }\n\n    run(data) {\n      data.listStore.closeRecordPanel();\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n\n  }\n\n  CancelRecordPanelAction.ɵfac = function CancelRecordPanelAction_Factory(t) {\n    return new (t || CancelRecordPanelAction)();\n  };\n\n  CancelRecordPanelAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function CancelRecordPanelAction_Factory() {\n      return new CancelRecordPanelAction();\n    },\n    token: CancelRecordPanelAction,\n    providedIn: \"root\"\n  });\n  return CancelRecordPanelAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RunBulkActionRecordPanelAction = /*#__PURE__*/(() => {\n  class RunBulkActionRecordPanelAction extends ListViewRecordPanelActionHandler {\n    constructor(message, asyncActionService, confirmation, asyncAction) {\n      super();\n      this.message = message;\n      this.asyncActionService = asyncActionService;\n      this.confirmation = confirmation;\n      this.asyncAction = asyncAction;\n      this.key = 'bulk-action';\n      this.modes = ['detail', 'edit', 'list', 'create', 'massupdate'];\n    }\n\n    run(data) {\n      const definition = data.action;\n      const selection = data.listStore.recordList.selection;\n      const params = definition && definition.params || {};\n\n      if (isFalse(params.allowAll) && selection.all) {\n        let message = data.listStore.appStrings.LBL_SELECT_ALL_NOT_ALLOWED;\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      if (params.min && selection.count < params.min) {\n        let message = data.listStore.appStrings.LBL_TOO_FEW_SELECTED;\n        message = message.replace('{min}', params.min);\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      if (params.max && selection.count > params.max) {\n        let message = data.listStore.appStrings.LBL_TOO_MANY_SELECTED;\n        message = message.replace('{max}', params.max);\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      this.runBulkAction(data);\n    }\n\n    shouldDisplay() {\n      return true;\n    }\n    /**\n     * Run async buk action\n     *\n     * @returns void\n     * @param {AsyncActionInput} data: data passed to the async process\n     */\n\n\n    runBulkAction(data) {\n      const actionName = `bulk-${data.action.params.bulkAction}`;\n      const asyncData = this.buildActionInput(actionName, data);\n      this.asyncAction.run(actionName, asyncData).subscribe(process => {\n        this.handleProcessResult(process, data);\n      });\n    }\n    /**\n     * Build backend bulk action input\n     * @param actionName\n     * @param data\n     */\n\n\n    buildActionInput(actionName, data) {\n      const displayedFields = [];\n      data.listStore.metadata.listView.fields.forEach(value => {\n        displayedFields.push(value.name);\n      });\n      const asyncData = {\n        action: actionName,\n        module: data.listStore.getModuleName(),\n        criteria: null,\n        sort: null,\n        ids: null,\n        fields: displayedFields,\n        payload: {\n          panelRecord: data.store.recordStore.getBaseStaging()\n        }\n      };\n      const selection = data.listStore.recordList.selection;\n\n      if (selection.all && selection.count > data.listStore.recordList.records.length) {\n        asyncData.criteria = data.listStore.recordList.criteria;\n        asyncData.sort = data.listStore.recordList.sort;\n      }\n\n      if (selection.all && selection.count <= data.listStore.recordList.records.length) {\n        asyncData.ids = [];\n        data.listStore.recordList.records.forEach(record => {\n          data.ids.push(record.id);\n        });\n      }\n\n      if (!selection.all) {\n        asyncData.ids = Object.keys(selection.selected);\n      }\n\n      return asyncData;\n    }\n    /**\n     * Run this function once the process is executed\n     *\n     * @returns void\n     * @param {object} process Process data returned by the process once the process is executed\n     * @param {object} data ListViewRecordPanelActionData\n     */\n\n\n    handleProcessResult(process, data) {\n      if (process.data && process.data.reload) {\n        data.listStore.recordList.clearSelection();\n        data.listStore.load(false).pipe(take(1)).subscribe();\n      }\n\n      if (process.data && process.data.dataUpdated) {\n        data.listStore.triggerDataUpdate();\n      }\n\n      data.listStore.closeRecordPanel();\n    }\n\n  }\n\n  RunBulkActionRecordPanelAction.ɵfac = function RunBulkActionRecordPanelAction_Factory(t) {\n    return new (t || RunBulkActionRecordPanelAction)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(AsyncActionService));\n  };\n\n  RunBulkActionRecordPanelAction.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RunBulkActionRecordPanelAction_Factory() {\n      return new RunBulkActionRecordPanelAction(i0.ɵɵinject(MessageService), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(AsyncActionService));\n    },\n    token: RunBulkActionRecordPanelAction,\n    providedIn: \"root\"\n  });\n  return RunBulkActionRecordPanelAction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelActionManager = /*#__PURE__*/(() => {\n  class RecordPanelActionManager extends BaseActionManager {\n    constructor(runBulkAction, cancel) {\n      super();\n      runBulkAction.modes.forEach(mode => this.actions[mode][runBulkAction.key] = runBulkAction);\n      cancel.modes.forEach(mode => this.actions[mode][cancel.key] = cancel);\n    }\n\n  }\n\n  RecordPanelActionManager.ɵfac = function RecordPanelActionManager_Factory(t) {\n    return new (t || RecordPanelActionManager)(ɵngcc0.ɵɵinject(RunBulkActionRecordPanelAction), ɵngcc0.ɵɵinject(CancelRecordPanelAction));\n  };\n\n  RecordPanelActionManager.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function RecordPanelActionManager_Factory() {\n      return new RecordPanelActionManager(i0.ɵɵinject(RunBulkActionRecordPanelAction), i0.ɵɵinject(CancelRecordPanelAction));\n    },\n    token: RecordPanelActionManager,\n    providedIn: \"root\"\n  });\n  return RecordPanelActionManager;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BulkActionsAdapter = /*#__PURE__*/(() => {\n  class BulkActionsAdapter {\n    constructor(store, message, confirmation, selectModalService, asyncAction, metadata) {\n      this.store = store;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.asyncAction = asyncAction;\n      this.metadata = metadata;\n    }\n    /**\n     * Get bulk action\n     * @returns {object} Observable<BulkActionsMap>\n     */\n\n\n    getBulkActions() {\n      return this.store.metadata$.pipe(map(metadata => metadata.listView.bulkActions));\n    }\n    /**\n     * Execute bulk actions\n     * @param {string} action\n     */\n\n\n    executeBulkAction(action) {\n      const selection = this.store.recordList.selection;\n      const definition = this.store.metadata.listView.bulkActions[action];\n      const actionName = `bulk-${action}`;\n      this.message.removeMessages();\n\n      if (isFalse(definition.params.allowAll) && selection.all) {\n        let message = this.store.appStrings.LBL_SELECT_ALL_NOT_ALLOWED;\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      if (definition.params.min && selection.count < definition.params.min) {\n        let message = this.store.appStrings.LBL_TOO_FEW_SELECTED;\n        message = message.replace('{min}', definition.params.min);\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      if (definition.params.max && selection.count > definition.params.max) {\n        let message = this.store.appStrings.LBL_TOO_MANY_SELECTED;\n        message = message.replace('{max}', definition.params.max);\n        this.message.addDangerMessage(message);\n        return;\n      }\n\n      const displayedFields = [];\n      this.store.metadata.listView.fields.forEach(value => {\n        displayedFields.push(value.name);\n      });\n      const data = {\n        action: actionName,\n        module: this.store.getModuleName(),\n        criteria: null,\n        sort: null,\n        ids: null,\n        fields: displayedFields\n      };\n\n      if (selection.all && selection.count > this.store.recordList.records.length) {\n        data.criteria = this.store.recordList.criteria;\n        data.sort = this.store.recordList.sort;\n      }\n\n      if (selection.all && selection.count <= this.store.recordList.records.length) {\n        data.ids = [];\n        this.store.recordList.records.forEach(record => {\n          data.ids.push(record.id);\n        });\n      }\n\n      if (!selection.all) {\n        data.ids = Object.keys(selection.selected);\n      }\n\n      const params = definition && definition.params || {};\n      const displayConfirmation = params.displayConfirmation || false;\n      const confirmationLabel = params.confirmationLabel || '';\n      const selectModal = definition.params && definition.params.selectModal;\n      const selectModule = selectModal && selectModal.module;\n      const recordPanel = definition.params && definition.params.recordPanel;\n\n      if (recordPanel) {\n        this.store.openRecordPanel(recordPanel);\n        return;\n      }\n\n      if (displayConfirmation) {\n        this.confirmation.showModal(confirmationLabel, () => {\n          if (!selectModule) {\n            this.runBulkAction(actionName, data);\n            return;\n          }\n\n          this.showSelectModal(selectModal.module, actionName, data);\n        });\n        return;\n      }\n\n      if (!selectModule) {\n        this.runBulkAction(actionName, data);\n        return;\n      }\n\n      this.showSelectModal(selectModal.module, actionName, data);\n    }\n    /**\n     * Run async buk action\n     *\n     * @returns void\n     * @param {string} selectModule: module for which records are listed in Select Modal/Popup\n     * @param {string} asyncAction: bulk action name\n     * @param {AsyncActionInput} asyncData: data passed to the async process\n     */\n\n\n    showSelectModal(selectModule, asyncAction, asyncData) {\n      this.selectModalService.showSelectModal(selectModule, modalRecord => {\n        if (modalRecord) {\n          const {\n            fields,\n            formGroup\n          } = modalRecord,\n                baseRecord = __rest(modalRecord, [\"fields\", \"formGroup\"]);\n\n          asyncData.modalRecord = baseRecord;\n        }\n\n        this.runBulkAction(asyncAction, asyncData);\n      });\n    }\n    /**\n     * Run async buk action\n     *\n     * @returns void\n     * @param {string} asyncAction: bulk action name\n     * @param {AsyncActionInput} asyncData: data passed to the async process\n     */\n\n\n    runBulkAction(asyncAction, asyncData) {\n      this.asyncAction.run(asyncAction, asyncData).subscribe(process => {\n        this.handleProcessResult(process);\n      });\n    }\n    /**\n     * Run this function once the process is executed\n     *\n     * @returns void\n     * @param {Process} process: data returned by the process once the process is executed\n     */\n\n\n    handleProcessResult(process) {\n      if (process.data && process.data.reload) {\n        this.store.recordList.clearSelection();\n        this.store.load(false).pipe(take(1)).subscribe();\n      }\n\n      if (process.data && process.data.dataUpdated) {\n        this.store.triggerDataUpdate();\n      }\n\n      this.reloadMetadata(this.store.getModuleName(), process);\n    }\n    /**\n     * Reload the metadata for the module\n     * @param moduleName\n     * @param process\n     * @protected\n     */\n\n\n    reloadMetadata(moduleName, process) {\n      const typesToLoad = [];\n\n      if (this.shouldReloadRecentlyViewed(process)) {\n        typesToLoad.push(this.metadata.typeKeys.recentlyViewed);\n      }\n\n      if (this.shouldReloadFavorites(process)) {\n        typesToLoad.push(this.metadata.typeKeys.favorites);\n      }\n\n      if (typesToLoad && typesToLoad.length) {\n        this.metadata.reloadModuleMetadata(moduleName, typesToLoad, false).pipe(take(1)).subscribe();\n      }\n    }\n    /**\n     * Should reload page\n     * @param process\n     */\n\n\n    shouldReloadRecentlyViewed(process) {\n      return !!(process.data && process.data.reloadRecentlyViewed);\n    }\n    /**\n     * Should reload page\n     * @param process\n     */\n\n\n    shouldReloadFavorites(process) {\n      return !!(process.data && process.data.reloadFavorites);\n    }\n\n  }\n\n  BulkActionsAdapter.ɵfac = function BulkActionsAdapter_Factory(t) {\n    return new (t || BulkActionsAdapter)(ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  BulkActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BulkActionsAdapter,\n    factory: BulkActionsAdapter.ɵfac\n  });\n  return BulkActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet BulkActionsAdapterFactory = /*#__PURE__*/(() => {\n  class BulkActionsAdapterFactory {\n    constructor(message, confirmation, selectModalService, asyncAction, metadata) {\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.asyncAction = asyncAction;\n      this.metadata = metadata;\n    }\n\n    create(store) {\n      return new BulkActionsAdapter(store, this.message, this.confirmation, this.selectModalService, this.asyncAction, this.metadata);\n    }\n\n  }\n\n  BulkActionsAdapterFactory.ɵfac = function BulkActionsAdapterFactory_Factory(t) {\n    return new (t || BulkActionsAdapterFactory)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  BulkActionsAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function BulkActionsAdapterFactory_Factory() {\n      return new BulkActionsAdapterFactory(i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MetadataStore));\n    },\n    token: BulkActionsAdapterFactory,\n    providedIn: \"root\"\n  });\n  return BulkActionsAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet FilterAdapter = /*#__PURE__*/(() => {\n  class FilterAdapter {\n    constructor(store) {\n      this.store = store;\n    }\n\n    getConfig() {\n      return {\n        savedFilterEdit: true,\n        module: this.store.getModuleName(),\n        filter$: this.store.openFilter$,\n        savedFilters$: this.store.filterList.records$,\n        searchFields$: this.store.metadata$.pipe(map(meta => {\n          if (!meta || !meta.search) {\n            return {};\n          }\n\n          const searchMeta = meta.search;\n          let type = 'advanced';\n\n          if (!searchMeta.layout.advanced) {\n            type = 'basic';\n          }\n\n          return searchMeta.layout[type];\n        })),\n        listFields: this.store.metadata.listView.fields,\n        onClose: () => {\n          this.store.showFilters = false;\n        },\n        onSearch: () => {\n          this.store.showFilters = false;\n        },\n        updateFilter: (filter, reload = true) => {\n          const filters = {};\n          filters[filter.key] = filter;\n          this.store.setFilters(filters, reload);\n        },\n        resetFilter: reload => {\n          this.store.resetFilters(reload);\n        },\n        addSavedFilter: filter => {\n          this.store.addSavedFilter(filter);\n        },\n        removeSavedFilter: filter => {\n          this.store.removeSavedFilter(filter);\n        },\n        setOpenFilter: filter => {\n          this.store.setOpenFilter(filter);\n        }\n      };\n    }\n\n  }\n\n  FilterAdapter.ɵfac = function FilterAdapter_Factory(t) {\n    return new (t || FilterAdapter)(ɵngcc0.ɵɵinject(ListViewStore));\n  };\n\n  FilterAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FilterAdapter,\n    factory: FilterAdapter.ɵfac\n  });\n  return FilterAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LineActionsAdapter = /*#__PURE__*/(() => {\n  class LineActionsAdapter extends BaseLineActionsAdapter {\n    constructor(store, actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    getActions(context = null) {\n      return combineLatest([this.store.lineActions$, of('list').pipe(shareReplay())]).pipe(map(([lineActions, mode]) => {\n        return this.parseModeActions(lineActions, mode, context);\n      }));\n    }\n\n    getModuleName(record) {\n      return this.store.getModuleName();\n    }\n\n    reload(action, process, record) {\n      this.store.recordList.clearSelection();\n      this.store.recordList.resetPagination();\n    }\n\n    getMode() {\n      return 'list';\n    }\n\n  }\n\n  LineActionsAdapter.ɵfac = function LineActionsAdapter_Factory(t) {\n    return new (t || LineActionsAdapter)(ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(LineActionActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  LineActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: LineActionsAdapter,\n    factory: LineActionsAdapter.ɵfac\n  });\n  return LineActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListViewRecordPanelActionsAdapter = /*#__PURE__*/(() => {\n  class ListViewRecordPanelActionsAdapter extends BaseRecordActionsAdapter {\n    constructor(store, listStore, language, actionManager, asyncActionService, message, confirmation, selectModalService, metadata) {\n      super(actionManager, asyncActionService, message, confirmation, language, selectModalService, metadata);\n      this.store = store;\n      this.listStore = listStore;\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    getActions(context) {\n      return combineLatest([this.store.meta$, this.store.mode$, this.store.stagingRecord$, this.language.vm$]).pipe(map(([meta, mode]) => {\n        if (!mode || !meta) {\n          return [];\n        }\n\n        return this.parseModeActions(meta.actions, mode);\n      }));\n    }\n\n    buildActionData(action, context) {\n      return {\n        store: this.store,\n        listStore: this.listStore,\n        action\n      };\n    }\n\n    getMode() {\n      return this.store.getMode();\n    }\n\n    getModuleName(context) {\n      return this.store.getModuleName();\n    }\n\n    reload(action, process, context) {\n      this.listStore.load(false).pipe(take(1)).subscribe();\n    }\n\n  }\n\n  ListViewRecordPanelActionsAdapter.ɵfac = function ListViewRecordPanelActionsAdapter_Factory(t) {\n    return new (t || ListViewRecordPanelActionsAdapter)(ɵngcc0.ɵɵinject(RecordPanelStore), ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordPanelActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  ListViewRecordPanelActionsAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ListViewRecordPanelActionsAdapter,\n    factory: ListViewRecordPanelActionsAdapter.ɵfac\n  });\n  return ListViewRecordPanelActionsAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListViewRecordPanelActionAdapterFactory = /*#__PURE__*/(() => {\n  class ListViewRecordPanelActionAdapterFactory {\n    constructor(language, actionManager, asyncActionService, message, confirmation, selectModalService, metadata) {\n      this.language = language;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.selectModalService = selectModalService;\n      this.metadata = metadata;\n    }\n\n    create(store, listStore) {\n      return new ListViewRecordPanelActionsAdapter(store, listStore, this.language, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.selectModalService, this.metadata);\n    }\n\n  }\n\n  ListViewRecordPanelActionAdapterFactory.ɵfac = function ListViewRecordPanelActionAdapterFactory_Factory(t) {\n    return new (t || ListViewRecordPanelActionAdapterFactory)(ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(RecordPanelActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(SelectModalService), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  ListViewRecordPanelActionAdapterFactory.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function ListViewRecordPanelActionAdapterFactory_Factory() {\n      return new ListViewRecordPanelActionAdapterFactory(i0.ɵɵinject(LanguageStore), i0.ɵɵinject(RecordPanelActionManager), i0.ɵɵinject(AsyncActionService), i0.ɵɵinject(MessageService), i0.ɵɵinject(ConfirmationModalService), i0.ɵɵinject(SelectModalService), i0.ɵɵinject(MetadataStore));\n    },\n    token: ListViewRecordPanelActionAdapterFactory,\n    providedIn: \"root\"\n  });\n  return ListViewRecordPanelActionAdapterFactory;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet RecordPanelAdapter = /*#__PURE__*/(() => {\n  class RecordPanelAdapter {\n    constructor(store, recordPanelStoreFactory, actionAdapterFactory, recordManager) {\n      this.store = store;\n      this.recordPanelStoreFactory = recordPanelStoreFactory;\n      this.actionAdapterFactory = actionAdapterFactory;\n      this.recordManager = recordManager;\n    }\n\n    getConfig() {\n      const store = this.createStore();\n      return {\n        module: this.getModule(),\n        title: this.store.recordPanelConfig && this.store.recordPanelConfig.title || '',\n        store: store,\n        meta: this.store.recordPanelConfig,\n        actions: this.createActionAdapter(store),\n        onClose: () => {\n          this.store.closeRecordPanel();\n        }\n      };\n    }\n    /**\n     * Get configured module\n     * @returns {string} module\n     */\n\n\n    getModule() {\n      return this.store.recordPanelConfig.module || this.store.getModuleName();\n    }\n    /**\n     * Get configured view mode\n     * @returns {string} ViewMode\n     */\n\n\n    getViewMode() {\n      return this.store.recordPanelConfig.mode || 'edit';\n    }\n    /**\n     * Create and init store\n     * @returns {object} RecordPanelStore\n     */\n\n\n    createStore() {\n      const store = this.recordPanelStoreFactory.create();\n      const blankRecord = this.recordManager.buildEmptyRecord(this.getModule());\n      store.setMetadata(this.store.recordPanelConfig);\n      store.initRecord(blankRecord, this.getViewMode(), false);\n      return store;\n    }\n    /**\n     * Create action adapter\n     * @returns {object} BaseRecordActionsAdapter\n     */\n\n\n    createActionAdapter(store) {\n      return this.actionAdapterFactory.create(store, this.store);\n    }\n\n  }\n\n  RecordPanelAdapter.ɵfac = function RecordPanelAdapter_Factory(t) {\n    return new (t || RecordPanelAdapter)(ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(RecordPanelStoreFactory), ɵngcc0.ɵɵinject(ListViewRecordPanelActionAdapterFactory), ɵngcc0.ɵɵinject(RecordManager));\n  };\n\n  RecordPanelAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: RecordPanelAdapter,\n    factory: RecordPanelAdapter.ɵfac\n  });\n  return RecordPanelAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListViewSidebarWidgetAdapter = /*#__PURE__*/(() => {\n  class ListViewSidebarWidgetAdapter {\n    constructor(store, metadata) {\n      this.store = store;\n      this.metadata = metadata;\n      this.config$ = combineLatest([this.metadata.listMetadata$, this.store.showSidebarWidgets$, this.store.widgets$]).pipe(map(([metadata, show, widgetsEnabled]) => {\n        if (metadata.sidebarWidgets && metadata.sidebarWidgets.length) {\n          metadata.sidebarWidgets.forEach(widget => {\n            if (widget && widget.refreshOn === 'data-update') {\n              widget.reload$ = this.store.dataSetUpdate$.pipe(map(() => true));\n            } else if (widget && widget.refreshOn === 'data-reload') {\n              widget.reload$ = this.store.records$.pipe(map(() => true));\n            }\n          });\n        }\n\n        return {\n          widgets: metadata.sidebarWidgets || [],\n          show,\n          widgetsEnabled\n        };\n      }));\n    }\n\n  }\n\n  ListViewSidebarWidgetAdapter.ɵfac = function ListViewSidebarWidgetAdapter_Factory(t) {\n    return new (t || ListViewSidebarWidgetAdapter)(ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(MetadataStore));\n  };\n\n  ListViewSidebarWidgetAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ListViewSidebarWidgetAdapter,\n    factory: ListViewSidebarWidgetAdapter.ɵfac\n  });\n  return ListViewSidebarWidgetAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet TableAdapter = /*#__PURE__*/(() => {\n  class TableAdapter {\n    constructor(store, metadata, actionManager, asyncActionService, message, confirmation, language, bulkActionsAdapterFactory, selectModalService) {\n      this.store = store;\n      this.metadata = metadata;\n      this.actionManager = actionManager;\n      this.asyncActionService = asyncActionService;\n      this.message = message;\n      this.confirmation = confirmation;\n      this.language = language;\n      this.bulkActionsAdapterFactory = bulkActionsAdapterFactory;\n      this.selectModalService = selectModalService;\n    }\n\n    getTable() {\n      return {\n        showHeader: true,\n        showFooter: true,\n        module: this.store.getModuleName(),\n        columns: this.store.columns$,\n        lineActions: this.getLineActionsDataSource(),\n        selection$: this.store.selection$,\n        sort$: this.store.sort$,\n        maxColumns$: of(4),\n        loading$: this.store.recordList.loading$,\n        dataSource: this.store.recordList,\n        selection: this.store.recordList,\n        bulkActions: this.getBulkActionsDataSource(this.store),\n        pagination: this.store.recordList,\n        toggleRecordSelection: id => {\n          this.store.recordList.toggleSelection(id);\n        },\n        updateSorting: (orderBy, sortOrder) => {\n          this.store.recordList.updateSorting(orderBy, sortOrder);\n          this.store.updateSortLocalStorage();\n        }\n      };\n    }\n\n    getLineActionsDataSource() {\n      return new LineActionsAdapter(this.store, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.language, this.selectModalService, this.metadata);\n    }\n\n    getBulkActionsDataSource(store) {\n      return this.bulkActionsAdapterFactory.create(store);\n    }\n\n  }\n\n  TableAdapter.ɵfac = function TableAdapter_Factory(t) {\n    return new (t || TableAdapter)(ɵngcc0.ɵɵinject(ListViewStore), ɵngcc0.ɵɵinject(MetadataStore), ɵngcc0.ɵɵinject(LineActionActionManager), ɵngcc0.ɵɵinject(AsyncActionService), ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(ConfirmationModalService), ɵngcc0.ɵɵinject(LanguageStore), ɵngcc0.ɵɵinject(BulkActionsAdapterFactory), ɵngcc0.ɵɵinject(SelectModalService));\n  };\n\n  TableAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: TableAdapter,\n    factory: TableAdapter.ɵfac\n  });\n  return TableAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListContainerComponent = /*#__PURE__*/(() => {\n  class ListContainerComponent {\n    constructor(store, adapter, maxColumnCalculator, languageStore, sidebarWidgetAdapter) {\n      this.store = store;\n      this.adapter = adapter;\n      this.maxColumnCalculator = maxColumnCalculator;\n      this.languageStore = languageStore;\n      this.sidebarWidgetAdapter = sidebarWidgetAdapter;\n      this.screen = ScreenSize.Medium;\n      this.maxColumns = 5;\n      this.vm$ = combineLatest([this.sidebarWidgetAdapter.config$]).pipe(map(([sidebarWidgetConfig]) => ({\n        sidebarWidgetConfig\n      })));\n    }\n\n    ngOnInit() {\n      this.tableConfig = this.adapter.getTable();\n      this.tableConfig.maxColumns$ = this.getMaxColumns();\n    }\n\n    getMaxColumns() {\n      return this.maxColumnCalculator.getMaxColumns(this.store.widgets$);\n    }\n\n    getDisplayWidgets() {\n      return this.store.widgets && this.store.showSidebarWidgets;\n    }\n\n    getDisplay(display) {\n      let displayType = 'none';\n\n      if (display) {\n        displayType = 'block';\n      }\n\n      return displayType;\n    }\n\n    getViewContext() {\n      return this.store.getViewContext();\n    }\n\n  }\n\n  ListContainerComponent.ɵfac = function ListContainerComponent_Factory(t) {\n    return new (t || ListContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ListViewStore), ɵngcc0.ɵɵdirectiveInject(TableAdapter), ɵngcc0.ɵɵdirectiveInject(MaxColumnsCalculator), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(ListViewSidebarWidgetAdapter));\n  };\n\n  ListContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListContainerComponent,\n    selectors: [[\"scrm-list-container\"]],\n    inputs: {\n      module: \"module\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([TableAdapter, MaxColumnsCalculator, ListViewSidebarWidgetAdapter])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"list-view-container container-fluid pt-2\", 4, \"ngIf\"], [1, \"list-view-container\", \"container-fluid\", \"pt-2\"], [1, \"row\"], [1, \"col-lg-9\", 3, \"ngClass\"], [3, \"config\"], [4, \"ngIf\"], [1, \"col-lg-3\", \"list-widget-container\", \"pl-0\"], [\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-3\"], [3, \"config\", \"context\", \"context$\", \"type\"]],\n    template: function ListContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ListContainerComponent_div_0_Template, 5, 5, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc3.NgClass, TableComponent, ɵngcc3.NgForOf, SidebarWidgetComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ListContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListContainerModule = /*#__PURE__*/(() => {\n  class ListContainerModule {}\n\n  ListContainerModule.ɵfac = function ListContainerModule_Factory(t) {\n    return new (t || ListContainerModule)();\n  };\n\n  ListContainerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListContainerModule\n  });\n  ListContainerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, TableModule, WidgetPanelModule, AngularSvgIconModule, SidebarWidgetModule]]\n  });\n  return ListContainerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListContainerModule, {\n    declarations: function () {\n      return [ListContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule, TableModule, WidgetPanelModule, AngularSvgIconModule, SidebarWidgetModule];\n    },\n    exports: function () {\n      return [ListContainerComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListHeaderComponent = /*#__PURE__*/(() => {\n  class ListHeaderComponent {\n    constructor(filterAdapter, listStore, moduleNavigation, recordPanelAdapter) {\n      this.filterAdapter = filterAdapter;\n      this.listStore = listStore;\n      this.moduleNavigation = moduleNavigation;\n      this.recordPanelAdapter = recordPanelAdapter;\n      this.displayResponsiveTable = false;\n      this.actionPanel = '';\n      this.subs = [];\n    }\n\n    get moduleTitle() {\n      const module = this.listStore.vm.appData.module;\n      const appListStrings = this.listStore.vm.appData.language.appListStrings;\n      return this.moduleNavigation.getModuleLabel(module, appListStrings);\n    }\n\n    ngOnInit() {\n      this.listStore.actionPanel$.subscribe(actionPanel => {\n        this.actionPanel = actionPanel;\n\n        if (this.actionPanel === 'recordPanel') {\n          this.recordPanelConfig = this.recordPanelAdapter.getConfig();\n        } else {\n          this.recordPanelConfig = null;\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      this.subs.forEach(sub => sub.unsubscribe());\n      this.recordPanelConfig = null;\n    }\n\n  }\n\n  ListHeaderComponent.ɵfac = function ListHeaderComponent_Factory(t) {\n    return new (t || ListHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(FilterAdapter), ɵngcc0.ɵɵdirectiveInject(ListViewStore), ɵngcc0.ɵɵdirectiveInject(ModuleNavigation), ɵngcc0.ɵɵdirectiveInject(RecordPanelAdapter));\n  };\n\n  ListHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListHeaderComponent,\n    selectors: [[\"scrm-list-header\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([FilterAdapter, RecordPanelAdapter])],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"list-view-header\"], [4, \"ngIf\"], [3, \"ngIf\"], [1, \"d-flex\", \"flex-nowrap\"], [1, \"row\"], [1, \"col\"], [1, \"order-3\"], [1, \"w-100\"], [1, \"order-2\"], [1, \"list-view-title\", 3, \"title\"], [1, \"order-1\"], [1, \"row\", \"mr-0\", \"align-items-center\"], [1, \"col-md-4\"], [1, \"col-md-8\"], [1, \"row\", \"mr-0\", \"ml-1\"], [1, \"list-view-hr-container\"], [1, \"list-view-hr\"], [\"class\", \"container-fluid pt-2 small-font\", 4, \"ngIf\"], [1, \"container-fluid\", \"pt-2\", \"small-font\"], [3, \"config\"]],\n    template: function ListHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, ListHeaderComponent_ng_container_2_Template, 14, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, ListHeaderComponent_ng_template_3_Template, 13, 3, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayResponsiveTable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.displayResponsiveTable);\n      }\n    },\n    directives: [ɵngcc3.NgIf, ActionMenuComponent, ModuleTitleComponent, SettingsMenuComponent, ListFilterComponent, RecordPanelComponent],\n    encapsulation: 2\n  });\n  return ListHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListHeaderModule = /*#__PURE__*/(() => {\n  class ListHeaderModule {}\n\n  ListHeaderModule.ɵfac = function ListHeaderModule_Factory(t) {\n    return new (t || ListHeaderModule)();\n  };\n\n  ListHeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListHeaderModule\n  });\n  ListHeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ModuleTitleModule, ActionMenuModule, SettingsMenuModule, AngularSvgIconModule, ListFilterModule, RecordPanelModule]]\n  });\n  return ListHeaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListHeaderModule, {\n    declarations: function () {\n      return [ListHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule, ModuleTitleModule, ActionMenuModule, SettingsMenuModule, AngularSvgIconModule, ListFilterModule, RecordPanelModule];\n    },\n    exports: function () {\n      return [ListHeaderComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(appState, listStore) {\n      this.appState = appState;\n      this.listStore = listStore;\n      this.vm$ = null;\n    }\n\n    ngOnInit() {\n      this.listSub = this.listStore.init(this.appState.getModule()).subscribe();\n      this.vm$ = this.listStore.vm$;\n    }\n\n    ngOnDestroy() {\n      if (this.listSub) {\n        this.listSub.unsubscribe();\n      }\n\n      this.listStore.destroy();\n    }\n\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateStore), ɵngcc0.ɵɵdirectiveInject(ListViewStore));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"scrm-list\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([ListViewStore])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"list-view\", 4, \"ngIf\"], [1, \"list-view\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, ListComponent_div_0_Template, 3, 0, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ListHeaderComponent, ListContainerComponent],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet ListModule = /*#__PURE__*/(() => {\n  class ListModule {}\n\n  ListModule.ɵfac = function ListModule_Factory(t) {\n    return new (t || ListModule)();\n  };\n\n  ListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ListModule\n  });\n  ListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ListHeaderModule, ListContainerModule, FieldModule]]\n  });\n  return ListModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListModule, {\n    declarations: function () {\n      return [ListComponent];\n    },\n    imports: function () {\n      return [CommonModule, ListHeaderModule, ListContainerModule, FieldModule];\n    },\n    exports: function () {\n      return [ListComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nlet LoginUiComponent = /*#__PURE__*/(() => {\n  class LoginUiComponent {\n    constructor(router, auth, message, configs, languageStore, recoverPasswordService) {\n      this.router = router;\n      this.auth = auth;\n      this.message = message;\n      this.configs = configs;\n      this.languageStore = languageStore;\n      this.recoverPasswordService = recoverPasswordService;\n      this.hidden = true;\n      this.loading = false;\n      this.error = '';\n      this.uname = '';\n      this.passw = '';\n      this.email = '';\n      this.cardState = 'front';\n      this.systemConfigs$ = this.configs.configs$;\n      this.appStrings$ = this.languageStore.appStrings$;\n      this.language = null;\n      this.vm$ = combineLatest([this.systemConfigs$, this.appStrings$]).pipe(map(([systemConfigs, appStrings]) => {\n        let showLanguages = false;\n        let showForgotPassword = false;\n\n        if (systemConfigs.languages && systemConfigs.languages.items) {\n          showLanguages = Object.keys(systemConfigs.languages.items).length > 1;\n        }\n\n        if (systemConfigs.passwordsetting && systemConfigs.passwordsetting.items) {\n          const forgotPasswordProperty = systemConfigs.passwordsetting.items.forgotpasswordON;\n          showForgotPassword = [true, '1', 'true'].includes(forgotPasswordProperty);\n        }\n\n        return {\n          systemConfigs,\n          appStrings,\n          showLanguages,\n          showForgotPassword\n        };\n      }));\n      this.loading = false;\n      this.hidden = false;\n      this.language = null;\n    }\n\n    ngOnInit() {\n      this.setCurrentLanguage();\n    }\n\n    onLanguageSelect(language) {\n      if (!language) {\n        return;\n      }\n\n      if (language === this.language) {\n        return;\n      }\n\n      this.changeLanguage(language);\n    }\n\n    changeLanguage(language) {\n      this.language = language;\n      this.languageStore.changeLanguage(language, true);\n    }\n\n    getEnabledLanguages() {\n      return this.languageStore.getEnabledLanguages();\n    }\n\n    getEnabledLanguagesKeys() {\n      var _a, _b;\n\n      return (_b = Object.keys((_a = this.languageStore.getEnabledLanguages()) !== null && _a !== void 0 ? _a : {})) !== null && _b !== void 0 ? _b : [];\n    }\n\n    flipCard() {\n      if (this.cardState === 'front') {\n        this.cardState = 'back';\n      } else {\n        this.cardState = 'front';\n      }\n    }\n\n    doLogin() {\n      this.loading = true;\n      this.auth.doLogin(this.uname, this.passw, this.onLoginSuccess.bind(this), this.onLoginError.bind(this));\n    }\n\n    recoverPassword() {\n      this.recoverPasswordService.run(this.uname, this.email).subscribe(process => {\n        this.message.log('Recover Password Status: ' + process.status);\n        let handler = 'addSuccessMessageByKey';\n\n        if (process.status === 'error') {\n          handler = 'addDangerMessageByKey';\n        }\n\n        if (process.messages) {\n          process.messages.forEach(message => {\n            this.message[handler](message);\n          });\n        }\n      }, () => {\n        this.message.log('Recover Password failed');\n        this.message.addDangerMessageByKey('ERR_AJAX_LOAD_FAILURE');\n      });\n    }\n\n    onLoginSuccess(result) {\n      this.loading = false;\n      this.message.log('Login success');\n      this.message.removeMessages();\n      this.languageStore.setSessionLanguage().pipe(catchError(() => of({}))).subscribe(() => {\n        if (result && result.redirect) {\n          this.router.navigate([result.redirect]).then();\n        } else {\n          const defaultModule = this.configs.getHomePage();\n          this.router.navigate(['/' + defaultModule]).then();\n        }\n      });\n      return;\n    }\n\n    onLoginError() {\n      this.loading = false;\n      this.message.log('Login failed');\n      this.message.addDangerMessage('Login credentials incorrect, please try again.');\n    }\n\n    setCurrentLanguage() {\n      var _a, _b;\n\n      let currentLanguage = (_a = this.languageStore.getSelectedLanguage()) !== null && _a !== void 0 ? _a : '';\n      const activeLanguage = this.languageStore.getActiveLanguage();\n\n      if (!currentLanguage) {\n        currentLanguage = activeLanguage;\n      }\n\n      if (!this.languageStore.isLanguageEnabled(currentLanguage)) {\n        currentLanguage = '';\n      }\n\n      if (this.language && currentLanguage === this.language) {\n        return;\n      }\n\n      const defaultLanguage = (_b = this.configs.getConfigValue('default_language')) !== null && _b !== void 0 ? _b : 'en_us';\n\n      if (!currentLanguage) {\n        currentLanguage = defaultLanguage;\n      }\n\n      if (!this.languageStore.isLanguageEnabled(currentLanguage)) {\n        currentLanguage = this.languageStore.getFirstLanguage();\n      }\n\n      this.language = currentLanguage;\n      this.changeLanguage(currentLanguage);\n    }\n\n  }\n\n  LoginUiComponent.ɵfac = function LoginUiComponent_Factory(t) {\n    return new (t || LoginUiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(AuthService), ɵngcc0.ɵɵdirectiveInject(MessageService), ɵngcc0.ɵɵdirectiveInject(SystemConfigStore), ɵngcc0.ɵɵdirectiveInject(LanguageStore), ɵngcc0.ɵɵdirectiveInject(RecoverPasswordService));\n  };\n\n  LoginUiComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LoginUiComponent,\n    selectors: [[\"scrm-login-ui\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"login-view d-flex align-items-center\", 4, \"ngIf\"], [1, \"login-view\", \"d-flex\", \"align-items-center\"], [\"name\", \"login\", 1, \"login-form\"], [\"loginForm\", \"ngForm\"], [1, \"form-row\", \"form-group\"], [1, \"col\"], [\"class\", \"form-row\", 4, \"ngIf\"], [1, \"form-row\", \"fade-card\"], [\"class\", \"fade-card-front col\", 4, \"ngIf\"], [\"class\", \"fade-card-back col\", 4, \"ngIf\"], [1, \"form-row\"], [\"for\", \"languages\", 1, \"\"], [1, \"w-100\"], [1, \"inner-addon\", \"left-addon\"], [\"id\", \"languages\", 3, \"change\"], [\"languageSelect\", \"\"], [3, \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"selected\", \"value\"], [1, \"fade-card-front\", \"col\"], [\"image\", \"login_user\"], [\"type\", \"text\", \"name\", \"username\", \"aria-label\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"image\", \"login_password\"], [\"type\", \"password\", \"name\", \"password\", \"aria-label\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"id\", \"login-button\", 1, \"login-button\", 3, \"scrm-button-loading\", \"click\"], [\"class\", \"forgotten-password\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [1, \"forgotten-password\"], [1, \"forgotten-password-link\", 3, \"click\"], [1, \"fade-card-back\", \"col\"], [\"image\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"aria-label\", \"Email\", \"required\", \"\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"mail\", \"ngModel\"], [\"scrm-button-loading\", \"\", 1, \"submit-button\", \"login-button\", 3, \"click\"], [1, \"back-link\", \"forgotten-password-link\", 3, \"click\"]],\n    template: function LoginUiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, LoginUiComponent_div_0_Template, 10, 3, \"div\", 0);\n        ɵngcc0.ɵɵpipe(1, \"async\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.vm$));\n      }\n    },\n    directives: [ɵngcc3.NgIf, ɵngcc4.ɵNgNoValidate, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, LogoUiComponent, ɵngcc3.NgForOf, ɵngcc4.NgSelectOption, ɵngcc4.ɵNgSelectMultipleOption, ImageComponent, ɵngcc4.DefaultValueAccessor, ɵngcc4.RequiredValidator, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ButtonLoadingDirective],\n    pipes: [ɵngcc3.AsyncPipe],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('fade', [transition(':enter', useAnimation(fadeIn, {\n        params: {\n          timing: 0.5,\n          delay: 0\n        }\n      }))])]\n    }\n  });\n  return LoginUiComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n\nconst LoginUiRoutes = [{\n  path: '',\n  component: LoginUiComponent\n}];\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\nlet LoginUiModule = /*#__PURE__*/(() => {\n  class LoginUiModule {}\n\n  LoginUiModule.ɵfac = function LoginUiModule_Factory(t) {\n    return new (t || LoginUiModule)();\n  };\n\n  LoginUiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LoginUiModule\n  });\n  LoginUiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[FormsModule, LogoUiModule, RouterModule.forChild(LoginUiRoutes), CommonModule, AngularSvgIconModule, ImageModule, ButtonLoadingUiModule]]\n  });\n  return LoginUiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoginUiModule, {\n    declarations: function () {\n      return [LoginUiComponent];\n    },\n    imports: function () {\n      return [FormsModule, LogoUiModule, ɵngcc2.RouterModule, CommonModule, AngularSvgIconModule, ImageModule, ButtonLoadingUiModule];\n    },\n    exports: function () {\n      return [LoginUiComponent];\n    }\n  });\n})();\n/**\n * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n * Copyright (C) 2021 SalesAgility Ltd.\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License version 3 as published by the\n * Free Software Foundation with the addition of the following permission added\n * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * In accordance with Section 7(b) of the GNU Affero General Public License\n * version 3, these Appropriate Legal Notices must retain the display of the\n * \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n * feasible for technical reasons, the Appropriate Legal Notices must display\n * the words \"Supercharged by SuiteCRM\".\n */\n\n/*\n * Public API Surface of core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ActionBarUiComponent, ActionBarUiModule, ActionGroupMenuComponent, ActionGroupMenuModule, ActionMenuComponent, ActionMenuModule, ActionNameMapper, AppMetadataStore, AppStateStore, AsyncActionHandler, AsyncActionService, AsyncProcessLineAction, AsyncProcessRecordAction, AsyncProcessSubpanelAction, AsyncProcessSubpanelLineAction, AttributeBuilder, AuthGuard, AuthService, BaseActionManager, BaseActionsAdapter, BaseBooleanComponent, BaseChartComponent, BaseChartModule, BaseComposite, BaseDateTimeComponent, BaseEnumComponent, BaseFavoritesComponent, BaseFieldComponent, BaseFieldGridComponent, BaseFieldModule, BaseFieldRegistry, BaseGroupedMenuItemComponent, BaseHomeMenuItemComponent, BaseLineActionsAdapter, BaseLineItemsComponent, BaseMenuFavoritesComponent, BaseMenuItemComponent, BaseMenuItemLinkComponent, BaseMenuItemsListComponent, BaseMenuRecentlyViewedComponent, BaseMetadataResolver, BaseMobileGroupedMenuComponent, BaseMobileMenuComponent, BaseMobileModuleMenuComponent, BaseModuleResolver, BaseMultiEnumComponent, BaseNameComponent, BaseNavbarComponent, BaseNumberComponent, BaseRecordActionsAdapter, BaseRecordContainerStore, BaseRecordResolver, BaseRelateComponent, BaseSaveRecordMapper, BaseSubMenuFavoritesComponent, BaseSubMenuRecentlyViewedComponent, BaseWidgetComponent, BaseWidgetModule, BooleanDetailFieldComponent, BooleanDetailFieldModule, BooleanEditFieldComponent, BooleanEditFieldModule, BooleanFilterFieldComponent, BooleanFilterFieldModule, BottomWidgetAdapter, BulkActionMenuComponent, BulkActionMenuModule, BulkActionsAdapter, BulkActionsAdapterFactory, ButtonComponent, ButtonGroupComponent, ButtonGroupModule, ButtonLoadingDirective, ButtonLoadingUiModule, ButtonModule, ButtonUtils, CancelCreateAction, CancelRecordPanelAction, ChangelogAsyncAction, ChartComponent, ChartDataStore, ChartDataStoreFactory, ChartMessageAreaComponent, ChartMessageAreaModule, ChartModule, ChartRegistry, ChartSidebarWidgetComponent, ChartSidebarWidgetModule, ClassicModalComponent, ClassicModalModule, ClassicViewResolver, ClassicViewUiComponent, ClassicViewUiModule, CloseButtonComponent, CloseButtonModule, CollectionGQL, ColumnChooserComponent, ColumnChooserModule, CompositeComponent, CompositeModule, ConfirmationModalService, CreateRecordComponent, CreateRecordModule, CreateRelatedLineAction, CreateViewStore, CurrencyDetailFieldComponent, CurrencyDetailFieldModule, CurrencyFormatter, CurrencyService, CurrencyUnitConverter, CurrencyValidator, DataTypeFormatter, DataTypeSeriesMapper, DataTypeUnitConverter, DateAdapter, DateDetailFieldComponent, DateDetailFieldModule, DateEditFieldComponent, DateEditFieldModule, DateFilterFieldComponent, DateFilterFieldModule, DateFormatter, DateParserFormatter, DateTimeDetailFieldComponent, DateTimeDetailFieldModule, DateTimeEditFieldComponent, DateTimeEditFieldModule, DateTimeFilterFieldComponent, DateTimeFilterFieldModule, DateTimeModel, DateTimeValidator, DateValidator, DatetimeFormatter, DisplayTypeAction, DropdownButtonComponent, DropdownButtonModule, DropdownEnumDetailFieldComponent, DropdownEnumDetailFieldModule, DropdownEnumEditFieldComponent, DropdownEnumEditFieldModule, DropdownSubmenuComponent, DropdownSubmenuModule, DuplicateEmailValidator, DynamicEnumDetailFieldComponent, DynamicEnumDetailFieldModule, DynamicEnumEditFieldComponent, DynamicEnumEditFieldModule, DynamicFieldComponent, DynamicFieldModule, DynamicLabelComponent, DynamicLabelModule, DynamicLabelService, EmailDetailFieldsComponent, EmailDetailFieldsModule, EmailFormatter, EmailListFieldsComponent, EmailListFieldsModule, EmailPrimarySelectAction, EmailValidator, EntityGQL, EntityMutationGQL, EnumDetailFieldComponent, EnumDetailFieldModule, EnumEditFieldComponent, EnumEditFieldModule, ErrorInterceptor, ExportAsyncAction, ExtensionLoader, FavoriteToggleComponent, FavoriteToggleModule, FavoritesService, FieldBuilder, FieldComponent, FieldGridComponent, FieldGridModule, FieldLayoutComponent, FieldLayoutModule, FieldLogicActionHandler, FieldLogicManager, FieldManager, FieldModule, FieldRegistry, FilterAdapter, FilterAttributeBuilder, FilterFieldBuilder, FilterListStore, FilterListStoreFactory, FilterUiComponent, FilterUiModule, FiltersListGQL, FloatDetailFieldComponent, FloatDetailFieldModule, FloatValidator, FooterUiComponent, FooterUiModule, FormControlUtils, FormatCurrencyModule, FormatCurrencyPipe, FormatNumberModule, FormatNumberPipe, FullNameDetailFieldsComponent, FullNameDetailFieldsModule, FullPageSpinnerComponent, FullPageSpinnerModule, GlobalSearch, GridWidgetComponent, GridWidgetModule, GroupFieldBuilder, GroupFieldComponent, GroupFieldModule, GroupedMenuItemComponent, GroupedMenuItemRegistry, HistorySidebarWidgetComponent, HistorySidebarWidgetModule, HistoryTimelineAdapter, HistoryTimelineAdapterFactory, HistoryTimelineStore, HistoryTimelineStoreFactory, HomeMenuItemComponent, HomeMenuItemRegistry, HomeUiComponent, HomeUiModule, HomeUiRoutes, HtmlDetailFieldComponent, HtmlDetailFieldModule, HtmlSanitizeModule, HtmlSanitizePipe, IframePageChangeObserver, IframeResizeHandlerHandler, ImageComponent, ImageModule, ImmediateDebounce, InlineLoadingSpinnerComponent, InlineLoadingSpinnerModule, InstallAction, InstallActionManager, InstallActionsAdapter, InstallAuthGuard, InstallContainerComponent, InstallContainerModule, InstallContentAdapter, InstallErrorModalComponent, InstallErrorModalModule, InstallHeaderComponent, InstallHeaderModule, InstallViewActionHandler, InstallViewComponent, InstallViewModule, InstallViewStore, IntDetailFieldComponent, IntDetailFieldModule, IntValidator, LabelComponent, LabelModule, LanguageStore, LineActionActionHandler, LineActionActionManager, LineActionMenuComponent, LineActionModule, LineActionsAdapter, LineChartComponent, LineChartModule, LineItemBuilder, LineItemsComponent, LineItemsModule, LinkModel, LinkTarget, ListComponent, ListContainerComponent, ListContainerModule, ListFilterComponent, ListFilterModule, ListFilterStore, ListFilterStoreFactory, ListGQL, ListHeaderComponent, ListHeaderModule, ListModule, ListViewRecordPanelActionAdapterFactory, ListViewRecordPanelActionHandler, ListViewRecordPanelActionsAdapter, ListViewSidebarWidgetAdapter, ListViewStore, LoadingBuffer, LoadingBufferFactory, LoadingSpinnerComponent, LoadingSpinnerModule, LocalStorageService, LoginAuthGuard, LoginUiComponent, LoginUiModule, LoginUiRoutes, LogoAbstract, LogoUiComponent, LogoUiModule, LogoutUiComponent, LogoutUiModule, MaxColumnsCalculator, MenuFavoritesComponent, MenuFavoritesRegistry, MenuItemComponent, MenuItemLinkComponent, MenuItemLinkRegistry, MenuItemRegistry, MenuItemsListComponent, MenuItemsListRegistry, MenuRecentlyViewedComponent, MenuRecentlyViewedRegistry, MessageModalComponent, MessageModalModule, MessageService, MessageUiComponent, MessageUiModule, MetadataStore, MinimiseButtonComponent, MinimiseButtonModule, MobileGroupedMenuComponent, MobileGroupedMenuRegistry, MobileMenuComponent, MobileMenuRegistry, MobileModuleMenuComponent, MobileModuleMenuRegistry, ModalButtonGroupComponent, ModalButtonGroupModule, ModalComponent, ModalModule, ModalRecordFilterAdapter, ModalRecordListTableAdapter, ModuleNameMapper, ModuleNavigation, ModuleTitleComponent, ModuleTitleModule, MultiEnumDetailFieldComponent, MultiEnumDetailFieldModule, MultiEnumEditFieldComponent, MultiEnumEditFieldModule, MultiEnumFilterFieldComponent, MultiEnumFilterFieldModule, NavbarAbstract, NavbarRegistry, NavbarUiComponent, NavbarUiModule, NavigationStore, NoopAsyncAction, NumberFormatter, PaginationComponent, PaginationModule, PanelComponent, PanelModule, PasswordDetailFieldComponent, PasswordDetailFieldModule, PasswordEditFieldComponent, PasswordEditFieldModule, PhoneDetailFieldComponent, PhoneDetailFieldModule, PhoneFormatter, PhoneValidator, PieGridChartComponent, PieGridChartModule, PrimaryEmailValidator, ProcessService, RadioEnumDetailFieldComponent, RadioEnumDetailFieldModule, RadioEnumEditFieldComponent, RadioEnumEditFieldModule, RangeValidator, RecentlyViewedService, RecordActionHandler, RecordActionManager, RecordActionsAdapter, RecordCancelAction, RecordComponent, RecordContainerComponent, RecordContainerModule, RecordContentAdapter, RecordContentComponent, RecordContentModule, RecordContentSkeletonComponent, RecordContentSkeletonModule, RecordCreateAction, RecordEditAction, RecordFetchGQL, RecordFlexboxComponent, RecordFlexboxModule, RecordGridComponent, RecordGridModule, RecordHeaderComponent, RecordHeaderModule, RecordListModalComponent, RecordListModalModule, RecordListModalStore, RecordListModalStoreFactory, RecordListStore, RecordListStoreFactory, RecordManager, RecordModule, RecordPanelActionHandler, RecordPanelActionManager, RecordPanelAdapter, RecordPanelComponent, RecordPanelModule, RecordPanelStore, RecordPanelStoreFactory, RecordSaveAction, RecordSaveGQL, RecordSaveNewAction, RecordStore, RecordStoreFactory, RecordStoreList, RecordThreadComponent, RecordThreadItemComponent, RecordThreadItemModule, RecordThreadItemStore, RecordThreadItemStoreFactory, RecordThreadModule, RecordThreadSidebarWidgetComponent, RecordThreadSidebarWidgetModule, RecordThreadStore, RecordThreadStoreFactory, RecordToggleWidgetsAction, RecordViewStore, RecoverPasswordService, RedirectAsyncAction, RelateDetailFieldComponent, RelateDetailFieldsModule, RelateEditFieldComponent, RelateEditFieldModule, RelateFilterFieldComponent, RelateFilterFieldModule, RelateService, RequiredAction, RequiredValidator, RouteConverter, RunBulkActionRecordPanelAction, SaveFilterStoreFactory, SavedFilterActionAdapterFactory, SavedFilterActionHandler, SavedFilterActionManager, SavedFilterActionsAdapter, SavedFilterDeleteAction, SavedFilterRecordStore, SavedFilterRecordStoreFactory, SavedFilterSaveAction, SavedFilterSaveGQL, SavedFilterStore, SavedSearchRecordMapper, ScreenSize, ScreenSizeObserverService, SelectModalService, SeriesMapper, SeriesStatisticsStore, SeriesStatisticsStoreFactory, SeriesTraverser, SettingsMenuComponent, SettingsMenuModule, SidebarWidgetAdapter, SidebarWidgetComponent, SidebarWidgetModule, SidebarWidgetRegistry, SingleValueStatisticsStore, SingleValueStatisticsStoreFactory, SortButtonComponent, SortButtonModule, StandardFieldRegistry, StateManager, StatisticsBatch, StatisticsFetchGQL, StatisticsSidebarWidgetComponent, StatisticsSidebarWidgetModule, StatisticsStore, StatisticsStoreFactory, StatisticsTopWidgetComponent, StatisticsTopWidgetModule, StatusBarComponent, StatusBarModule, SubMenuFavoritesComponent, SubMenuFavoritesRegistry, SubMenuRecentlyViewedComponent, SubMenuRecentlyViewedRegistry, SubpanelActionHandler, SubpanelActionManager, SubpanelComponent, SubpanelContainerComponent, SubpanelContainerModule, SubpanelCreateAction, SubpanelLineActionHandler, SubpanelLineActionManager, SubpanelLineActionsAdapter, SubpanelLineActionsAdapterFactory, SubpanelModule, SubpanelSelectAction, SubpanelStore, SubpanelStoreFactory, SubpanelTableAdapter, SubpanelTableAdapterFactory, SystemConfigStore, TableAdapter, TableBodyComponent, TableBodyModule, TableComponent, TableFooterComponent, TableFooterModule, TableHeaderComponent, TableHeaderModule, TableModule, TextDetailFieldComponent, TextDetailFieldModule, TextEditFieldComponent, TextEditFieldModule, ThemeImagesStore, TinymceDetailFieldComponent, TinymceDetailFieldModule, TinymceEditFieldComponent, TinymceEditFieldModule, TopWidgetAdapter, TopWidgetComponent, TopWidgetModule, UpdateBaseCurrencyAction, UpdateCurrencyAction, UpdateFlexRelateModuleAction, UrlDetailFieldComponent, UrlDetailFieldModule, UserActionMenuUiComponent, UserActionMenuUiModule, UserPreferenceStore, UserService, ValidationManager, VarcharDetailFieldComponent, VarcharDetailFieldModule, VarcharEditFieldComponent, VarcharEditFieldModule, VarcharFilterFieldComponent, VarcharFilterFieldModule, VerticalBarChartComponent, VerticalBarChartModule, ViewStore, WidgetPanelComponent, WidgetPanelModule, alertTypes, baseFieldComponents, baseFieldModules, baseViewFieldsMap, booleanRequiredValidator, chartModules, chartTypeMap, componentTypeMap, currencyValidator, dateTimeValidator, dateValidator, duplicateEmailValidator, emailValidator, fieldComponents, fieldModules, floatValidator, intValidator, maxValidator, minValidator, phoneValidator, primaryEmailValidator, requiredValidator, sidebarWidgetModules, topWidgetComponentTypeMap, topWidgetModules, viewFieldsMap, RecordThreadItemActionsAdapterFactory as ɵa, RecordThreadItemActionManager as ɵb, AsyncProcessRecordThreadItemAction as ɵc, RecordThreadItemActionHandler as ɵd, RecordThreadItemCancelAction as ɵe, RecordThreadItemEditAction as ɵf, RecordThreadItemSaveAction as ɵg }; //# sourceMappingURL=core.js.map","map":null,"metadata":{},"sourceType":"module"}