{"version":3,"file":"dynamic-federation.js","sourceRoot":"","sources":["../../../../../../libs/mf-runtime/src/lib/loader/dynamic-federation.ts"],"names":[],"mappings":";AAYA,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,MAAM,SAAS,GAAG,EAAE,CAAA;AACpB,IAAI,yBAAyB,GAAG,KAAK,CAAC;AAEtC,SAAe,mBAAmB,CAAI,UAAkB,EAAE,aAAqB;;QACzE,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAc,CAAC;QAClD,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACnD,MAAM,MAAM,GAAG,OAAO,EAAE,CAAC;QACzB,OAAO,MAAW,CAAC;IACzB,CAAC;CAAA;AAED,SAAe,UAAU,CAAC,UAAkB;;QACxC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAc,CAAC;QAElD,6CAA6C;QAC7C,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE;YACvB,OAAO,SAAS,CAAC;SACpB;QAED,kDAAkD;QAClD,IAAI,CAAC,yBAAyB,EAAE;YAC5B,MAAM,wBAAwB,CAAC,SAAS,CAAC,CAAC;YAC1C,yBAAyB,GAAG,IAAI,CAAC;SACpC;QAED,MAAM,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;QACvD,SAAS,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC7B,OAAO,SAAS,CAAC;IACrB,CAAC;CAAA;AAQD,MAAM,UAAU,eAAe,CAAC,WAAmB,EAAE,UAAkB;IACnE,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAEzC,iCAAiC;QACjC,IAAI,SAAS,CAAC,WAAW,CAAC,EAAE;YACxB,OAAO,EAAE,CAAC;YACV,OAAO;SACV;QAED,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC;QAEzB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;QAExB,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACjB,UAAU,CAAC,UAAU,CAAC,CAAC;YACvB,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;YAC9B,OAAO,EAAE,CAAC;QACd,CAAC,CAAA;QAED,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,UAAgB,gBAAgB,CAAU,OAAgC;;QAC5E,IAAI,OAAO,CAAC,WAAW,EAAE;YACrB,MAAM,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;SAClE;QACD,OAAO,MAAM,mBAAmB,CAAI,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IACnF,CAAC;CAAA","sourcesContent":["type Scope = unknown;\r\ntype Factory = () => any;\r\n\r\ntype Container = {\r\n    init(shareScope: Scope): void;\r\n    get(module: string): Factory;\r\n};\r\n\r\ndeclare const __webpack_init_sharing__: (shareScope: string) => Promise<void>;\r\ndeclare const __webpack_share_scopes__: { default: Scope };\r\n\r\n\r\nconst moduleMap = {};\r\nconst remoteMap = {}\r\nlet isDefaultScopeInitialized = false;\r\n\r\nasync function lookupExposedModule<T>(remoteName: string, exposedModule: string): Promise<T> {\r\n      const container = window[remoteName] as Container;\r\n      const factory = await container.get(exposedModule);\r\n      const Module = factory();\r\n      return Module as T;\r\n}\r\n\r\nasync function initRemote(remoteName: string) {\r\n    const container = window[remoteName] as Container;\r\n\r\n    // Do we still need to initialize the remote?\r\n    if (remoteMap[remoteName]) {\r\n        return container;\r\n    }\r\n\r\n    // Do we still need to initialize the share scope?\r\n    if (!isDefaultScopeInitialized) { \r\n        await __webpack_init_sharing__('default');\r\n        isDefaultScopeInitialized = true;\r\n    }\r\n\r\n    await container.init(__webpack_share_scopes__.default);\r\n    remoteMap[remoteName] = true;\r\n    return container;\r\n}\r\n\r\nexport type LoadRemoteModuleOptions = { \r\n    remoteEntry?: string; \r\n    remoteName: string; \r\n    exposedModule: string\r\n}\r\n\r\nexport function loadRemoteEntry(remoteEntry: string, remoteName: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n\r\n        // Is remoteEntry already loaded?\r\n        if (moduleMap[remoteEntry]) {\r\n            resolve();\r\n            return;\r\n        }\r\n\r\n        const script = document.createElement('script');\r\n        script.src = remoteEntry;\r\n\r\n        script.onerror = reject;\r\n\r\n        script.onload = () => {\r\n            initRemote(remoteName);\r\n            moduleMap[remoteEntry] = true;\r\n            resolve(); \r\n        }\r\n\r\n        document.body.appendChild(script);\r\n    });\r\n}\r\n\r\nexport async function loadRemoteModule<T = any>(options: LoadRemoteModuleOptions): Promise<T> {\r\n    if (options.remoteEntry) {\r\n        await loadRemoteEntry(options.remoteEntry, options.remoteName);\r\n    }\r\n    return await lookupExposedModule<T>(options.remoteName, options.exposedModule);\r\n}\r\n"]}